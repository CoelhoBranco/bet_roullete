(self.webpackChunkcasino_app = self.webpackChunkcasino_app || []).push([["main"], { 70215: (s, h, i) => { "use strict"; i.d(h, { s: () => o }); var e = i(20639); class o extends e.q23 { } }, 28284: (s, h, i) => { "use strict"; i.d(h, { nh: () => r, q2: () => c, sx: () => d, Pz: () => y, iH: () => M, Ic: () => T, C2: () => P, PH: () => G, Tv: () => x, KO: () => R, qY: () => J, Qq: () => W, M0: () => Q, YE: () => Z, PL: () => N, Gt: () => ae, Hh: () => re, wt: () => ce, ah: () => _e, yz: () => le, Nh: () => be, o4: () => xe, ct: () => De, Q4: () => Oe, C_: () => ge, gu: () => Se, jm: () => Te, S8: () => Le, pq: () => Pe, TN: () => V, mA: () => ne, YL: () => k, dl: () => ie, rS: () => ve, T7: () => Me, tK: () => de, Og: () => Ye }); var e = i(34929), o = i(20639); let r = class { }; r = (0, e.gn)([(0, o.ALo)("casinoConfig")], r); let c = class { }; c = (0, e.gn)([(0, o.ALo)("promotedGamesConfig")], c); let d = class { }; d = (0, e.gn)([(0, o.ALo)("clientSideConfig")], d); let f = class { }; f = (0, e.gn)([(0, o.ALo)("bgRooms")], f); let y = class { }; y = (0, e.gn)([(0, o.ALo)("componentCompositionsConfig")], y); let M = class { }; M = (0, e.gn)([(0, o.ALo)("features")], M); let T = class { }; T = (0, e.gn)([(0, o.ALo)("global")], T); let P = class { }; P = (0, e.gn)([(0, o.ALo)("nativeGameLaunch")], P); let G = class { }; G = (0, e.gn)([(0, o.ALo)("cslhHomePage")], G); let x = class { }; x = (0, e.gn)([(0, o.ALo)("devSettingsConfig")], x); let R = class { }; R = (0, e.gn)([(0, o.ALo)("headerTeasers")], R); let J = class { }; J = (0, e.gn)([(0, o.ALo)("jackpotData")], J); let W = class { }; W = (0, e.gn)([(0, o.ALo)("liveDealerConfig")], W); let Q = class { }; Q = (0, e.gn)([(0, o.ALo)("mcPage")], Q); let Z = class { }; Z = (0, e.gn)([(0, o.ALo)("mcMetaTags")], Z); let N = class { }; N = (0, e.gn)([(0, o.ALo)("optimizedImageLoading")], N); let ae = class { }; ae = (0, e.gn)([(0, o.ALo)("promotionsInfo")], ae); let re = class { }; re = (0, e.gn)([(0, o.ALo)("transactionsConfig")], re); let ce = class { }; ce = (0, e.gn)([(0, o.ALo)("widgetConfig")], ce); let _e = class { }; _e = (0, e.gn)([(0, o.ALo)("thumbnail")], _e); let le = class { }; le = (0, e.gn)([(0, o.ALo)("lmtData")], le); let be = class { }; be = (0, e.gn)([(0, o.ALo)("gameConfig")], be); let xe = class { }; xe = (0, e.gn)([(0, o.ALo)("optimizedTeaser")], xe); let De = class { }; De = (0, e.gn)([(0, o.ALo)("geolocationConfig")], De); let Oe = class { }; Oe = (0, e.gn)([(0, o.ALo)("casinoAsIFrameOverlayConfig")], Oe); let ge = class { }; ge = (0, e.gn)([(0, o.ALo)("globalSearch")], ge); let Se = class { }; Se = (0, e.gn)([(0, o.ALo)("casinoGlobalSearch")], Se); let Te = class { }; Te = (0, e.gn)([(0, o.ALo)("globalJackpot")], Te); let Le = class { }; Le = (0, e.gn)([(0, o.ALo)("subNavigationConfig")], Le); let Pe = class { }; Pe = (0, e.gn)([(0, o.ALo)("advanceGameDataModel")], Pe); let V = class { }; V = (0, e.gn)([(0, o.ALo)("cozyBingo")], V); let ne = class { }; ne = (0, e.gn)([(0, o.ALo)("feedCacheConfiguration")], ne); let k = class { }; k = (0, e.gn)([(0, o.ALo)("recentlyPlayed")], k); let $ = class { }; $ = (0, e.gn)([(0, o.ALo)("modularSettings")], $); let ie = class { }; ie = (0, e.gn)([(0, o.ALo)("freeSpins")], ie); let ve = class { }; ve = (0, e.gn)([(0, o.ALo)("casinoTagManager")], ve); let Me = class { }; Me = (0, e.gn)([(0, o.ALo)("csImageLoadOptimizationConfig")], Me); let de = class { }; de = (0, e.gn)([(0, o.ALo)("gamingStoriesConfig")], de); let Ye = class { }; Ye = (0, e.gn)([(0, o.ALo)("preRender")], Ye) }, 81987: (s, h, i) => { "use strict"; i.d(h, { IS: () => c }); var e = i(20639), o = i(28284), r = i(3184); let c = (() => { class F { static forRoot() { return { ngModule: F, providers: [{ provide: o.nh, deps: [e.Hkl], useFactory: d }, { provide: o.sx, deps: [e.Hkl], useFactory: f }, { provide: o.iH, deps: [e.Hkl], useFactory: y }, { provide: o.Ic, deps: [e.Hkl], useFactory: M }, { provide: o.KO, deps: [e.Hkl], useFactory: T }, { provide: o.qY, deps: [e.Hkl], useFactory: P }, { provide: o.Qq, deps: [e.Hkl], useFactory: G }, { provide: o.M0, deps: [e.Hkl], useFactory: x }, { provide: o.PL, deps: [e.Hkl], useFactory: R }, { provide: o.Gt, deps: [e.Hkl], useFactory: J }, { provide: o.Hh, deps: [e.Hkl], useFactory: W }, { provide: o.YE, deps: [e.Hkl], useFactory: N }, { provide: o.yz, deps: [e.Hkl], useFactory: ae }, { provide: o.Nh, deps: [e.Hkl], useFactory: re }, { provide: o.Tv, deps: [e.Hkl], useFactory: ce }, { provide: o.ct, deps: [e.Hkl], useFactory: _e }, { provide: o.C2, deps: [e.Hkl], useFactory: le }, { provide: o.wt, deps: [e.Hkl], useFactory: Q }, { provide: o.ah, deps: [e.Hkl], useFactory: Z }, { provide: o.PH, deps: [e.Hkl], useFactory: xe }, { provide: o.Q4, deps: [e.Hkl], useFactory: be }, { provide: o.C_, deps: [e.Hkl], useFactory: De }, { provide: o.gu, deps: [e.Hkl], useFactory: Oe }, { provide: o.S8, deps: [e.Hkl], useFactory: Se }, { provide: o.jm, deps: [e.Hkl], useFactory: ge }, { provide: o.pq, deps: [e.Hkl], useFactory: Te }, { provide: o.TN, deps: [e.Hkl], useFactory: Le }, { provide: o.o4, deps: [e.Hkl], useFactory: Pe }, { provide: o.mA, deps: [e.Hkl], useFactory: V }, { provide: o.q2, deps: [e.Hkl], useFactory: ne }, { provide: o.YL, deps: [e.Hkl], useFactory: k }, { provide: o.dl, deps: [e.Hkl], useFactory: $ }, { provide: o.q2, deps: [e.Hkl], useFactory: ne }, { provide: o.Pz, deps: [e.Hkl], useFactory: ie }, { provide: o.rS, deps: [e.Hkl], useFactory: Me }, { provide: o.T7, deps: [e.Hkl], useFactory: de }, { provide: o.tK, deps: [e.Hkl], useFactory: Ye }, { provide: o.Og, deps: [e.Hkl], useFactory: Ze }] } } } return F.\u0275fac = function (It) { return new (It || F) }, F.\u0275mod = r.oAB({ type: F }), F.\u0275inj = r.cJS({}), F })(); function d(F) { return F.get(o.nh) } function f(F) { return F.get(o.sx) } function y(F) { return F.get(o.iH) } function M(F) { return F.get(o.Ic) } function T(F) { return F.get(o.KO) } function P(F) { return F.get(o.qY) } function G(F) { return F.get(o.Qq) } function x(F) { return F.get(o.M0) } function R(F) { return F.get(o.PL) } function J(F) { return F.get(o.Gt) } function W(F) { return F.get(o.Hh) } function Q(F) { return F.get(o.wt) } function Z(F) { return F.get(o.ah) } function N(F) { return F.get(o.YE) } function ae(F) { return F.get(o.yz) } function re(F) { return F.get(o.Nh) } function ce(F) { return F.get(o.Tv) } function _e(F) { return F.get(o.ct) } function le(F) { return F.get(o.C2) } function be(F) { return F.get(o.Q4) } function xe(F) { return F.get(o.PH) } function De(F) { return F.get(o.C_) } function Oe(F) { return F.get(o.gu) } function ge(F) { return F.get(o.jm) } function Se(F) { return F.get(o.S8) } function Te(F) { return F.get(o.pq) } function Le(F) { return F.get(o.TN) } function Pe(F) { return F.get(o.o4) } function V(F) { return F.get(o.mA) } function ne(F) { return F.get(o.q2) } function k(F) { return F.get(o.YL) } function $(F) { return F.get(o.dl) } function ie(F) { return F.get(o.Pz) } function Me(F) { return F.get(o.rS) } function de(F) { return F.get(o.T7) } function Ye(F) { return F.get(o.tK) } function Ze(F) { return F.get(o.Og) } }, 89546: (s, h, i) => { "use strict"; i.d(h, { IS: () => e.IS, nh: () => o.nh, gu: () => o.gu, sx: () => o.sx, Pz: () => o.Pz, TN: () => o.TN, Tv: () => o.Tv, iH: () => o.iH, dl: () => o.dl, Nh: () => o.Nh, tK: () => o.tK, Ic: () => o.Ic, yz: () => o.yz, PH: () => o.PH, M0: () => o.M0, C2: () => o.C2, Og: () => o.Og, q2: () => o.q2, rS: () => o.rS, Hh: () => o.Hh, wt: () => o.wt }); var e = i(81987), o = i(28284) }, 41704: (s, h, i) => { "use strict"; i.d(h, { u: () => d }); var e = i(71670), o = i(3184); const r = { rpfavwidget: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_iframe-rp-fav-widget_iframe-rp-fav-widget_module_ts").then(i.bind(i, 68107)).then(f => f.IFrameRpFavWidgetModule) }, rpgyml: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_iframe-rp-gyml_iframe-rp-gyml_module_ts").then(i.bind(i, 78963)).then(f => f.IFrameRpGymlModule) }, subcategoryfooter: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_iframe-subcategory-footer_iframe-subcategory-footer_-3092cc").then(i.bind(i, 45819)).then(f => f.IframeSubCategoryAsFooterModule) }, explorepage: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_explore-page_explore-page_module_ts").then(i.bind(i, 57104)).then(f => f.ExplorePageModule) }, nolazypathkey: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_lazy-route-error_lazy-route-error_module_ts").then(i.bind(i, 67543)).then(f => f.LazyRouteErrorModule) }, SeoBoxSectionComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_mod-casino_seo-box-section_seo-box-section_module_ts").then(i.bind(i, 47168)).then(f => f.SeoBoxSectionModule) }, RPFavSectionComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_mod-casino_rp-fav-section_rp-fav-section_module_ts").then(i.bind(i, 73477)).then(f => f.RPFavSectionModule) }, RecentlyplayedGymlSectionComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_mod-casino_recentlyplayed-gyml-section_recentlyplaye-49032c").then(i.bind(i, 64539)).then(f => f.RecentlyPlayedGYMLSectionModule) }, ThumbnailHomeComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_thumbnail-home_thumbnail-home_module_ts").then(i.bind(i, 64335)).then(f => f.ThumbnailHomeModule) }, NewsFeedSectionV2Component: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_mod-casino_news-feed-section-v2_news-feed-section-v2-69fb42").then(i.bind(i, 72510)).then(f => f.NewsFeedSectionV2Module) }, CozyBingoWidgetComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-cozy-bingo-widget_mjs").then(i.bind(i, 16986)).then(f => f.CozyBingoWidgetModule) }, PlayBingoBtnComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-play-bingo-btn_mjs").then(i.bind(i, 72126)).then(f => f.PlayBingoBtnModule) }, NewsFeedSectionComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-news-feed-section_mjs").then(i.bind(i, 40545)).then(f => f.NewsFeedSectionModule) }, StaticDiscoverFeedWrapperComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-discover-feed_mjs").then(i.bind(i, 34467)).then(f => f.StaticDiscoverFeedWrapperModule) }, GlobalJackpotTandCComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-global-jackpot-tnc_mjs").then(i.bind(i, 56402)).then(f => f.GlobalJackpotTandCModule) }, LiveGamesSectionComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-live-games-section_mjs").then(i.bind(i, 44362)).then(f => f.LiveGamesSectionModule) }, GlobalJackpotContainerComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_mod-casino_global-jackpot-container_global-jackpot-c-15b90e").then(i.bind(i, 48782)).then(f => f.GlobalJackpotContainerModule) }, TeaserSectionComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_mod-casino_teaser-section_teaser-section_module_ts").then(i.bind(i, 66611)).then(f => f.TeaserSectionModule) }, CasinoGameSelectorSectionComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_mod-casino_casino-game-selector-section_casino-game--f21848").then(i.bind(i, 55156)).then(f => f.CasinoGameSelectorSectionModule) }, GameShowHubSectionComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_mod-casino_game-show-hub-section_game-show-hub-secti-4d19e8").then(i.bind(i, 59894)).then(f => f.GameShowHubSectionModule) } }, c = new o.OlP("LAZY_MODULES_MAP", { factory: () => r }); let d = (() => { class f { constructor(M, T, P) { this.injector = M, this.compiler = T, this.modulesMap = P } loadAndRenderComponents(M, T) { var P = this; return (0, e.Z)(function* () { T.clear(); const { type: G, data: x } = M; let R = P.modulesMap[G]; if (R || (R = P.modulesMap.nolazypathkey), R) { let W, J = yield R.loadChildren(); W = J instanceof o.YKP ? J : yield P.compiler.compileModuleAsync(J); const N = W.create(P.injector).componentFactoryResolver.resolveComponentFactory(W.moduleType.rootComponent); T.createComponent(N, 0, P.injector).instance.data = x } })() } loadAndRenderLazyComponents(M, T) { var P = this; return (0, e.Z)(function* () { const { type: G } = M; let R = P.modulesMap[G]; if (R) { let W, J = yield R.loadChildren(); return W = J instanceof o.YKP ? J : yield P.compiler.compileModuleAsync(J), W.create(P.injector).componentFactoryResolver.resolveComponentFactory(W.moduleType.rootComponent) } })() } } return f.\u0275fac = function (M) { return new (M || f)(o.LFG(o.zs3), o.LFG(o.Sil), o.LFG(c)) }, f.\u0275prov = o.Yz7({ token: f, factory: f.\u0275fac, providedIn: "root" }), f })() }, 89014: (s, h, i) => { "use strict"; var e = i(50318), o = i(3184), r = i(16941), c = i(20639), d = i(12930), f = i(11382), y = i(73598), M = i(67603), T = i(39006), P = i(89546), G = i(28784), x = i(19337); let R = (() => { class u { constructor(m) { this.injector = m } intercept(m, S) { return S.handle(m).pipe((0, x.b)(() => { }, B => { B instanceof G.UA && this.responseError(B) })) } responseError(m) { const S = this.injector.get(c.KDu), B = this.injector.get(c.YdH), oe = this.injector.get(c.rBu), me = this.injector.get(c.gyN), pe = this.injector.get(c.wrx), ke = this.injector.get(c.EC$); if (404 !== m.status) { if (401 === m.status) return B.error(`Invalid session error on ajax call, reloading (${m.status}-${m.url})`), S.isAuthenticated && oe.isNativeWrapper ? (B.error(`Native Wrapper authenticated user ${S.username} received 401 from api call, sending CCB logout`), void oe.sendToNative({ eventName: c.RnL.LOGOUT, parameters: { systemLogout: !0 } })) : (pe.clear({ clearPersistent: !1 }), pe.addError(ke.SessionError), void me.goToLogin({ appendReferrer: !0, forceReload: !0, storeMessageQueue: !0 })); if (403 === m.status) return B.error(`Invalid CSRF token error on ajax call, reloading (${m.status}-${m.url})`), pe.clear({ clearPersistent: !1 }), pe.addError(ke.SessionError), void me.goToLogin({ appendReferrer: !0, forceReload: !0, storeMessageQueue: !0 }); if ("FatalError" === m.error.errorCode) return pe.clear({ clearPersistent: !1 }), pe.addError(ke.TechnicalError), void me.goToLogin({ forceReload: !0 }) } } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(o.zs3)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(), J = (() => { class u { static forRoot() { return { ngModule: u, providers: [R, { provide: G.TP, useClass: R, multi: !0 }] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({}), u })(); var W = i(70215); let Q = (() => { class u { static forRoot() { return { ngModule: u, providers: [{ provide: W.s, deps: [c.OQ1], useFactory: Z }] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({}), u })(); function Z(u) { return u.create(W.s, { product: "casino", area: "games" }) } var N = i(36362); function ae(u) { return u.get("LastLogin") } function re(u) { return u.get("m2PubSub") } let ce = (() => { class u { static forRoot() { return { ngModule: u, providers: [{ provide: "LastLogin", useFactory: ae, deps: ["$injector"] }, { provide: "m2PubSub", useFactory: re, deps: ["$injector"] }] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i]] }), u })(); var De = i(18246); let Oe = (() => { class u { constructor(m, S, B) { this.navigation = m, this.mcPage = S, this.route = B } ngOnInit() { this.content = this.route.snapshot.data.initData } goBack() { this.navigation.goTo(this.mcPage.prefix) } goToGame() { } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(c.f5Y), o.Y36(P.M0), o.Y36(M.gz)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-unfinished-games"]], decls: 12, vars: 3, consts: [[1, "control-header"], [1, "title", 3, "innerHTML"], [1, "icon", "theme-close-i", 3, "click"], [1, "form-element", "left-content"], [1, "message-panel"], [1, "theme-info-i"], [1, "cms-container", 3, "innerHTML"], [1, "form-element", "center-content"], [1, "btn", 3, "innerHTML", "click"]], template: function (m, S) { 1 & m && (o.TgZ(0, "div")(1, "h1", 0), o._UZ(2, "span", 1), o.TgZ(3, "span", 2), o.NdJ("click", function () { return S.goBack() }), o.qZA()(), o.TgZ(4, "fieldset")(5, "section")(6, "div", 3)(7, "div", 4)(8, "div", 5), o._UZ(9, "div", 6), o.qZA()()(), o.TgZ(10, "div", 7)(11, "button", 8), o.NdJ("click", function () { return S.goToGame() }), o.qZA()()()()()), 2 & m && (o.xp6(2), o.Q6J("innerHTML", S.content.title, o.oJD), o.xp6(7), o.Q6J("innerHTML", S.content.messages.oneunfinishedgame, o.oJD), o.xp6(2), o.Q6J("innerHTML", S.content.form.okbutton.label, o.oJD)) }, encapsulation: 2 }), u })(); var ge = i(96157); let Se = (() => { class u { constructor(m) { this.api = m } getInitValues() { return this.api.get("unfinishedGames/getinitdata") } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(ge.pf)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(), Te = (() => { class u { constructor(m) { this.unfinishedGamesResource = m } resolve() { return this.unfinishedGamesResource.getInitValues() } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(Se)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(), Le = (() => { class u { static forRoot() { return { ngModule: u, providers: [Se, Te] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i]] }), u })(); var Pe = i(76317), V = i(60116), ne = i(56093), k = i(38805), $ = i(62578); let ie = (() => { class u { constructor(m, S, B, oe) { this.tagManagerService = m, this.vanillaTrackingService = S, this.tagManagerClientConfig = B, this.windowRef = oe, this.isGoogleTagManagerLoadInitialized = !1 } renderGTMTag() { this.tagManagerClientConfig && this.tagManagerClientConfig.triggerGoogleTagManagerClientInjection && !this.isGoogleTagManagerLoadInitialized && (this.isGoogleTagManagerLoadInitialized = !0, this.windowRef.nativeWindow.setTimeout(() => { this.loadGTM() }, this.tagManagerClientConfig.googleTagManagerInjectionDelay)) } loadGTM() { this.windowRef.nativeWindow.CasinoPreGTMLoad && this.windowRef.nativeWindow.CasinoPreGTMLoad.Execute && this.windowRef.nativeWindow.CasinoPreGTMLoad.Execute(), this.tagManagerService.load("GoogleTagManagerRenderer"), this.vanillaTrackingService.triggerEvent("Vanilla_Portal_App_Loaded") } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(c.c$S), o.LFG(c.e2C), o.LFG(P.rS), o.LFG($.X)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac, providedIn: "root" }), u })(); var ve = i(94789); let Me = (() => { class u { constructor(m, S) { this.windowRef = m, this.casinoGlobalSearchClientConfig = S, this.isGlobalSearchBootstrapperLoadInitialized = !1 } bootstrap() { this.casinoGlobalSearchClientConfig && this.casinoGlobalSearchClientConfig.isEnabled && "client" === this.casinoGlobalSearchClientConfig.bootstrapOrigin && !this.isGlobalSearchBootstrapperLoadInitialized && (this.isGlobalSearchBootstrapperLoadInitialized = !0, this.windowRef.nativeWindow.setTimeout(() => { this.loadGlobalSearch() }, this.casinoGlobalSearchClientConfig.bootstrapTimeout)) } loadGlobalSearch() { dispatchEvent(new CustomEvent("gs:search:bootstrap:app")) } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG($.X), o.LFG(P.gu)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac, providedIn: "root" }), u })(); var de = i(27475); let Ye = (() => { class u { constructor(m, S) { this.casinoLobbyService = m, this.recentGamesService = S, this.recentgamesobj = {}, this.getAndDispatchRecentlyPlayed = () => { const B = this.recentGamesService.getRecentGames(); B && Object.keys(B).length > 0 && this.dispatchRecentGames(B) }, this.dispatchRecentGames = B => { dispatchEvent(new CustomEvent("gs:search:Casino_Recent_Games_Updated", { detail: B })) }, this.handleCollectedLobbies = B => { this.respondToDataConstributor(B && B.detail && B.detail.collectedLobbies) }, this.getandDispatchData = () => { this.casinoLobbyService.readAndDispatchLobbyDataForGlobalSearch(!0) }, this.handleRecentlyPlayedGames = B => { B && B.detail && this.dispatchRecentGames(B.detail) } } init() { addEventListener("LocalStorage_Collected_Lobbies", this.handleCollectedLobbies, !1), addEventListener("gs:search:Request_Casino_Source", this.getandDispatchData, !1), addEventListener("casino:Recent_Games_Updated", this.handleRecentlyPlayedGames, !1), addEventListener("gs:search:Request_Recent_Games_From_Casino", this.getAndDispatchRecentlyPlayed, !1) } respondToDataConstributor(m) { dispatchEvent(new CustomEvent("gs:search:Casino_Data_Source", { detail: { status: m && m.length > 0, content: m } })) } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(k.nA), o.LFG(k.vD)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac, providedIn: "root" }), u })(), Ze = (() => { class u { constructor(m, S, B, oe, me, pe, ke, We, Ae, te, Ve, Mt, Oi, Ai, Gi, ki, $t, xi, Ri, wi, Ui, pn, lo, fn, vn, yn, ei, bn, Cn) { this.user = m, this.casinoManager = S, this.gameDataManager = B, this.navigation = oe, this.mcPage = me, this.global = pe, this.nativeApp = ke, this.productHomepages = We, this.casinoWidgetService = Ae, this.features = te, this.gameLaunchService = Ve, this.widgetconfig = Mt, this.oobeeIntimationToasterService = Oi, this.route = Ai, this.cookie = Gi, this.headerService = ki, this.bingoGameLaunchService = $t, this.promotedGamesConfig = xi, this.globalSearchHelperService = Ri, this.cozyBingoClientConfig = wi, this.freeSpinsClientConfig = Ui, this.casinoLobbyService = pn, this.onAppInitHandler = lo, this.tagManagerRenderer = fn, this.globalSearchBootstrapper = vn, this.performanceMarker = yn, this.globalSearchService = ei, this.preRenderClientConfig = bn, this.windowRef = Cn, this.previousUrl = this.mcPage.prefix, this.quickInfoPublisher = new Pe.X(null), this.quickInfoObservable = this.quickInfoPublisher.asObservable(), this.isAppEnabledQuery = "isappenabled", this.queryToken = "global-jackpot-query-isappenabled", this.launchGameGlobalSearch = Ie => { Ie && Ie.detail && Ie.detail.gameParams && this.globalSearchGameLaunch(Ie.detail.gameParams) }, this.searchAppLoadedEventHandler = Ie => { Ie && Ie.detail && Ie.detail.context && this.globalSearchHelperService.setGlobalSearchLoadedEvent(Ie.detail.context) }, this.searchAppQueryResultHandler = Ie => { Ie && Ie.detail && Ie.detail.query && Ie.detail.queryToken && Ie.detail.queryToken === this.queryToken && Ie.detail.query === this.isAppEnabledQuery && this.globalSearchHelperService.setGlobalSearchLoadedEvent(Ie.detail.context) }, this.presentationBootstarppedEventHandler = Ie => { Ie && Ie.detail && Ie.detail && this.globalSearchHelperService.setGlobalSearchLoadedEvent(Ie.detail.searchContext) }, this.contextResultEventHandler = Ie => { Ie && Ie.detail && this.globalSearchHelperService.setGlobalSearchLoadedEvent(Ie.detail) } } onAppInit() { this.casinoManager.checkForTouchDevice(), this.registerEventHandlers(), this.raiseIsAppEnabledQuery(), this.subscribeToGlobalSearchEvents(), this.casinoWidgetService.setWidgetProduct(), this.invokerProduct = this.navigation.location.search.get("invokerproduct"), document.body.classList.add("casino-body"), this.casinoManager.checkForTouchDevice(), this.subscribeToLobbyLoad(); let m = new k.mx; m.isDll = !0, m.disableFullLobbyFetch = !0, this.globalSearchService.init(), this.casinoLobbyService.initiateCasinoLobby(m), this.getInitFeed(), this.getFromCookie("dark-mode") ? document.getElementsByTagName("html")[0].classList.add("casino-darkmode") : (document.getElementsByTagName("html")[0].classList.remove("casino-darkmode"), this.setBackgroundColor()), this.onAppInitHandler.execute() } getInitFeed() { this.locationChangeSubscription = this.navigation.locationChange.subscribe(m => { m && null != m.previousUrl && (this.previousUrl = m.previousUrl), m && m.nextUrl && m.nextUrl.indexOf("labelhost") > -1 && document.body.getAttribute("data-bg-color") === this.global.lobbyConfigurations.lobbyBackgroundColor && document.body.style.backgroundColor === this.global.lobbyConfigurations.lobbyBackgroundColor && (document.body.removeAttribute("data-bg-color"), document.body.style.removeProperty("background-color")), this.getFromCookie("dark-mode") || this.setBackgroundColor(), this.navigation.location.search.has("gameQuickinfo") && this.quickInfoPublisher.next(this.navigation.location.search.get("gameQuickinfo")) }), this.setUserPreferenceData(), this.user.events.pipe((0, V.h)(m => m instanceof c.U0n)).subscribe(() => { this.postLoginCalls() }), this.nativeApp.eventsFromNative.subscribe(m => { if ("CASINO_SESSION_KEY" === m.eventName.toUpperCase() && m.parameters) { let B = JSON.parse(JSON.parse(JSON.stringify(m.parameters))); B.sessionKey && "" !== B.sessionKey && (window.location.href = this.productHomepages.casino + "/casino?invokerProduct=" + this.nativeApp.product + "&_nativeApp=" + this.nativeApp.applicationName + "&_sso=" + B.sessionKey) } }) } postLoginCalls() { this.handlePostloginDirectGameLaunch(), this.oobeeIntimationToasterService.display() } getAllCategories() { } getFromCookie(m) { return this.cookie.get(m) > "0" } getGoBackUrl() { return this.previousUrl === this.navigation.location.absUrl() ? this.mcPage.prefix : this.previousUrl } goBackImmediateUrl() { return this.navigation.location.absUrl() } setTeasers() { this.casinoManager.setTeasers() } handlePostloginDirectGameLaunch() { let m = window.location.href; if (m.indexOf("launchEmbedded") > -1) { let S = m.lastIndexOf("/"), B = m.lastIndexOf("?"), oe = m.substr(S + 1, B - S - 1); oe && this.gameLaunchService.handleDirectDesktopGameLaunch(oe) } } setBackgroundColor() { document.body.style.backgroundColor = this.global.lobbyConfigurations.lobbyBackgroundColor, document.body.setAttribute("data-bg-color", this.global.lobbyConfigurations.lobbyBackgroundColor) } setUserPreferenceData() { this.casinoManager.setPlayerSegmentationData() } subscribeToGlobalSearchEvents() { this.globalSearchHelperService.globalSearchHelperObservable.subscribe(m => { m && "registerEvents" == m.eventName && (this.raiseIsAppEnabledQuery(), this.registerEventHandlers()) }) } raiseIsAppEnabledQuery() { dispatchEvent(new CustomEvent(ne.SearchAppQueryEventIdentifier, { detail: { query: this.isAppEnabledQuery, queryToken: this.queryToken } })), dispatchEvent(new CustomEvent("gs:search:service:context:fetch")) } registerEventHandlers() { addEventListener(ne.SearchAppLoadedEventIdentifier, this.searchAppLoadedEventHandler), addEventListener(ne.SearchAppQueryResultEventIdentifier, this.searchAppQueryResultHandler), addEventListener("gs:search:service:context:result", this.contextResultEventHandler), addEventListener("gs:presentation:bootstrapped", this.presentationBootstarppedEventHandler), addEventListener("gs:globalsearch:casinogamelaunch", this.launchGameGlobalSearch) } globalSearchGameLaunch(m) { let me, S = m.searchParams.get("gameid"), B = this.casinoManager.isTouch(), oe = this.casinoLobbyService.getGameInfo(S); oe && (me = oe.provider); let te, ke = { gameId: S, provider: me, lobbyType: this.casinoManager.getCurrentLobby() }, We = m.searchParams.get("returnUrl"), Ae = new k.Hq; Ae.game = ke, Ae.trackingproduct = m.searchParams.get("specialproduct"), Ae.returnUrl = We, Ae.isTouch = B, Ae.categoryType = m.searchParams.get("specialproduct"), Ae.clickTimeStamp = m.searchParams.get("clickTimeStamp"), Ae.recommendationType = m.searchParams.get("recommendationType"), Ae.clickTimeStamp || (Ae.clickTimeStamp = this.gameLaunchService.currentTimeStamp()), m.searchParams.get("tracking:containerName") && (te = m.searchParams.get("tracking:containerName").split("+").join(" ")); let Ve = parseInt(m.searchParams.get("tracking:position")); Ae.Globalsearchsection = te, Ae.Globalsearchgameposition = Ve, Ae.gameLaunchedFrom = Ae.trackingproduct, Ae.gamePosition = Number(m.searchParams.get("tracking:position")), this.gameLaunchService.launchGame(Ae) } subscribeToLobbyLoad() { this.casinoLobbyService.lobbyLoadedObservable.subscribe(m => { m && (this.createPerformanceMark(ve._.LobbyLoadComplete), this.triggerGTMInjection(), setTimeout(() => { document.getElementById("casino-prerender") && (document.getElementById("casino-prerender").innerHTML = " window.prerenderReady = true", this.windowRef.nativeWindow.prerenderReady = !0) }, this.preRenderClientConfig.preRenderScriptTimeOut), this.bootstrapGlobalSearch()) }) } bootstrapGlobalSearch() { this.globalSearchBootstrapper.bootstrap() } triggerGTMInjection() { this.tagManagerRenderer.renderGTMTag() } createPerformanceMark(m) { this.performanceMarker.mark(m) } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(c.KDu), o.LFG(k.M3), o.LFG(k.cM), o.LFG(c.f5Y), o.LFG(P.M0), o.LFG(P.Ic), o.LFG(c.rBu), o.LFG(c.t6E), o.LFG(ge.hY), o.LFG(P.iH), o.LFG(k.$l), o.LFG(P.wt), o.LFG(k.l5), o.LFG(M.gz), o.LFG(c.N_8), o.LFG(c.r6L), o.LFG(k.BW), o.LFG(P.q2), o.LFG(k.Zo), o.LFG(P.TN), o.LFG(P.dl), o.LFG(k.nA), o.LFG(de.bG), o.LFG(ie), o.LFG(Me), o.LFG(ve.k), o.LFG(Ye), o.LFG(P.Og), o.LFG($.X)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(); var F = i(31603); let Pt = (() => { class u { static forRoot() { return { ngModule: u, providers: [F.y, (0, c.Xdr)(Ze)] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({}), u })(); function It(u, A) { if (1 & u) { const m = o.EpF(); o.TgZ(0, "h1", 7), o._UZ(1, "span", 8), o.TgZ(2, "span", 9), o.NdJ("click", function () { return o.CHM(m), o.oxw().goBack() }), o.qZA()() } if (2 & u) { const m = o.oxw(); o.xp6(1), o.Q6J("innerHTML", m.content.title, o.oJD) } } const oi = function (u, A, m) { return { "theme-check": u, "theme-error-i": A, "theme-info-i": m } }; let ni = (() => { class u { constructor(m, S, B, oe) { this.navigation = m, this.nativeApplication = S, this.route = B, this.bootstrapService = oe } ngOnInit() { this.data = this.route.snapshot.data.initData, this.isNotNative = !this.nativeApplication.isNative, this.messageType = this.route.snapshot.paramMap.get("messageType"), this.messageText = this.route.snapshot.paramMap.get("messageText"), this.content = this.data } goBack() { this.route.snapshot.paramMap.get("redirectUrl") ? this.navigation.goTo(this.route.snapshot.paramMap.get("redirectUrl"), { forceReload: !0 }) : this.navigation.goTo(this.bootstrapService.getGoBackUrl()) } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(c.f5Y), o.Y36(c.rBu), o.Y36(M.gz), o.Y36(Ze)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-unavailablegames"]], decls: 10, vars: 8, consts: [["class", "control-header", 4, "ngIf"], [1, "form-element", "left-content"], [1, "message-panel"], [3, "ngClass"], [1, "message-count", 3, "innerHTML"], [1, "form-element", "center-content"], [1, "btn", 3, "innerHTML", "click"], [1, "control-header"], [1, "title", 3, "innerHTML"], [1, "icon", "theme-close-i", 3, "click"]], template: function (m, S) { 1 & m && (o.TgZ(0, "div"), o.YNc(1, It, 3, 1, "h1", 0), o.TgZ(2, "fieldset")(3, "section")(4, "div", 1)(5, "div", 2)(6, "div", 3), o._UZ(7, "div", 4), o.qZA()()(), o.TgZ(8, "div", 5)(9, "button", 6), o.NdJ("click", function () { return S.goBack() }), o.qZA()()()()()), 2 & m && (o.xp6(1), o.Q6J("ngIf", S.isNotNative), o.xp6(5), o.Q6J("ngClass", o.kEZ(4, oi, "Success" == S.messageType, "Error" == S.messageType, "Information" == S.messageType)), o.xp6(1), o.Q6J("innerHTML", S.messageText || S.content.messages.DefaultMessage, o.oJD), o.xp6(2), o.Q6J("innerHTML", S.content.form.okbutton.label, o.oJD)) }, directives: [N.O5, N.mk], encapsulation: 2 }), u })(), Nt = (() => { class u { constructor(m) { this.api = m } getInitValues() { return this.api.get("unavailablegame/getinitdata") } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(ge.pf)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(), Kt = (() => { class u { constructor(m) { this.unavailableGamesResource = m } resolve() { return this.unavailableGamesResource.getInitValues() } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(Nt)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(), ai = (() => { class u { static forRoot() { return { ngModule: u, providers: [Nt, Kt] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i]] }), u })(); var Dt = i(85749); let Jt = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i, Dt.o, Pt]] }), u })(), Yt = (() => { class u { constructor() { } resolve(m) { } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(); var ft = i(35564), gt = i(34314); let si = (() => { class u { static forRoot() { return { ngModule: u, providers: [Yt] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, Dt.o, c.b9i, Jt, ft.w, gt.I8]] }), u })(); var He = i(54706); function ri(u) { return u.get("Navigator") } function ci(u) { return u.get("m2PubSub") } let li = (() => { class u { static forRoot() { return { ngModule: u, providers: [{ provide: "Navigator", useFactory: ri, deps: ["$injector"] }, { provide: "m2PubSub", useFactory: ci, deps: ["$injector"] }] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, De.or, c.b9i, He.ContentModule]] }), u })(); function _i(u) { return u.get("sUtils") } let Zt = (() => { class u { static forRoot() { return { ngModule: u, providers: [{ provide: "sUtils", useFactory: _i, deps: ["$injector"] }] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez]] }), u })(); var gi = i(22037); function di(u) { return u.get("m2PubSub") } let ui = (() => { class u { static forRoot() { return { ngModule: u, providers: [{ provide: "m2PubSub", useFactory: di, deps: ["$injector"] }] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i, He.ContentModule]] }), u })(); var St = i(50253), vt = i(68951), yt = i(95758); let Ht = (() => { class u { constructor(m, S, B, oe, me, pe, ke, We, Ae, te, Ve, Mt, Oi, Ai, Gi, ki, $t, xi, Ri, wi, Ui) { this.windowRef = m, this.nativeApplication = S, this.navigation = B, this.route = oe, this.casinocoregamelaunchservice = me, this.commonMessagesObject = pe, this.casinoManager = ke, this.feature = We, this.cookieService = Ae, this.vcClientService = te, this.productHomepagesConfig = Ve, this.appInfoConfig = Mt, this.casinoLobbyService = Oi, this.lmtDataClientConfig = Ai, this.invokerProductService = Gi, this.productService = ki, this.messageQueue = $t, this.user = xi, this.page = Ri, this.dialog = wi, this.configProviderService = Ui, this.unsubscribe = new St.x } ngOnInit() { if (this.setGameInfo(), this.casinoLobbyService.isDisjointFeedsInitiated()) this.subscribeToCasinoLobbyObs(); else { let S = this.casinoManager.isTouch(); S || this.casinoLobbyService.setCasinoLobby(!0), this.lmtDataClientConfig.enableValidateGames ? this.validateGameInfo() : (S && this.casinoLobbyService.setCasinoLobby(!0), this.user.isAuthenticated ? this.subscribeToCasinoLobbyObs() : this.onPlayRedirectInit(!1)) } this.user.isAuthenticated || this.subscribeToCasinoLobbyObs() } subscribeToCasinoLobbyObs() { this.casinoLobbyService.lobbyLoadedObservable.pipe((0, vt.R)(this.unsubscribe)).subscribe(m => { m && (m.isPostLogin || m.isLoggedIn) && this.onPlayRedirectInit(m.isPostLogin) }) } validateGameInfo() { this.casinocoregamelaunchservice.validateGames(this.gameId).pipe((0, vt.R)(this.unsubscribe)).subscribe(m => { m && m.isValid && (this.gameName = m.gameName, this.onPlayRedirectInit(!1, !0)) }, () => { this.gameNotFoundAction() }) } gameNotFoundAction() { let m = this.casinoManager.isTouch(), S = this.getLobbyType(), B = { gameId: this.gameId, lobbyType: S }; this.gameName && (B.name = this.gameName), this.messageQueue.clear(); let me = this.configProviderService.provideGlobalConfig().messages.GameNotAvailable; me = me.replace("{0}", this.gameId); let pe = { html: me, type: "Information", lifetime: "Single", scope: "casinocorelobby" }; m ? (this.messageQueue.add(pe), this.navigation.goTo(this.gameHomeUrl)) : (pe.scope = "embeddedGameError", this.openEmbeddedGameDailog({ game: B, errorMessageQueue: pe })) } openEmbeddedGameDailog(m = null) { this.dialog.open(k.Rv, { width: "790px", height: "779px", data: m }) } setGameInfo() { this.gameId = this.route.snapshot.paramMap.get("gameId"); const m = this.isSkipReferrer(); this.gameHomeUrl = this.feature.skipDocReferrer || m ? "" : document.referrer, this.navigation.location.search.has("returnurl") && (this.gameHomeUrl = this.navigation.location.search.get("returnurl")), (!this.gameHomeUrl || "" === this.gameHomeUrl) && (this.gameHomeUrl = this.productHomepagesConfig.casino, "dice" == this.getLobbyType().toLowerCase() && (this.gameHomeUrl = this.productService.getMetadata("dicegames").apiBaseUrl + "/" + this.page.lang)) } getGameandLaunch(m, S, B, oe) { let We, me = this.getLobbyType(), pe = this.casinoManager.isTouch(), ke = this.casinoLobbyService.getGameInfo(m); ke && (We = ke.provider); let Ae = { gameId: m, lobbyType: me, provider: We }; this.gameName && (Ae.name = this.gameName); let te = new k.Hq; if (te.game = Ae, te.gamePosition = parseInt(this.route.snapshot.queryParamMap.get("tracking:position")), te.mode = this.navigation.location.search.get("mode"), te.isDemoLaunch = Boolean(this.navigation.location.search.get("demo")), te.from = this.navigation.location.search.get("place"), te.gameLaunchedFrom = this.navigation.location.search.get("gameLaunchCategory") ? this.navigation.location.search.get("gameLaunchCategory") : this.route.snapshot.queryParamMap.get("adv_parentcat") ? this.route.snapshot.queryParamMap.get("adv_parentcat") : "playRedirect", te.gameLaunchedLocation = this.navigation.location.search.get("gameLaunchedLocation"), te.gamePosition = Number(this.navigation.location.search.get("gamePosition") ? this.navigation.location.search.get("gamePosition") : this.route.snapshot.queryParamMap.get("adv_pos") ? this.route.snapshot.queryParamMap.get("adv_pos") : ""), te.trackingproduct = this.navigation.location.search.get("specialproduct"), te.returnUrl = S, te.recommendationType = this.navigation.location.search.get("recommendationType"), te.noGameTraking = !("True" != this.navigation.location.search.get("nogametraking") && !B), te.isTouch = pe, te.categoryType = this.navigation.location.search.get("specialproduct"), te.clickTimeStamp = this.navigation.location.search.get("clickTimeStamp"), te.clickTimeStamp || (te.clickTimeStamp = this.casinocoregamelaunchservice.currentTimeStamp()), te.launchSource = this.navigation.location.search.get("launchSource"), te.trackingproduct && "globalsearch" == te.trackingproduct.trim().toLowerCase()) { let Ve; this.route.snapshot.queryParamMap.get("tracking:containerName") && (Ve = this.route.snapshot.queryParamMap.get("tracking:containerName").split("+").join(" ")); let Mt = parseInt(this.route.snapshot.queryParamMap.get("tracking:position")); te.Globalsearchsection = Ve, te.Globalsearchgameposition = Mt, te.gameLaunchedFrom = te.trackingproduct, te.gamePosition = Number(this.navigation.location.search.get("tracking:position")) - 1 } oe && Boolean(oe) && (te.skipMetaDataCheck = !0), this.casinocoregamelaunchservice.launchGame(te), this.vcClientService.isPokerVC() && this.cookieService.put("fromLobby", this.navigation.location.search.get("fromLobby")) } isSkipReferrer() { let m = !!this.route.snapshot.queryParamMap.get("skipreferrer"), S = [], B = this.productHomepagesConfig.casino + "/menu"; "dice" == this.getLobbyType().toLowerCase() && (B = this.productService.getMetadata("dicegames").apiBaseUrl + "/" + this.page.lang + "/menu"), S.push(B), S.push("https://casinogames."); for (let pe = 0; pe < S.length; pe++) { let ke = S[pe]; if (document.referrer && document.referrer.indexOf(ke) > -1) { m = !0; break } } return "casino" === this.appInfoConfig.product.toLowerCase() && (m = !0), m } onPlayRedirectInit(m, S) { this.commonMessages = this.commonMessagesObject, this.nativeApplication.isNative && "SPORTSBOOK" === this.nativeApplication.product && (this.windowRef.nativeWindow.document.body.style.background = "#000000"), this.getGameandLaunch(this.gameId, this.gameHomeUrl, m, S) } getLobbyType() { let m = this.lmtDataClientConfig.defaultProductHomeUrl, S = this.lmtDataClientConfig.lobbyTypeMap, B = this.invokerProductService.getInvokerProduct(); return S.filter(pe => pe.invokerProduct.toLowerCase() === B.toLowerCase()).filter(pe => pe.product.toLowerCase() === m.toLowerCase())[0].lobbyType } ngOnDestroy() { this.unsubscribe.next(!0), this.unsubscribe.complete() } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(c.X9E), o.Y36(c.rBu), o.Y36(c.f5Y), o.Y36(M.gz), o.Y36(k.$l), o.Y36(c.EC$), o.Y36(k.M3), o.Y36(P.iH), o.Y36(c.N_8), o.Y36(ge.yJ), o.Y36(c.t6E), o.Y36(c.Veb), o.Y36(k.nA), o.Y36(P.yz), o.Y36(k.uZ), o.Y36(c.M52), o.Y36(c.wrx), o.Y36(c.KDu), o.Y36(c.T3C), o.Y36(yt.uw), o.Y36(k.iX)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-play-redirect"]], decls: 1, vars: 1, consts: [[3, "scope"]], template: function (m, S) { 1 & m && o._UZ(0, "vn-message-panel", 0), 2 & m && o.Q6J("scope", "casinocorelobby") }, directives: [ft.Y], encapsulation: 2 }), u })(), Qt = (() => { class u { constructor() { } resolve(m) { } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(); function hi(u) { return u.get("GameManager") } let mi = (() => { class u { static forRoot() { return { ngModule: u, providers: [Qt, { provide: "GameManager", useFactory: hi, deps: ["$injector"] }] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i, ft.w, de.ud]] }), u })(), pi = (() => { class u { constructor(m, S, B, oe, me) { this.menuActions = m, this.user = S, this.unfinishedGamesService = B, this.mcPage = oe, this.navigation = me } onAppInit() { this.menuActions.register("gotoHome", () => { this.navigation.goTo(this.mcPage.defaultPage.url) }) } setUnfinishedGames() { this.user.isAuthenticated && this.unfinishedGamesService.setUnfinishedGames(), this.user.events.pipe((0, V.h)(m => m instanceof c.U0n)).subscribe(() => { this.unfinishedGamesService.setUnfinishedGames() }) } setSearchOverlayVisibility(m) { this.isSearchOverlayVisible = m } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(c.JO$), o.LFG(c.KDu), o.LFG(k.f), o.LFG(P.M0), o.LFG(c.f5Y)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(), fi = (() => { class u { static forRoot() { return { ngModule: u, providers: [k.f, (0, c.Xdr)(pi)] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i]] }), u })(); var Qe = i(90587), bt = i(21860); function vi(u, A) { if (1 & u) { const m = o.EpF(); o.TgZ(0, "button", 1), o.NdJ("click", function () { return o.CHM(m), o.oxw().goToPlayGame("real") }), o._UZ(1, "cs-global-translate", 2), o.qZA() } if (2 & u) { const m = o.oxw(); o.Gre("btn ", m.cssClass, ""), o.xp6(1), o.Q6J("key", "ButtonPlayForReal") } } function $e(u, A) { if (1 & u) { const m = o.EpF(); o.TgZ(0, "button", 1), o.NdJ("click", function () { return o.CHM(m), o.oxw().goToPlayGame("play") }), o._UZ(1, "cs-global-translate", 2), o.qZA() } if (2 & u) { const m = o.oxw(); o.Gre("btn ", m.cssClass, " playforfun"), o.xp6(1), o.Q6J("key", "ButtonPlayForFun") } } function zt(u, A) { if (1 & u) { const m = o.EpF(); o.TgZ(0, "button", 1), o.NdJ("click", function () { return o.CHM(m), o.oxw().goToPlayGame("") }), o._UZ(1, "cs-global-translate", 2), o.qZA() } if (2 & u) { const m = o.oxw(); o.Gre("btn ", m.cssClass, ""), o.xp6(1), o.Q6J("key", "ButtonPlayNow") } } function yi(u, A) { if (1 & u) { const m = o.EpF(); o.TgZ(0, "button", 1), o.NdJ("click", function () { return o.CHM(m), o.oxw().goToPlayGame("") }), o._UZ(1, "cs-global-translate", 2), o.qZA() } if (2 & u) { const m = o.oxw(); o.Gre("btn ", m.cssClass, ""), o.xp6(1), o.Q6J("key", "ButtonPlayNow") } } let bi = (() => { class u { constructor(m, S, B) { this.ClientSideConfig = m, this.gameLaunchService = S, this.deviceService = B } ngOnInit() { this.twoButtons = this.ClientSideConfig.playForFunAndRealButtons, this.isInhouseGame = "inhouse" === this.launchType } goToPlayGame(m) { } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(P.sx), o.Y36(k.$l), o.Y36(c.U8N)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-game-detail-buttons"]], inputs: { game: "game", launchType: "launchType", place: "place", cssClass: "cssClass" }, decls: 4, vars: 4, consts: [[3, "class", "click", 4, "ngIf"], [3, "click"], [3, "key"]], template: function (m, S) { 1 & m && (o.YNc(0, vi, 2, 4, "button", 0), o.YNc(1, $e, 2, 4, "button", 0), o.YNc(2, zt, 2, 4, "button", 0), o.YNc(3, yi, 2, 4, "button", 0)), 2 & m && (o.Q6J("ngIf", !S.isInhouseGame && S.twoButtons), o.xp6(1), o.Q6J("ngIf", !S.isInhouseGame && S.twoButtons), o.xp6(1), o.Q6J("ngIf", S.isInhouseGame && S.twoButtons), o.xp6(1), o.Q6J("ngIf", !S.twoButtons)) }, directives: [N.O5, bt.y], encapsulation: 2 }), u })(); var et = i(28284); const jt = function () { return { "background-color": "#1a1a1a" } }; function Ci(u, A) { if (1 & u) { const m = o.EpF(); o.TgZ(0, "div")(1, "div", 1)(2, "div", 2)(3, "a", 3), o.NdJ("click", function () { return o.CHM(m), o.oxw().goBack() }), o._UZ(4, "i", 4), o.qZA()(), o.TgZ(5, "a", 5), o.NdJ("click", function () { return o.CHM(m), o.oxw().goBack() }), o._UZ(6, "cs-global-translate", 6), o.qZA(), o._UZ(7, "div", 7), o.qZA()() } if (2 & u) { const m = o.oxw(); o.xp6(1), o.Q6J("ngStyle", o.DdM(3, jt)), o.xp6(4), o.Q6J("hidden", m.error), o.xp6(1), o.Q6J("key", m.title) } } let Mi = (() => { class u { constructor(m, S, B, oe) { this.nativeApplication = m, this.casinoBootstrapService = S, this.navigation = B, this.mcPage = oe, this.navigateTo = new o.vpe } ngOnInit() { this.isVisible = !0 === this.showInNative || !this.nativeApplication.isNative, this.isNavigation = !1, this.navigateTo && this.navigateTo.observers && this.navigateTo.observers.length > 0 && (this.isNavigation = !0), this.goBackURL = this.navigation.location.search.get("gobackUrl"), ("undefined" === this.goBackURL || !this.goBackURL || "" === this.goBackURL) && (this.goBackURL = this.mcPage.prefix) } goBack() { this.navigation.goTo(this.goBackURL) } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(c.rBu), o.Y36(Ze), o.Y36(c.f5Y), o.Y36(P.M0)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-header-box"]], inputs: { showInNative: "showInNative", title: "title" }, outputs: { navigateTo: "navigateTo" }, decls: 1, vars: 1, consts: [[4, "ngIf"], ["ms-feedback", "after", 1, "casino-page-nav", 3, "ngStyle"], [1, "left-nav"], [1, "icon", 3, "click"], [1, "theme-left"], ["ms-marquee", "", 3, "hidden", "click"], [3, "key"], [1, "clear"]], template: function (m, S) { 1 & m && o.YNc(0, Ci, 8, 4, "div", 0), 2 & m && o.Q6J("ngIf", S.isVisible) }, directives: [N.O5, N.PC, bt.y], encapsulation: 2 }), u })(); function Ei(u, A) { if (1 & u) { const m = o.EpF(); o.TgZ(0, "div", 16)(1, "span", 17), o.NdJ("click", function (B) { o.CHM(m); const oe = o.oxw(); return oe.toggleFavourite(oe.model, B) }), o.qZA()() } if (2 & u) { const m = o.oxw(); o.Q6J("ngClass", m.isFavouriteGame(m.model) ? m.favouriteStyle : m.unFavouriteStyle) } } function Ti(u, A) { if (1 & u && o._UZ(0, "cs-game-detail-buttons", 18), 2 & u) { const m = o.oxw(); o.Q6J("game", m.model)("cssClass", "small-device")("place", 1)("launchType", m.model.provider) } } function qt(u, A) { if (1 & u && (o.TgZ(0, "a", 19), o._uU(1), o.qZA()), 2 & u) { const m = o.oxw(); o.Q6J("href", m.model.responsibleGamingLink.url, o.LSH), o.xp6(1), o.Oqu(m.model.responsibleGamingLink.linkText) } } function Pi(u, A) { if (1 & u && (o._UZ(0, "div", 20), o.ALo(1, "trustAsHtml")), 2 & u) { const m = o.oxw(); o.Q6J("innerHTML", o.lcZ(1, 1, m.model.info), o.oJD) } } function I(u, A) { if (1 & u && (o.TgZ(0, "div", 21)(1, "p"), o._uU(2), o.qZA()()), 2 & u) { const m = o.oxw(); o.xp6(2), o.Oqu(m.model.disclaimer) } } function Y(u, A) { 1 & u && (o.TgZ(0, "div", 22)(1, "h3"), o._UZ(2, "cs-global-translate", 23), o.qZA()()), 2 & u && (o.xp6(2), o.Q6J("key", "PreviewTitle")) } function v(u, A) { if (1 & u) { const m = o.EpF(); o.TgZ(0, "button", 24), o.NdJ("click", function () { return o.CHM(m), o.oxw().goToPlayGame(3) }), o._UZ(1, "cs-global-translate", 23), o.qZA() } 2 & u && (o.xp6(1), o.Q6J("key", "ButtonPlayNow")) } let C = (() => { class u { constructor(m, S, B, oe, me, pe, ke, We, Ae, te, Ve) { this.user = m, this.global = S, this.ClientSideConfig = B, this.gameDataManager = oe, this.deviceService = me, this.features = pe, this.route = ke, this.navigation = We, this.mcPage = Ae, this.favouritesService = te, this.casinoManager = Ve, this.favouriteStyle = "theme-favorite-i", this.unFavouriteStyle = "theme-favorite" } ngOnInit() { let m = this.route.snapshot.paramMap.get("gameId"); this.gameData = this.gameDataManager.getLMTGameData(m), this.gameData || (this.gameData = { game: m }), this.assignGameModel(), this.gameDataManager.gameLookUpObservable.subscribe(S => { S && (this.gameData = this.gameDataManager.getLMTGameData(m), this.assignGameModel()) }), ("true" === this.global.lobbyConfigurations.FavouriteHeart || "True" === this.global.lobbyConfigurations.FavouriteHeart || "TRUE" === this.global.lobbyConfigurations.FavouriteHeart) && (this.favouriteStyle = "theme-heart-solid", this.unFavouriteStyle = "theme-heart-outline") } assignGameModel() { this.data = this.gameDataManager.setGameLobbyModel(this.gameData, this.deviceService.isTouch), this.twoButtons = this.ClientSideConfig.playForFunAndRealButtons, this.useFavouriteGames = this.casinoManager.IsFeatureEnabledforLobbytype(this.casinoManager.getLobbyType(), this.features.favouriteGamesLobbyType), this.data ? (this.model = this.data, this.model = this.model && this.model[0] ? this.model[0] : this.model, this.model.disclaimer = this.global.messages.Disclaimer, this.model.isFavourite = this.favouritesService.checkForFavouriteGame(this.model)) : this.navigation.goTo(this.mcPage.prefix) } goToPlayGame(m) { } playButtonMode(m) { return "inhouse" === m.launchType ? 1 : 2 } toggleFavourite(m, S) { this.user.isAuthenticated && (S.stopImmediatePropagation(), this.favouritesService.toggleGameFavourite(m)) } isFavouriteGame(m) { return this.favouritesService.checkForFavouriteGame(m) } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(c.KDu), o.Y36(et.Ic), o.Y36(et.sx), o.Y36(k.cM), o.Y36(c.U8N), o.Y36(et.iH), o.Y36(M.gz), o.Y36(c.f5Y), o.Y36(et.M0), o.Y36(k.io), o.Y36(k.M3)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-game-detail"]], decls: 19, vars: 15, consts: [[1, "casino-lobby-container-main"], ["id", "gameDetailPage"], [3, "title", "showInNative"], [1, "game-detail", "casino-lobby-games", 3, "hidden"], [1, "casino-game-detail-header"], [1, "game", "casino-game-detail-header1"], ["href", "javascript:void(0)", 1, "game-image-link"], [1, "game-icon", 3, "src", "alt", "width", "height"], ["class", "game-badge", 3, "ngClass", 4, "ngIf"], [1, "casino-game-detail-header2"], [3, "game", "cssClass", "place", "launchType", 4, "ngIf"], [3, "href", 4, "ngIf"], ["class", "game-detail-info", 3, "innerHTML", 4, "ngIf"], ["class", "game-detail-disclaimer", 4, "ngIf"], ["class", "game-preview", 4, "ngIf"], ["class", "btn", 3, "click", 4, "ngIf"], [1, "game-badge", 3, "ngClass"], [3, "click"], [3, "game", "cssClass", "place", "launchType"], [3, "href"], [1, "game-detail-info", 3, "innerHTML"], [1, "game-detail-disclaimer"], [1, "game-preview"], [3, "key"], [1, "btn", 3, "click"]], template: function (m, S) { 1 & m && (o.TgZ(0, "div", 0)(1, "span", 1), o._UZ(2, "cs-header-box", 2)(3, "vn-message-panel"), o.TgZ(4, "div", 3)(5, "div", 4)(6, "div", 5)(7, "a", 6), o._UZ(8, "img", 7), o.qZA(), o.YNc(9, Ei, 2, 1, "div", 8), o.qZA(), o.TgZ(10, "div", 9)(11, "h1"), o._uU(12), o.qZA()()(), o.YNc(13, Ti, 1, 4, "cs-game-detail-buttons", 10), o.YNc(14, qt, 2, 2, "a", 11), o.YNc(15, Pi, 2, 3, "div", 12), o.YNc(16, I, 3, 1, "div", 13), o.YNc(17, Y, 3, 1, "div", 14), o.YNc(18, v, 2, 1, "button", 15), o.qZA()()()), 2 & m && (o.xp6(2), o.Q6J("title", "DetailPageHeader")("showInNative", !0), o.xp6(2), o.Q6J("hidden", !S.model), o.xp6(4), o.Q6J("src", S.model.icon.src, o.LSH)("alt", S.model.icon.alt)("width", S.model.icon.width)("height", S.model.icon.height), o.xp6(1), o.Q6J("ngIf", S.useFavouriteGames), o.xp6(3), o.Oqu(S.gameData.name), o.xp6(1), o.Q6J("ngIf", S.model), o.xp6(1), o.Q6J("ngIf", S.model && S.model.responsibleGamingLink), o.xp6(1), o.Q6J("ngIf", S.model && S.model.info && "" !== S.model.info), o.xp6(1), o.Q6J("ngIf", S.model && S.model.disclaimer && "" !== S.model.disclaimer), o.xp6(1), o.Q6J("ngIf", S.model && S.model.screenshots && S.model.screenshots.length > 0), o.xp6(1), o.Q6J("ngIf", !S.twoButtons)) }, directives: [Mi, ft.Y, c.MIT, N.O5, N.mk, bi, bt.y], pipes: [gt.WL], encapsulation: 2 }), u })(); i(37505), i(4143); let H = (() => { class u { constructor(m) { this.gameDataManager = m } resolve(m) { } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(k.cM)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(), j = (() => { class u { static forRoot() { return { ngModule: u, providers: [H, k.cM] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i, M.Bz, Dt.o]] }), u })(); var he = i(80155), ue = i(50635); let se = (() => { class u { constructor(m, S, B, oe) { this.featuresClientConfig = m, this.labelHostHomePageClientConfig = S, this.dslService = B, this.navigation = oe } canActivate() { return this.featuresClientConfig.isVanillaHomePageEnabled && this.labelHostHomePageClientConfig.isEnabled && this.dslService.evaluateExpression(this.labelHostHomePageClientConfig.isEnabledCondition).pipe((0, he.P)(), (0, ue.U)(m => !!m || this.navigation.goTo("/games"))), !0 } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(P.iH), o.LFG(P.PH), o.LFG(c.XXf), o.LFG(c.f5Y)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac, providedIn: "root" }), u })(); var Ge = i(71670); let we = (() => { class u { constructor(m, S) { this.clientConfigService = m, this.productService = S } canActivate(m) { var S = this; return (0, Ge.Z)(function* () { if (!m.data || !m.data.product) throw new Error("ClientConfigGuard requires 'product' property to be specified on routes 'data'."); const B = m.data.product; return yield S.clientConfigService.load(S.productService.getMetadata(B).apiBaseUrl), !0 })() } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(c.Hkl), o.LFG(c.M52)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac, providedIn: "root" }), u })(), Fe = (() => { class u { constructor(m) { this.productActivatorService = m } onAppInit() { var m = this; return (0, Ge.Z)(function* () { yield m.productActivatorService.activate("host") })() } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(c.YWu)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(); var ye = i(10851), Re = i(15311); function Ce(u, A) { 1 & u && o._UZ(0, "div", 7) } function dt(u, A) { if (1 & u && o._UZ(0, "img", 8), 2 & u) { const m = o.oxw(); o.Q6J("src", m.loadingConfig.gameShowLogoUrl, o.LSH) } } function Ne(u, A) { 1 & u && o._UZ(0, "div", 9) } function ze(u, A) { if (1 & u && (o.TgZ(0, "div", 10), o._UZ(1, "cc-game-show-hub-lottie-loading", 11), o.qZA()), 2 & u) { const m = o.oxw(); o.xp6(1), o.Q6J("path", m.loadingConfig.lottieUrl) } } function ut(u, A) { if (1 & u && o._UZ(0, "img", 12), 2 & u) { const m = o.oxw(); o.Q6J("src", m.loadingConfig.ferrisSpinningWheelUrl, o.LSH) } } function ht(u, A) { if (1 & u && o._UZ(0, "div", 13), 2 & u) { const m = o.oxw(); o.Udp("color", m.loadingConfig.loadingTextColor || ""), o.Q6J("textContent", m.loadingConfig.loadingText) } } let at = (() => { class u { constructor(m) { this.configProviderService = m; const S = this.configProviderService.provideGameShowHubConfig(); this.loadingConfig = S && S.loadingConfig ? S.loadingConfig : { spinnerType: "standard", logo: "brand" } } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(k.iX)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-game-show-hub-skeleton"]], decls: 7, vars: 8, consts: [[1, "casino-gshub-skeleton-loading-container"], ["class", "brand-logo", 4, "ngIf"], ["class", "gameshow-hub-logo", "alt", "Gameshow Hub", 3, "src", 4, "ngIf"], ["class", "standard-loading-indicator", 4, "ngIf"], ["class", "lottie-loading-indicator", 4, "ngIf"], ["class", "ferris-loading-indicator", "alt", "Gameshow Hub", 3, "src", 4, "ngIf"], ["class", "loading-text", 3, "color", "textContent", 4, "ngIf"], [1, "brand-logo"], ["alt", "Gameshow Hub", 1, "gameshow-hub-logo", 3, "src"], [1, "standard-loading-indicator"], [1, "lottie-loading-indicator"], [3, "path"], ["alt", "Gameshow Hub", 1, "ferris-loading-indicator", 3, "src"], [1, "loading-text", 3, "textContent"]], template: function (m, S) { 1 & m && (o.TgZ(0, "div", 0), o.YNc(1, Ce, 1, 0, "div", 1), o.YNc(2, dt, 1, 1, "img", 2), o.YNc(3, Ne, 1, 0, "div", 3), o.YNc(4, ze, 2, 1, "div", 4), o.YNc(5, ut, 1, 1, "img", 5), o.YNc(6, ht, 1, 3, "div", 6), o.qZA()), 2 & m && (o.Udp("background-color", S.loadingConfig.backgroundColor || ""), o.xp6(1), o.Q6J("ngIf", "brand" === S.loadingConfig.spinnerType), o.xp6(1), o.Q6J("ngIf", S.loadingConfig.gameShowLogoUrl && "gameshows" === S.loadingConfig.logo), o.xp6(1), o.Q6J("ngIf", "standard" === S.loadingConfig.spinnerType), o.xp6(1), o.Q6J("ngIf", "lottie" === S.loadingConfig.spinnerType && S.loadingConfig.lottieUrl), o.xp6(1), o.Q6J("ngIf", "ferris" === S.loadingConfig.spinnerType && S.loadingConfig.ferrisSpinningWheelUrl), o.xp6(1), o.Q6J("ngIf", S.loadingConfig.loadingText)) }, directives: [N.O5, Re.su], encapsulation: 2 }), u })(), st = (() => { class u { } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-skeleton"]], decls: 42, vars: 0, consts: [[1, "bg-home-skeleton", "sk-casino-container"], [1, "sk-banner"], [1, "sk-title-wrapper"], [1, "sk-title"], [1, "sk-games"], [1, "sk-game-card"], [1, "sk-title-wrapper", "sk-title-right"]], template: function (m, S) { 1 & m && (o.TgZ(0, "div", 0), o._UZ(1, "div", 1), o.TgZ(2, "div", 2), o._UZ(3, "div", 3), o.qZA(), o.TgZ(4, "div", 4), o._UZ(5, "div", 5)(6, "div", 5)(7, "div", 5)(8, "div", 5)(9, "div", 5)(10, "div", 5)(11, "div", 5)(12, "div", 5)(13, "div", 5)(14, "div", 5), o.qZA(), o.TgZ(15, "div", 6), o._UZ(16, "div", 3), o.qZA(), o.TgZ(17, "div", 4), o._UZ(18, "div", 5)(19, "div", 5)(20, "div", 5)(21, "div", 5)(22, "div", 5)(23, "div", 5)(24, "div", 5)(25, "div", 5)(26, "div", 5)(27, "div", 5), o.qZA(), o.TgZ(28, "div", 2), o._UZ(29, "div", 3)(30, "div", 3), o.qZA(), o.TgZ(31, "div", 4), o._UZ(32, "div", 5)(33, "div", 5)(34, "div", 5)(35, "div", 5)(36, "div", 5)(37, "div", 5)(38, "div", 5)(39, "div", 5)(40, "div", 5)(41, "div", 5), o.qZA()()) }, encapsulation: 2 }), u })(); function Ii(u, A) { if (1 & u && (o._UZ(0, "div", 1), o.ALo(1, "lowercase")), 2 & u) { const m = o.oxw(); o.Udp("background-image", "url(" + m.lobbyBackgroundImg + ")"), o.Q6J("ngClass", o.lcZ(1, 3, m.fullTakeoverBgToggleType)) } } let Di = (() => { class u { constructor(m, S, B, oe) { this.configProviderService = m, this.teaserService = S, this.casinoLobbyService = B, this.casinoManager = oe, this.lobbyBackgroundImg = "", this.fullTakeoverBgToggleType = "" } ngOnInit() { let m = this.configProviderService.provideFeaturesConfig(); this.isEnableLobbyBgImage = m.enableLobbyBackgroundImage, this.isEnableTransparentLobbyBackground = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, m.enableTransparentLobbyBackground), this.fullTakeoverBgToggleType = this.configProviderService.provideGlobalConfig().lobbyConfigurations.fullTakeoverBgToggleType, m.enableLobbyBackgroundImage && (this.indexChangedObservable = this.teaserService.indexChangedDataObservable.subscribe(S => { !this.isTouch && null != S && S.lobbyBackgroundImage ? (this.showImage = !0, this.teaserData = S, this.lobbyBackgroundImg = this.teaserData.lobbyBackgroundImage.src ? this.teaserData.lobbyBackgroundImage.src : "") : this.showImage = !1 })) } ngOnChanges() { this.displayLobbyStaticImage() } displayLobbyStaticImage() { var m; if (this.teaserService.indexChangeTeaserData(null), this.currentLobbyType && (!this.routeCategoryType || "" === this.routeCategoryType) && this.setCategoryRoute(), this.routeCategoryType) { this.currentCategoryInfo = this.casinoLobbyService.getCategoryInfo(this.currentLobbyType, this.routeCategoryType); let S = this.configProviderService.provideFeaturesConfig(); if (this.isEnableLobbyStaticImage = S.enableLobbyStaticImage, this.isTouch = this.casinoManager.isTouch(), !S.enableLobbyBackgroundImage) { let B = null === (m = this.currentCategoryInfo.categoryInfo) || void 0 === m ? void 0 : m.sitecoreData; this.isTouch && S.enableLobbyStaticImageForMobile && null != B && (null == B ? void 0 : B.fullTakeOverStaticBackgroundImage) ? (this.lobbyBackgroundImg = B.fullTakeOverStaticBackgroundImage.src ? B.fullTakeOverStaticBackgroundImage.src : "", this.showImage = !0) : !this.isTouch && this.isEnableLobbyStaticImage && null != B && (null == B ? void 0 : B.fullTakeOverStaticBackgroundImage) ? (this.lobbyBackgroundImg = "", this.lobbyBackgroundImg = B.fullTakeOverStaticBackgroundImage.src ? B.fullTakeOverStaticBackgroundImage.src : "", this.showImage = !0) : this.showImage = !1 } } } setCategoryRoute() { let m = this.casinoLobbyService.getLobbyInfo(this.currentLobbyType); m && m.categoriesMap && m.categoriesMap.size > 0 ? (this.routeCategoryType = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.currentLobbyType).categoryInfo.categoryid, this.casinoLobbyService.categoryNotFoundSubject.next(null)) : this.casinoLobbyService.categoryNotFoundSubject.next("CategoryNotFound") } ngOnDestroy() { this.indexChangedObservable && this.indexChangedObservable.unsubscribe() } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(k.iX), o.Y36(k.BQ), o.Y36(k.nA), o.Y36(k.M3)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-full-takeover-background"]], inputs: { routeCategoryType: "routeCategoryType", routeCurrentProduct: "routeCurrentProduct", currentLobbyType: "currentLobbyType" }, features: [o.TTD], decls: 1, vars: 1, consts: [["class", "lobby-bg", 3, "ngClass", "background-image", 4, "ngIf"], [1, "lobby-bg", 3, "ngClass"]], template: function (m, S) { 1 & m && o.YNc(0, Ii, 2, 5, "div", 0), 2 & m && o.Q6J("ngIf", S.showImage) }, directives: [N.O5, N.mk], pipes: [N.i8], encapsulation: 2 }), u })(); var Lt = i(15747); let Vt = (() => { class u { constructor(m, S, B, oe, me) { this.lobbyService = m, this.lmtDataClientConfig = S, this.casinoWidgetService = B, this.invokerProductService = oe, this.casinoManager = me } ngOnInit() { this.categoryChangeObs = this.lobbyService.categoryChangeObservable.subscribe(m => { m && (this.isDefaultComposition = m.isRootOrDefault, this.lobbyType = this.casinoManager.getLobbyTypeForProduct(m.routeCurrentProduct), this.categoryRoute = m.routeCategoryType) }) } ngOnDestroy() { this.categoryChangeObs && this.categoryChangeObs.unsubscribe() } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(ge.VH), o.Y36(P.yz), o.Y36(ge.hY), o.Y36(k.uZ), o.Y36(k.M3)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-widget-composition"]], decls: 1, vars: 3, consts: [[3, "lobbyType", "data", "isDefaultComposition", "categoryRoute"]], template: function (m, S) { 1 & m && o._UZ(0, "cs-widgets", 0), 2 & m && o.Q6J("lobbyType", S.lobbyType)("isDefaultComposition", S.isDefaultComposition)("categoryRoute", S.categoryRoute) }, directives: [Lt.X], encapsulation: 2 }), u })(); function Xt(u, A) { 1 & u && o._UZ(0, "cs-widget-composition") } let Ot = (() => { class u { constructor(m) { this.casinoLobbyService = m } ngOnInit() { this.lobbyLoadedObs = this.casinoLobbyService.lobbyLoadedObservable.subscribe(m => { m && (this.isLobbyLoaded = !0) }) } ngOnDestroy() { this.lobbyLoadedObs && this.lobbyLoadedObs.unsubscribe() } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(k.nA)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-widget-container"]], decls: 1, vars: 1, consts: [[4, "ngIf"]], template: function (m, S) { 1 & m && o.YNc(0, Xt, 1, 0, "cs-widget-composition", 0), 2 & m && o.Q6J("ngIf", S.isLobbyLoaded) }, directives: [N.O5, Vt], encapsulation: 2 }), u })(); function At(u, A) { 1 & u && o._UZ(0, "cs-game-show-hub-skeleton") } function tt(u, A) { 1 & u && o._UZ(0, "cs-skeleton") } function Gt(u, A) { if (1 & u && (o.TgZ(0, "div"), o.YNc(1, tt, 1, 0, "cs-skeleton", 0), o.qZA()), 2 & u) { const m = o.oxw(); o.xp6(1), o.Q6J("ngIf", m.skeletonLoadingEnabled) } } function je(u, A) { if (1 & u && o._UZ(0, "cs-full-takeover-background", 6), 2 & u) { const m = o.oxw(2); o.Q6J("routeCurrentProduct", m.routeCurrentProduct)("routeCategoryType", m.routeCategoryType)("currentLobbyType", m.currentLobbyType) } } function qe(u, A) { 1 & u && o._UZ(0, "cs-widget-container") } function kt(u, A) { 1 & u && o._UZ(0, "vn-page-matrix", 7) } const xt = function (u, A) { return { "casino-gototop-hinc": u, "hide-top-arrow-for-gshub": A } }; function Rt(u, A) { if (1 & u) { const m = o.EpF(); o.TgZ(0, "span", 8), o.NdJ("click", function () { o.CHM(m); const B = o.oxw(2); return B.toggleGoToTop(), B.scrollToTop() }), o.qZA() } if (2 & u) { const m = o.oxw(2); o.Q6J("ngClass", o.WLB(1, xt, m.isRpFavWidgetVisible, m.currentLobbyType === m.gsHubConfig.lobbyType)) } } const wt = function (u, A, m) { return { "lobby-bg-clr": u, "lobby-bg-transparentclr": A, "height-cls-skeleton": m } }; function Do(u, A) { if (1 & u && (o.TgZ(0, "div", 2), o.YNc(1, je, 1, 3, "cs-full-takeover-background", 3), o.YNc(2, qe, 1, 0, "cs-widget-container", 0), o.YNc(3, kt, 1, 0, "vn-page-matrix", 4), o.YNc(4, Rt, 1, 4, "span", 5), o.qZA()), 2 & u) { const m = o.oxw(); o.Q6J("ngClass", o.kEZ(5, wt, m.isLobbyBgclr, m.isLobbyTransparentBg, m.gsHubSkeletonLoadingEnabled && !m.gsHubLobbyLoaded)), o.xp6(1), o.Q6J("ngIf", m.gsHubLobbyLoaded), o.xp6(1), o.Q6J("ngIf", !m.pageNotFound), o.xp6(1), o.Q6J("ngIf", m.pageNotFound), o.xp6(1), o.Q6J("ngIf", m.lastScrollTop && m.gsHubLobbyLoaded) } } let So = (() => { class u { constructor(m, S, B, oe, me, pe, ke, We) { this.casinoLobbyService = m, this.nativeAppService = S, this.performanceMarker = B, this.casinoManager = oe, this.gameShowHubService = me, this.recentGamesService = pe, this.configProviderService = ke, this.user = We, this.lobbyTypeMaps = new Map, this.pageNotFound = !1, this.initialScrollTop = 0, this.lastScrollTop = 0, this.unsubscribe = new St.x } ngOnInit() { this.performanceMarker.mark(ve._.FirstMeaningfulPaint), this.categoryNotFoundSubscription = this.casinoLobbyService.categoryNotFoundObservable.subscribe(m => { m && (this.pageNotFound = !0, this.lobbyLoaded = !0) }), this.recentlyPlayedObservable = this.recentGamesService.isRpfavWidgetDisplayedObservable.subscribe(m => { this.isRpFavWidgetVisible = m }), this.initialScrollTop = document.documentElement.scrollTop, this.lmtConfig.enablePostloginPartialCalls && this.user.events.pipe((0, V.h)(m => m instanceof c.U0n)).subscribe(() => { this.casinoLobbyService.setPartialCasinoLobby(this.currentLobbyType) }) } ngOnChanges() { this.lmtConfig = this.configProviderService.provideLmtConfig(), this.gsHubConfig = this.configProviderService.provideGameShowHubConfig(), this.unSubscribeLobbyLoadSubscription(), this.skeletonLoadingEnabled = !0, this.currentLobbyType = this.casinoManager.getLobbyTypeForProduct(this.routeCurrentProduct), this.casinoManager.setCurrentLobby(this.currentLobbyType), this.currentLobbyType ? (this.currentLobbyType === this.gsHubConfig.lobbyType ? (this.gsHubSkeletonLoadingEnabled = !0, this.gameShowHubService.loadingObservable.pipe((0, vt.R)(this.unsubscribe)).subscribe(m => { this.gsHubLobbyLoaded = !m }, () => { this.gsHubLobbyLoaded = !0 })) : (this.skeletonLoadingEnabled = !0, this.gsHubLobbyLoaded = !0), this.casinoLobbyService.setPartialCasinoLobby(this.currentLobbyType), this.lobbyLoadSubscription = this.casinoLobbyService.lobbyLoadedObservable.subscribe(m => { m && m.lobbyTypeMaps && m.lobbyTypeMaps.size > 0 && m.lobbyTypeMaps.get(this.currentLobbyType) && m.lobbyTypeMaps.get(this.currentLobbyType).categoriesMap && m.lobbyTypeMaps.get(this.currentLobbyType).categoriesMap.size > 0 ? (this.lobbyLoaded = !0, this.pageNotFound = !1) : this.lobbyLoaded = !1 }), this.assignFeatures()) : (this.lobbyLoaded = !0, this.pageNotFound = !0) } onWindowScroll(m) { let S = m.target; if (S.scrollingElement) { let B = S.scrollingElement.scrollTop; window.pageYOffset && B && B > 100 && this.lastScrollTop > B ? this.isTopArrowVisible = !0 : (this.isTopArrowVisible && window.pageYOffset || B || document.body.scrollTop < 10) && (this.isTopArrowVisible = !1), this.lastScrollTop = B } this.isRpFavWidgetVisible ? this.lastScrollTop ? dispatchEvent(new CustomEvent("gs:classifyFloatingEntry", { detail: "casino-gototop-rpfav-enabled" })) : dispatchEvent(new CustomEvent("gs:deClassifyFloatingEntry", { detail: "casino-gototop-rpfav-enabled" })) : this.lastScrollTop ? dispatchEvent(new CustomEvent("gs:classifyFloatingEntry", { detail: "casino-gototop-enabled" })) : dispatchEvent(new CustomEvent("gs:deClassifyFloatingEntry", { detail: "casino-gototop-enabled" })) } scrollToTop() { Math.max(window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop) > 0 && ((this.nativeAppService.isNativeApp || this.nativeAppService.isNativeWrapper) && window.scrollTo(0, this.initialScrollTop), this.isRpFavWidgetVisible ? dispatchEvent(new CustomEvent("gs:classifyFloatingEntry", { detail: "casino-gototop-rpfav-enabled" })) : dispatchEvent(new CustomEvent("gs:deClassifyFloatingEntry", { detail: "casino-gototop-enabled" }))) } toggleGoToTop() { return window.scroll(0, 0), !1 } assignFeatures() { let m = this.configProviderService.provideFeaturesConfig(); this.isTouch = this.casinoManager.isTouch(); let S = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, m.enableTransparentLobbyBackground); this.isLobbyTransparentBg = (m.enableLobbyStaticImage || m.enableLobbyStaticImageForMobile || m.enableLobbyBackgroundImage && !this.isTouch) && S, this.isLobbyBgclr = m.enableLobbyStaticImage || m.enableLobbyStaticImageForMobile || m.enableLobbyBackgroundImage && !this.isTouch } unSubscribeLobbyLoadSubscription() { this.lobbyLoadSubscription && this.lobbyLoadSubscription.unsubscribe() } unSubscribeCategoryNotFoundSubscription() { this.categoryNotFoundSubscription && this.categoryNotFoundSubscription.unsubscribe() } ngOnDestroy() { this.unSubscribeLobbyLoadSubscription(), this.unSubscribeCategoryNotFoundSubscription(), this.recentlyPlayedObservable && this.recentlyPlayedObservable.unsubscribe(), this.unsubscribe.next(this), this.unsubscribe.complete() } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(k.nA), o.Y36(c.rBu), o.Y36(ve.k), o.Y36(k.M3), o.Y36(k.GA), o.Y36(k.vD), o.Y36(k.iX), o.Y36(c.KDu)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-lobby-conatiner"]], hostBindings: function (m, S) { 1 & m && o.NdJ("scroll", function (oe) { return S.onWindowScroll(oe) }, !1, o.Jf7) }, inputs: { routeCurrentProduct: "routeCurrentProduct", routeCategoryType: "routeCategoryType" }, features: [o.TTD], decls: 3, vars: 3, consts: [[4, "ngIf"], [3, "ngClass", 4, "ngIf"], [3, "ngClass"], [3, "routeCurrentProduct", "routeCategoryType", "currentLobbyType", 4, "ngIf"], ["path", "App-v1.0/partials/notfound", 4, "ngIf"], ["class", "casino-go-to-top theme-arrow-right", 3, "ngClass", "click", 4, "ngIf"], [3, "routeCurrentProduct", "routeCategoryType", "currentLobbyType"], ["path", "App-v1.0/partials/notfound"], [1, "casino-go-to-top", "theme-arrow-right", 3, "ngClass", "click"]], template: function (m, S) { 1 & m && (o.YNc(0, At, 1, 0, "cs-game-show-hub-skeleton", 0), o.YNc(1, Gt, 2, 1, "div", 0), o.YNc(2, Do, 5, 9, "div", 1)), 2 & m && (o.Q6J("ngIf", S.gsHubSkeletonLoadingEnabled && !S.gsHubLobbyLoaded), o.xp6(1), o.Q6J("ngIf", !S.lobbyLoaded), o.xp6(1), o.Q6J("ngIf", S.lobbyLoaded)) }, directives: [N.O5, at, st, N.mk, Di, Ot, He.PageMatrixComponent], encapsulation: 2 }), u })(); function Lo(u, A) { 1 & u && (o.TgZ(0, "div"), o._UZ(1, "lh-home-page"), o.qZA()) } function Oo(u, A) { if (1 & u && o._UZ(0, "cs-lobby-conatiner", 5), 2 & u) { const m = o.oxw(2); o.Q6J("routeCurrentProduct", m.routeCurrentProduct)("routeCategoryType", m.routeCategoryType) } } function Ao(u, A) { if (1 & u && (o.TgZ(0, "div", 3), o.YNc(1, Oo, 1, 2, "cs-lobby-conatiner", 4), o.qZA()), 2 & u) { const m = o.oxw(); o.xp6(1), o.Q6J("ngIf", m.routeInfoPublished) } } let Ke = (() => { class u { constructor(m, S, B, oe, me, pe, ke, We) { this.lobbyService = m, this.route = S, this.dsl = B, this.labelHostHomePageClientConfig = oe, this.features = me, this.lmtDataClientConfig = pe, this.casinoLobbyService = ke, this.messageQueue = We, this.isFirstTimeLoggedIn = !1 } ngOnInit() { this.routeSubscription = this.route.params.subscribe(m => { if (this.messageQueue.clear(), this.routeCurrentProduct = m.product, !(this.routeCurrentProduct && "" !== this.routeCurrentProduct || m.categoryType && "" !== m.categoryType)) { let S = this.lmtDataClientConfig.defaultProductHomeUrl; this.routeCurrentProduct = S && "" != S ? S : "games" } this.routeCategoryType = m.categoryType, this.casinoLobbyService.categoryNotFoundSubject.next(null), this.lobbyService.publishCategoryChange(this.routeCurrentProduct.toLowerCase(), this.routeCategoryType), this.routeInfoPublished = !0 }), this.dsl.evaluateExpression(this.labelHostHomePageClientConfig.isEnabledCondition).subscribe(m => { this.isFirstTimeLoggedIn = m && this.features.isVanillaHomePageEnabled && this.labelHostHomePageClientConfig.isEnabled, this.isFirstTimeLoggedIn && !this.casinoLobbyService.isDisjointFeedsInitiated() && this.casinoLobbyService.setCasinoLobby(!0) }) } ngOnDestroy() { this.routeSubscription && this.routeSubscription.unsubscribe() } } return u.\u0275fac = function (m) { return new (m || u)(o.Y36(ge.VH), o.Y36(M.gz), o.Y36(c.XXf), o.Y36(et.PH), o.Y36(et.iH), o.Y36(et.yz), o.Y36(k.nA), o.Y36(c.wrx)) }, u.\u0275cmp = o.Xpm({ type: u, selectors: [["cs-homemod-lobby"]], decls: 3, vars: 2, consts: [[4, "ngIf"], ["id", "casino-viewport", 2, "position", "fixed", "width", "100vw", "height", "100vh", "top", "-100vh", "left", "-100vw"], ["class", "casino-lobby-container casino-lobby-container-main", 4, "ngIf"], [1, "casino-lobby-container", "casino-lobby-container-main"], [3, "routeCurrentProduct", "routeCategoryType", 4, "ngIf"], [3, "routeCurrentProduct", "routeCategoryType"]], template: function (m, S) { 1 & m && (o.YNc(0, Lo, 2, 0, "div", 0), o._UZ(1, "div", 1), o.YNc(2, Ao, 2, 1, "div", 2)), 2 & m && (o.Q6J("ngIf", S.isFirstTimeLoggedIn), o.xp6(2), o.Q6J("ngIf", !S.isFirstTimeLoggedIn)) }, directives: [N.O5, ye.h, So], encapsulation: 2 }), u })(); const Go = [{ path: "logout", loadChildren: () => i.e("node_modules_frontend_vanilla_fesm2015_frontend-vanilla-features-logout-page_mjs").then(i.bind(i, 28198)).then(u => u.LogoutPageModule) }, { path: "nativeapp", loadChildren: () => i.e("node_modules_frontend_vanilla_fesm2015_frontend-vanilla-features-native-app_mjs").then(i.bind(i, 1464)).then(u => u.NativeAppModule) }, { path: "inbox", loadChildren: () => i.e("vn-inbox").then(i.bind(i, 47463)).then(u => u.VanillaInboxModule) }, { path: "labelhost", loadChildren: () => i.e("vn-login").then(i.bind(i, 8421)).then(u => u.LoginModule) }, { path: "menu", loadChildren: () => i.e("vn-account-menu").then(i.bind(i, 41978)).then(u => u.AccountMenuRoutingModule) }, { path: "product-menu", loadChildren: () => i.e("vn-product-menu").then(i.bind(i, 17500)).then(u => u.ProductMenuModule) }, { path: "profile", loadChildren: () => i.e("vn-navigation-layout").then(i.bind(i, 25677)).then(u => u.ProfilePageRoutingModule) }, { path: "preferences", loadChildren: () => i.e("vn-navigation-layout").then(i.bind(i, 25677)).then(u => u.NavigationLayoutDarkModeModule) }, { path: "settings", loadChildren: () => i.e("vn-navigation-layout").then(i.bind(i, 25677)).then(u => u.NavigationLayoutModule) }, { path: "account", loadChildren: () => i.e("vn-navigation-layout").then(i.bind(i, 25677)).then(u => u.BalanceBreakdownModule) }, { path: "remember-me-logout", loadChildren: () => i.e("vn-remember-me-logout-prompt").then(i.bind(i, 25043)).then(u => u.RememberMeLogoutPromptRoutingModule) }, { path: "gaming-declaration", loadChildren: () => i.e("vn-player-gaming-declaration").then(i.bind(i, 36303)).then(u => u.Module) }, { path: "cashier", loadChildren: () => i.e("vn-cashier").then(i.bind(i, 72726)).then(u => u.CashierRoutingModule) }, { path: "labelhost/cashier/:page", redirectTo: "cashier/:page" }, { path: "labelhost/cashier", redirectTo: "cashier" }, { path: "labelhost/navigation/:itemName", redirectTo: "settings/navigation/:itemName" }]; var Xi = i(34929), ko = i(53158); function xo(u, A) { 1 & u && o._UZ(0, "cc-rp-fav-widget-wrapper") } let Je = class { constructor(A, m, S, B, oe, me) { this.activatedRoute = A, this.contentService = m, this.loadingIndicatorService = S, this.pageViewDataService = B, this.gameConfig = oe, this.casinoLobbyService = me, this.unsubscribe = new St.x } ngOnInit() { this.casinoLobbyService.isDisjointFeedsInitiated() || this.casinoLobbyService.setCasinoLobby(!0), this.enableRCPFavWidgetOnPublicPages = this.gameConfig.enableRCPFavWidgetOnPublicPages, this.activatedRoute.url.pipe((0, vt.R)(this.unsubscribe)).subscribe(A => { let m = this.loadingIndicatorService.start(), S = !1; this.contentService.getJson(this.activatedRoute.snapshot.data.publicPageRoot + A.join("/"), { filterOnClient: !0 }).pipe((0, ko.K)(() => (S = !0, this.contentService.getJson("App-v1.0/partials/notfound", { filterOnClient: !0 })))).subscribe(B => { this.content = B, m.done(), this.pageViewDataService.setDataForNavigation(this.activatedRoute.snapshot, S ? { "page.name": "Errorpage - Not Found" } : {}) }) }) } ngOnDestroy() { this.unsubscribe.next(), this.unsubscribe.complete() } }; Je.\u0275fac = function (A) { return new (A || Je)(o.Y36(M.gz), o.Y36(c._sF), o.Y36(c.vt5), o.Y36(c.Xts), o.Y36(P.Nh), o.Y36(k.nA)) }, Je.\u0275cmp = o.Xpm({ type: Je, selectors: [["cs-public-pages-wrapper"]], decls: 5, vars: 6, consts: [[3, "content"], [1, "casino-lobby-container-main"], [4, "ngIf"]], template: function (A, m) { 1 & A && (o._UZ(0, "vn-page-matrix", 0), o.ALo(1, "async"), o.ALo(2, "dsl"), o.TgZ(3, "div", 1), o.YNc(4, xo, 1, 0, "cc-rp-fav-widget-wrapper", 2), o.qZA()), 2 & A && (o.Q6J("content", o.lcZ(1, 2, o.lcZ(2, 4, m.content))), o.xp6(4), o.Q6J("ngIf", m.enableRCPFavWidgetOnPublicPages)) }, directives: [He.PageMatrixComponent, N.O5, de.Z5], pipes: [N.Ov, gt.Ut], encapsulation: 2 }), Je = (0, Xi.gn)([(0, c.ZOt)(), (0, Xi.w6)("design:paramtypes", [M.gz, c._sF, c.vt5, c.Xts, P.Nh, k.nA])], Je); let Ro = (() => { class u { static forRoot() { return { ngModule: u } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[c.b9i, N.ez, He.ContentModule, de.ud, gt.I8]] }), u })(), mt = (() => { class u { constructor(m) { this.pageMatrixService = m } canActivate() { return this.pageMatrixService.whenReady.pipe((0, ue.U)(() => !0)) } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(c.crY)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac, providedIn: "root" }), u })(); const wo = [{ path: "handhistory", loadChildren: () => i.e("node_modules_pokercore_module_fesm2015_pokercore-module-hand-history_mjs").then(i.bind(i, 12250)).then(u => u.HandHistoryRoutingModule) }, { path: "mymissions", loadChildren: () => i.e("node_modules_pokercore_module_fesm2015_pokercore-module-pk-missions_mjs").then(i.bind(i, 51369)).then(u => u.PokerMissionsRoutingModule) }, { path: "mytickets", loadChildren: () => i.e("node_modules_pokercore_module_fesm2015_pokercore-module-pk-mytickets_mjs").then(i.bind(i, 2147)).then(u => u.PokerMyTicketsRoutingModule) }, { path: "download", loadChildren: () => i.e("node_modules_pokercore_module_fesm2015_pokercore-module-poker-download_mjs").then(i.bind(i, 35918)).then(u => u.PokerDownloadRoutingModule), data: { publicPageRoot: "MobilePoker-v1.0/download/" } }, { path: "how-to-play", loadChildren: () => i.e("node_modules_pokercore_module_fesm2015_pokercore-module-poker-public-page_mjs").then(i.bind(i, 14114)).then(u => u.PokerHowToPlayPublicPageLoaderRoutingModule) }, { path: "", loadChildren: () => i.e("node_modules_pokercore_module_fesm2015_pokercore-module-homepage_mjs").then(i.bind(i, 62456)).then(u => u.HomePageRoutingModule) }, { path: "promotions/leaderboard", loadChildren: () => i.e("node_modules_pokercore_module_fesm2015_pokercore-module-leaderboard_mjs").then(i.bind(i, 50009)).then(u => u.LeaderBoardRoutingModule) }, { path: "tournaments", loadChildren: () => i.e("node_modules_pokercore_module_fesm2015_pokercore-module-poker-promotions_mjs").then(i.bind(i, 78053)).then(u => u.TournamentsRoutingModule) }, { path: "promotions", loadChildren: () => i.e("node_modules_pokercore_module_fesm2015_pokercore-module-poker-promotions_mjs").then(i.bind(i, 78053)).then(u => u.PokerPromotionsRoutingModule) }, { path: "p", loadChildren: () => i.e("node_modules_pokercore_module_fesm2015_pokercore-module-poker-public-page_mjs").then(i.bind(i, 14114)).then(u => u.PokerPublicPageLoaderRoutingModule) }], Uo = [{ path: "", component: Ke, canActivate: [se], data: Object.assign(Object.assign({}, (0, c.v_t)({ allowAnonymous: !0 })), { product: "host", segment: "main" }) }, { path: "game-info/:gameId", component: Ke, canActivate: [se], data: (0, c.v_t)({ allowAnonymous: !0 }) }, { path: "{culture}", data: Object.assign(Object.assign({}, (0, c.v_t)({ allowAnonymous: !0 })), { product: "host", segment: "main" }), children: [...Go, { path: "poker", children: [...wo], canActivate: [we], data: { product: "poker" } }, { path: "games/gamelogs", children: [{ path: "", loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_game-logs-ctrl_game-logs-ctrl_module_ts").then(i.bind(i, 76016)).then(u => u.GameLogsCtrlModule) }] }, { path: "games/p/**", component: Je, canActivate: [mt], data: { publicPageRoot: "MobileCasino-v1.0/PublicPages/" } }, { path: "casinowidget", children: [{ path: "rp-gyml", loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_iframe-rp-gyml_iframe-rp-gyml-routing_module_ts").then(i.bind(i, 46568)).then(u => u.IFrameRpGymlRoutingModule) }, { path: "rpfavwidget", loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_iframe-rp-fav-widget_iframe-rp-fav-routing_module_ts").then(i.bind(i, 97665)).then(u => u.IFrameRpFavRoutingModule) }, { path: "subcategory-footer", loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_iframe-subcategory-footer_iframe-subcategory-footer--76fb80").then(i.bind(i, 14794)).then(u => u.IframeSubCategoryAsFooterRoutingModule) }] }, { path: "blog", children: [{ path: "**", loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_blog_blog_module_ts").then(i.bind(i, 31442)).then(u => u.BlogModule) }] }, { path: "p", children: [{ path: "**", component: Je, canActivate: [mt], data: { waitForPageViewData: !0, publicPageRoot: "MobilePortal-v1.0/PublicPages/" } }] }, { path: "foxy-den", children: [{ path: "", component: Je, canActivate: [mt], data: { waitForPageViewData: !0, publicPageRoot: "MobileCasino-v1.0/foxy-den/root" } }, { path: "**", component: Je, canActivate: [mt], data: { waitForPageViewData: !0, publicPageRoot: "MobileCasino-v1.0/foxy-den/" } }] }, { path: "foxy-space", children: [{ path: "", component: Je, canActivate: [mt], data: { waitForPageViewData: !0, publicPageRoot: "MobileCasino-v1.0/foxy-space/root" } }, { path: "**", component: Je, canActivate: [mt], data: { waitForPageViewData: !0, publicPageRoot: "MobileCasino-v1.0/foxy-space/" } }] }, { path: "game-info/:gameId", component: Ke }, { path: ":product/p", children: [{ path: "**", component: Je, canActivate: [mt], data: { publicPageRoot: "MobileCasino-v1.0/PublicPages/" } }] }, { path: "", component: Ke, data: (0, c.v_t)({ allowAnonymous: !0 }) }, { path: "casino", redirectTo: "games" }, { path: "comppoints", children: [{ path: "", loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_comp-points_comp-points_module_ts").then(i.bind(i, 64705)).then(u => u.CompPointsModule) }] }, { path: "account/freespins", redirectTo: "casino/myfreespins" }, { path: "account/freespins/history", redirectTo: "casino/myfreespins/history" }, { path: "account/freespins", redirectTo: "casino/myfreespins" }, { path: "account/freespins/history", redirectTo: "casino/myfreespins/history" }, { path: ":product/launchng/:gameId", component: Ht, resolve: { initData: Qt }, data: (0, c.v_t)({ authorized: !0 }) }, { path: "g/:globaljackpotpath", loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_mod-casino_global-jackpot_global-jackpot_module_ts").then(i.bind(i, 24497)).then(u => u.GlobalJackpotModule) }, { path: ":product/launchEmbedded/:gameId", component: Ke }, { path: ":product/c/:categoryType", component: Ke, data: (0, c.v_t)({ allowAnonymous: !0 }) }, { path: ":product/casinowidget/:categoryType", component: Ke, data: (0, c.v_t)({ allowAnonymous: !0 }) }, { path: ":product/game-info/:gameId", component: Ke }, { path: ":product/c/:categoryType/game-info/:gameId", component: Ke }, { path: ":product/myfreespins", children: [{ path: "", loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_sections_freespins_my-freespins_my-freespins_module_ts").then(i.bind(i, 16132)).then(u => u.MyFreespinsModule) }] }, { path: ":product/gamedetail/:gameId", component: C, resolve: { initData: Yt }, data: (0, c.v_t)({ allowAnonymous: !0 }) }, { path: ":product/discover", loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_explore-page_explore-page-routing_module_ts").then(i.bind(i, 75079)).then(u => u.ExplorePageRoutingModule) }, { path: ":product", component: Ke, data: (0, c.v_t)({ allowAnonymous: !0 }) }, { path: "account/freespins", redirectTo: "casino/myfreespins" }, { path: "account/freespins/history", redirectTo: "casino/myfreespins/history" }, { path: "casino", children: [{ path: "", component: Ke, data: (0, c.v_t)({ allowAnonymous: !0 }) }, { path: "teasers", component: de.KK, data: (0, c.v_t)({ allowAnonymous: !0 }) }, { path: "gamelogs", children: [{ path: "", loadChildren: () => i.e("Bwin_MobileCasino_Host_Client_casino_src_game-logs-ctrl_game-logs-ctrl_module_ts").then(i.bind(i, 76016)).then(u => u.GameLogsCtrlModule) }] }, { path: "unavailablegame", component: ni, resolve: { initData: Kt }, data: (0, c.v_t)({ allowAnonymous: !0 }) }, { path: "category/:categoryType", component: Ke, data: (0, c.v_t)({ allowAnonymous: !0 }) }, { path: "gamedetail/:gameId", component: C, data: (0, c.v_t)({ allowAnonymous: !0 }) }, { path: "launchng/:gameId", component: Ht, data: (0, c.v_t)({ authorized: !0 }) }, { path: "launchEmbedded/:gameId", component: Ke, data: (0, c.v_t)({ authorized: !0 }) }, { path: "unfinishedgame/:gameId", component: Oe, resolve: { initData: Te } }, { path: "p", loadChildren: () => i.e("node_modules_frontend_vanilla_fesm2015_frontend-vanilla-features-public-page_mjs").then(i.bind(i, 26234)).then(u => u.PublicPageModule), data: { publicPageRoot: "MobileCasino-v1.0/PublicPages/" } }, { path: "slots", loadChildren: () => i.e("node_modules_frontend_vanilla_fesm2015_frontend-vanilla-features-public-page_mjs").then(i.bind(i, 26234)).then(u => u.PublicPageModule), data: { publicPageRoot: "MobileCasino-v1.0/PublicPages/slots" } }] }] }, { path: "**", loadChildren: () => i.e("node_modules_frontend_vanilla_fesm2015_frontend-vanilla-features-not-found_mjs").then(i.bind(i, 58266)).then(u => u.NotFoundModule) }]; let $i = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i]] }), u })(), eo = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, Re.T4]] }), u })(); var it = i(59815), Si = i(58439), Be = i(97217); const Fo = function (u) { return { "tab-btn-item-active": u } }; function Bo(u, A) { if (1 & u) { const m = o.EpF(); o.TgZ(0, "button", 24), o.NdJ("click", function () { o.CHM(m); const B = o.oxw().$implicit; return o.oxw().getPromo(B) }), o._uU(1), o.qZA() } if (2 & u) { const m = o.oxw().$implicit, S = o.oxw(); o.Q6J("ngClass", o.VKq(2, Fo, S.selectedPromo == m)), o.xp6(1), o.hij(" ", m.buttonTitle, " ") } } function Wo(u, A) { if (1 & u && (o.ynx(0), o.YNc(1, Bo, 2, 4, "button", 23), o.BQk()), 2 & u) { const m = A.$implicit; o.xp6(1), o.Q6J("ngIf", null !== m.promoId) } } function No(u, A) { 1 & u && (o.TgZ(0, "th", 25), o._uU(1, " Rank "), o.qZA()) } function to(u, A) { if (1 & u && (o.TgZ(0, "td", 26), o._uU(1), o.qZA()), 2 & u) { const m = A.$implicit; o.xp6(1), o.hij(" ", null == m ? null : m.rank, " ") } } function Ko(u, A) { 1 & u && (o.TgZ(0, "th", 27), o._uU(1, " Points "), o.qZA()) } function io(u, A) { if (1 & u && (o.TgZ(0, "td", 28), o._uU(1), o.qZA()), 2 & u) { const m = A.$implicit; o.xp6(1), o.hij(" ", null == m ? null : m.points, " ") } } function Jo(u, A) { 1 & u && (o.TgZ(0, "th", 27), o._uU(1, " Screen Name "), o.qZA()) } function Yo(u, A) { if (1 & u && (o.TgZ(0, "td", 28), o._uU(1), o.qZA()), 2 & u) { const m = A.$implicit; o.xp6(1), o.hij(" ", (null == m || null == m.screenName ? null : m.screenName.charAt(0).toUpperCase()) + (null == m || null == m.screenName ? null : m.screenName.substr(1).toLowerCase()), " ") } } function Ct(u, A) { 1 & u && (o.TgZ(0, "th", 27), o._uU(1, " Prizes "), o.qZA()) } function Zo(u, A) { if (1 & u && (o.TgZ(0, "td", 26), o._uU(1), o.qZA()), 2 & u) { const m = A.$implicit; o.xp6(1), o.hij(" ", null == m ? null : m.prizes["en-US"], " ") } } function Ho(u, A) { 1 & u && o._UZ(0, "tr", 29) } function Qo(u, A) { 1 & u && o._UZ(0, "tr", 30) } function zo(u, A) { if (1 & u && (o.TgZ(0, "div", 31)(1, "div", 32)(2, "div", 33)(3, "h3")(4, "span"), o._uU(5, "Data not available for "), o.qZA(), o.TgZ(6, "strong"), o._uU(7), o.qZA()()()()()), 2 & u) { const m = o.oxw(); o.xp6(7), o.Oqu(m.selectedPromo.buttonTitle) } } const jo = function (u) { return { "d-none-visible": u } }, qo = function () { return [25, 50, 100] }; let Vo = (() => { class u extends He.PCComponent { constructor() { super(...arguments), this.filterValue = "", this.checkPromoData = !0, this.displayedColumns = ["rank", "points", "screenName", "prizes"], this.dataSource = new Be.by } get class() { return this.createClass("leaderboard") } ngOnInit() { this.leaderboardFeed = this.item, this.contentParameters = this.leaderboardFeed.parameters, this.buttonParameters = this.leaderboardFeed.contentParameters, this.getPromo(this.buttonParameters[0]), this.getDateFormat() } getPromo(m) { this.selectedPromo = m, this.filterValue = "", this.promoData = this.leaderboardFeed.leaderboardFeedData[m.promoId], void 0 === this.promoData ? (this.checkPromoData = !1, this.dataSource = new Be.by, this.paginator.pageIndex = 0, this.dataSource.paginator = this.paginator) : (this.checkPromoData = !0, this.dataSource = new Be.by(this.promoData.details), this.paginator.pageIndex = 0, this.dataSource.paginator = this.paginator) } applyFilter(m) { m = (m = m.trim()).toLowerCase(), this.dataSource.filter = m } refreshPromoData() { window.location.reload() } getDateFormat() { this.getDate = new Date, this.currentDate = this.getDate.toUTCString().slice(0) } } return u.\u0275fac = function () { let A; return function (S) { return (A || (A = o.n5z(u)))(S || u) } }(), u.\u0275cmp = o.Xpm({ type: u, selectors: [["poker-leaderboard-feed"]], viewQuery: function (m, S) { if (1 & m && o.Gf(Si.NW, 5), 2 & m) { let B; o.iGM(B = o.CRH()) && (S.paginator = B.first) } }, hostVars: 2, hostBindings: function (m, S) { 2 & m && o.Tol(S.class) }, features: [o.qOj], decls: 29, vars: 12, consts: [["id", "leaderboard", 1, "leaderboard-container"], [1, "mb-2"], [4, "ngFor", "ngForOf"], [1, "btn-sm", "btn", "d-inline", "mr-1", "float-right", "refresh-bth", "mt-2", 3, "click"], [1, "theme-refresh", "text-capitalize"], [3, "ngClass"], [1, "mb-3"], ["placeholder", "Search", 1, "form-filter-control", 3, "ngModel", "keyup", "ngModelChange"], [1, "mb-1", "float-right", "mt-4", "pr-1"], [1, "mat-table-theme"], ["mat-table", "", 1, "table", "table-bordered", "table-striped", "text-center", "mb-4", 3, "dataSource"], ["matColumnDef", "rank"], ["mat-header-cell", "", "mat-sort-header", "", "class", "text-center", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "points"], ["mat-header-cell", "", "class", "text-center", 4, "matHeaderCellDef"], ["mat-cell", "", "class", "text-left", 4, "matCellDef"], ["matColumnDef", "screenName"], ["matColumnDef", "prizes"], ["mat-header-row", "", "class", "thead-dark", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["showFirstLastButtons", "", 3, "pageSizeOptions"], ["class", "message-panel mt-4 mb-3", 4, "ngIf"], ["class", "btn-sm btn tab-btn-item d-inline mr-1 mb-1", 3, "ngClass", "click", 4, "ngIf"], [1, "btn-sm", "btn", "tab-btn-item", "d-inline", "mr-1", "mb-1", 3, "ngClass", "click"], ["mat-header-cell", "", "mat-sort-header", "", 1, "text-center"], ["mat-cell", ""], ["mat-header-cell", "", 1, "text-center"], ["mat-cell", "", 1, "text-left"], ["mat-header-row", "", 1, "thead-dark"], ["mat-row", ""], [1, "message-panel", "mt-4", "mb-3"], [1, "theme-info-i", "warning"], [1, "cms-container"]], template: function (m, S) { 1 & m && (o.TgZ(0, "div", 0)(1, "div", 1), o.YNc(2, Wo, 2, 1, "ng-container", 2), o.TgZ(3, "button", 3), o.NdJ("click", function () { return S.refreshPromoData() }), o.TgZ(4, "span", 4), o._uU(5, "Refresh"), o.qZA()()(), o.TgZ(6, "div", 5)(7, "div", 6)(8, "input", 7), o.NdJ("keyup", function (oe) { return S.applyFilter(oe.target.value) })("ngModelChange", function (oe) { return S.filterValue = oe }), o.qZA(), o.TgZ(9, "p", 8), o._uU(10), o.qZA()(), o.TgZ(11, "div", 9)(12, "table", 10), o.ynx(13, 11), o.YNc(14, No, 2, 0, "th", 12), o.YNc(15, to, 2, 1, "td", 13), o.BQk(), o.ynx(16, 14), o.YNc(17, Ko, 2, 0, "th", 15), o.YNc(18, io, 2, 1, "td", 16), o.BQk(), o.ynx(19, 17), o.YNc(20, Jo, 2, 0, "th", 15), o.YNc(21, Yo, 2, 1, "td", 16), o.BQk(), o.ynx(22, 18), o.YNc(23, Ct, 2, 0, "th", 15), o.YNc(24, Zo, 2, 1, "td", 13), o.BQk(), o.YNc(25, Ho, 1, 0, "tr", 19), o.YNc(26, Qo, 1, 0, "tr", 20), o.qZA(), o._UZ(27, "mat-paginator", 21), o.qZA()(), o.YNc(28, zo, 8, 1, "div", 22), o.qZA()), 2 & m && (o.xp6(2), o.Q6J("ngForOf", S.buttonParameters), o.xp6(4), o.Q6J("ngClass", o.VKq(9, jo, !S.checkPromoData)), o.xp6(2), o.Q6J("ngModel", S.filterValue), o.xp6(2), o.hij("Last updated time: ", S.currentDate, ""), o.xp6(2), o.Q6J("dataSource", S.dataSource), o.xp6(13), o.Q6J("matHeaderRowDef", S.displayedColumns), o.xp6(1), o.Q6J("matRowDefColumns", S.displayedColumns), o.xp6(1), o.Q6J("pageSizeOptions", o.DdM(11, qo)), o.xp6(1), o.Q6J("ngIf", !S.checkPromoData)) }, directives: [N.sg, N.O5, N.mk, Qe.Fj, Qe.JJ, Qe.On, Be.BZ, Be.w1, Be.fO, Be.ge, Be.Dz, Be.ev, Be.as, Be.XQ, Be.nj, Be.Gk, Si.NW], encapsulation: 2 }), u })(), Xo = (() => { class u { constructor(m) { this.pageMatrixService = m } onAppInit() { this.pageMatrixService.whenReady.subscribe(() => { this.pageMatrixService.registerComponent("leaderboardfeedtemplate", Vo) }) } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(c.crY)) }, u.\u0275prov = o.Yz7({ token: u, factory: u.\u0275fac }), u })(); var Li = i(24683), $o = i(44770); let en = (() => { class u { static forRoot() { return { ngModule: u, providers: [(0, c.Xdr)(Xo)] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[gt.I8, N.ez, Be.p0, Si.TU, $o.lN, Li.c, Qe.u5]] }), u })(), tn = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, Qe.u5, c.b9i, de.ud]] }), u })(), on = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, Qe.u5, c.b9i, de.ud]] }), u })(); var no = i(74096); let ao = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i, no.H]] }), u })(), so = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i, ao]] }), u })(); var nn = i(95735); let an = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i, k.IR]] }), u })(); var sn = i(90702); let rn = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, Qe.u5, c.b9i, de.ud]] }), u })(); var cn = i(90360); let ln = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, Qe.u5, c.b9i, de.ud]] }), u })(), _n = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i, He.ContentModule]] }), u })(), ro = (() => { class u { static forRoot() { return { ngModule: u, providers: [] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, c.b9i, He.ContentModule, so, $i, eo, _n]] }), u })(), gn = (() => { class u { static forRoot() { return { ngModule: u, providers: [se] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez, ro, ye.Jr]] }), u })(); var dn = i(55600), un = (i(15977), i(41704)); let hn = (() => { class u { static forRoot() { return { ngModule: u, providers: [un.u] } } } return u.\u0275fac = function (m) { return new (m || u) }, u.\u0275mod = o.oAB({ type: u }), u.\u0275inj = o.cJS({ imports: [[N.ez]] }), u })(); i(81987); let mn = (() => { class u { constructor(m) { this.appRef = m } hmrOnInit(m) { !m || (m.restoreInputValues && m.restoreInputValues(), this.appRef.tick(), delete m.restoreInputValues) } hmrOnDestroy(m) { const S = this.appRef.components.map(B => B.location.nativeElement); m.removeOldHosts = (0, T.Qi)(S), m.restoreInputValues = (0, T.LY)(), (0, T.Ey)() } hmrAfterDestroy(m) { m.removeOldHosts(), delete m.removeOldHosts } } return u.\u0275fac = function (m) { return new (m || u)(o.LFG(o.z2F)) }, u.\u0275mod = o.oAB({ type: u, bootstrap: [c.y$f] }), u.\u0275inj = o.cJS({ providers: [ge.X9, { provide: c.Xim, useValue: "casino." }, { provide: yt.so, useValue: {} }, { provide: yt.WI, useValue: {} }, ge.tI, ge.hY, ge.VH, (0, c.Xdr)(Fe), ge.o1], imports: [[r.vz, e.b2, yt.Is, Qe.u5, Qe.UX, y.PW, dn.mZ, M.Bz.forRoot(Uo), c.b9i.forRoot(), d.Bx.forRoot(), f.JA.forRoot(), P.IS.forRoot(), J.forRoot(), Q.forRoot(), ce.forRoot(), De.or.forRoot(), Zt.forRoot(), ai.forRoot(), Le.forRoot(), si.forRoot(), li.forRoot(), Jt.forRoot(), gi.Pt.forRoot(), ui.forRoot(), mi.forRoot(), fi.forRoot(), Pt.forRoot(), j.forRoot(), $i.forRoot(), eo.forRoot(), it.cm.forRoot(), en.forRoot(), de.ud.forRoot(), tn.forRoot(), on.forRoot(), so.forRoot(), nn.L.forRoot(), an.forRoot(), sn.M.forRoot(), rn.forRoot(), cn.K.forRoot(), ln.forRoot(), ao.forRoot(), no.H.forRoot(), ro.forRoot(), gn.forRoot(), e.t6, hn.forRoot(), Ro.forRoot()]] }), u })(); window.VERSIONS = { HOST: "1.0.0", "@angular/animations": "13.2.3", "@angular/cdk": "13.2.3", "@angular/cli": "13.2.4", "@angular/common": "13.2.3", "@angular/compiler": "13.2.3", "@angular/compiler-cli": "13.2.3", "@angular/core": "13.2.3", "@angular/flex-layout": "13.0.0-beta.38", "@angular/forms": "13.2.3", "@angular/localize": "13.2.3", "@angular/material": "13.2.3", "@angular/platform-browser": "13.2.3", "@angular/platform-browser-dynamic": "13.2.3", "@angular/pwa": "13.2.4", "@angular/router": "13.2.3", "@angular/service-worker": "13.2.3", "@frontend/vanilla": "12.12.1", "@frontend/vanilla-features": "12.12.1", "@rtms/client": "1.0.8", "@themes/base": "9.77.0", "@themes/betboo": "10.11.1", "@themes/black": "10.11.1", "@themes/black-dark": "10.11.1", "@themes/borgata-2": "10.11.1", "@themes/borgata-casino-2": "10.11.1", "@themes/casinoclub": "10.11.1", "@themes/cheeky-bingo": "9.76.0", "@themes/cheeky-bingo-2": "10.11.1", "@themes/coral": "10.11.1", "@themes/danske-spil": "10.11.1", "@themes/foxy-bingo-3": "10.11.1", "@themes/foxy-games": "10.11.1", "@themes/gala-bingo-3": "10.11.1", "@themes/gala-casino-2": "10.11.1", "@themes/gala-spins-3": "10.11.1", "@themes/gamebookers": "10.11.1", "@themes/giocodigitale": "10.11.1", "@themes/ladbrokes": "10.11.1", "@themes/ladbrokes-de": "10.11.1", "@themes/mgm-2": "10.11.1", "@themes/mgm-casino-2": "10.11.1", "@themes/ninja-casino": "10.11.1", "@themes/party-casino": "10.11.1", "@themes/party-poker": "10.11.1", "@themes/party-premium": "10.11.1", "@themes/premium": "10.11.1", "@themes/premium-dark": "10.11.1", "@themes/slotclub": "10.11.1", "@themes/sportingbet": "10.11.1", "@themes/vistabet": "10.11.1", "@themes/wheel-of-fortune": "10.11.1", "@themes/whitelabel": "10.11.1", "@vanilla/sitecore-template-generator": "11.1.0", "core-js": "3.20.3", "deviceatlas-clientside": "192.0.0", hammerjs: "2.0.8", "lodash-es": "4.17.21", "ngx-build-plus": "13.0.1", "ngx-captcha": "11.0.0", "ngx-lottie": "7.0.4", "ngx-popper-ng10": "6.1.2-beta", "ngx-sharebuttons": "9.0.0", "ngx-toastr": "14.2.1", "popper.js": "1.16.1", "proxy-polyfill": "0.3.2", rxjs: "7.5.4", "sockjs-client": "1.5.2", tslib: "2.3.1", typescript: "4.5.3", "vanilla-webpack": "5.0.21", "web-animations-js": "2.3.2", "zone.js": "0.11.4" }, (0, o.G48)(), (0, c.d4x)().then(() => e.q6().bootstrapModule(mn)).catch(u => console.error(u)) }, 95735: (s, h, i) => { "use strict"; i.d(h, { q: () => f, L: () => P }); var e = i(96157), o = i(94789), r = i(3184), c = i(38805), d = i(27475); let f = (() => { class G { constructor(R, J, W) { this.lobbyService = R, this.casinoLobbyService = J, this.performanceMarker = W } ngOnInit() { this.categoryChangeObs = this.lobbyService.categoryChangeObservable.subscribe(R => { R && (this.routeCurrentProduct = R.routeCurrentProduct, this.setRouteCategory(R.routeCategoryType)) }) } ngAfterViewInit() { this.performanceMarker.mark(o._.TimeToInteractivity) } ngOnDestroy() { this.categoryChangeObs && this.categoryChangeObs.unsubscribe() } setRouteCategory(R) { if (R && "" !== R) this.routeCategoryType = R; else { let J = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.lobbyType); J && J.categoryInfo && (this.routeCategoryType = J.categoryInfo.categoryid) } } } return G.\u0275fac = function (R) { return new (R || G)(r.Y36(e.VH), r.Y36(c.nA), r.Y36(o.k)) }, G.\u0275cmp = r.Xpm({ type: G, selectors: [["cs-casino-games-section"]], inputs: { lobbyType: "lobbyType" }, decls: 1, vars: 3, consts: [[3, "lobbyType", "categoryRoute", "gameContainer"]], template: function (R, J) { 1 & R && r._UZ(0, "cc-casino-grid-on-lobby-type", 0), 2 & R && r.Q6J("lobbyType", J.lobbyType)("categoryRoute", J.routeCategoryType)("gameContainer", "Page Container") }, directives: [d.TK], encapsulation: 2 }), G })(); var y = i(36362), M = i(90587), T = i(20639); let P = (() => { class G { static forRoot() { return { ngModule: G, providers: [] } } } return G.\u0275fac = function (R) { return new (R || G) }, G.\u0275mod = r.oAB({ type: G }), G.\u0275inj = r.cJS({ imports: [[y.ez, M.u5, T.b9i, d.ud]] }), G })() }, 2964: (s, h, i) => { "use strict"; i.d(h, { E: () => c }); var e = i(3184), o = i(15635), r = i(38805); let c = (() => { class d { constructor(y, M, T) { this.gamingStoriesLoaderService = y, this.viewContainerRef = M, this.urlUtility = T, this.gamingurl = "gamingstory/GetStories" } ngOnInit() { this.gamingStoriesModuleLoadedSubscription = this.gamingStoriesLoaderService.gamingStoriesModuleLoadedObservable.subscribe(y => { this.gamingStoriesModuleLoaded = y, y && this.createComponent() }) } createComponent() { const y = this.gamingStoriesLoaderService.getLazyComponentFactory(this.selectorName); this.viewContainerRef.clear(), console.log("gaming stories directive"); let M = this.viewContainerRef.createComponent(y, 0).instance; M.source = this.urlUtility.getApiurl(this.gamingurl), M.data = this.data, M.config = this.config } ngOnDestroy() { this.ngModuleRef && this.ngModuleRef.destroy(), this.gamingStoriesModuleLoadedSubscription && this.gamingStoriesModuleLoadedSubscription.unsubscribe() } } return d.\u0275fac = function (y) { return new (y || d)(e.Y36(o.x), e.Y36(e.s_b), e.Y36(r.Sl)) }, d.\u0275dir = e.lG2({ type: d, selectors: [["", "csGamingStoriesModuleLoad", ""]], inputs: { selectorName: ["csGamingStoriesModuleLoad", "selectorName"], data: "data", config: "config" } }), d })() }, 15635: (s, h, i) => { "use strict"; i.d(h, { x: () => r }); var e = i(3184), o = i(76317); let r = (() => { class c { constructor(f, y) { this.injector = f, this.compiler = y, this.gamingStoriesModuleLoadedSubject = new o.X(!1), this.gamingStoriesModuleLoadedObservable = this.gamingStoriesModuleLoadedSubject.asObservable() } loadGamingStoriesModule() { this.lazyloader() } getLazyComponentFactory(f) { return this.ngModuleRef.componentFactoryResolver.resolveComponentFactory(this.ngModuleFactory.moduleType.dynamicComponentsMap[f]) } isModuleLoaded() { return this.gamingStoriesModuleLoaded } lazyloader() { i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-gaming-stories_mjs").then(i.bind(i, 69194)).then(f => f.GamingStoriesModule).then(f => f instanceof e.YKP ? f : this.compiler.compileModuleAsync(f)).then(f => { this.ngModuleFactory = f, this.ngModuleRef = f.create(this.injector), this.onAppInitHandler = this.ngModuleRef.injector.get(f.moduleType.onAppInitHandler), this.onAppInitHandler.execute(), this.gamingStoriesModuleLoaded = !0, this.gamingStoriesModuleLoadedSubject.next(!0) }) } } return c.\u0275fac = function (f) { return new (f || c)(e.LFG(e.zs3), e.LFG(e.Sil)) }, c.\u0275prov = e.Yz7({ token: c, factory: c.\u0275fac, providedIn: "root" }), c })() }, 90702: (s, h, i) => { "use strict"; i.d(h, { j: () => d, M: () => T }); var e = i(96157), o = i(3184), r = i(38805), c = i(27475); let d = (() => { class P { constructor(x, R) { this.lobbyService = x, this.casinoLobbyService = R } ngOnInit() { this.categoryChangeObs = this.lobbyService.categoryChangeObservable.subscribe(x => { x && (this.routeCurrentProduct = x.routeCurrentProduct, this.setRouteCategory(x.routeCategoryType)) }) } ngOnDestroy() { this.categoryChangeObs && this.categoryChangeObs.unsubscribe() } setRouteCategory(x) { if (x && "" !== x) this.routeCategoryType = x; else { let R = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.lobbyType); R && R.categoryInfo && (this.routeCategoryType = R.categoryInfo.categoryid) } } } return P.\u0275fac = function (x) { return new (x || P)(o.Y36(e.VH), o.Y36(r.nA)) }, P.\u0275cmp = o.Xpm({ type: P, selectors: [["cs-nav-section"]], inputs: { lobbyType: "lobbyType" }, decls: 1, vars: 3, consts: [[3, "casinoProduct", "categoryRoute", "stickyInputQueryElement"]], template: function (x, R) { 1 & x && o._UZ(0, "cc-nav-on-product", 0), 2 & x && o.Q6J("casinoProduct", R.routeCurrentProduct)("categoryRoute", R.routeCategoryType)("stickyInputQueryElement", "cs-nav-section") }, directives: [c.eh], encapsulation: 2 }), P })(); var f = i(36362), y = i(90587), M = i(20639); let T = (() => { class P { static forRoot() { return { ngModule: P, providers: [] } } } return P.\u0275fac = function (x) { return new (x || P) }, P.\u0275mod = o.oAB({ type: P }), P.\u0275inj = o.cJS({ imports: [[f.ez, y.u5, M.b9i, c.ud]] }), P })() }, 90360: (s, h, i) => { "use strict"; i.d(h, { p: () => d, K: () => T }); var e = i(96157), o = i(3184), r = i(38805), c = i(27475); let d = (() => { class P { constructor(x, R) { this.lobbyService = x, this.casinoLobbyService = R } ngOnInit() { this.categoryChangeObs = this.lobbyService.categoryChangeObservable.subscribe(x => { x && (this.routeCurrentProduct = x.routeCurrentProduct, this.setRouteCategory(x.routeCategoryType)) }) } ngOnDestroy() { this.categoryChangeObs && this.categoryChangeObs.unsubscribe() } setRouteCategory(x) { if (x && "" !== x) this.routeCategoryType = x; else { let R = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.lobbyType); R && R.categoryInfo && (this.routeCategoryType = R.categoryInfo.categoryid) } } } return P.\u0275fac = function (x) { return new (x || P)(o.Y36(e.VH), o.Y36(r.nA)) }, P.\u0275cmp = o.Xpm({ type: P, selectors: [["cs-sub-nav-section"]], inputs: { lobbyType: "lobbyType" }, decls: 1, vars: 3, consts: [[3, "casinoProduct", "categoryRoute", "stickyInputQueryElement"]], template: function (x, R) { 1 & x && o._UZ(0, "cc-sub-nav-on-product", 0), 2 & x && o.Q6J("casinoProduct", R.routeCurrentProduct)("categoryRoute", R.routeCategoryType)("stickyInputQueryElement", "cs-sub-nav-section") }, directives: [c.D0], encapsulation: 2 }), P })(); var f = i(36362), y = i(90587), M = i(20639); let T = (() => { class P { static forRoot() { return { ngModule: P, providers: [] } } } return P.\u0275fac = function (x) { return new (x || P) }, P.\u0275mod = o.oAB({ type: P }), P.\u0275inj = o.cJS({ imports: [[f.ez, y.u5, M.b9i, c.ud]] }), P })() }, 15747: (s, h, i) => { "use strict"; i.d(h, { X: () => Pe }); var e = i(71670), o = i(3184), r = i(89546), c = i(95735), d = i(90702), f = i(90360), y = i(27475), M = i(94789), T = i(15635), P = i(2964); let G = (() => { class V { constructor(k, $) { this.gamingStoriesLoaderService = k, this.gamingStoriesClientConfig = $ } ngOnInit() { this.config = { gamingstoriesExpirationTimeInterval: this.gamingStoriesClientConfig.localStorageExpirationDuration, trackViewedStateForPostLogin: this.gamingStoriesClientConfig.trackViewedStateForPostLogin, trackViewedStateForPreLogin: this.gamingStoriesClientConfig.trackViewedStateForPreLogin, showStoryViewedTickMark: this.gamingStoriesClientConfig.showStoryViewedTickMark, enableOverlayMobileSearchTopPosition: this.gamingStoriesClientConfig.enableOverlayMobileSearchTopPosition }, this.gamingStoriesLoaderService.isModuleLoaded() || this.gamingStoriesLoaderService.loadGamingStoriesModule() } } return V.\u0275fac = function (k) { return new (k || V)(o.Y36(T.x), o.Y36(r.tK)) }, V.\u0275cmp = o.Xpm({ type: V, selectors: [["cs-instagram-section"]], inputs: { data: "data" }, decls: 1, vars: 3, consts: [[3, "csGamingStoriesModuleLoad", "data", "config"]], template: function (k, $) { 1 & k && o.GkF(0, 0), 2 & k && o.Q6J("csGamingStoriesModuleLoad", "InstagramSourceComponent")("data", $.data)("config", $.config) }, directives: [P.E], encapsulation: 2 }), V })(); var x = i(41704); const R = ["lazyTemplate"]; function J(V, ne) { } let W = (() => { class V { constructor(k) { this.lazyRouteService = k } ngOnInit() { this.lazyRouteService.loadAndRenderLazyComponents({ type: this.componentName }, this.lazyPlaceholdercontainer).then($ => { this.componentRef_ = this.lazyPlaceholdercontainer.createComponent($), this.componentRef_.instance.lobbyType = this.lobbyType, this.componentRef_.instance.data = this.data, this.outputEvents && this.outputEvents.forEach(ie => { this.componentRef_.instance[ie.eventName].subscribe(ve => { ie.callback(ve) }) }) }) } ngOnChanges() { this.componentRef_ && (this.componentRef_.instance.lobbyType = this.lobbyType, this.componentRef_.instance.data = this.data, this.componentRef_.instance.ngOnChanges()) } } return V.\u0275fac = function (k) { return new (k || V)(o.Y36(x.u)) }, V.\u0275cmp = o.Xpm({ type: V, selectors: [["lazy-placeholder"]], viewQuery: function (k, $) { if (1 & k && o.Gf(R, 7, o.s_b), 2 & k) { let ie; o.iGM(ie = o.CRH()) && ($.lazyPlaceholdercontainer = ie.first) } }, inputs: { componentName: "componentName", lobbyType: "lobbyType", data: "data", outputEvents: "outputEvents" }, features: [o.TTD], decls: 2, vars: 0, consts: [["lazyTemplate", ""]], template: function (k, $) { 1 & k && o.YNc(0, J, 0, 0, "ng-template", null, 0, o.W1O) }, encapsulation: 2 }), V })(), Q = (() => { class V { constructor() { } ngOnInit() { var k; this.product = null === (k = this.data) || void 0 === k ? void 0 : k.staticProduct } } return V.\u0275fac = function (k) { return new (k || V) }, V.\u0275cmp = o.Xpm({ type: V, selectors: [["cs-games-nav-section"]], inputs: { data: "data" }, decls: 1, vars: 3, consts: [[3, "casinoProduct", "categoryRoute", "stickyInputQueryElement"]], template: function (k, $) { 1 & k && o._UZ(0, "cc-nav-on-product", 0), 2 & k && o.Q6J("casinoProduct", $.product)("categoryRoute", "randomcsdsdasas")("stickyInputQueryElement", "cs-games-nav-section") }, directives: [y.eh], encapsulation: 2 }), V })(), Z = (() => { class V { constructor() { } ngOnInit() { var k; this.lobbyTypePathSegment = this.lobbyType + "#" + (null === (k = this.data) || void 0 === k ? void 0 : k.pathSegment) + "#" } } return V.\u0275fac = function (k) { return new (k || V) }, V.\u0275cmp = o.Xpm({ type: V, selectors: [["cs-games-sub-nav-section"]], inputs: { data: "data", lobbyType: "lobbyType" }, decls: 1, vars: 2, consts: [[3, "lobbyType", "stickyInputQueryElement"]], template: function (k, $) { 1 & k && o._UZ(0, "cc-sub-nav-on-lobby-type", 0), 2 & k && o.Q6J("lobbyType", $.lobbyTypePathSegment)("stickyInputQueryElement", "cs-games-sub-nav-section") }, directives: [y.yG], encapsulation: 2 }), V })(); var N = i(38805), ae = i(20639), re = i(36362); const ce = function (V) { return { color: V } }; function _e(V, ne) { if (1 & V && (o.TgZ(0, "ul", 6), o._UZ(1, "li", 8), o.qZA()), 2 & V) { const k = o.oxw(3); o.xp6(1), o.Q6J("ngStyle", o.VKq(2, ce, k.displayTitleColor))("ngClass", k.displayTitleIcon) } } const le = function (V, ne) { return { "font-size": V, color: ne } }; function be(V, ne) { if (1 & V && (o.ynx(0), o.YNc(1, _e, 2, 4, "ul", 5), o.TgZ(2, "ul", 6)(3, "li")(4, "h2", 7), o._uU(5), o.qZA()()(), o.BQk()), 2 & V) { const k = o.oxw(2); o.xp6(1), o.Q6J("ngIf", k.displayTitleIcon), o.xp6(3), o.Q6J("ngStyle", o.WLB(3, le, k.displayTitleFontSize, k.displayTitleColor)), o.xp6(1), o.Oqu(k.displayTitle) } } function xe(V, ne) { if (1 & V && (o.TgZ(0, "span", 9), o._uU(1), o.qZA()), 2 & V) { const k = o.oxw(2); o.Q6J("ngStyle", o.WLB(2, le, k.displayTitleFontSize, k.displayTitleColor)), o.xp6(1), o.Oqu(k.displayTitle) } } const De = function (V) { return { "casino-uk-header": V } }; function Oe(V, ne) { if (1 & V && (o.TgZ(0, "div", 1)(1, "h2", 2), o.YNc(2, be, 6, 6, "ng-container", 3), o.YNc(3, xe, 2, 5, "span", 4), o.qZA()()), 2 & V) { const k = o.oxw(); o.Q6J("ngClass", k.isUkHeading ? "wished" : ""), o.xp6(1), o.Q6J("ngClass", o.VKq(4, De, k.isUkHeading)), o.xp6(1), o.Q6J("ngIf", k.isUkHeading), o.xp6(1), o.Q6J("ngIf", !k.isUkHeading) } } let ge = (() => { class V { constructor(k, $, ie) { this.configProviderService = k, this.casinoManager = $, this.claimsService = ie } ngOnInit() { if (this.claimsService.get("ssotoken")) { let k = this.configProviderService.provideGlobalConfig(); if ((null == k ? void 0 : k.lobbyConfigurations.DisplayTitle) && (null == k ? void 0 : k.messages)) { let $ = this.configProviderService.provideFeaturesConfig(); this.isUkHeading = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, $.isUkHeading); let ie = (new Date).getHours(), ve = this.claimsService.get("givenname"), Me = k.lobbyConfigurations.DisplayTitle; this.displayTitleIcon = k.lobbyConfigurations.DisplayTitleIcon, this.displayTitleFontSize = k.messages.subCategoryTitleFontSize, this.displayTitleColor = k.messages.DisplayDynamicTitleColor, Me = Me.replace(/\[PlayerName\]/i, ve), Me = Me.replace(/\[DayTime\]/i, ie < 12 ? k.messages.Morning || "Morning" : ie < 18 ? k.messages.Afternoon || "Afternoon" : k.messages.Evening || "Evening"), this.displayTitle = Me } } } } return V.\u0275fac = function (k) { return new (k || V)(o.Y36(N.iX), o.Y36(N.M3), o.Y36(ae.UDe)) }, V.\u0275cmp = o.Xpm({ type: V, selectors: [["cs-dynamic-player-title"]], inputs: { lobbyType: "lobbyType" }, decls: 1, vars: 1, consts: [["class", "casino-game-tile-wrapper casino-lobby-width-gametile", 3, "ngClass", 4, "ngIf"], [1, "casino-game-tile-wrapper", "casino-lobby-width-gametile", 3, "ngClass"], [1, "game-tile-heading", "casino-lobby-header", 3, "ngClass"], [4, "ngIf"], ["class", "category-title", 3, "ngStyle", 4, "ngIf"], ["class", "ul-icon", 4, "ngIf"], [1, "ul-icon"], [1, "title-uk", 3, "ngStyle"], [1, "uk-icon", "right-align", 3, "ngStyle", "ngClass"], [1, "category-title", 3, "ngStyle"]], template: function (k, $) { 1 & k && o.YNc(0, Oe, 4, 6, "div", 0), 2 & k && o.Q6J("ngIf", $.displayTitle) }, directives: [re.O5, re.mk, re.PC], encapsulation: 2 }), V })(); var Se = i(12878); const Te = ["template"]; function Le(V, ne) { } let Pe = (() => { class V { constructor(k, $, ie, ve, Me, de, Ye) { this.componentCompositionsClientConfig = k, this.casinoManager = $, this.componentFactoryResolver = ie, this.casinoLobbyService = ve, this.performanceMarker = Me, this.widgetCompositionService = de, this.configProviderService = Ye, this.componentsView = { CasinoGamesSectionComponent: c.q, NavSectionComponent: d.j, GamesNavSectionComponent: Q, SubNavSectionComponent: f.p, GamesSubNavSectionComponent: Z, InstagramSectionComponent: G, CasinocoreErrorHandlerComponent: y.gs, ThumbnailSectionComponent: y.zK, QuickInfoDirectComponent: y.zA, MobileSearchComponent: y.ux, CozybingoQuickinfoDirectComponent: y.H_, DynamicPlayerTitleComponent: ge } } ngOnInit() { this.lobbyLoadedSubscription = this.casinoLobbyService.lobbyLoadedObservable.subscribe(k => { k && k.isPostLogin && this.generateComponents() }) } ngOnChanges() { this.assignConfigs(), this.loadComposition() } assignConfigs() { this.isMobileWidth = (window.innerWidth || document.documentElement.offsetWidth) < 768, this.componentConfigEnabled = this.componentCompositionsClientConfig.enabled, this.mobileDefaultCompositions = this.componentCompositionsClientConfig.mobileDefaultHomeComposition, this.mobileNonDefaultCompositions = this.componentCompositionsClientConfig.mobileNonDefaultHomeComposition, this.desktopDefaultCompositions = this.componentCompositionsClientConfig.desktopDefaultHomeComposition, this.desktopNonDefaultCompositions = this.componentCompositionsClientConfig.desktopNonDefaultHomeComposition } loadComposition() { this.prevLobbyType != this.lobbyType && (this.generateComponents(), this.prevLobbyType = this.lobbyType) } generateComponents() { this.container && this.container.clear(); let k = this.getComponentList(); console.log(k) } getComponentList() { let k; k = this.isMobileWidth ? this.isDefaultComposition ? this.mobileDefaultCompositions : this.mobileNonDefaultCompositions : this.isDefaultComposition ? this.desktopDefaultCompositions : this.desktopNonDefaultCompositions; const $ = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, k); if ($ && $.length > 0) for (let ie = 0; ie < $.length; ie++)$[ie] && $[ie].enabled && this.generateComponentWithLobbyType($[ie].component, $[ie].data); return this.widgetCompositionService.setWidgetComposition($), $ } generateComponentWithLobbyType(k, $) { var ie = this; return (0, e.Z)(function* () { switch (k) { case "SeoBoxSectionComponent": case "RPFavSectionComponent": case "RecentlyplayedGymlSectionComponent": case "ThumbnailHomeComponent": case "NewsFeedSectionV2Component": case "PlayBingoBtnComponent": case "NewsFeedSectionComponent": case "StaticDiscoverFeedWrapperComponent": case "GlobalJackpotTandCComponent": case "LiveGamesSectionComponent": case "GlobalJackpotContainerComponent": case "CozyBingoWidgetComponent": case "TeaserSectionComponent": case "CasinoGameSelectorSectionComponent": case "GameShowHubSectionComponent": ie.createLazyPlaceholder(k, $); break; default: if (ie.componentsView[k]) { const ve = ie.componentFactoryResolver.resolveComponentFactory(ie.componentsView[k]); ie.componentRef_ = ie.container.createComponent(ve), ie.componentRef_.instance.lobbyType = ie.lobbyType; let Me = ie.mergeInputData(ie.data, $); ie.componentRef_.instance.data = Me } } })() } createLazyPlaceholder(k, $) { const ie = this.componentFactoryResolver.resolveComponentFactory(W); this.componentRef_ = this.container.createComponent(ie), this.componentRef_.instance.componentName = k, this.componentRef_.instance.lobbyType = this.lobbyType; let ve = this.mergeInputData(this.data, $); this.componentRef_.instance.data = ve } onResize(k) { let $ = (window.innerWidth || document.documentElement.offsetWidth) < 768; $ != this.isMobileWidth && (this.isMobileWidth = $, this.generateComponents()) } mergeInputData(k, $) { let ie = $ || new Object; for (let ve in k) ie[ve] = k[ve]; return ie } ngAfterViewInit() { let k = this.configProviderService.provideCasinoConfig(); k.enableInitialScrollTop && setTimeout(() => { window.scrollTo(0, 0) }, k.initialScrollTopTimeOut), this.performanceMarker.mark(M._.WidgetsViewInitialized) } ngOnDestroy() { this.lobbyLoadedSubscription.unsubscribe() } } return V.\u0275fac = function (k) { return new (k || V)(o.Y36(r.Pz), o.Y36(N.M3), o.Y36(o._Vd), o.Y36(N.nA), o.Y36(M.k), o.Y36(Se.o), o.Y36(N.iX)) }, V.\u0275cmp = o.Xpm({ type: V, selectors: [["cs-widgets"]], viewQuery: function (k, $) { if (1 & k && o.Gf(Te, 7, o.s_b), 2 & k) { let ie; o.iGM(ie = o.CRH()) && ($.container = ie.first) } }, hostBindings: function (k, $) { 1 & k && o.NdJ("resize", function (ve) { return $.onResize(ve) }, !1, o.Jf7) }, inputs: { lobbyType: "lobbyType", data: "data", isDefaultComposition: "isDefaultComposition", categoryRoute: "categoryRoute" }, features: [o.TTD], decls: 2, vars: 0, consts: [["template", ""]], template: function (k, $) { 1 & k && o.YNc(0, Le, 0, 0, "ng-template", null, 0, o.W1O) }, encapsulation: 2 }), V })() }, 74096: (s, h, i) => { "use strict"; i.d(h, { H: () => P }); var e = i(36362), o = i(20639), r = i(90587), c = i(27475), d = i(15635), f = i(2964), y = i(3184); let M = (() => { class G { static forRoot() { return { ngModule: G, providers: [d.x, f.E] } } } return G.\u0275fac = function (R) { return new (R || G) }, G.\u0275mod = y.oAB({ type: G }), G.\u0275inj = y.cJS({ imports: [[e.ez, r.u5, o.b9i, c.ud]] }), G })(), T = (() => { class G { } return G.\u0275fac = function (R) { return new (R || G) }, G.\u0275mod = y.oAB({ type: G }), G.\u0275inj = y.cJS({ imports: [[o.b9i]] }), G })(), P = (() => { class G { static forRoot() { return { ngModule: G, providers: [] } } } return G.\u0275fac = function (R) { return new (R || G) }, G.\u0275mod = y.oAB({ type: G }), G.\u0275inj = y.cJS({ imports: [[e.ez, o.b9i, M, T]] }), G })() }, 85749: (s, h, i) => { "use strict"; i.d(h, { o: () => T }); var e = i(16941), o = i(36362), r = i(20639), c = i(37505), d = i(39839), f = i(55600), y = i(34314), M = i(3184); let T = (() => { class P { static forRoot() { return { ngModule: P, providers: [c.r] } } } return P.\u0275fac = function (x) { return new (x || P) }, P.\u0275mod = M.oAB({ type: P }), P.\u0275inj = M.cJS({ imports: [[o.ez, r.b9i, e.vz, f.mZ, d.jz, y.I8]] }), P })() }, 21860: (s, h, i) => { "use strict"; i.d(h, { y: () => r }); var e = i(89546), o = i(3184); let r = (() => { class c { constructor(f) { this.global = f } ngOnInit() { this.global.messages[this.key] && (this.value = this.global.messages[this.key]) } } return c.\u0275fac = function (f) { return new (f || c)(o.Y36(e.Ic)) }, c.\u0275cmp = o.Xpm({ type: c, selectors: [["cs-global-translate"]], inputs: { key: "key" }, decls: 1, vars: 1, template: function (f, y) { 1 & f && o._uU(0), 2 & f && o.Oqu(y.value) }, encapsulation: 2 }), c })() }, 18246: (s, h, i) => { "use strict"; i.d(h, { or: () => f.o }), i(21860), i(89546); var f = i(85749) }, 37505: (s, h, i) => { "use strict"; i.d(h, { r: () => d }); var e = i(76317), o = i(96157), r = i(3184), c = i(20639); let d = (() => { class f { constructor(M, T, P) { this.api = M, this.tracking = T, this.logger = P, this.isGameLaunchVisible = new e.X(!1), this.gameVisibilityStatus = this.isGameLaunchVisible.asObservable(), this.FreeSpinsUpdate = new e.X(!1), this.playedfreeSpinsOnTile = this.FreeSpinsUpdate.asObservable() } getMyFreeSpinsInitValues() { return this.api.get("mycasino/getMyFreeSpinsInitdata") } getFreeSpinsHistoryInitValues() { return this.api.get("mycasino/getFreeSpinsHistoryInitData") } getAllFreeSpins() { return this.api.get("freespins/GetAll") } activateFreeSpin(M) { return this.api.post("freespins/Activate?bonusId=" + M) } setGameLaunchVisibility(M) { this.isGameLaunchVisible.next(M) } updatedFreeSpins(M) { this.FreeSpinsUpdate.next(M) } handleRejection(M) { if (M) { this.logger.debug("http code: " + M.status + "; message: " + M.message); var T = ""; M && M.errorCode && (T = M.errorCode), this.tracking.updateDataLayer({ "page.name": "MyFreeSpins" }), this.tracking.reportError({ message: "Technical error", code: T }), this.tracking.updateDataLayer({ pageName: "MyFreeSpins", v68: "Technical error " + T }), this.logger.debug("error", M) } } } return f.\u0275fac = function (M) { return new (M || f)(r.LFG(o.pf), r.LFG(c.e2C), r.LFG(c.YdH)) }, f.\u0275prov = r.Yz7({ token: f, factory: f.\u0275fac, providedIn: "root" }), f })() }, 4143: (s, h, i) => { "use strict"; i.d(h, { Pt: () => o.Pt }), i(1387); var o = i(22037) }, 1387: (s, h, i) => { "use strict"; i.d(h, { N: () => x }); var e = i(96157), o = i(3184), r = i(20639), c = i(36362), d = i(3816); const f = function (R) { return { "background-image": R } }; function y(R, J) { if (1 & R && o._UZ(0, "span", 8), 2 & R) { const W = o.oxw(2); o.Q6J("ngStyle", o.VKq(1, f, "url(" + W.smartbanner.icon + ")")) } } function M(R, J) { 1 & R && o._UZ(0, "span", 9) } function T(R, J) { if (1 & R) { const W = o.EpF(); o.TgZ(0, "div", 1)(1, "div", 2)(2, "a", 3), o.NdJ("click", function () { return o.CHM(W), o.oxw().close() }), o._uU(3, "\xd7"), o.qZA(), o.YNc(4, y, 1, 3, "span", 4), o.YNc(5, M, 1, 0, "span", 5), o.TgZ(6, "div", 6)(7, "strong"), o._uU(8), o.qZA(), o.TgZ(9, "span"), o._uU(10), o.qZA(), o.TgZ(11, "span"), o._uU(12), o.qZA()(), o.TgZ(13, "a", 7), o.NdJ("click", function () { return o.CHM(W), o.oxw().installSmartBanner() }), o.TgZ(14, "span"), o._uU(15), o.qZA()()()() } if (2 & R) { const W = o.oxw(); o.xp6(4), o.Q6J("ngIf", null != W.smartbanner.icon), o.xp6(1), o.Q6J("ngIf", null == W.smartbanner.icon), o.xp6(3), o.Oqu(W.smartbanner.title), o.xp6(2), o.Oqu(W.smartbanner.author), o.xp6(2), o.Oqu(W.smartbanner.inStore), o.xp6(1), o.s9C("href", W.smartbanner.url, o.LSH), o.xp6(2), o.Oqu(W.smartbanner.button) } } let P = (() => { class R { constructor(W, Q, Z, N) { this.navigation = W, this.smartBannerService = Q, this.el = Z, this.deviceService = N, this.smartbanner = {} } ngOnInit() { this.smartBannerConfig = this.source, this.smartBannerEnabled = this.isSmartBannerEnabled(), this.smartBannerEnabled && (this.smartbanner.title = this.smartBannerConfig.versionedList.title, this.smartbanner.author = this.smartBannerConfig.versionedList.author, this.smartbanner.inStore = this.smartBannerConfig.versionedList.downloadText, this.smartbanner.icon = this.smartBannerConfig.sharedList.icon, this.smartbanner.button = this.smartBannerConfig.versionedList.button, this.smartbanner.url = this.smartBannerConfig.sharedList.url, this.smartbanner.daysHidden = this.smartBannerConfig.sharedList.daysHidden, this.smartbanner.daysReminder = this.smartBannerConfig.sharedList.daysReminder, this.smartbanner.id = this.smartBannerConfig.id), this.smartbanner.close = close; let W = this.smartbanneropen(); this.smartBannerService.smartBannerStatusChange(W) } ngAfterViewInit() { this.smartBannerService.smartBannerStatusObservable.subscribe(W => { W && this.deviceService.isiOS && this.deviceService.isMobile && this.el.nativeElement.children[0].id && (document.getElementsByTagName("html")[0].classList.add("smartBannerEnable"), this.setNavBarSticky()) }) } isSmartBannerEnabled() { return !(null === this.smartBannerConfig || "false" === this.smartBannerConfig.sharedList.enabled) } smartbanneropen() { return this.sbName = this.smartBannerService.getSbClosedCookieValue(this.smartbanner.id), this.sbInstalledName = this.smartBannerService.getSbInstalledCookieValue(this.smartbanner.id), this.isSmartBannerEnabled() && !this.sbName && !this.sbInstalledName && this.allowedRoute() } close() { document.getElementsByTagName("html")[0].classList.remove("smartBannerEnable"), this.smartBannerService.closeSmartBanner(this.smartbanner.id, this.smartbanner.daysReminder); let W = this.smartbanneropen(); this.smartBannerService.smartBannerStatusChange(W), this.smartBannerEnabled = !1, this.setNavBarSticky() } installSmartBanner() { if (!0 === this.isSmartBannerEnabled()) { document.getElementsByTagName("html")[0].classList.remove("smartBannerEnable"), this.smartBannerService.installSmartBanner(this.smartbanner.id, this.smartbanner.daysReminder); let W = this.smartbanneropen(); this.smartBannerService.smartBannerStatusChange(W), this.smartBannerEnabled = !1, this.setNavBarSticky() } } setNavBarSticky() { let W = 0; document.getElementsByTagName("header").length > 0 && (W = document.getElementsByTagName("header")[0].clientHeight - 3), document.getElementsByTagName("cs-smart-banner-list").length > 0 && (W = W + document.getElementsByTagName("cs-smart-banner-list")[0].clientHeight - 3), !this.smartbanneropen() && W >= this.el.nativeElement.firstElementChild.offsetHeight && (W = W - this.el.nativeElement.firstElementChild.offsetHeight - 3), window.innerWidth < 768 && document.getElementsByTagName("cs-sub-navigation-menu").length > 0 && document.getElementsByTagName("cs-sub-navigation-menu")[0].childElementCount > 0 ? document.getElementsByTagName("cs-sub-navigation-menu")[0].setAttribute("style", "top:" + W + "px") : document.getElementsByTagName("cs-navigation-bar")[0] && document.getElementsByTagName("cs-navigation-bar")[0].setAttribute("style", "top:" + W + "px") } allowedRoute() { return this.path = this.navigation.location.path(), "" === this.smartBannerConfig.sharedList.skipRoutes || !this.path.match(this.smartBannerConfig.sharedList.skipRoutes) } } return R.\u0275fac = function (W) { return new (W || R)(o.Y36(r.f5Y), o.Y36(d.f), o.Y36(o.SBq), o.Y36(r.U8N)) }, R.\u0275cmp = o.Xpm({ type: R, selectors: [["cs-smart-banner"]], inputs: { source: "source" }, decls: 1, vars: 1, consts: [["id", "smartbanner", "class", "smartbanner android", 4, "ngIf"], ["id", "smartbanner", 1, "smartbanner", "android"], [1, "sb-container"], ["href", "#", 1, "sb-close", 3, "click"], ["class", "sb-icon", 3, "ngStyle", 4, "ngIf"], ["class", "sb-icon no-icon", 4, "ngIf"], [1, "sb-info"], ["download", "", 1, "sb-button", 3, "href", "click"], [1, "sb-icon", 3, "ngStyle"], [1, "sb-icon", "no-icon"]], template: function (W, Q) { 1 & W && o.YNc(0, T, 16, 7, "div", 0), 2 & W && o.Q6J("ngIf", Q.smartBannerEnabled) }, directives: [c.O5, r.MIT, c.PC], encapsulation: 2 }), R })(); function G(R, J) { if (1 & R && (o.TgZ(0, "div", 1), o._UZ(1, "cs-smart-banner", 2), o.qZA()), 2 & R) { const W = J.$implicit, Q = o.oxw(); o.Q6J("hidden", !Q.showSmartBanner), o.xp6(1), o.Q6J("source", W) } } let x = (() => { class R { constructor(W, Q, Z) { this.smartBannerService = W, this.api = Q, this.deviceService = Z } ngOnInit() { this.api.get("content/GetSmartBannerList", !0).subscribe(W => { W && (this.smartbannerlist = W), this.emitSmartBannersExists() }), this.smartBannerService.smartBannerStatusObservable.subscribe(W => { this.smartBannerStatusChanged(W) }) } smartBannerStatusChanged(W) { this.deviceService.isiOS && this.deviceService.isMobile && (this.showSmartBanner = W) } emitSmartBannersExists() { this.smartBannerService.smartBannersExistsChanged(this.smartbannerlist && this.smartbannerlist.length > 0) } } return R.\u0275fac = function (W) { return new (W || R)(o.Y36(e.fd), o.Y36(e.pf), o.Y36(r.U8N)) }, R.\u0275cmp = o.Xpm({ type: R, selectors: [["cs-smart-banner-list"]], decls: 1, vars: 1, consts: [[3, "hidden", 4, "ngFor", "ngForOf"], [3, "hidden"], [3, "source"]], template: function (W, Q) { 1 & W && o.YNc(0, G, 2, 2, "div", 0), 2 & W && o.Q6J("ngForOf", Q.smartbannerlist) }, directives: [c.sg, P], encapsulation: 2 }), R })() }, 22037: (s, h, i) => { "use strict"; i.d(h, { Pt: () => T }); var e = i(36362), o = i(20639), r = i(90587), c = i(96157), d = i(3184); let T = (() => { class P { static forRoot() { return { ngModule: P, providers: [c.fd] } } } return P.\u0275fac = function (x) { return new (x || P) }, P.\u0275mod = d.oAB({ type: P }), P.\u0275inj = d.cJS({ imports: [[e.ez, o.b9i, r.u5]] }), P })() }, 32686: (s, h, i) => { "use strict"; i.d(h, { p: () => c }); var e = i(3184), o = i(99958), r = i(70215); let c = (() => { class d { constructor(y, M) { this.casinoWidgetService = y, this.apiService = M } request(y, M) { return this.apiService.request(y, M) } get(y, M, T) { let P = this.casinoWidgetService.getApiParams(M); return this.apiService.get(y, P, T) } post(y, M, T) { return this.apiService.post(y, M, T) } put(y, M, T) { return this.apiService.put(y, M, T) } delete(y, M, T) { return this.apiService.delete(y, M, T) } jsonp(y, M) { return this.apiService.jsonp(y, M) } } return d.\u0275fac = function (y) { return new (y || d)(e.LFG(o.h), e.LFG(r.s)) }, d.\u0275prov = e.Yz7({ token: d, factory: d.\u0275fac, providedIn: "root" }), d })() }, 99958: (s, h, i) => { "use strict"; i.d(h, { h: () => r }); var e = i(3184), o = i(20639); let r = (() => { class c { constructor(f, y) { this.nativeAppService = f, this.navigationService = y } isCasinoWidget() { return window.location.href.indexOf("casinowidget") > -1 } isfromCasino() { return -1 == window.location.href.indexOf("launchEmbedded") } setWidgetProduct() { let f = this.navigationService.location.search.get("invokerProduct"); this.product = f ? f.toUpperCase() : null } getApiParams(f) { if (this.product) { let y = f && f.invokerProduct && f.invokerProduct.length > 0 ? f.invokerProduct : this.product; f ? f.invokerProduct = y : f = { invokerProduct: y } } return f } postMessageToParent(f, y) { window.parent.postMessage({ eventName: f, params: y }, "*") } getWidgetPosition() { let f = this.navigationService.location.search.get("widgetPosition"); return f ? f.toLowerCase() : "" } getWidgetProduct() { let f = this.product; return (!f || "" === f) && (f = this.navigationService.location.search.get("invokerProduct")), this.nativeAppService.isNative && (f = this.nativeAppService.product), f } setInvokerProduct(f) { this.product = f.toUpperCase() } isDisableCategoryTitle() { return window.location.href.indexOf("disableCategoryTitle") > -1 && "true" === this.navigationService.location.search.get("disableCategoryTitle").toLowerCase() } } return c.\u0275fac = function (f) { return new (f || c)(e.LFG(o.rBu), e.LFG(o.f5Y)) }, c.\u0275prov = e.Yz7({ token: c, factory: c.\u0275fac, providedIn: "root" }), c })() }, 96157: (s, h, i) => { "use strict"; i.d(h, { pf: () => G.p, hY: () => P.h, VH: () => R.V, Zc: () => d.Z, fd: () => f.f, tI: () => T, yJ: () => y.y, o1: () => J.o, X9: () => x.X }), i(89546); var d = i(77352), f = i(3816), y = i(31603), M = i(3184); let T = (() => { class W { constructor() { } getPositionXY(Z) { var N = { x: 0, y: 0 }; if ("touchstart" === Z.type || "touchmove" === Z.type || "touchend" === Z.type || "touchcancel" === Z.type) { var ae = Z.touches[0] || Z.changedTouches[0]; N.x = ae.pageX, N.y = ae.pageY } else ("mousedown" === Z.type || "mouseup" === Z.type || "mousemove" === Z.type || "mouseover" === Z.type || "mouseout" === Z.type || "mouseenter" === Z.type || "mouseleave" === Z.type) && (N.x = Z.pageX, N.y = Z.pageY); return N } deepMergeObjects(Z, ...N) { null == Z && (Z = {}); let ae = Object(Z); for (let re = 0; re < N.length; re++) { const ce = N[re]; if (ce) for (let _e in ce) Object.prototype.hasOwnProperty.call(ce, _e) && ("object" == typeof ae[_e] && ae[_e] && "object" == typeof ce[_e] && ce[_e] ? this.deepMergeObjects(ae[_e]) : ae[_e] = ce[_e]) } return ae } } return W.\u0275fac = function (Z) { return new (Z || W) }, W.\u0275prov = M.Yz7({ token: W, factory: W.\u0275fac, providedIn: "root" }), W })(); var P = i(99958), G = i(32686), x = i(62578), R = i(83027), J = i(12878) }, 83027: (s, h, i) => { "use strict"; i.d(h, { V: () => c }); var e = i(76317), o = i(3184), r = i(38805); let c = (() => { class d { constructor(y, M, T) { this.teaserService = y, this.casinoLobbyService = M, this.configProviderService = T, this.categoryChangeSubject = new e.X(null), this.categoryChangeObservable = this.categoryChangeSubject.asObservable(), this.featuresConfig = this.configProviderService.provideFeaturesConfig() } publishCategoryChange(y, M) { var T; let P; this.isNullOrEmpty(y) && this.isNullOrEmpty(M) || y && this.isNullOrEmpty(M) ? P = !0 : !this.isNullOrEmpty(y) && !this.isNullOrEmpty(M) && (P = !1), (null === (T = this.featuresConfig) || void 0 === T ? void 0 : T.rpGamesFilterInLiveCasino) && (this.routeCurrentProduct = y, this.routeCurrentProduct != this.lastKnownRouteProduct && this.lobbyChanged()), this.teaserService.setMutedStatus(!0), this.categoryChangeSubject.next({ routeCurrentProduct: y, routeCategoryType: M, isRootOrDefault: P }) } lobbyChanged() { ("livecasino" == this.routeCurrentProduct || "livecasino" == this.lastKnownRouteProduct) && setTimeout(() => { this.casinoLobbyService.refreshFeeds() }, 0), this.lastKnownRouteProduct = this.routeCurrentProduct } isNullOrEmpty(y) { return !y || "" === y } } return d.\u0275fac = function (y) { return new (y || d)(o.LFG(r.BQ), o.LFG(r.nA), o.LFG(r.iX)) }, d.\u0275prov = o.Yz7({ token: d, factory: d.\u0275fac, providedIn: "root" }), d })() }, 77352: (s, h, i) => { "use strict"; i.d(h, { Z: () => r }); var e = i(76317), o = i(3184); let r = (() => { class c { constructor() { this.isMobileSearchVisible = new e.X(!1), this.isDesktopSearchGYMLVisible = new e.X(!1), this.searchVisibilityStatus = this.isMobileSearchVisible.asObservable(), this.searchGYMLVisibilityStatus = this.isDesktopSearchGYMLVisible.asObservable() } setSearchVisibility(f) { this.isMobileSearchVisible.next(f) } setDesktopSearchGYMLVisibility(f) { this.isDesktopSearchGYMLVisible.next(f) } } return c.\u0275fac = function (f) { return new (f || c) }, c.\u0275prov = o.Yz7({ token: c, factory: c.\u0275fac, providedIn: "root" }), c })() }, 94789: (s, h, i) => { "use strict"; i.d(h, { k: () => r, _: () => c }); var e = i(89546), o = i(3184); let r = (() => { class d { constructor(y) { this.devSettingsConfig = y } mark(y) { this.devSettingsConfig.enablePerformanceMarking && window.performance && window.performance.getEntriesByName && window.performance.getEntriesByName(y).length <= 0 && window.performance.mark(y) } clearMarks() { window.performance && window.performance.clearMarks && window.performance.clearMarks() } } return d.\u0275fac = function (y) { return new (y || d)(o.LFG(e.Tv)) }, d.\u0275prov = o.Yz7({ token: d, factory: d.\u0275fac, providedIn: "root" }), d })(); var c = (() => { return (d = c || (c = {})).LobbyLoadComplete = "Lobby_Load_Complete", d.WidgetsViewInitialized = "Widgets_View_Initialized", d.FirstMeaningfulPaint = "vn_fmp", d.TimeToInteractivity = "vn_tti", c; var d })() }, 3816: (s, h, i) => { "use strict"; i.d(h, { f: () => c }); var e = i(76317), o = i(3184), r = i(20639); let c = (() => { class d { constructor(y) { this.cookieService = y, this.smartBannerStatus = new e.X(!0), this.smartBannersExists = new e.X(!1), this.smartBannerStatusObservable = this.smartBannerStatus.asObservable(), this.smartBannersExistsObservable = this.smartBannersExists.asObservable() } smartBannerStatusChange(y) { this.smartBannerStatus.next(y) } smartBannersExistsChanged(y) { this.smartBannersExists.next(y) } getSbClosedCookieValue(y) { return this.cookieService.get("sb-closed-" + y) } getSbInstalledCookieValue(y) { return this.cookieService.get("sb-installed-" + y) } installSmartBanner(y, M) { this.cookieService.put("sb-installed-" + y, "true", M) } closeSmartBanner(y, M) { this.cookieService.put("sb-closed-" + y, "true", M) } setCookie(y, M, T) { let P = new Date, G = parseInt(T, 10); isNaN(G) ? this.cookieService.put(y, M) : (P.setDate(P.getDate() + G), this.cookieService.put(y, M, { expires: P.toUTCString() })) } } return d.\u0275fac = function (y) { return new (y || d)(o.LFG(r.N_8)) }, d.\u0275prov = o.Yz7({ token: d, factory: d.\u0275fac }), d })() }, 31603: (s, h, i) => { "use strict"; i.d(h, { y: () => y }); var e = i(89546), o = i(3184), r = i(20639), c = i(32686), d = i(38805); let f = (() => { class M { } return M.CASINO_OPEN_GAME_URL = "CASINO_OPEN_GAME_URL", M.CASINO_OPEN_GAME = "CASINO_OPEN_GAME", M })(), y = (() => { class M { constructor(P, G, x, R, J, W, Q, Z, N, ae) { this.windowRef = P, this.api = G, this.global = x, this.messageQueue = R, this.user = J, this.gameDataManager = W, this.cookieService = Q, this.nativeGameLaunchClientConfig = Z, this.casinoManager = N, this.navigationService = ae } handleVCGameLaunch(P, G, x) { this.user.isAuthenticated ? this.launchGameForVC(P, G, x) : this.raiseNativeVCEvent(P, "") } launchGameForVC(P, G, x) { this.api.get("gamedata/getlaunchdata", { gameId: P, skipUnfinGame: !0, gameLaunchRequestModel: x }).subscribe(R => { R && R.redirect.includes("/unfinished") ? this.messageQueue.addError(this.global.messages.UnfinishedGames) : this.raiseNativeVCEvent(P, R.redirect, G) }, R => { R && R.data && R.data.common && R.data.common.messages && R.data.common.messages[0] && this.messageQueue.addError(R.data.common.messages[0]) }) } raiseNativeVCEvent(P, G, x = !1, R = "") { var J = this.cookieService.get("NativeApp"); if (this.nativeGameLaunchClientConfig.isOnlyGameidLaunchEvent) { let Q = { CASINO_OPEN_GAME: P, gameName: P }; if (x && "pokervc" === J.toLowerCase()) this.windowRef.nativeWindow.external.NativeDispatch("app:GAME_NAME=" + P + "#" + R, JSON.stringify(Q)); else { let Z = this.gameDataManager.getLMTGameData(P), N = this.nativeGameLaunchClientConfig.vendorsforShouldOverrideUserAgent; Z && N && N.indexOf(Z.provider) > -1 && (Q.shouldOverrideUserAgent = "1"), this.windowRef.nativeWindow.external.NativeDispatch(f.CASINO_OPEN_GAME, JSON.stringify(Q)) } } else { let Q = { CASINO_OPEN_GAME_URL: G, casinoEvents: { CASINO_OPEN_GAME: G }, gameName: P, height: "680", width: "960" }; if (x && "pokervc" === J.toLowerCase()) this.windowRef.nativeWindow.external.NativeDispatch("app:GAME_NAME=" + P + "#" + R, JSON.stringify(Q)); else { let Z = this.gameDataManager.getLMTGameData(P), N = this.nativeGameLaunchClientConfig.vendorsforShouldOverrideUserAgent; Z && N && N.indexOf(Z.provider) > -1 && (Q.shouldOverrideUserAgent = "1"), this.windowRef.nativeWindow.external.NativeDispatch(f.CASINO_OPEN_GAME_URL, JSON.stringify(Q)) } } let W = this.casinoManager.getGameHomeUrl(); this.navigationService.goTo(W) } isPokerVC() { var P = this.cookieService.get("NativeApp"); return P && ("pokervc" === P.toLowerCase() || "pokermc" === P.toLowerCase()) } } return M.\u0275fac = function (P) { return new (P || M)(o.LFG(r.X9E), o.LFG(c.p), o.LFG(e.Ic), o.LFG(r.wrx), o.LFG(r.KDu), o.LFG(d.cM), o.LFG(r.N_8), o.LFG(e.C2), o.LFG(d.M3), o.LFG(r.f5Y)) }, M.\u0275prov = o.Yz7({ token: M, factory: M.\u0275fac }), M })() }, 12878: (s, h, i) => { "use strict"; i.d(h, { o: () => o }); var e = i(3184); let o = (() => { class r { constructor() { } setWidgetComposition(d) { this.components = d } getWidgetComposition() { return this.components } } return r.\u0275fac = function (d) { return new (d || r) }, r.\u0275prov = e.Yz7({ token: r, factory: r.\u0275fac }), r })() }, 62578: (s, h, i) => { "use strict"; i.d(h, { X: () => o }); var e = i(3184); let o = (() => { class r { get nativeWindow() { return window } } return r.\u0275fac = function (d) { return new (d || r) }, r.\u0275prov = e.Yz7({ token: r, factory: r.\u0275fac, providedIn: "root" }), r })() }, 48304: (s, h, i) => { var e = { "./bg.mjs": [58429, "locales/bg"], "./ca.mjs": [90972, "locales/ca"], "./cs.mjs": [24523, "locales/cs"], "./da.mjs": [7139, "locales/da"], "./de.mjs": [64455, "locales/de"], "./el.mjs": [23918, "locales/el"], "./en-CA.mjs": [36240, "locales/en-CA"], "./en-GB.mjs": [81998, "locales/en-GB"], "./en-NZ.mjs": [27037, "locales/en-NZ"], "./en.mjs": [82905, "locales/en"], "./es-419.mjs": [19265, "locales/es-419"], "./es-CL.mjs": [16890, "locales/es-CL"], "./es-CO.mjs": [24517, "locales/es-CO"], "./es-MX.mjs": [17490, "locales/es-MX"], "./es.mjs": [63055, "locales/es"], "./extra/bg.mjs": [71352, "locales/extra/bg"], "./extra/ca.mjs": [54604, "locales/extra/ca"], "./extra/cs.mjs": [37211, "locales/extra/cs"], "./extra/da.mjs": [35396, "locales/extra/da"], "./extra/de.mjs": [33357, "locales/extra/de"], "./extra/el.mjs": [89128, "locales/extra/el"], "./extra/en-CA.mjs": [94224, "locales/extra/en-CA"], "./extra/en-GB.mjs": [9862, "locales/extra/en-GB"], "./extra/en-NZ.mjs": [15783, "locales/extra/en-NZ"], "./extra/en.mjs": [4602, "locales/extra/en"], "./extra/es-419.mjs": [12481, "locales/extra/es-419"], "./extra/es-CL.mjs": [89153, "locales/extra/es-CL"], "./extra/es-CO.mjs": [71147, "locales/extra/es-CO"], "./extra/es-MX.mjs": [94879, "locales/extra/es-MX"], "./extra/es.mjs": [96499, "locales/extra/es"], "./extra/fr-CA.mjs": [66334, "locales/extra/fr-CA"], "./extra/fr.mjs": [76884, "locales/extra/fr"], "./extra/hr.mjs": [52907, "locales/extra/hr"], "./extra/hu.mjs": [90726, "locales/extra/hu"], "./extra/it.mjs": [72354, "locales/extra/it"], "./extra/ka.mjs": [13251, "locales/extra/ka"], "./extra/nb.mjs": [4992, "locales/extra/nb"], "./extra/nl-BE.mjs": [45624, "locales/extra/nl-BE"], "./extra/nl.mjs": [24184, "locales/extra/nl"], "./extra/nn.mjs": [32565, "locales/extra/nn"], "./extra/pl.mjs": [68697, "locales/extra/pl"], "./extra/pt-PT.mjs": [23233, "locales/extra/pt-PT"], "./extra/pt.mjs": [31039, "locales/extra/pt"], "./extra/ro.mjs": [23160, "locales/extra/ro"], "./extra/ru.mjs": [85396, "locales/extra/ru"], "./extra/sk.mjs": [63778, "locales/extra/sk"], "./extra/sl.mjs": [78924, "locales/extra/sl"], "./extra/sv.mjs": [13701, "locales/extra/sv"], "./extra/tr.mjs": [41569, "locales/extra/tr"], "./fr-CA.mjs": [77988, "locales/fr-CA"], "./fr.mjs": [20008, "locales/fr"], "./hr.mjs": [12858, "locales/hr"], "./hu.mjs": [757, "locales/hu"], "./it.mjs": [72556, "locales/it"], "./ka.mjs": [60341, "locales/ka"], "./nb.mjs": [89166, "locales/nb"], "./nl-BE.mjs": [31198, "locales/nl-BE"], "./nl.mjs": [92316, "locales/nl"], "./nn.mjs": [556, "locales/nn"], "./pl.mjs": [83714, "locales/pl"], "./pt-PT.mjs": [28248, "locales/pt-PT"], "./pt.mjs": [72559, "locales/pt"], "./ro.mjs": [22894, "locales/ro"], "./ru.mjs": [66020, "locales/ru"], "./sk.mjs": [52160, "locales/sk"], "./sl.mjs": [76804, "locales/sl"], "./sv.mjs": [18821, "locales/sv"], "./tr.mjs": [39886, "locales/tr"] }; function o(r) { if (!i.o(e, r)) return Promise.resolve().then(() => { var f = new Error("Cannot find module '" + r + "'"); throw f.code = "MODULE_NOT_FOUND", f }); var c = e[r], d = c[0]; return i.e(c[1]).then(() => i(d)) } o.keys = () => Object.keys(e), o.id = 48304, s.exports = o }, 38805: (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => { "use strict"; __webpack_require__.d(__webpack_exports__, { W: () => BingoFavouriteService, BW: () => BingoGameLaunchService, Pw: () => BroswerStateDirective, q: () => CacheManagerService, bB: () => CarouselModule, Az: () => CasinoCoreGameLaunchFactoryService, $l: () => CasinoCoreGamelaunchService, mx: () => CasinoCoreNpmParams, dk: () => CasinoCoreNpmParamsService, Sy: () => CasinoIFrameOverlayService, nA: () => CasinoLobbyService, M3: () => CasinoManager, hY: () => CasinoWidgetService, q_: () => CategoryManager, iX: () => ConfigProviderService, S9: () => ConfirmMessageComponent, W7: () => ConstService, N_: () => CookieService, IR: () => CoreModule, Kh: () => CozyBingoDataService, c: () => CultureDatePipe, xs: () => CustomCarouselPaginationComponent, Nb: () => DiscoverFeedService, pD: () => DraggableDirective, Rv: () => EmbeddedGamePopupComponent, $Q: () => FastLoadingGamesService, io: () => FavouriteService, n5: () => ForceGameLaunchHandlerService, t$: () => FreespinSummaryService, ay: () => GJackpotConstService, cM: () => GameDataManager, Hq: () => GameLaunch, xI: () => GameLaunchPlaces, s: () => GameLaunchUrlFormationService, b0: () => GameLobbyModel, KI: () => GameSelectorWidgetService, hM: () => GameService, KK: () => GameShowHubDimension, GA: () => GameShowHubService, wl: () => GeoLocationValidationService, bK: () => GeolocationInstallerComponent, pZ: () => GeolocationInstallerDialogService, mD: () => GifTagComponent, kK: () => GifTagModule, xE: () => GlobalJackpotModService, Pz: () => GlobalJackpotService, Zo: () => GlobalSearchHelperService, yV: () => GlobalTranslateComponent, qs: () => HighlightSearch, gB: () => ImageLoaderComponent, __: () => ImageType, Z7: () => IntersectionObserverDirective, uZ: () => InvokerProductService, Gn: () => JackpotDataService, $V: () => LCTimerComponent, ij: () => LCTimerModule, tK: () => LEADERBOARD_COLUMNS_DISPLAYED, B0: () => LiveCasinoService, Te: () => LongPressDirective, Yb: () => LottieAnimationStatus, Bd: () => NativeApiService, sg: () => NativeAppHelperService, L$: () => NewsFeedService, T4: () => NewsFeedV2Service, l5: () => OobeeIntimationToasterService, P1: () => OpenLoginDialog, hE: () => OptimizedTeaserManager, Sw: () => OtherProductService, _E: () => PlatformApiService, g9: () => PromotedGamesService, vD: () => RecentGamesService, pI: () => RecommendedGamesFilterModel, li: () => SafePipe, iF: () => SearchDesktopComponent, Zc: () => SearchSectionService, Q8: () => SignPostingService, F_: () => SitecoreImageResizePipe, Tq: () => SlotRacesService, hh: () => SlotRacesTrackingService, fd: () => SmartBannerService, BQ: () => TeaserService, R: () => ThumbnailService, Fj: () => TimeZoneService, D7: () => ToastMessageService, O8: () => TrustUrlPipe, f: () => UnfinishedGamesService, Sl: () => UrlUtilityService, S5: () => UtilHelper, tI: () => UtilityService, yJ: () => VCClientService, X9: () => WindowRef, en: () => Wizard, Il: () => WizardType }); var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3184), rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(76317), rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(50253), rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(26562), rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(25474), rxjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(83336), rxjs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(23280), rxjs__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(36646), rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(50635), rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(53158), rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(60116), rxjs_operators__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(71989), rxjs_operators__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(68951), rxjs_operators__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(32673), _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20639), lodash_es__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(38163), tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(34929), _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(67603), lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92938), bowser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(93962), _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(95758), _angular_common__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(36362), _frontend_vanilla_features_message_panel__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(35564), _frontend_vanilla_common__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(34314), _angular_platform_browser__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(50318), _angular_forms__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(90587), ng_lazyload_image__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(55600), _frontend_vanilla_features_popper__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(66364), ngx_popper_ng10__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(39839), _angular_common_http__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(28784), _frontend_vanilla_features_login_duration__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(29554), _angular_cdk_table__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(33865), swiper_angular__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(28775), swiper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(72028); const _c0 = function () { return { "background-color": "#1a1a1a" } }; function HeaderBoxComponent_div_0_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div")(1, "div", 1)(2, "div", 2)(3, "a", 3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().goBack() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(4, "i", 4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(5, "a", 5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().goBack() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(6, "cc-global-translate", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(7, "div", 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_3__.DdM(3, _c0)), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("hidden", i.error), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("key", i.title) } } function GameDetailButtonsComponent_button_0_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "button", 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().goToPlayGame(!1) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "cc-global-translate", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Gre("btn ", i.cssClass, ""), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("key", "ButtonPlayForReal") } } function GameDetailButtonsComponent_button_1_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "button", 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().goToPlayGame(!0) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "cc-global-translate", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Gre("btn ", i.cssClass, " playforfun"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("key", "ButtonPlayForFun") } } function GameDetailButtonsComponent_button_2_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "button", 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().goToPlayGame(!1) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "cc-global-translate", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Gre("btn ", i.cssClass, ""), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("key", "ButtonPlayNow") } } function GameDetailButtonsComponent_button_3_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "button", 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().goToPlayGame(!1) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "cc-global-translate", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Gre("btn ", i.cssClass, ""), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("key", "ButtonPlayNow") } } function GameDetailComponent_div_8_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 15)(1, "span", 16), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function (o) { _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i); const r = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); return r.toggleFavourite(r.model, o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", i.isFavouriteGame(i.model) ? i.favouriteStyle : i.unFavouriteStyle) } } function GameDetailComponent_div_9_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 17)(1, "h1"), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.gameInfo.game.game.name) } } function GameDetailComponent_cc_game_detail_buttons_10_Template(s, h) { if (1 & s && _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(0, "cc-game-detail-buttons", 18), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("game", i.model)("cssClass", "small-device")("place", 1)("launchType", i.model.provider) } } function GameDetailComponent_a_11_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "a", 19), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("href", i.model.responsibleGamingLink.url, _angular_core__WEBPACK_IMPORTED_MODULE_3__.LSH), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.model.responsibleGamingLink.linkText) } } function GameDetailComponent_div_12_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(0, "div", 20), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ALo(1, "trustAsHtml")), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("innerHTML", _angular_core__WEBPACK_IMPORTED_MODULE_3__.lcZ(1, 1, i.model.info), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oJD) } } function GameDetailComponent_div_13_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 21)(1, "p"), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.model.disclaimer) } } function GameDetailComponent_div_14_Template(s, h) { 1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 22)(1, "h3"), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "cc-global-translate", 23), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()), 2 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("key", "PreviewTitle")) } function GameDetailComponent_button_15_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "button", 24), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().goToPlayGame(3) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "cc-global-translate", 23), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } 2 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("key", "ButtonPlayNow")) } const _c1 = ["searchtext"], _c2 = ["searchInput"]; function SearchDesktopComponent_div_0_div_1_span_3_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "span", 15), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3).closeSearchIcon() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } } function SearchDesktopComponent_div_0_div_1_li_13_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "li", 16), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { const o = _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), r = o.$implicit, c = o.index; return _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3).launchGame(r, !0, c) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "img", 17)(2, "span", 18), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = h.$implicit; _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.s9C("src", i.icon.src, _angular_core__WEBPACK_IMPORTED_MODULE_3__.LSH), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("innerHTML", i.name, _angular_core__WEBPACK_IMPORTED_MODULE_3__.oJD) } } function SearchDesktopComponent_div_0_div_1_div_14_li_2_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "li", 16), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { const o = _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), r = o.$implicit, c = o.index; return _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(4).launchGame(r, !1, c) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "img", 17)(2, "span", 18), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ALo(3, "highlightsearch"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = h.$implicit, e = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(4); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.s9C("src", i.icon.src, _angular_core__WEBPACK_IMPORTED_MODULE_3__.LSH), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("innerHTML", _angular_core__WEBPACK_IMPORTED_MODULE_3__.xi3(3, 2, i.title, e.model.query), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oJD) } } const _c3 = function (s, h) { return { "search-non-touch": s, emptyResult: h } }; function SearchDesktopComponent_div_0_div_1_div_14_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 19)(1, "ul", 20), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, SearchDesktopComponent_div_0_div_1_div_14_li_2_Template, 4, 5, "li", 13), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ALo(3, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ALo(4, "dsl"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(5, "p", 21), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(6, "cc-global-translate", 22), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__.WLB(8, _c3, !i.isTouch, i.isMsgVisible)), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_3__.lcZ(3, 4, _angular_core__WEBPACK_IMPORTED_MODULE_3__.lcZ(4, 6, i.model.results))), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("hidden", !i.isMsgVisible), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("key", "SearchNoResults") } } const _c4 = function (s) { return { "gyml-search-icon": s } }, _c5 = function (s) { return { "casino-gyml-search": s } }; function SearchDesktopComponent_div_0_div_1_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 2)(1, "div", 3), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "span", 4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(3, SearchDesktopComponent_div_0_div_1_span_3_Template, 1, 0, "span", 5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(4, "input", 6, 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("change", function (o) { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2).queryChanged(o) })("ngModelChange", function (o) { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2).model.query = o })("keyup", function (o) { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2).queryChanged(o) })("focusout", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2).trackInput() })("focus", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.MAs(6).placeholder = "" })("blur", function () { _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i); const o = _angular_core__WEBPACK_IMPORTED_MODULE_3__.MAs(6), r = _angular_core__WEBPACK_IMPORTED_MODULE_3__.MAs(8); return o.placeholder = r.value + "..." }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(7, "cc-global-translate", 8, 9), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(9, "div", 10)(10, "span", 11), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function (o) { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2).clickGymlHeading(o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(11), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(12, "ul", 12), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(13, SearchDesktopComponent_div_0_div_1_li_13_Template, 3, 2, "li", 13), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(14, SearchDesktopComponent_div_0_div_1_div_14_Template, 7, 11, "div", 14), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.MAs(8), e = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Gre("desktop-search", e.idSuffix, ""), _angular_core__WEBPACK_IMPORTED_MODULE_3__.MGl("id", "desktop-search", e.idSuffix, ""), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__.VKq(15, _c4, e.showGymlSearch && e.idSuffix)), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.SearchCloseIcon), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.MGl("placeholder", "", i.value, "..."), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__.VKq(17, _c5, e.showGymlSearch && e.idSuffix))("ngModel", e.model.query), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("key", "SearchProduct")("hidden", !0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("hidden", e.hideDisplayGYML()), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.hij(" ", e.gymlText, " "), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngForOf", e.GYMLGames), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.model.query) } } function SearchDesktopComponent_div_0_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(1, SearchDesktopComponent_div_0_div_1_Template, 15, 19, "div", 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.innerWidth > 768 && !i.isTouch) } } const _c6 = function (s) { return { "border-radius": s } }; function ImageLoaderComponent_img_1_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "img", 5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("onStateChange", function (o) { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().onImageStateChange(o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_3__.VKq(3, _c6, null == i.icon ? null : i.icon.gameTileBorderRadius))("lazyLoad", i.src)("defaultImage", i.defaultSrc) } } function ImageLoaderComponent_img_2_Template(s, h) { if (1 & s && _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(0, "img", 6), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_3__.VKq(3, _c6, null == i.icon ? null : i.icon.gameTileBorderRadius))("lazyLoad", i.src)("defaultImage", i.defaultSrc) } } function ImageLoaderComponent_img_3_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "img", 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("visibilityChange", function (o) { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().onVisibilityChanged(o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("src", i.lazySrc, _angular_core__WEBPACK_IMPORTED_MODULE_3__.LSH)("intersectionDebounce", 0) } } function ImageLoaderComponent_img_4_Template(s, h) { if (1 & s && _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(0, "img", 8), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("src", i.src, _angular_core__WEBPACK_IMPORTED_MODULE_3__.LSH) } } function GameEmbedComponent_div_3_span_1_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "span", 11), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "img", 12), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("src", i.hotIcon, _angular_core__WEBPACK_IMPORTED_MODULE_3__.LSH) } } const _c7 = function (s, h) { return { background: s, color: h } }, _c8 = function (s) { return { "embed-jp-styles": s } }; function GameEmbedComponent_div_3_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 9), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(1, GameEmbedComponent_div_3_span_1_Template, 2, 1, "span", 10), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(2, "span"), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.ekj("is-fast-loading-game-embed", i.game.isFastLoadingGame), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_3__.WLB(6, _c7, null == i.game ? null : i.game.jpBgColor, null == i.game ? null : i.game.jpTextCOlor))("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__.VKq(9, _c8, i.newJackpotRibbonStyling)), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.game.isHotJackpotGroup && i.enableHotIcon), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.game.jackpotValue) } } function GameEmbedComponent_div_4_Template(s, h) { 1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 13), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "img", 14), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()) } function GameEmbedComponent_div_7_div_1_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 17)(1, "span", 18), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function (o) { _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i); const r = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); return r.displayQuickInfo(r.game, o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } } function GameEmbedComponent_div_7_ng_template_2_div_0_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 20)(1, "span", 18), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function (o) { _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i); const r = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); return r.toggleFavourite(r.game, o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", i.game.isFavourite ? "theme-favorite-i" : "theme-favorite") } } function GameEmbedComponent_div_7_ng_template_2_Template(s, h) { if (1 & s && _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(0, GameEmbedComponent_div_7_ng_template_2_div_0_Template, 2, 1, "div", 19), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.useFavouriteGames) } } function GameEmbedComponent_div_7_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(1, GameEmbedComponent_div_7_div_1_Template, 2, 0, "div", 15), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, GameEmbedComponent_div_7_ng_template_2_Template, 1, 1, "ng-template", null, 16, _angular_core__WEBPACK_IMPORTED_MODULE_3__.W1O), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.MAs(3), e = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.useQuickInfo)("ngIfElse", i) } } function GameEmbedComponent_div_9_span_3_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "span")(1, "a", 22), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i); const o = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); return o.action(o.game) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } } function GameEmbedComponent_div_9_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 21)(1, "a", 18), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i); const o = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); return o.action(o.game) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(3, GameEmbedComponent_div_9_span_3_Template, 2, 0, "span", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.game.title), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.game.enableDetailPage && !i.game.forceDetailPage) } } const _c9 = function (s, h) { return { "border-radius": s, background: h } }; function EmbeddedGameViewComponent_span_2_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "span", 5)(1, "a", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().close(!0) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "span", 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } } function EmbeddedGameViewComponent_div_3_div_2_div_1_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 21), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ALo(2, "date"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.hij(" ", _angular_core__WEBPACK_IMPORTED_MODULE_3__.xi3(2, 1, i.date, "shortTime"), " ") } } function EmbeddedGameViewComponent_div_3_div_2_li_6_span_2_Template(s, h) { if (1 & s && _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(0, "span", 19), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(4); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", i.Game.isFavourite ? i.favouriteStyle : i.unFavouriteStyle) } } function EmbeddedGameViewComponent_div_3_div_2_li_6_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "li")(1, "a", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function (o) { _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i); const r = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); return r.addFavourate(r.Game, o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, EmbeddedGameViewComponent_div_3_div_2_li_6_span_2_Template, 1, 1, "span", 22), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.Game) } } const _c10 = function () { return { color: "grey", "pointer-events": "none" } }; function EmbeddedGameViewComponent_div_3_div_2_li_7_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "li", 18)(1, "a", 23), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3).openRequestedPopup() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "span", 24), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngStyle", i.summaryPopUpIsOpened && _angular_core__WEBPACK_IMPORTED_MODULE_3__.DdM(1, _c10)) } } function EmbeddedGameViewComponent_div_3_div_2_li_11_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "li", 18)(1, "a", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3).close(!0) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "span", 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngStyle", i.summaryPopUpIsOpened && _angular_core__WEBPACK_IMPORTED_MODULE_3__.DdM(1, _c10)) } } function EmbeddedGameViewComponent_div_3_div_2_li_12_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "li", 25)(1, "a", 26), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3).toggleExtrasColumn() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } } function EmbeddedGameViewComponent_div_3_div_2_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 13), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(1, EmbeddedGameViewComponent_div_3_div_2_div_1_Template, 3, 4, "div", 14), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(2, "ul", 15)(3, "li")(4, "button", 16), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2).openDialog() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(6, EmbeddedGameViewComponent_div_3_div_2_li_6_Template, 3, 1, "li", 12), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(7, EmbeddedGameViewComponent_div_3_div_2_li_7_Template, 3, 2, "li", 17), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(8, "li", 18)(9, "a", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function (o) { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2).toggleFullScreen(o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(10, "span", 19), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(11, EmbeddedGameViewComponent_div_3_div_2_li_11_Template, 3, 2, "li", 17), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(12, EmbeddedGameViewComponent_div_3_div_2_li_12_Template, 2, 0, "li", 20), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.isFullScreen), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.depositButtonString), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.isFullScreen && i.useFavouriteGames), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !i.isFullScreen), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngStyle", i.summaryPopUpIsOpened && _angular_core__WEBPACK_IMPORTED_MODULE_3__.DdM(8, _c10)), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", i.isFullScreen ? "theme-fullscreen-exit" : "theme-fullscreen"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !i.isFullScreen), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.extrasColumnFlag && !i.isFullScreen) } } const _c11 = function (s, h) { return { "iframe-width": s, iframeClassNew: h } }; function EmbeddedGameViewComponent_div_3_ng_container_4_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.ynx(0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(1, "div", 27), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "iframe", 28), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ALo(3, "trustUrlPipe"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.BQk()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("src", _angular_core__WEBPACK_IMPORTED_MODULE_3__.lcZ(3, 2, i.iframeUrl), _angular_core__WEBPACK_IMPORTED_MODULE_3__.uOi)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__.WLB(4, _c11, 1 == i.isIframeVisible, i.iconsNewPosition)) } } function EmbeddedGameViewComponent_div_3_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 8)(1, "div", 9), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, EmbeddedGameViewComponent_div_3_div_2_Template, 13, 9, "div", 10), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(3, "div", 11), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(4, EmbeddedGameViewComponent_div_3_ng_container_4_Template, 4, 7, "ng-container", 12), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !i.iconsNewPosition), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.iframeUrl) } } function EmbeddedGameViewComponent_div_4_div_2_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 39)(1, "a", 40), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2).toggleExtrasColumn() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", i.iconsNewPosition ? "search-right-icon-new" : ""), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", i.extrasColumnFlag ? "theme-left" : "theme-right") } } function EmbeddedGameViewComponent_div_4_div_3_div_1_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 21), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ALo(2, "date"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.hij(" ", _angular_core__WEBPACK_IMPORTED_MODULE_3__.xi3(2, 1, i.date, "shortTime"), " ") } } function EmbeddedGameViewComponent_div_4_div_3_li_3_span_2_Template(s, h) { if (1 & s && _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(0, "span", 19), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(4); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", i.Game.isFavourite ? i.favouriteStyle : i.unFavouriteStyle) } } function EmbeddedGameViewComponent_div_4_div_3_li_3_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "li")(1, "a", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function (o) { _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i); const r = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); return r.addFavourate(r.Game, o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, EmbeddedGameViewComponent_div_4_div_3_li_3_span_2_Template, 1, 1, "span", 22), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.Game) } } function EmbeddedGameViewComponent_div_4_div_3_li_4_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "li", 18)(1, "a", 23), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3).openRequestedPopup() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "span", 24), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngStyle", i.summaryPopUpIsOpened && _angular_core__WEBPACK_IMPORTED_MODULE_3__.DdM(1, _c10)) } } function EmbeddedGameViewComponent_div_4_div_3_li_8_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "li", 18)(1, "a", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3).close(!0) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "span", 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngStyle", i.summaryPopUpIsOpened && _angular_core__WEBPACK_IMPORTED_MODULE_3__.DdM(1, _c10)) } } function EmbeddedGameViewComponent_div_4_div_3_li_9_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "li", 25)(1, "a", 26), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3).toggleExtrasColumn() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } } function EmbeddedGameViewComponent_div_4_div_3_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 13), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(1, EmbeddedGameViewComponent_div_4_div_3_div_1_Template, 3, 4, "div", 14), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(2, "ul"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(3, EmbeddedGameViewComponent_div_4_div_3_li_3_Template, 3, 1, "li", 12), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(4, EmbeddedGameViewComponent_div_4_div_3_li_4_Template, 3, 2, "li", 17), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(5, "li", 18)(6, "a", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function (o) { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2).toggleFullScreen(o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(7, "span", 19), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(8, EmbeddedGameViewComponent_div_4_div_3_li_8_Template, 3, 2, "li", 17), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(9, EmbeddedGameViewComponent_div_4_div_3_li_9_Template, 2, 0, "li", 20), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.isFullScreen), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.isFullScreen && i.useFavouriteGames), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !i.isFullScreen), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngStyle", i.summaryPopUpIsOpened && _angular_core__WEBPACK_IMPORTED_MODULE_3__.DdM(7, _c10)), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", i.isFullScreen ? "theme-fullscreen-exit" : "theme-fullscreen"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !i.isFullScreen), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.extrasColumnFlag && !i.isFullScreen) } } function EmbeddedGameViewComponent_div_4_div_7_Template(s, h) { if (1 & s && _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(0, "div", 41), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("innerHTML", i.Game.title, _angular_core__WEBPACK_IMPORTED_MODULE_3__.oJD) } } function EmbeddedGameViewComponent_div_4_div_8_span_2_Template(s, h) { if (1 & s && _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(0, "span", 19), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", i.Game.isFavourite ? i.favouriteStyle : i.unFavouriteStyle) } } function EmbeddedGameViewComponent_div_4_div_8_span_3_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "span", 45), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.Global.messages.AddToFavorites) } } function EmbeddedGameViewComponent_div_4_div_8_span_4_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "span", 45), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.Global.messages.AddedToFavorites) } } function EmbeddedGameViewComponent_div_4_div_8_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 42)(1, "a", 43), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function (o) { _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i); const r = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); return r.addFavourate(r.Game, o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, EmbeddedGameViewComponent_div_4_div_8_span_2_Template, 1, 1, "span", 22), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(3, EmbeddedGameViewComponent_div_4_div_8_span_3_Template, 2, 1, "span", 44), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(4, EmbeddedGameViewComponent_div_4_div_8_span_4_Template, 2, 1, "span", 44), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.Game), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !i.Game.isFavourite), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.Game.isFavourite) } } const _c12 = function (s) { return { "live-dealer-closed": s } }; function EmbeddedGameViewComponent_div_4_div_9_div_4_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 50)(1, "cc-game-embed", 51), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("embedGameClicked", function (o) { const c = _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i).index, d = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); return d.gameClickedOnSearch(o, c, d.recentGames) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = h.$implicit, e = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__.VKq(5, _c12, !e.isLiveDealerOpen)), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.MGl("id", "gameIdentifier_EmbedRecentlyPlayed_", i.gameId, ""), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("game", i)("radius", e.borderRadius)("lobbyType", e.lobbyType) } } function EmbeddedGameViewComponent_div_4_div_9_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 46)(1, "div", 47), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(3, "div", 48), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(4, EmbeddedGameViewComponent_div_4_div_9_div_4_Template, 2, 7, "div", 49), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.Global.messages.RecentlyPlayedGames), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngForOf", i.RecentlyPlayedGamesList) } } function EmbeddedGameViewComponent_div_4_div_10_div_4_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 50)(1, "cc-game-embed", 51), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("embedGameClicked", function (o) { const c = _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i).index, d = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); return d.gameClickedOnSearch(o, c, d.EGV_GYML) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = h.$implicit, e = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(3); _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__.VKq(5, _c12, !e.isLiveDealerOpen)), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.MGl("id", "gameIdentifier_EmbedGamesyouMightLike_", i.gameId, ""), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("game", i)("radius", e.borderRadius)("lobbyType", e.lobbyType) } } function EmbeddedGameViewComponent_div_4_div_10_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 52)(1, "div", 47), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(3, "div", 48), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(4, EmbeddedGameViewComponent_div_4_div_10_div_4_Template, 2, 7, "div", 49), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ALo(5, "slice"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(2); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.GamesyouMightLikeMessage), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_3__.Dn7(5, 2, i.recommendationGamesList, 0, 6)) } } function EmbeddedGameViewComponent_div_4_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 29)(1, "div", 30), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, EmbeddedGameViewComponent_div_4_div_2_Template, 2, 2, "div", 31), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(3, EmbeddedGameViewComponent_div_4_div_3_Template, 10, 8, "div", 10), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(4, "cc-search-desktop", 32), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("embedGameClicked", function (o) { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().gameClickedOnSearch(o, 0, "Search") }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(5, "div", 33)(6, "div", 34), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(7, EmbeddedGameViewComponent_div_4_div_7_Template, 1, 1, "div", 35), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(8, EmbeddedGameViewComponent_div_4_div_8_Template, 5, 3, "div", 36), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(9, EmbeddedGameViewComponent_div_4_div_9_Template, 5, 2, "div", 37), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(10, EmbeddedGameViewComponent_div_4_div_10_Template, 6, 6, "div", 38), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !i.isFullScreen && !i.iconsNewPosition), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.iconsNewPosition), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", i.iconsNewPosition ? "search-filed" : "")("placeholder", "embedgame")("lobbyType", i.lobbyType), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", i.iconsNewPosition ? "games-div-new" : ""), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.Game), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.useFavouriteGames), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.RecentlyPlayedGamesList && i.RecentlyPlayedGamesList.length > 0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", i.recommendationGamesList && i.recommendationGamesList.length > 0) } } function EmbeddedGamePopupComponent_div_4_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div")(1, "cc-embedded-game-view", 5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("sendDataToEmbeddedGamePopUp", function (o) { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().eventFromEmbeddedGameView(o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("gameEmbedPop", i.gameData)("errorMessageQueue", i.gameData.errorMessageQueue)("lobbyType", i.gameData.game.lobbyType) } } function GeolocationInstallerComponent_div_1_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 4)(1, "div", 5), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "h1", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(3, "span", 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().close() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(4, "div", 8), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(5, "div", 9)(6, "button", 10), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().download() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(7, "button", 11), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().continue() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", i.geocomplyTitle), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("vnDynamicHtml", i.geoComplyMessage), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", i.downloadButtonText), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", i.continueButtonText) } } function GeolocationInstallerComponent_div_2_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 12)(1, "div", 13), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "h1", 14), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(3, "span", 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().close() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(4, "div", 15), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(5, "div", 16), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(6, "div", 17), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(7, "h2", 18)(8, "p", 18), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(9, "p", 19), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(10, "div", 20)(11, "a", 21), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().appDownloaderClicked() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(12, "br"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(13, "div", 22), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(14, "hr")(15, "div", 23), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(16, "p", 24), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(17, "div", 25)(18, "div", 26), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(19, "p", 27), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(20, "a", 28), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().download() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(21, "div", 29), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(22, "p", 30), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(23, "a", 31), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().continue() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(24, "div", 32)(25, "div", 33)(26, "i", 34), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().info() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(27, "span", 35), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().info() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(28, "div")(29, "vn-popper-content", 36, 37), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ynx(31, 38), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(32), _angular_core__WEBPACK_IMPORTED_MODULE_3__.BQk(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.MAs(30), e = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", e.geolocationMobileInstallerTitle), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", e.oobeeInstallerHeadingText), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", e.oobeeInstallerHeadingInstruction), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", e.continuePlayOnAppInstructionText), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("href", e.appDownloadLink, _angular_core__WEBPACK_IMPORTED_MODULE_3__.LSH)("textContent", e.continuePlayOnAppUserActionText), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", e.playOnAppOrWebPlayerOptionsSeparatorText), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", e.continuePlayOnWebInstructionText), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", e.oobeeInstallerDownloadStepText), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", e.oobeeInstallerDownloadUserActionText), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", e.oobeeInstallerContinueStepText), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("textContent", e.oobeeInstallerContinueUserActionText), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("popper", i.content), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("popper", i.content)("textContent", e.geoguardEnquiryUserActionText), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.hij(" ", e.geoGuardDescriptionText, " ") } } function GeolocationInstallerComponent_div_3_Template(s, h) { 1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 39), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "span"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()) } function GeoLocationErrorComponent_li_11_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "li"), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & s) { const i = h.$implicit; _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.message) } } function GeoLocationErrorComponent_button_15_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "button", 12), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().reCheckLocation() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.hij(" ", i.recheckLocation, " ") } } function GeoLocationErrorComponent_button_16_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "button", 12), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().close() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.hij(" ", i.ok, " ") } } function ConfirmMessageComponent_div_0_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "div", 4)(4, "div", 5), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(6, "div", 3)(7, "div", 6)(8, "p", 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(9), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(10, "div", 3)(11, "div", 8)(12, "p", 9)(13, "a", 10), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().cancelBtn() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(14, "button", 11), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(15, "Cancel"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(16, "a", 10), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().depositBtn() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(17, "button", 12), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(18), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()()()()()() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.messagesInfo.header), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.hij("", i.messagesInfo.message, " "), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(9), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(i.messagesInfo.purchaseButtonText) } } function CustomCarouselPaginationComponent_ng_container_2_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.ynx(0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(1, "span", 3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function (o) { const c = _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i).index; return _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().paginationClick(c, o) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.BQk() } if (2 & s) { const i = h.index, e = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ekj("swiper-pagination-bullet-active", i === e.currentIndex) } } const _c13 = function () { return [] }; function LCTimerComponent_ng_container_0_Template(s, h) { if (1 & s && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.ynx(0), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.BQk()), 2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.hij(" ", i.time, "\n") } } function GifTagComponent_div_0_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i), _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw().launchGame() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "img", 3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("src", i.imageThumbnailSrc, _angular_core__WEBPACK_IMPORTED_MODULE_3__.LSH)("lazyLoad", i.url) } } function GifTagComponent_div_1_Template(s, h) { if (1 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.EpF(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { _angular_core__WEBPACK_IMPORTED_MODULE_3__.CHM(i); const o = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); return !!o.launchUrl && o.launchGame() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "img", 3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA() } if (2 & s) { const i = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oxw(); _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("src", i.imageThumbnailSrc, _angular_core__WEBPACK_IMPORTED_MODULE_3__.LSH)("lazyLoad", i.url) } } const _c14 = ["*"], _c15 = ["refSwiper"]; class UtilHelper { constructor() { } static getPosition(h) { for (var i = 0, e = 0; h;)i += h.offsetLeft - h.scrollLeft + h.clientLeft, e += h.offsetTop - h.scrollTop + h.clientTop, h = h.offsetParent; return { left: i, top: e } } static getHiddenValues(h, i) { return { x: h.clientWidth - i.clientWidth, y: h.clientHeight - i.clientHeight } } static getTranslateValues(h) { try { const e = window.getComputedStyle(h).transform; if ("none" === e || void 0 === e) return { x: 0, y: 0, z: 0 }; const o = e.includes("3d") ? "3d" : "2d", r = e.match(/matrix.*\((.+)\)/); if (r && r.length) { const c = r[1].split(", "); return "2d" === o ? { x: parseFloat(c[4]), y: parseFloat(c[5]), z: 0 } : "3d" === o ? { x: parseFloat(c[12]), y: parseFloat(c[13]), z: parseFloat(c[14]) } : { x: 0, y: 0, z: 0 } } return { x: 0, y: 0, z: 0 } } catch (i) { return { x: 0, y: 0, z: 0 } } } static onlyUnique(h, i, e) { return e.indexOf(h) === i } static hasClass(h, i) { return h.classList ? h.classList.contains(i) : !!h.className.match(new RegExp("(\\s|^)" + i + "(\\s|$)")) } static addClass(h, i) { const e = i || document.documentElement; e.classList ? e.classList.add(h) : this.hasClass(e, h) || (e.className += " " + h) } static removeClass(h, i) { const e = i || document.documentElement; if (e.classList) e.classList.remove(h); else if (this.hasClass(e, h)) { var o = new RegExp("(\\s|^)" + h + "(\\s|$)"); e.className = e.className.replace(o, " ") } } static endsWith(h, i) { return -1 !== h.indexOf(i, h.length - i.length) } } let ConstService = (() => { class s { } return s.Instant_Casino = "instantCasino", s.Live_Casino = "LiveCasino", s.Recent_Games = "RECENTGAMES", s.Favourite_Games = "FAVOURITEGAMES", s.LMC_GYML = "LMC_GYML", s.ALL_GAMES_CATEGORY_ID = "allgames", s.LIVE_DEALER_GAMES_CATEGORY_ID = "livecasino", s.LIVE_CASINO_ALL_GAMES_CATEGORY_ID = "livecasinoallgames", s.LOBBY_LOADING_COMPLETED_EVENT = "?event=lobby&action=loadingcompleted", s.FAVOURITE_GAMES_CATEGORY_ID = "favouritegames", s.RECENT_GAMES_CATEGORY_ID = "recentgames", s.SPORTS_HOME_ICON_EVENT = "Highlights", s.UNFINISHED_GAMES_CATEGORY_ID = "unfinishedgames", s.GYML_GAMES_CATEGORY_ID = "gamesyoumightlike", s.HOME_CATEGORY_ID = "home", s.LMC_GYML_CATEGORY_ID = "LMC_GYML", s.EGV_GYML = "GYML", s.DETAIL_PAGE_MODE_PICKER = "Picker", s.DETAIL_PAGE_MODE_FORCEPICKER = "ForcePicker", s.DETAIL_PAGE_MODE_FORCE = "Force", s.DETAIL_PAGE_MODE_ALL = "All", s.GAME_OF_THE_DAY = "gameoftheday", s.HIGHLIGHT_JACKPOTS = "highlightjackpots", s.LIVE_CASINO = "livecasino", s.PROMOTIONS_DISCOVER = "promotions", s.QUICK_LINKS = "quicklinks", s.EDITORS_PICK = "editorspick", s.SEARCH = "Search", s.SEARCH_GYML = "Search_GYML", s.ADV_GAME = "advanceGameDataModel", s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(); class LobbyItem { setCategoriesMap(h) { this.categoriesMap = h, this.lsCategoriesMap = Array.from(h.entries()) } setcategoryNameLangMap(h) { this.categoryNameLangMap = h, this.lsCategorytNameLangMap = Array.from(h.entries()) } setStickerNameMap(h) { this.stickerNameMap = h, this.lsStickerNameMap = Array.from(h.entries()) } setGameMetaDataMap(h) { this.gameMetaDataMap = h, this.lsGameMetaDataMap = Array.from(h.entries()) } setLobbyItemFromLocalStorage(h) { h && (h.lsCategoriesMap && h.lsCategoriesMap.length > 0 && (this.categoriesMap = new Map(h.lsCategoriesMap)), h.lsCategorytNameLangMap && h.lsCategorytNameLangMap.length > 0 && (this.categoryNameLangMap = new Map(h.lsCategorytNameLangMap)), h.lsStickerNameMap && h.lsStickerNameMap.length > 0 && (this.stickerNameMap = new Map(h.lsStickerNameMap)), h.lsGameMetaDataMap && h.lsGameMetaDataMap.length > 0 && (this.gameMetaDataMap = new Map(h.lsGameMetaDataMap))) } } class GameLobbyModel { constructor() { this.isDataNotAvailable = !1, this.isFastLoadingGame = !1, this.infoIconClass = "", this.lobbyType = "", this.format = "jpg" } } let PlatformApiService = (() => { class s extends _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.q23 { } return s.\u0275fac = function () { let h; return function (e) { return (h || (h = _angular_core__WEBPACK_IMPORTED_MODULE_3__.n5z(s)))(e || s) } }(), s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: function (i) { let e = null; return e = i ? new i : apiServiceFactory(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.OQ1)), e }, providedIn: "root" }), s })(); function apiServiceFactory(s) { return s.create(PlatformApiService, { product: "casino", area: "games" }) } let LocalStorageExpirablePersistenceService = (() => { class s { read(i, e) { if (i && i.trim()) { const o = localStorage.getItem(i.trim()), r = o && JSON.parse(o); if (r) { const c = r.createdAt; if (c && (new Date).getTime() - c < e) return r.value } } return null } write(i, e) { if (delete e.categoriesMap, delete e.categoryNameLangMap, delete e.stickerNameMap, delete e.gameMetaDataMap, i && i.trim() && e) { const o = { createdAt: (new Date).getTime(), value: e }; localStorage.setItem(i.trim(), JSON.stringify(o)) } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(); class CacheItem { } let CasinoCoreClientConfigModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({}), s })(), GlobalSearchClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("casinoGlobalSearch")], s), s })(), DevSettingsConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("devSettingsConfig")], s), s })(), CasinoCoreConfigClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("casinoConfig")], s), s })(), FeaturesClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("features")], s), s })(), GlobalClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("global")], s), s })(), LMTDataClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("lmtData")], s), s })(), GameConfigClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("gameConfig")], s), s })(), SmartLobbyClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("smartLobbyConfig")], s), s })(), GlobalJackpotClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("globalJackpot")], s), s })(), McPageClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("mcPage")], s), s })(), LiveDealerConfigClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("liveDealerConfig")], s), s })(), JackpotDataClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("jackpotData")], s), s })(), NativeGameLaunchClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("nativeGameLaunch")], s), s })(), GeolocationClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("geolocationConfig")], s), s })(), CasinoAsIFrameOverlayConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("casinoAsIFrameOverlayConfig")], s), s })(), FeedCacheClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("feedCacheConfiguration")], s), s })(), AdvanceGameDataClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("advanceGameDataModel")], s), s })(), WidgetConfigClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("widgetConfig")], s), s })(), QuickInfoClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("quickInfo")], s), s })(), OptimizedTeaserClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("optimizedTeaser")], s), s })(), PromotionsInfoClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("promotionsInfo")], s), s })(), DiscoverFeedClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("discoverFeed")], s), s })(), SubNavigationClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("subNavigationConfig")], s), s })(), ModularSettingsClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("modularSettings")], s), s })(), LiveCasinoClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("liveCasinoApi")], s), s })(), ThumbnailConfigClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("thumbnail")], s), s })(), SlotRacesClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("csSlotRaces")], s), s })(), PromotedGamesClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("promotedGamesConfig")], s), s })(), NewsFeedConfigClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("newsFeedConfig")], s), s })(), CozyBingoClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("cozyBingo")], s), s })(), RecentlyPlayedClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("recentlyPlayed")], s), s })(), HeaderTeasersClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("headerTeasers")], s), s })(), FreeSpinsClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("freeSpins")], s), s })(), ImageLoadOptimizationClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("csImageLoadOptimizationConfig")], s), s })(), ClientSideConfigClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("clientSideConfig")], s), s })(), ApiPathsClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("apiPathsConfig")], s), s })(), SearchClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("searchConfig")], s), s })(), NonCriticalClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("nonCriticalFeedConfig")], s), s })(), DownloadAppFromDeviceClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("downloadAppFromDevice")], s), s })(), GamingStoriesClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("gamingStoriesConfig")], s), s })(), PreLoginClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("prelogin")], s), s })(), GameSelectorWidgetClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("gameSelectorConfig")], s), s })(), ABTestingClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("abTestingConfig")], s), s })(), PromoOfferWidgetConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("promoOfferWidget")], s), s })(), GameShowHubClientConfig = (() => { let s = class { }; return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: CasinoCoreClientConfigModule }), s = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.ALo)("gameShowHubConfig")], s), s })(), UrlUtilityService = (() => { class s { constructor(i, e, o) { this.productService = i, this.page = e, this.appInfoConfig = o } getCasinoBaseUrl() { let i = "dicegames" == this.appInfoConfig.product.toLowerCase() ? this.productService.getMetadata("dicegames") : this.productService.getMetadata("casino"); if (i) return i.apiBaseUrl } getProductBaseUrl(i) { let e = this.productService.getMetadata(this.appInfoConfig.product.toLowerCase()); if (i && (e = this.productService.getMetadata(i.toLowerCase())), e) return e.apiBaseUrl } getProductApiBaseUrl(i) { return this.getProductBaseUrl(i) + "/" + this.page.lang } getApiBaseUrl() { return this.getCasinoBaseUrl() + "/" + this.page.lang } getApiurl(i) { return this.getApiBaseUrl() + "/games/api/" + i } getClientConfigUrl() { return this.getApiBaseUrl() + "/api/clientconfig" } getCategoryNavigationBaseUrl() { let i = this.productService.getMetadata("casino"); if (i) return i.apiBaseUrl } getBingoApiBaseUrl() { let i = this.productService.getMetadata("bingo"); if (i) return i.apiBaseUrl + "/" + this.page.lang } getPortalApiBaseUrl() { let i = this.productService.getMetadata("portal"); if (i) return i.apiBaseUrl + "/" + this.page.lang } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.M52), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.T3C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.Veb)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), ConfigProviderService = (() => { class s { constructor(i, e, o) { this.api = i, this.urlUtility = e, this.clientConfigService = o, this.casinoClientConfigLoadedSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.casinoClientConfigObservable = this.casinoClientConfigLoadedSubject.asObservable() } initiateCasino(i) { this.fillClientConfig(i) } fillClientConfig(i) { if (i) this.casinoConfig = this.clientConfigService.get(CasinoCoreConfigClientConfig), this.globalSearchConfig = this.clientConfigService.get(GlobalSearchClientConfig), this.featuresConfig = this.clientConfigService.get(FeaturesClientConfig), this.globalConfig = this.clientConfigService.get(GlobalClientConfig), this.devSettingsClientConfig = this.clientConfigService.get(DevSettingsConfig), this.lmtConfig = this.clientConfigService.get(LMTDataClientConfig), this.gameConfig = this.clientConfigService.get(GameConfigClientConfig), this.smartLobbyConfig = this.clientConfigService.get(SmartLobbyClientConfig), this.globalJackpotConfig = this.clientConfigService.get(GlobalJackpotClientConfig), this.mcPageConfig = this.clientConfigService.get(McPageClientConfig), this.liveDealerConfig = this.clientConfigService.get(LiveDealerConfigClientConfig), this.jackpotConfig = this.clientConfigService.get(JackpotDataClientConfig), this.nativegamelaunchConfig = this.clientConfigService.get(NativeGameLaunchClientConfig), this.geolocationConfig = this.clientConfigService.get(GeolocationClientConfig), this.casinoAsIFrameConfig = this.clientConfigService.get(CasinoAsIFrameOverlayConfig), this.feedCacheConfig = this.clientConfigService.get(FeedCacheClientConfig), this.advanceGameDataConfig = this.clientConfigService.get(AdvanceGameDataClientConfig), this.widgetConfig = this.clientConfigService.get(WidgetConfigClientConfig), this.quickInfoConfig = this.clientConfigService.get(QuickInfoClientConfig), this.optimizedTeaserConfig = this.clientConfigService.get(OptimizedTeaserClientConfig), this.promotionsInfoConfig = this.clientConfigService.get(PromotionsInfoClientConfig), this.discoverFeedConfig = this.clientConfigService.get(DiscoverFeedClientConfig), this.subNavigationConfig = this.clientConfigService.get(SubNavigationClientConfig), this.liveCasinoConfig = this.clientConfigService.get(LiveCasinoClientConfig), this.newsFeedCasinoConfig = this.clientConfigService.get(NewsFeedConfigClientConfig), this.modularSettingsConfig = this.clientConfigService.get(ModularSettingsClientConfig), this.slotRacesConfig = this.clientConfigService.get(SlotRacesClientConfig), this.promotedGamesConfig = this.clientConfigService.get(PromotedGamesClientConfig), this.thumbnailConfig = this.clientConfigService.get(ThumbnailConfigClientConfig), this.cozybingoConfig = this.clientConfigService.get(CozyBingoClientConfig), this.recentlyPlayedConfig = this.clientConfigService.get(RecentlyPlayedClientConfig), this.headerTeasersConfig = this.clientConfigService.get(HeaderTeasersClientConfig), this.freeSpinsClientConfig = this.clientConfigService.get(FreeSpinsClientConfig), this.imageLoadOptimizationConfig = this.clientConfigService.get(ImageLoadOptimizationClientConfig), this.clientSideConfig = this.clientConfigService.get(ClientSideConfigClientConfig), this.apiPathsConfig = this.clientConfigService.get(ApiPathsClientConfig), this.searchConfig = this.clientConfigService.get(SearchClientConfig), this.nonCriticalConfig = this.clientConfigService.get(NonCriticalClientConfig), this.downloadAppFromDeviceConfig = this.clientConfigService.get(DownloadAppFromDeviceClientConfig), this.gamingStoriesClientConfig = this.clientConfigService.get(GamingStoriesClientConfig), this.preLoginConfig = this.clientConfigService.get(PreLoginClientConfig), this.promoOfferWidgetConfig = this.clientConfigService.get(PromoOfferWidgetConfig), this.abTestingConfig = this.clientConfigService.get(ABTestingClientConfig), this.gameSelectorWidgetConfig = this.clientConfigService.get(GameSelectorWidgetClientConfig), this.gameShowHubConfig = this.clientConfigService.get(GameShowHubClientConfig), this.setClientConfigLoadedObservable(); else { let e = this.urlUtility.getClientConfigUrl(), o = { headers: {} }; o.headers["Cache-Control"] = "no-cache", o.headers.Pragma = "no-cache", o.headers.Expires = "0", o.withCredentials = !0, this.api.get(e, {}, o).subscribe(r => { r && (this.casinoConfig = r.casinoConfig, this.featuresConfig = r.features, this.lmtConfig = r.lmtData, this.globalConfig = r.global, this.globalSearchConfig = r.casinoGlobalSearch, this.devSettingsClientConfig = r.devSettingsConfig, this.globalJackpotConfig = r.globalJackpot, this.gameConfig = r.gameConfig, this.smartLobbyConfig = r.smartLobbyConfig, this.mcPageConfig = r.mcPage, this.liveDealerConfig = r.liveDealerConfig, this.jackpotConfig = r.jackpotData, this.nativegamelaunchConfig = r.nativeGameLaunch, this.geolocationConfig = r.geolocationConfig, this.casinoAsIFrameConfig = r.casinoAsIFrameOverlayConfig, this.feedCacheConfig = r.feedCacheConfiguration, this.advanceGameDataConfig = r.advanceGameDataModel, this.quickInfoConfig = r.quickInfo, this.widgetConfig = r.widgetConfig, this.optimizedTeaserConfig = r.optimizedTeaser, this.promotionsInfoConfig = r.promotionsInfo, this.discoverFeedConfig = r.discoverFeed, this.subNavigationConfig = r.subNavigationConfig, this.modularSettingsConfig = r.modularSettings, this.liveCasinoConfig = r.liveCasinoApi, this.newsFeedCasinoConfig = r.newsFeedConfig, this.promotedGamesConfig = r.promotedGamesConfig, this.slotRacesConfig = r.csSlotRaces, this.thumbnailConfig = r.thumbnail, this.cozybingoConfig = r.cozyBingo, this.recentlyPlayedConfig = r.recentlyPlayed, this.headerTeasersConfig = r.headerTeasers, this.freeSpinsClientConfig = r.freeSpins, this.clientSideConfig = r.clientSideConfig, this.imageLoadOptimizationConfig = r.csImageLoadOptimizationConfig, this.apiPathsConfig = r.apiPathsConfig, this.searchConfig = r.searchConfig, this.nonCriticalConfig = r.nonCriticalFeedConfig, this.abTestingConfig = r.abTestingConfig, this.downloadAppFromDeviceConfig = r.downloadAppFromDevice, this.promoOfferWidgetConfig = r.promoOfferWidget, this.gamingStoriesClientConfig = r.gamingStoriesConfig, this.preLoginConfig = r.prelogin, this.gameSelectorWidgetConfig = r.gameSelectorConfig, this.gameShowHubConfig = r.gameShowHubConfig, this.setClientConfigLoadedObservable()) }) } } setClientConfigLoadedObservable() { this.casinoClientConfigLoadedSubject.next(!0) } provideCasinoConfig() { return this.casinoConfig } provideFeaturesConfig() { return this.featuresConfig } provideLmtConfig() { return this.lmtConfig } setLmtConfig(i) { this.lmtConfig.lobbyTypeMap = i } provideGlobalConfig() { return this.globalConfig } provideGlobalSearchConfig() { return this.globalSearchConfig } provideDevSettingsConfig() { return this.devSettingsClientConfig } provideGlobalJackpotConfig() { return this.globalJackpotConfig } provideGameConfig() { return this.gameConfig } provideSmartLobbyConfig() { return this.smartLobbyConfig } provideThumbnailConfig() { return this.thumbnailConfig } provideMcPageConfig() { return this.mcPageConfig } provideLiveDealerConfig() { return this.liveDealerConfig } provideJackpotConfig() { return this.jackpotConfig } provideNativeGameLaunchConfig() { return this.nativegamelaunchConfig } provideGeoLocationConfig() { return this.geolocationConfig } provideCasinoAsIFrameConfig() { return this.casinoAsIFrameConfig } provideFeedCacheConfig() { return this.feedCacheConfig } provideOptimizedTeaserConfig() { return this.optimizedTeaserConfig } provideAdvanceGameDataConfig() { return this.advanceGameDataConfig } provideQuickInfoConfig() { return this.quickInfoConfig } providewidgetConfig() { return this.widgetConfig } providePromotionsInfoConfig() { return this.promotionsInfoConfig } provideDiscoverFeedConfig() { return this.discoverFeedConfig } provideSubNavigationConfig() { return this.subNavigationConfig } provideModularSettingsConfig() { return this.modularSettingsConfig } provideLiveCasinoConfig() { return this.liveCasinoConfig } provideNewsFeedCasinoConfig() { return this.newsFeedCasinoConfig } provideSlotRacesConfig() { return this.slotRacesConfig } providePromotedGamesConfig() { return this.promotedGamesConfig } provideCozyBingoConfig() { return this.cozybingoConfig } providePromoOfferWidgetConfig() { return this.promoOfferWidgetConfig } provideRecentlyPlayedGamesConfig() { return this.recentlyPlayedConfig } provideHeaderTeasersConfig() { return this.headerTeasersConfig } providefreeSpinsClientConfig() { return this.freeSpinsClientConfig } provideImageLoadOptimizationClientConfig() { return this.imageLoadOptimizationConfig } provideClientSideConfig() { return this.clientSideConfig } provideApiPathsConfig() { return this.apiPathsConfig } provideSearchConfig() { return this.searchConfig } provideNonCriticalConfig() { return this.nonCriticalConfig } provideABTestingConfig() { return this.abTestingConfig } provideDownloadAppFromDeviceConfig() { return this.downloadAppFromDeviceConfig } provideGamingStoriesConfig() { return this.gamingStoriesClientConfig } providePreLoginConfig() { return this.preLoginConfig } provideGameSelectorWidgetConfig() { return this.gameSelectorWidgetConfig } provideGameShowHubConfig() { return this.gameShowHubConfig } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.Hkl)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), InvokerProductService = (() => { class s { constructor(i, e, o) { this.appInfoConfig = i, this.configProviderService = e, this.nativeAppService = o } getInvokerProduct() { let i = this.appInfoConfig.product.toLowerCase(); return this.nativeAppService.isNative && (i = this.nativeAppService.product.toLowerCase()), i } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.Veb), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.rBu)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CasinoWidgetService = (() => { class s { constructor(i, e, o) { this.nativeAppService = i, this.navigationService = e, this.invokerProductService = o, this.currentWidgetHeight = 0, this.newWidgetHeight = 0 } isCasinoWidget() { return window.location.href.indexOf("casinowidget") > -1 } isfromCasino() { return -1 == window.location.href.indexOf("launchEmbedded") } setWidgetProduct() { let i = this.invokerProductService.getInvokerProduct(), e = this.navigationService.location.search.get("invokerProduct"); this.product = e && "" != e ? e.toUpperCase() : i || null } getApiParams(i) { if (this.product) { let e = i && i.invokerProduct && i.invokerProduct.length > 0 ? i.invokerProduct : this.product; i ? i.invokerProduct = e : i = { invokerProduct: e } } return i } postMessageToParent(i, e) { window.parent.postMessage({ eventName: i, params: e }, "*") } getWidgetPosition() { let i = this.navigationService.location.search.get("widgetPosition"); return i ? i.toLowerCase() : "" } getWidgetHeight(i, e) { if (this.isCasinoWidget()) { let o = document.getElementById(e); o && (this.currentWidgetHeight = o.scrollHeight, this.assigningWidgetParams(i, this.currentWidgetHeight)), this.interval || (this.interval = setInterval(() => { this.checkAndUpdateWidgetHeight(i, e) }, 500)) } } checkAndUpdateWidgetHeight(i, e) { this.newWidgetHeight = document.getElementById(e).scrollHeight, this.currentWidgetHeight === this.newWidgetHeight && this.maxHeightCount--, this.maxHeightCount || clearInterval(this.interval), this.newWidgetHeight !== this.currentWidgetHeight && (this.currentWidgetHeight = this.newWidgetHeight, this.assigningWidgetParams(i, this.currentWidgetHeight)) } assigningWidgetParams(i, e) { if ("footer" === this.getWidgetPosition()) { let r = { isFooterWidget: !!this.getWidgetPosition(), categoryid: i, height: e + 30 }; this.postMessageToParent("FooterLobbyLoaded", r) } else { let r = { isFooterWidget: !!this.getWidgetPosition(), categoryid: i, height: e + 30 }; this.postMessageToParent("LobbyLoaded", r) } } getWidgetProduct() { let i = this.invokerProductService.getInvokerProduct(); return (!i || "" === i) && (i = this.navigationService.location.search.get("invokerProduct")), this.nativeAppService.isNative && (i = this.nativeAppService.product), i } setInvokerProduct(i) { this.product = i.toUpperCase() } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.rBu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(InvokerProductService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CasinoCoreNpmParamsService = (() => { class s { constructor() { } setcasinoCoreNpmParams(i) { this.casinoNpmParams = i } getcasinoCoreNpmParams() { return this.casinoNpmParams } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CacheManagerService = (() => { class s { constructor(i, e, o, r, c, d) { this.localStorageExpirablePersistenceService = i, this.page = e, this.casinoWidgetService = o, this.configProviderService = r, this.user = c, this.casinoCoreNpmParamsService = d } getCategoryCacheKey(i = "", e = "") { let o, r = this.configProviderService.provideCasinoConfig(); return o = this.user.isAuthenticated ? "categoryCoreLookUp_" + this.page.lang + "_" + i + "_" + this.user.username : "categoryCoreLookUp_" + this.page.lang + "_" + i, o += e && "" != e ? "_" + e : this.casinoWidgetService.product ? "_" + this.casinoWidgetService.product : "_" + r.casinoContextValues.invokerProduct, o } readCategoryDataLocalCache(i, e = "", o = "") { let r = this.configProviderService.provideFeaturesConfig(), c = this.configProviderService.provideDevSettingsConfig(); return r.enableClientStorage && !c.isPreviewUser ? this.localStorageExpirablePersistenceService.read(this.getCategoryCacheKey(e, o), 1e3 * i) : null } writeCategoryLocalStorageCacheMap(i, e, o = "") { try { this.casinoCoreNpmParamsService.getcasinoCoreNpmParams().disableCasinoLocalStorage || this.localStorageExpirablePersistenceService.write(this.getCategoryCacheKey(i, o), e) } catch (r) { } } writeForceGameLaunchObjInSessionStorage(i, e) { try { sessionStorage.setItem(i, JSON.stringify(e)) } catch (o) { } } getAuthenticatedThumbnailCacheKey(i = "") { if (this.user.username) return "thumbnailLookUp_" + this.user.username + "_" + i } getAnonymousThumbnailCacheKey(i = "") { return "thumbnailLookUp_" + i } getThumbnailCacheKey(i = "") { let e; return e = this.user.isAuthenticated ? this.getAuthenticatedThumbnailCacheKey(i) : this.getAnonymousThumbnailCacheKey(i), e } setThumbnailLocalStorageCacheMap(i = "", e, o = !1) { try { o ? (e && localStorage.setItem(this.getAuthenticatedThumbnailCacheKey(i), e), e && localStorage.setItem(this.getAnonymousThumbnailCacheKey(i), e)) : e && localStorage.setItem(this.getThumbnailCacheKey(i), e) } catch (r) { } } getThumbnailsfromLocalStorage(i = "") { try { return localStorage.getItem(this.getThumbnailCacheKey(i)) } catch (e) { } } removeThumbnailfromLocalStorage(i = "") { try { localStorage.removeItem(this.getThumbnailCacheKey(i)) } catch (e) { } } readForceGameLaunchObjDataFromSessionStorage(i) { let e = sessionStorage.getItem(i); return JSON.parse(e) } readFastLoadingGamesLocalStorageCacheMap(i) { let o = this.configProviderService.provideFeaturesConfig().enableClientStorage ? this.localStorageExpirablePersistenceService.read(this.getFastLoadingGamesCacheKey(), 1e3 * i) : null; return o && new Map(o) } getFastLoadingGamesCacheKey() { return "fastLoadingGamesLookUp" } getFastLoadingGamesFromLocalCache() { let i = this.configProviderService.provideFeaturesConfig(); return this.readFastLoadingGamesLocalStorageCacheMap(i.browserLocalStorageCategoryDataUpdateInterval) } setFastLoadingGamesLocalStorageCacheMap(i) { try { this.casinoCoreNpmParamsService.getcasinoCoreNpmParams().disableCasinoLocalStorage || this.localStorageExpirablePersistenceService.write(this.getFastLoadingGamesCacheKey(), Array.from(i.entries())) } catch (e) { } } getAllCategoriesFromLocalCache(i = "", e = "") { let o = this.configProviderService.provideFeaturesConfig(); return this.readCategoryDataLocalCache(o.browserLocalStorageCategoryDataUpdateInterval, i, e) } setCategoryLocalStorageCacheMap(i, e = "", o = "") { try { this.localStorageExpirablePersistenceService.write(this.getCategoryCacheKey(e, o), Array.from(i.entries())) } catch (r) { } } setGameToStickersMap(i) { i && localStorage.setItem("stickersMap", JSON.stringify(i)) } getGamesDataFromCache(i) { let e = this.configProviderService.provideFeaturesConfig(), o = this.configProviderService.provideDevSettingsConfig(); try { if (e.enableClientStorage && !o.isPreviewUser) { let r = new Map, c = []; return i.forEach(f => { let y = localStorage.getItem(f) && JSON.parse(localStorage.getItem(f)); y && y.localStorageTimeStamp + 1e3 * e.browserLocalStorageCacheDuration > (new Date).getTime() ? r.set(f, y) : (y && localStorage.removeItem(f), c.push(f)) }), { gameMetaData: r, gamesNotInCache: c.length > 0 ? c : null } } return null } catch (r) { return null } } setGameDataCache(i) { try { Array.from(i.entries()).forEach(e => { localStorage.getItem(e[0]) || (e[1].localStorageTimeStamp = (new Date).getTime(), localStorage.setItem(e[0], JSON.stringify(e[1]))) }) } catch (e) { } } getGameToStickersMap() { let i = localStorage.getItem("stickersMap"); return !!i && JSON.parse(i) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(LocalStorageExpirablePersistenceService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.T3C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoWidgetService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoCoreNpmParamsService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(); class HomeLobbyModel { constructor() { } } let NativeApiService = (() => { class s { constructor(i, e, o) { this.nativeApplication = i, this.windowRef = e, this.configProviderService = o, this.count = 0, this.mcPage = this.configProviderService.provideMcPageConfig() } raiseEvent(i, e, o) { let r = e || "action"; if (this.nativeApplication.isNative) { this.count++; const c = "NativeApi_iframe_" + this.count, d = document.createElement("iframe"); return d.id = c, d.src = `bwinex://?event=${i}&${r}=${o}`, d.style.display = "none", this.windowRef.nativeWindow.document.body.appendChild(d), c } return null } raiseEventCommon(i) { if (this.nativeApplication.isNative || this.nativeApplication.isNativeWrapper) { this.count++; const e = "NativeApi_iframe_" + this.count, o = document.createElement("iframe"); return o.id = e, o.src = `bwinex://${i}`, o.style.display = "none", this.windowRef.nativeWindow.document.body.appendChild(o), e } return null } raiseTeaserEvent(i, e) { return i && this.clearEvent(i), this.raiseEventCommon(e) } processPromoEvent(i, e) { let o = i.indexOf("?event=promo"); return -1 === o ? null : (null !== e && this.clearEvent(e), this.raiseEventCommon(i.substr(o))) } processLobbyEvent(i, e) { let o = i.indexOf("?event=lobby"); return -1 === o ? null : (null !== e && this.clearEvent(e), this.raiseEventCommon(i.substr(o))) } raiseOpenGameEvent(i, e, o, r) { return i && this.clearEvent(i), this.raiseEvent("lobby", "opengame", r ? "url=" + e : "gameId=" + o) } raiseNativeAppEvent(i) { if (this.nativeApplication.isNative) { this.count++; let e = this.mcPage.nativeAppScheme; const o = "NativeApi_iframe_" + this.count, r = document.createElement("iframe"); return r.id = o, r.src = `${e}://${i}`, r.style.display = "none", this.windowRef.nativeWindow.document.body.appendChild(r), o } return null } targetEvent(i, e = "bwinex://") { if (this.nativeApplication.isNative) { let o = document.createElement("iframe"); o.src = e + i, document.documentElement.appendChild(o), o.parentNode.removeChild(o) } } clearEvent(i) { this.nativeApplication.isNative && null !== i && this.windowRef.nativeWindow.document.getElementById(i).remove() } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.rBu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.X9E), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CasinoManager = (() => { class s { constructor(i, e, o, r, c, d, f, y, M, T, P) { this.api = i, this.deviceService = e, this.user = o, this.casinoWidgetService = r, this.cookieService = c, this.nativeAppService = d, this.nativeApiService = f, this.navigation = y, this.configProviderService = M, this.urlUtility = T, this.invokerProductService = P, this.loadNextGamesSetPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.loadNextGamesSetObservable = this.loadNextGamesSetPublisher.asObservable(), this.lobbyModelPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(new HomeLobbyModel), this.lobbyObservable = this.lobbyModelPublisher.asObservable(), this.lobbyTypePublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.lobbyTypeChangeObservable = this.lobbyTypePublisher.asObservable(), this.reSizePublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.reSizeObservable = this.reSizePublisher.asObservable(), this.navigationLevelPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.navigationLevelObservable = this.navigationLevelPublisher.asObservable(), this.SignPostingSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.SignPostingFeedObservable = this.SignPostingSubject.asObservable(), this.CategorySignPostGamesMap = new Map, this.lobbyModel = new HomeLobbyModel, this.teaserDataPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.teaserDataObservable = this.teaserDataPublisher.asObservable(), this.navigationCategoriesPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.navigationCategoriesObservable = this.navigationCategoriesPublisher.asObservable(), this.rpgymlCategoryinLobbyPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.rpgymlCategoryinLobbyObservable = this.rpgymlCategoryinLobbyPublisher.asObservable(), this.playerSegmentionSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.playerSegmentDataObservable = this.playerSegmentionSubject.asObservable(), this.lobbyTypeNavigationCategoriesMap = new Map, this.hdrheight = 0, this.isRecentlyPlayedWidgetPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1) } setCategoryLobby(i) { this.configProviderService.provideCasinoConfig(); let c, o = this.navigation.location, r = i.category.toLowerCase(); window.innerWidth > 500 ? (r != c && (o.pathname.indexOf(c) > -1 || "/" === o.pathname || "/en/games" == o.pathname) && document.documentElement.style.setProperty("--isNewsFeedDisplayed", "none"), r == c && !(o.pathname.indexOf(c) > -1) && document.documentElement.style.setProperty("--isNewsFeedDisplayed", "none")) : document.documentElement.style.setProperty("--isNewsFeedDisplayed", "none"), this.lobbyModel.activeCategory = i.category, this.lobbyModel.navigationLevel = i.navigationLevel, this.previousProduct !== i.product && (this.previousProduct = i.product, this.lobbyModel.currentCategory = null), this.lobbyModelPublisher.next(this.lobbyModel), this.setCurrentWidth() } setheaderheight(i) { this.hdrheight = i, this.user.isAuthenticated ? sessionStorage.setItem("headerHeight_postLogin", JSON.stringify(this.hdrheight)) : sessionStorage.setItem("headerHeight_preLogin", JSON.stringify(this.hdrheight)) } setDisplayRpCategory() { this.rpgymlCategoryinLobbyPublisher.next(!0) } setWidgetToggleInfo(i) { this.toggleEnabled = i } getWidgetToggleInfo() { return this.toggleEnabled } getheaderheight() { return this.user.isAuthenticated ? JSON.parse(sessionStorage.getItem("headerHeight_postLogin")) : JSON.parse(sessionStorage.getItem("headerHeight_preLogin")) } getActiveCategory() { return this.lobbyModel.activeCategory } getLobbyModel() { return this.lobbyModel } getLobbyType() { let i = this.cookieService.get("LobbyType"), e = this.configProviderService.provideLmtConfig(); return i || (e.lobbyTypeMap ? (i = e.lobbyTypeMap[0].lobbyType, i) : null) } getProductForLobbyType(i) { let o = this.configProviderService.provideLmtConfig().lobbyTypeMap; if (!o) return null; for (let r = 0; r < o.length; r++)if (o[r].lobbyType == i) return o[r].product } checkForTouchDevice() { try { this.isTouchDevice = !this.nativeAppService.isDownloadClient && this.deviceService.isTouch && !window.matchMedia("(pointer: fine)").matches && !navigator.userAgent.match(/Win64/) } catch (i) { this.isTouchDevice = "ontouchstart" in window || navigator.maxTouchPoints > 0 } } isTouch() { return this.checkForTouchDevice(), this.isTouchDevice } setGameHomeUrl(i) { this.gameHomeUrl = i } getGameHomeUrl() { return this.gameHomeUrl } loadNextGamesSet() { this.loadNextGamesSetPublisher.next(!0) } getNavigationItems() { return [] } setCurrentWidth() { this.currentWidth = this.deviceService.isiOS ? document.body.offsetWidth : window.innerWidth } getCurrentWidth() { return this.currentWidth } checkForResize(i) { this.currentWidth != i && (this.currentWidth = i, this.reSizePublisher.next(this.currentWidth)) } getDefaultCategoryType1() { let e = this.configProviderService.provideCasinoConfig().defaultCategory; return this.categoryLookup && this.categoryLookup.filter(o => o.sitecoreData.categoryId === e)[0] ? e : this.categoryLookup[0] ? this.categoryLookup[0].sitecoreData.categoryId : void 0 } getDefaultCategoryType() { return this.configProviderService.provideCasinoConfig().defaultCategory } goToLobby() { let i = this.configProviderService.provideMcPageConfig(); if (this.nativeAppService.isNative && "CASINO" === this.nativeAppService.product) return this.gameEventId && this.nativeApiService.clearEvent(this.gameEventId), void (this.gameEventId = this.nativeApiService.raiseEventCommon("?event=promo&action=openlobbytab")); this.navigation.goTo(i.prefix) } setNavigationLevel(i) { this.navigationLevelPublisher.next(i) } setTeasers() { let i = this.configProviderService.provideApiPathsConfig(), e = this.urlUtility.getApiurl(i.teasers.teasersData); this.api.get(e).subscribe(o => { this.headerTeasers = o, this.teaserDataPublisher.next(o) }) } getTeaserData() { return this.headerTeasers } setPlayerSegmentationData() { let i = this.configProviderService.provideFeaturesConfig(); if (this.user.isAuthenticated && i.enableOptimoveFavProduct) { let e = this.configProviderService.provideApiPathsConfig(), o = this.urlUtility.getApiurl(e.playerSegmentation.playerData); this.api.get(o).subscribe(r => { this.PlayerSegmentData = r, this.playerSegmentionSubject.next(r) }) } } getPlayerSegmentationData() { return this.PlayerSegmentData } setLobbyTypeAndProduct(i) { let e = this.configProviderService.provideLmtConfig(), o = this.getInvokerProduct(); if ((!o || "" === o) && (o = "casino"), e.lobbyTypeMap && e.lobbyTypeMap.length > 0) { let r = e.lobbyTypeMap.filter(c => c.invokerProduct.toLowerCase() === o.toLowerCase()); if ((!i || "" === i) && (i = e.lobbyTypeMap[0].product.toLowerCase()), r && r.length > 0) { let c = r.filter(d => d.product === i.toUpperCase()); if (c && c.length > 0) this.lobbyType = c[0].lobbyType; else if (this.isLobbyTypeCookieSetBasedOnProductUrl()) { let d = e.lobbyTypeMap.filter(f => f.product === i.toUpperCase()); d && d.length > 0 && (this.lobbyType = d[0].lobbyType) } } } this.lobbyType ? (this.cookieService.put("LobbyType", this.lobbyType), this.product = i) : this.product = e.lobbyTypeMap[0].product.toLowerCase() } isLobbyTypeCookieSetBasedOnProductUrl() { let e, i = this.navigation.location.search.get("widgetGameLaunch"); return i && "" != i && (e = "true" === i.toLowerCase()), e || this.nativeAppService.isNativeApp || this.nativeAppService.isNativeWrapper } getLobbyUrlPrefix(i = "") { this.lobbyType || (this.lobbyType = i); let e = this.configProviderService.provideLmtConfig(); for (let o = 0; o < e.lobbyTypeMap.length; o++)if (e.lobbyTypeMap[o].lobbyType === i) return e.lobbyTypeMap[o].product.toLowerCase(); return null } getProduct() { let i = this.configProviderService.provideLmtConfig(); return !this.product && i.lobbyTypeMap && (this.product = i.lobbyTypeMap[0].product), this.product } getProductForGivenLobbyType(i) { let o = this.configProviderService.provideLmtConfig().lobbyTypeMap; for (let r = 0; r < o.length; r++)if (o[r].lobbyType == i && o[r].product) return o[r].product.toLowerCase() } setlobbyTypeNavigationCategoriesMap(i, e) { this.lobbyTypeNavigationCategoriesMap.get(i) || this.lobbyTypeNavigationCategoriesMap.set(i, e) } getNavigationCategoriesForLobbyType(i) { return this.lobbyTypeNavigationCategoriesMap.get(i) } IsFeatureEnabledforLobbytype(i, e) { if (e && i) { let o = e.find(r => r.lobbyType.toLowerCase() == i.toLowerCase()); return o && o.countValue ? o.countValue : !(!o || !o.value) || (o && o.stringValue ? o.stringValue : o && o.stringArray && o.stringArray.length > 0 ? o.stringArray : o && o.jsonValue ? o.jsonValue : o && o.defaultCategory ? o.defaultCategory : o && o.forceMobileNav ? o.forceMobileNav : !(!o || !o.fetchMeta) && o.fetchMeta) } return !1 } IsFeatureEnabledforLobbytypeWithInvokerProduct(i, e) { if (e && e[0].invokerProduct) { let o = this.getInvokerProduct(); (!o || "" === o) && (o = "casino"), e = e.filter(r => r.invokerProduct.toLowerCase() == o.toLowerCase()) } if ((!i || "" === i) && (i = this.cookieService.get("LobbyType")), e && i) { let o = e.find(r => r.lobbyType.toLowerCase() == i.toLowerCase()); return o && o.countValue ? o.countValue : !(!o || !o.value) || (o && o.stringValue ? o.stringValue : !!(o && o.stringArray && o.stringArray.length > 0) && o.stringArray) } return !1 } assignGameClass(i, e) { if (i < 383) switch (e) { case "1": case "3": case "6": case "7": default: return "xs-icon"; case "2": case "4": return "medium-icon"; case "5": return "large-icon" } else if (i < 480) switch (e) { case "1": case "2": case "3": case "6": case "7": default: return "small-icon"; case "4": case "5": return "medium-icon" } else if (i < 533) switch (e) { case "1": case "3": case "6": case "7": default: return "xs-icon"; case "2": case "4": return "medium-icon"; case "5": return "large-icon" } else if (i < 625) switch (e) { case "1": case "3": case "6": case "7": default: return "small-icon"; case "2": return "medium-icon"; case "4": case "5": return "large-icon" } else if (i < 689) switch (e) { case "1": case "3": case "6": case "7": default: return "xs-icon"; case "2": case "4": return "medium-icon"; case "5": return "large-icon" } else if (i < 768) switch (e) { case "1": case "3": case "6": case "7": default: return "small-icon"; case "2": return "medium-icon"; case "4": case "5": return "large-icon" } else if (i < 1024) switch (e) { case "1": case "6": case "7": return "xs-icon"; case "2": case "4": case "5": return "medium-icon"; default: return "small-icon" } else switch (e) { case "1": case "3": case "6": case "7": default: return "small-icon"; case "2": case "4": case "5": return "large-icon" } } publishLobbyTypeChange(i) { i && this.lobbyTypePublisher.next(i) } setIsRecentlyPlayedWidget(i) { this.isRecentlyPlayedWidgetPublisher.next(i) } setInvokerProduct(i) { this.invokerProduct = i } getInvokerProduct() { return this.casinoWidgetService.getWidgetProduct() } setSignPostingGames(i) { this.SignPostingSubject.next(i) } setSignPostMap(i, e) { this.CategorySignPostGamesMap.set(i, e) } getSignPostMap(i) { return this.CategorySignPostGamesMap.get(i) } getSlotRaceCategoryId(i) { let e = this.configProviderService.provideSlotRacesConfig(); for (let o = 0; o < e.slotRacesLMTCategoryIdForLobbyType.length; o++)if (e.slotRacesLMTCategoryIdForLobbyType[o].lobbyType === i) return e.slotRacesLMTCategoryIdForLobbyType[o].stringValue; return null } getLobbyTypeForProduct(i) { let e = this.configProviderService.provideLmtConfig(); if (e && e.lobbyTypeMap && e.lobbyTypeMap.length > 0) { let o = this.invokerProductService.getInvokerProduct(); (!o || "" === o) && (o = "CASINO"); let r = e.lobbyTypeMap.filter(c => c.invokerProduct.toLowerCase() === o.toLowerCase()); return r && r.length > 0 ? this.extractLobbyType(r, i) : (console.error("No lobby types configured for invoker product::", o, ":: Considering all configured values for product route."), this.extractLobbyType(e.lobbyTypeMap, i)) } return console.error("Lobby Type Map values not configured."), null } setCurrentLobby(i) { this.currentlobbyType = i } getCurrentLobby() { return this.currentlobbyType } extractLobbyType(i, e) { if (i && i.length > 0) { for (let o = 0; o < i.length; o++)if (i[o].product.toLowerCase() == e.toLowerCase()) return i[o].lobbyType; console.error("No lobby type found for product route::", e) } return null } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U8N), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoWidgetService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.N_8), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.rBu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(NativeApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(InvokerProductService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), FastLoadingGamesService = (() => { class s { constructor(i, e, o, r) { this.api = i, this.cacheManager = e, this.urlUtility = o, this.configProviderService = r, this.fastLoadingGamesLookUp = new Map, this.fastLoadingGamesSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.fastLoadingGamesFeedObservable = this.fastLoadingGamesSubject.asObservable() } setFastLoadingGamesFromLMT() { let i = this.cacheManager.getFastLoadingGamesFromLocalCache(); if (i) this.fastLoadingGamesLookUp = i, this.fastLoadingGamesSubject.next(this.fastLoadingGamesLookUp); else { let e = this.configProviderService.provideApiPathsConfig(), o = this.urlUtility.getApiurl(e.gamesServices.fastLoadingGames); this.api.get(o).subscribe(r => { r && r.length > 0 && (r.forEach(c => { this.fastLoadingGamesLookUp.set(c, !0) }), this.cacheManager.setFastLoadingGamesLocalStorageCacheMap(this.fastLoadingGamesLookUp), this.fastLoadingGamesSubject.next(this.fastLoadingGamesLookUp)) }, r => { }) } } setFastLoadingGames(i, e) { e && i && i.length > 0 && i.forEach(o => { o.isFastLoadingGame = e.get(o.gameId) }) } getFastLoadingGamesLookUp() { return this.fastLoadingGamesLookUp } setFastLoadingGamesLocalStorageCacheMap() { let i = this.cacheManager.getFastLoadingGamesFromLocalCache(); i && (this.fastLoadingGamesLookUp = i, this.fastLoadingGamesSubject.next(this.fastLoadingGamesLookUp)) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CacheManagerService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), ApiPathsHelperService = (() => { class ApiPathsHelperService { transformApi(apiPathConfig, ...args) { return console.info("Api Path Arguments::", args), eval("`" + apiPathConfig + "`") } } return ApiPathsHelperService.\u0275fac = function s(h) { return new (h || ApiPathsHelperService) }, ApiPathsHelperService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: ApiPathsHelperService, factory: ApiPathsHelperService.\u0275fac, providedIn: "root" }), ApiPathsHelperService })(), JackpotDataService = (() => { class s { constructor(i, e, o, r, c, d, f) { this.api = i, this.timerService = e, this.casinoManager = o, this.configProviderService = r, this.apiPathsHelperService = c, this.urlUtility = d, this.invokerProductService = f, this.jackpotSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.jpTickingSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.multiJackpotWidgetCarouselSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.jackpotFeedObservable = this.jackpotSubject.asObservable(), this.multiJackpotWidgetCarouselChangedObservable = this.multiJackpotWidgetCarouselSubject.asObservable(), this.jpTickingObservable = this.jpTickingSubject.asObservable(), this.gameJackpotMap = new Map, this.jackpotGroupNameMap = new Map, this.listenersCnt = 0, this.incrementTickingForJackpotOnGameTiles = 1 } fetchJackpot() { let i = this.configProviderService.provideApiPathsConfig(), e = this.apiPathsHelperService.transformApi(i.jackpots.jpDataOfProduct, this.invokerProductService.getInvokerProduct()), o = this.urlUtility.getApiurl(e); this.api.get(o).subscribe(r => { this.jackpotsCache = r, this.setJackpots(r) }) } startFeed() { let i = this.configProviderService.provideJackpotConfig(); this.configProviderService.provideFeedCacheConfig().enableJackpotFeed && (this.listenersCnt++, this.fetchJackpotPromise || (this.fetchJackpot(), i.enableTickingForJackpotOnGameTiles && this.setJackpotTickers(), this.fetchJackpotPromise = this.timerService.setIntervalOutsideAngularZone(() => { this.fetchJackpot(), i.enableTickingForJackpotOnGameTiles && this.setJackpotTickers() }, i.jpInterval))) } setJackpots(i) { i && Object.keys(i).forEach(e => { this.jackpotGroupNameMap.set(i[e].jackpotGroupName.toLowerCase(), i[e]), i[e] && i[e].gamesList && i[e].gamesList.length > 0 && i[e].gamesList.forEach(o => { this.gameJackpotMap.set(o, { amount: i[e].amount, isHotJackpotGroup: i[e].isHotJackpotGroup, jackpotName: e, jackpotAttributes: i[e].attributes, globalJackpotAttributes: i[e].globalJackpotAttributes }) }) }), this.jackpotSubject.next(this.gameJackpotMap), this.incrementJackpotValues() } changeActiveMultiJackpotWidget(i) { this.multiJackpotWidgetCarouselSubject.next(i) } getJackpotData() { return this.jackpotsCache } getJackpotGroupNameMap() { return this.jackpotGroupNameMap } getJackpotByGroupName(i) { return this.jackpotGroupNameMap && this.jackpotGroupNameMap.size > 0 ? this.jackpotGroupNameMap.get(i) : null } getGameJackpotValue(i) { return this.gameJackpotMap.get(i) } stopFeed() { this.listenersCnt--, 0 === this.listenersCnt && this.fetchJackpotPromise && (this.timerService.clearInterval(this.fetchJackpotPromise), this.fetchJackpotPromise = void 0, this.jackpotsCache = void 0, this.gameJackpotMap = new Map) } setJackpotTickers() { clearInterval(this.tickingInterval), this.tickingInterval = this.timerService.setIntervalOutsideAngularZone(() => { this.incrementJackpotValues() }, 1500) } formatcurrency(i) { let e = i.toString().split("."), o = e[0], r = e[1], c = ""; for (let d = o.length; d > 0; d -= 3)c = d - 3 > 0 ? "," + o.substring(d - 3, d) + c : o.substring(0, d) + c; return c + "." + r } incrementJackpotValues() { let i = this.configProviderService.provideGlobalConfig(), e = this.configProviderService.provideJackpotConfig(); this.gameJackpotMap.forEach((o, r) => { let c = "", d = o.amount; d = d.replace(/\&nbsp;/g, ""); let f = d.match(/[^\d\.\,\s]/g); if (f && f.length > 0) { for (let M = 0; M < f.length; M++)c += f[M]; c = c.replace(/\,/g, ""), c = c.replace(/\./g, "") } if (d = d.replace(/\ /g, ""), d = d.replace(/\\xa0/g, ""), d = d.replace(/\,/g, ""), d = d.replace(/\./g, ""), d = d.replace(c, ""), d = d.replace(/\s/g, ""), d = d.match(/\b[\d, ]+\b/g)[0], d.length > 2) { let M = d.slice(0, d.length - 2), T = d.slice(-2); d = M + "." + T } let y = parseFloat(d.replace(/,/g, "")); i.lobbyConfigurations.IncrementTickingForJackpotOnGameTiles && (this.incrementTickingForJackpotOnGameTiles = +i.lobbyConfigurations.IncrementTickingForJackpotOnGameTiles), y += .01 * this.incrementTickingForJackpotOnGameTiles, y = this.formatcurrency(y.toFixed(2)), e && e.showJackpotCurrencyOnRight ? (y = y.replace(/[,.]/g, M => "," === M ? "." : ","), o.amount = y + " " + c + ".") : o.amount = c + " " + y, this.gameJackpotMap.set(r, o) }), this.jpTickingSubject.next(this.gameJackpotMap) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.fWh), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ApiPathsHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(InvokerProductService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CasinoApiService = (() => { class s { constructor(i, e) { this.casinoWidgetService = i, this.apiService = e } request(i, e) { return this.apiService.request(i, e) } get(i, e, o) { let r = this.casinoWidgetService.getApiParams(e); return this.apiService.get(i, r, o) } post(i, e, o) { return this.apiService.post(i, e, o) } put(i, e, o) { return this.apiService.put(i, e, o) } delete(i, e, o) { return this.apiService.delete(i, e, o) } jsonp(i, e) { return this.apiService.jsonp(i, e) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoWidgetService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CozyBingoDataService = (() => { class s { constructor(i, e, o, r, c) { this.api = i, this.urlUtilityService = e, this.configProviderService = o, this.apiPathsHelperService = r, this.user = c, this.cozyBingoRoomsData = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.cozyBingoRoomsDataObservable = this.cozyBingoRoomsData.asObservable(), this.cozyBingoRecentGamesData = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.cozyBingoRecentGamesObservable = this.cozyBingoRecentGamesData.asObservable(), this.cozyBingoRoomsMap = new Map, this.cozyBingofavourites = [], this.cozyBingoRecentGames = [] } getBingoData(i, e) { let o = this.configProviderService.provideApiPathsConfig(), r = this.apiPathsHelperService.transformApi(o.bingo.bgExternalBingo, this.urlUtilityService.getBingoApiBaseUrl()); this.api.get(r, { fetchBingoRoomsSitecoreData: i, fetchRecentlyPlayed: e }, { withCredentials: !0 }).subscribe(c => { var d, f; if (c) { i && (this.sitecoreResponseRooms = c.bingoRoomsSitecoreResponse.rooms, this.sitecoreResponseRoomnames = c.bingoRoomsSitecoreResponse.roomNames, this.featuresConfiguration = c.dynaconConfigurations.featuresConfiguration, this.globalMessages = c.dynaconConfigurations.globalMessages, this.categoryList = c.dynaconConfigurations.categoryList, this.bingoConfiguration = c.dynaconConfigurations.bingoConfiguration), (null === (f = null === (d = c.scheduleData) || void 0 === d ? void 0 : d.result) || void 0 === f ? void 0 : f.games_list) && this.roomDataMap(c.scheduleData.result.games_list, this.sitecoreResponseRooms, this.sitecoreResponseRoomnames); let y = this.configProviderService.provideCozyBingoConfig(); y.cozyBingoFavouritesInRpwidget && (this.cozyBingofavourites = c.scheduleData.result.favouriteRooms), y.cozyBingoRecentGamesInRpwidget && c.recentGamesData && (this.cozyBingoRecentGames = c.recentGamesData.result.rooms, this.raiseEventForRecentlyPlayed(this.cozyBingoRecentGames)), this.cozyBingoRoomsMap && this.cozyBingoRoomsData.next(this.cozyBingoRoomsMap) } }) } raiseEventForRecentlyPlayed(i) { let e = {}; e.cozybingo = i, this.configProviderService.provideGlobalSearchConfig().isEnabled && i.length > 0 && this.cozyBingoRecentGamesData.next(e) } roomDataMap(i, e, o) { if (this.schedulePolling && clearInterval(this.schedulePolling), i && e) { let r = e.filter(c => "default" == c.roomId); r && (r = r[0]), i && i.forEach(c => { let d = e.filter(f => f.roomId == c.id); d && d.length > 0 ? (d = d[0], d.desktopImage || (d.desktopImage = r.desktopImage)) : d = r, o && d && o[d.roomId] && (d.titleFromRoomNames = o[d.roomId]), c.sitecoreInfo = d, "default" !== c.sitecoreInfo.roomId && c.sitecoreInfo.titleFromRoomNames && (c.name = c.sitecoreInfo.titleFromRoomNames), this.cozyBingoRoomsMap.set(c.id, c) }) } } getRoomdatabyId(i) { return this.cozyBingoRoomsMap.get(i) } getcozybingofavourites() { let i = []; return this.cozyBingoRoomsMap && this.cozyBingoRoomsMap.size > 0 && this.cozyBingofavourites && this.cozyBingofavourites.length > 0 && (i = this.cozyBingofavourites.filter(e => this.cozyBingoRoomsMap.has(e))), i } checkForFavouriteGame(i) { return !!(this.user.isAuthenticated && null != i && null != i.fromCasino && !i.fromCasino && this.cozyBingofavourites.length > 0) && this.cozyBingofavourites.indexOf(i.gameId) > -1 } getcozybingorecentgames() { let i = []; return this.cozyBingoRoomsMap && this.cozyBingoRoomsMap.size > 0 && this.cozyBingoRecentGames && this.cozyBingoRecentGames.length > 0 && (i = this.cozyBingoRecentGames.filter(e => this.cozyBingoRoomsMap.has(e))), i } getFeatureConfigs() { return this.featuresConfiguration } getGlobalMessages() { return this.globalMessages } getcategoryList() { return this.categoryList } getbingoConfiguration() { return this.bingoConfiguration } ReloadFeed(i) { let e = 0, o = (new Date).getTime(); if (i && 0 != i.length) { let r = i.filter(d => this.cozyBingofavourites && this.cozyBingofavourites.indexOf(d.id) > -1 && null != d.status.state_end_time && new Date(1e3 * d.status.state_end_time).getTime() > o); const c = Math.min.apply(Math, r.map(d => d.status.state_end_time)); c && (e = Math.max(0, new Date(1e3 * c).getTime() - o)) } this.bingoConfiguration && this.bingoConfiguration.schedulePagePolling && (e = e > this.bingoConfiguration.scheduleLobbyRefreshTimeFrame || 0 == e ? this.bingoConfiguration.scheduleLobbyRefreshTimeFrame : e), e > 0 && (this.schedulePolling = setTimeout(() => { this.getBingoData(!1, !1) }, e)) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ApiPathsHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), RecentGamesService = (() => { class s { constructor(i, e, o, r, c, d, f, y, M) { this.api = i, this.tracking = e, this.invokerProductService = o, this.urlUtility = r, this.configProviderService = c, this.casinoManager = d, this.cacheManager = f, this.apiPathsHelperService = y, this.cozyBingoDataService = M, this.recentGames = [], this.recentGamesFromAllLobby = [], this.mostRecentPlayedGames = [], this.recentGamesSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.recentGamesFeedObservable = this.recentGamesSubject.asObservable(), this.recentGamesFromAllLobbySubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.recentGamesFeedFromAllLobbyObservable = this.recentGamesFromAllLobbySubject.asObservable(), this.isRpfavWidgetDisplayed = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.isRpfavWidgetDisplayedObservable = this.isRpfavWidgetDisplayed.asObservable(), this.collectiveRecentGames = {} } setRecentGames() { let i = this.configProviderService.provideApiPathsConfig(), e = this.configProviderService.provideFeaturesConfig(), o = this.apiPathsHelperService.transformApi(i.nonCriticalFeeds.rpGamesOfProduct, this.invokerProductService.getInvokerProduct()), r = this.urlUtility.getApiurl(o); this.api.get(r, null, { withCredentials: !0 }).subscribe(c => { var d, f; this.collectiveRecentGames = c, this.recentGamesFromAllLobby = (null === (d = null == c ? void 0 : c.casino) || void 0 === d ? void 0 : d.map(y => y.gamevariant)) || [], c.casino && ((null == e ? void 0 : e.rpGamesFilterInLiveCasino) && c.casino.length > 0 && "livecasino" == (null === (f = this.casinoManager.getCurrentLobby()) || void 0 === f ? void 0 : f.toLowerCase()) && (this.collectiveRecentGames = (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(c), c.casino = this.filterLiveCasinoGames(c.casino)), this.mostRecentPlayedGames = c.casino, this.recentGames = c.casino.map(y => y.gamevariant)), (null == e ? void 0 : e.rpWidgetGamesFilterInLiveCasino) && (this.recentGamesFromAllLobby = this.recentGames), this.recentGamesSubject.next(this.recentGames), this.recentGamesFromAllLobbySubject.next(this.recentGamesFromAllLobby), this.collectiveRecentGames && this.raiseEventForRecentlyPlayed(this.collectiveRecentGames) }, c => { this.recentGamesSubject.next(this.recentGames), this.recentGamesFromAllLobbySubject.next(this.recentGamesFromAllLobby) }) } filterLiveCasinoGames(i) { var e; let o = this.cacheManager.getAllCategoriesFromLocalCache("LiveCasino", this.casinoManager.getInvokerProduct()), r = null === (e = null == o ? void 0 : o.lsGameMetaDataMap) || void 0 === e ? void 0 : e.map(c => c && c[0]); return (null == i ? void 0 : i.filter(c => null == r ? void 0 : r.includes(c.gamevariant))) || [] } getrecentGames() { return this.recentGames && this.recentGames.length > 0 ? this.recentGames : [] } getrecentGamesFromAllLobby() { var i; return (null === (i = this.recentGamesFromAllLobby) || void 0 === i ? void 0 : i.length) > 0 ? this.recentGamesFromAllLobby : [] } raiseEventForRecentlyPlayed(i) { let e = {}; this.configProviderService.provideGlobalSearchConfig().isEnabled && (this.cozyBingoDataService.cozyBingoRecentGamesObservable.subscribe(r => { e = r ? Object.assign(i, r) : i }), dispatchEvent(new CustomEvent("casino:Recent_Games_Updated", { detail: e }))), this.tracking.triggerEvent("Event.RecentlyPlayed", { "user.recentGames": e }) } getMostRecentlyPlayedGames() { return this.mostRecentPlayedGames && this.mostRecentPlayedGames.length > 0 ? this.mostRecentPlayedGames : [] } getMostRecentlyPlayedRouteInfo(i) { let e = this.configProviderService.provideRecentlyPlayedGamesConfig(); if (e.isMostRecentlyPlayedEnabled) { let o = e.recentlyPlayedRoutes; for (let r = 0; r < o.length; r++)if (o[r].mostPlayedRoute.toLowerCase() == i.toLowerCase()) return o[r] } } isRpfavDisplayed(i) { this.isRpfavWidgetDisplayed.next(i) } getRecentGames() { return this.collectiveRecentGames } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(InvokerProductService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CacheManagerService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ApiPathsHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CozyBingoDataService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), TeaserService = (() => { class s { constructor(i, e, o) { this.api = i, this.urlUtility = e, this.configProviderService = o, this.teaserDataPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.teaserDataObservable = this.teaserDataPublisher.asObservable(), this.optMiniTeasersMap = new Map, this.optMiniTeasersMapPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.optMiniTeasersMapObservable = this.optMiniTeasersMapPublisher.asObservable(), this.videoMutedStatus = !0, this.teaserMutedSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X({ isMuted: !0 }), this.teaserMutedObservable = this.teaserMutedSubject.asObservable(), this.indexChangedSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.indexChangedObservable = this.indexChangedSubject.asObservable(), this.indexChangedDataSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.indexChangedDataObservable = this.indexChangedDataSubject.asObservable() } setMutedStatus(i) { this.videoMutedStatus = i, this.teaserMutedSubject.next({ isMuted: i }) } setIndex(i) { this.indexChangedSubject.next(i) } getMutedStatus() { return this.videoMutedStatus } muteAllVideos() { this.videoMutedStatus = !0, this.teaserMutedSubject.next({ muteAllVideos: !0 }) } setTeasers() { let i = this.configProviderService.provideApiPathsConfig(), e = this.urlUtility.getApiurl(i.teasers.teasersData); this.api.get(e, {}, { withCredentials: !0 }).subscribe(o => { this.headerTeasers = o, this.teaserDataPublisher.next(o) }) } getTeaserData() { return this.headerTeasers } indexChangeTeaserData(i) { this.indexChangedDataSubject.next(i) } fetchOptMiniTeasers(i) { if (i && i.length) { let e = this.configProviderService.provideApiPathsConfig(), o = this.urlUtility.getApiurl(e.teasers.optMiniTeasersData); this.api.post(o, i, { withCredentials: !0 }).subscribe(r => { this.optMiniTeasersMap && this.optMiniTeasersMap.size > 0 && this.optMiniTeasersMap.clear(), r.teasers.forEach(c => { this.optMiniTeasersMap.set(c.path, c.contents) }), this.mercuryBgImage = r.mercuryBgImage, this.optMiniTeasersMapPublisher.next(!0) }) } } getOptMiniTeasersMap() { return this.optMiniTeasersMap } getOptMiniTeasers(i) { return this.optMiniTeasersMap.get(i) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(); class OptMiniTeasersResponse { } let BingoFavouriteService = (() => { class s { constructor(i, e, o, r, c, d) { this.api = i, this.lhProductHomepagesConfig = e, this.router = o, this.urlUtilityService = r, this.apiPathsHelperService = c, this.configProviderService = d } addFavourite(i, e) { let o = this.configProviderService.provideApiPathsConfig(), r = this.apiPathsHelperService.transformApi(o.bingo.bgSetFavourite, this.urlUtilityService.getBingoApiBaseUrl()); return this.api.get(r, { roomId: i, isFavourite: !0, accountName: e }) } removeFavourite(i, e) { let o = this.configProviderService.provideApiPathsConfig(), r = this.apiPathsHelperService.transformApi(o.bingo.bgSetFavourite, this.urlUtilityService.getBingoApiBaseUrl()); return this.api.get(r, { roomId: i, isFavourite: !1, accountName: e }) } getFavouriteUrl(i, e, o, r) { let c = this.configProviderService.provideApiPathsConfig(); return this.apiPathsHelperService.transformApi(c.bingo.bgForcedFavourite, this.urlUtilityService.getBingoApiBaseUrl(), i, e, o, r, this.router.url) } getFavouriteWidgetGames(i, e) { let o = this.configProviderService.provideApiPathsConfig(), r = this.apiPathsHelperService.transformApi(o.bingo.bgSchedule, this.urlUtilityService.getBingoApiBaseUrl()); return this.api.get(r, { sso: i, accountName: e }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.t6E), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_router__WEBPACK_IMPORTED_MODULE_8__.F0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ApiPathsHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), FavouriteService = (() => { class s { constructor(i, e, o, r, c, d, f, y, M, T, P, G) { this.api = i, this.user = e, this.messageQueueService = o, this.navigator = r, this.casinoWidgetService = c, this.configProviderService = d, this.cookie = f, this.bingoFavouriteService = y, this.tracking = M, this.urlUtility = T, this.cozyBingoService = P, this.apiPathsHelperService = G, this.favouriteGames = [], this.otherProductFavouriteGames = [], this.favouriteGamesSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.favouriteGamesFeedObservable = this.favouriteGamesSubject.asObservable(), this.otherProductFavouriteGamesSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.bingoProductFavouriteGamesSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.otherProductFavouriteGamesFeedObservable = this.otherProductFavouriteGamesSubject.asObservable(), this.bingoProductFavouriteGamesFeedObservable = this.bingoProductFavouriteGamesSubject.asObservable(), this.quickInfoPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.quickIconObservable = this.quickInfoPublisher.asObservable(), this.unsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_9__.x, window.addEventListener("cc:casinocore_AB_fav_game", x => { x && this.setFavouriteGames() }) } setFavouriteGames() { let i = this.configProviderService.provideApiPathsConfig(), e = this.urlUtility.getApiurl(i.nonCriticalFeeds.favGames); this.api.get(e, null, { withCredentials: !0 }).subscribe(o => { this.favouriteGames = o, this.favouriteGamesSubject.next(this.favouriteGames), this.cookie.getObject("favouriteGame") && (this.toggleGameFavourite(this.cookie.getObject("favouriteGame"), !0), this.cookie.remove("favouriteGame")) }, o => { this.favouriteGamesSubject.next(this.favouriteGames) }) } getFavouriteGames() { return this.favouriteGames && this.favouriteGames.length > 0 ? this.favouriteGames : [] } updateOtherProductFavouriteGames(i, e) { i ? this.otherProductFavouriteGames.push(e) : this.otherProductFavouriteGames && this.otherProductFavouriteGames.splice(this.otherProductFavouriteGames.indexOf(e), 1), this.otherProductFavouriteGamesSubject.next(this.otherProductFavouriteGames), this.publishingFavObervable(i, e) } publishingFavObervable(i, e) { let o; o = { isFavourite: i, gameName: e }, this.bingoProductFavouriteGamesSubject.next(o) } fetchGames(i, e = !1, o = !1) { let r = this.configProviderService.provideGlobalConfig(); if (e && i && this.checkForFavouriteGame(i)) this.tracking.triggerEvent("GameInteraction", { "component.Game.interaction": "Remove_Game_Favorites" }); else if (this.user.isAuthenticated) { let c = i.gameId, d = !this.checkForFavouriteGame(i); if (null == i.fromCasino || i.fromCasino) { let f = this.urlUtility.getApiurl("update-favourite-games"); this.api.put(f, { gameVariantName: c, isFavourite: d }, { withCredentials: !0, showSpinner: !1 }).subscribe(M => { if (M && M && 0 === M.errorcode) { this.favouriteGames = M.favourites; let T = M.favourites; this.raiseFavEvent(i), this.favouriteGamesSubject.next(this.favouriteGames), T && T.indexOf(i.gameId) > -1 && !o ? this.tracking.triggerEvent("GameInteraction", { "component.Game.interaction": "Add_Game_Favorites" }) : o || this.tracking.triggerEvent("GameInteraction", { "component.Game.interaction": "Remove_Game_Favorites" }) } }, M => { if (M && M.redirect) { const T = this.messageQueueService.addError("SessionExpired"); this.messageQueueService.remove(T), this.messageQueueService.add(r.messages.SessionExpired, "Information", "TempData"), this.navigator.goTo(M.redirect, { forceReload: !0 }) } }) } else i.isFavourite ? this.bingoFavouriteService.removeFavourite(i.gameId, this.user.id).subscribe(f => { f.result && (this.cozyBingoService.getBingoData(!1, !1), this.publishingFavObervable(!1, i.gameId), this.casinoWidgetService.isCasinoWidget() || i.fromCozybingo) && this.casinoWidgetService.postMessageToParent("favupdated", { categoryid: "rcp-widget", roomid: i.gameId, isFavourite: !1 }) }, f => { }) : this.bingoFavouriteService.addFavourite(i.gameId, this.user.id).subscribe(f => { f.result && (this.cozyBingoService.getBingoData(!1, !1), this.publishingFavObervable(!0, i.gameId), this.casinoWidgetService.isCasinoWidget() || i.fromCozybingo) && this.casinoWidgetService.postMessageToParent("favupdated", { categoryid: "rcp-widget", roomid: i.gameId, isFavourite: !0 }) }, f => { }) } } removeQuickInfoClass() { this.quickInfoPublisher.next(!0) } toggleGameFavourite(i, e = !1, o = !1) { this.fetchGames(i, e, o) } checkForFavouriteGame(i) { if (this.user.isAuthenticated && null != i) { if (null != i.fromCasino && !i.fromCasino && this.otherProductFavouriteGames && !i.fromCozybingo) return this.otherProductFavouriteGames.indexOf(i.gameId) > -1; if (i.fromCozybingo) return i.isFavourite; if (this.favouriteGames) return this.favouriteGames && this.favouriteGames.indexOf(i.gameId) > -1 } return !1 } raiseFavEvent(i) { let e = this.checkForFavouriteGame(i), r = new CustomEvent("cc:casinocore_fav_game", { detail: { gameId: i.gameId, isFavourite: e } }); window.dispatchEvent(r) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoWidgetService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.N_8), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(BingoFavouriteService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CozyBingoDataService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ApiPathsHelperService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), UnfinishedGamesService = (() => { class s { constructor(i, e, o, r, c, d) { this.api = i, this.urlUtility = e, this.configProviderService = o, this.casinoManager = r, this.cacheManager = c, this.invokerProductService = d, this.unfinishedGames = [], this.unfinishedGamesFromAllLobby = [], this.unfinishedGamesSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.unfinishedFeedObservable = this.unfinishedGamesSubject.asObservable(), this.unfinishedGamesFromAllLobbySubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.unfinishedFeedFromAllLobbyObservable = this.unfinishedGamesFromAllLobbySubject.asObservable() } setUnfinishedGames() { let i = this.configProviderService.provideApiPathsConfig(), e = this.configProviderService.provideFeaturesConfig(), o = this.urlUtility.getApiurl(i.gamesServices.unfinishedGames) + "?invokerProduct=" + this.invokerProductService.getInvokerProduct(); this.api.get(o, null, { withCredentials: !0 }).subscribe(r => { var c; this.unfinishedGames = [], r && (this.unfinishedGames = r, this.unfinishedGamesFromAllLobby = (0, lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(this.unfinishedGames), (null == e ? void 0 : e.rpGamesFilterInLiveCasino) && "livecasino" == (null === (c = this.casinoManager.getCurrentLobby()) || void 0 === c ? void 0 : c.toLowerCase()) && this.filterLiveCasinoGames(this.unfinishedGames), (null == e ? void 0 : e.rpWidgetGamesFilterInLiveCasino) && (this.unfinishedGamesFromAllLobby = this.unfinishedGames), this.unfinishedGamesSubject.next(this.unfinishedGames), this.unfinishedGamesFromAllLobbySubject.next(this.unfinishedGamesFromAllLobby)) }) } filterLiveCasinoGames(i) { var e, o; let r = this.cacheManager.getAllCategoriesFromLocalCache("LiveCasino", this.casinoManager.getInvokerProduct()); this.unfinishedGames = (null === (o = null === (e = null == r ? void 0 : r.lsGameMetaDataMap) || void 0 === e ? void 0 : e.map(c => c && c[0])) || void 0 === o ? void 0 : o.filter(c => null == i ? void 0 : i.includes(c))) || [] } getUnfinishedGamesFromAllLobby() { return this.unfinishedGamesFromAllLobby } getUnfinishedGames() { return this.unfinishedGames } checkForUnfinishedGame(i) { return this.unfinishedGamesFromAllLobby && this.unfinishedGamesFromAllLobby.indexOf(i.gameId) > -1 } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CacheManagerService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(InvokerProductService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), DiscoverFeedService = (() => { class s { constructor(i, e, o) { this.api = i, this.configProviderService = e, this.urlUtility = o, this.discoverFeedObject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.displayDiscoverSticker = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.discoverFeedObservable = this.discoverFeedObject.asObservable(), this.discoverFeedStickerObservable = this.displayDiscoverSticker.asObservable() } GetDiscoverFeedSitecoreData() { let i = this.configProviderService.provideApiPathsConfig(), e = this.urlUtility.getApiurl(i.disjointFeeds.dsFeedData); this.api.get(e).subscribe(o => { this.discoverFeedData = o, this.expiryDatecal(o.discoverContainer), this.discoverFeedObject.next(o) }, o => { }) } getDiscoverFeed() { return this.discoverFeedData } getStickerExpiryTime(i) { this.displayDiscoverSticker.next(i) } expiryDatecal(i) { if (i.highlightExpiryDate) { let e = new Date(i.highlightExpiryDate), o = new Date; this.isStickerDisplay = (e - o) / 1e3 / 60 > 0, this.isStickerDisplay && this.getStickerExpiryTime(i) } } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), TimeZoneService = (() => { class s { convertToClientTimeZone(i, e) { let o = this.getClientTimeZoneSeconds(i, e); return this.formatTimeFromSeconds(o) } getClientTimeZoneSeconds(i, e) { let o = this.getSecondsFromTimeString(i); return this.getUTCSeconds(o, e) - 60 * (new Date).getTimezoneOffset() } getUTCSeconds(i, e) { return i - this.getOffsetFromTimeZoneSeconds(e) } getOffsetFromTimeZoneSeconds(i) { return "UTC" === i ? 0 : -864e3 } formatTimeNumber(i) { return 0 !== i && i ? i < 10 ? "0" + i : i.toString() : "00" } getSecondsFromTimeString(i) { if (i) { let e = i.split(":"); return 60 * (e[0] ? Number(e[0]) : 0) * 60 + 60 * (e[1] ? Number(e[1]) : 0) + (e[2] ? Number(e[2]) : 0) } return null } formatTimeFromSeconds(i) { let e = Math.floor(i / 3600), o = Math.floor((i - 60 * e * 60) / 60), r = i - (60 * e * 60 + 60 * o); return this.formatTimeNumber(e) + ":" + this.formatTimeNumber(o) + ":" + this.formatTimeNumber(r) } getTimerStartInstance(i, e) { let o = this.convertToClientTimeZone(i, e), r = this.getSecondsFromTimeString(o), c = new Date, f = r - (60 * c.getHours() * 60 + 60 * c.getMinutes() + c.getSeconds()); return f < 0 ? null : this.formatTimeFromSeconds(f) } getDateFormat(i) { let e = i.getMonth() + 1, c = i.getDate() + "/" + e + "/" + i.getFullYear(), d = i.getHours(); return c + "  | " + d + ":" + i.getMinutes() + " " + (d >= 12 ? "PM" : "AM") } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), LiveCasinoService = (() => { class s { constructor(i, e, o, r, c) { this.api = i, this.timeZoneService = e, this.configProvider = o, this.urlUtility = r, this.timerService = c, this.liveGamesLookUp = new Map, this.liveGamesSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.liveGamesFeedObservable = this.liveGamesSubject.asObservable(), this.liveGameswithSitecoreSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.liveGameswithSitecoreObservable = this.liveGameswithSitecoreSubject.asObservable(), this.liveCasinoApiFeedStarted = !1, this.listenersCnt = 0 } onAppInit() { this.liveGameswithSitecoreObservable.subscribe(i => { i && this.startLiveCasinoApiTntervalFeed() }) } startLiveCasinoApiTntervalFeed() { this.listenersCnt++; let i = this.configProvider.provideLiveCasinoConfig(); this.liveCasinoApiFeedIntervalRefresh = this.timerService.setIntervalOutsideAngularZone(() => { this.getLiveCasinoData(!1) }, i.liveCasinoApiFeedInterval) } getLiveCasinoData(i) { let e = { headers: {} }; e.headers["Cache-Control"] = "no-cache", e.headers.Pragma = "no-cache", e.headers.Expires = "0"; let o = this.configProvider.provideApiPathsConfig(), r = this.urlUtility.getApiurl(o.liveCasino.liveCasinoData); this.api.get(r, { isSitecoreInfoRequired: i }, e).subscribe(c => { this.getLiveCasinoDataSuccess(c, i) }, c => { }) } getLiveCasinoDataSuccess(i, e) { i && i.liveCasinoApiDataItems && i.liveCasinoApiDataItems.length > 0 && (i.liveCasinoApiDataItems.forEach(o => { o && o.gamevariantname && (!(o.gameType && "blackjack" === o.gameType.toLowerCase()) && !o.seatsTaken && (o.seatsTaken = []), this.liveGamesLookUp.set(o.gamevariantname.toLowerCase(), o)) }), i.liveCasinoApiItemSitecoreData && (this.liveCasinoApiSitecoreInfo = i.liveCasinoApiItemSitecoreData), this.liveGamesSubject.next(this.liveGamesLookUp), e && (this.liveGameswithSitecoreSubject.next(this.liveGamesLookUp), this.isSitecoreInfoPublished = !0)) } getSitecoreInfoPublishedStatus() { return this.isSitecoreInfoPublished } getLiveGamesLookUp() { return this.liveGamesLookUp } getLiveGameLookUpInfo(i) { if (this.liveGamesLookUp.size > 0) { let e = this.liveGamesLookUp.get(i); if (e) return e.vendorName = e.vendorname, e } } getLiveCasinoApiSitecoreInfo() { return this.liveCasinoApiSitecoreInfo } getFlagIconURL(i) { let e = this.configProvider.provideGameConfig(), o = this.configProvider.provideLiveCasinoConfig(); return i.language = i.language, i && i.language && "en" != i.language.toLowerCase() ? e.host + o.flagUrlPattern.replace("{language}", i.language) : null } isTableOnline(i) { let e = this.getLiveGameLookUpInfo(i); if (!e) return !0; if (!e.tableStatus) return !1; if (!e.countdown || "full time" === e.countdown.type.toLowerCase()) return !0; if ("bounded" === e.countdown.type.toLowerCase()) { let o = this.timeZoneService.getTimerStartInstance(e.countdown.time + ":00", "UTC"); return !(this.timeZoneService.getSecondsFromTimeString(o) > 0) } } setLiveCasinoStartVariable(i) { this.liveCasinoApiFeedStarted = i } getLiveCasinoStartVariable() { return this.liveCasinoApiFeedStarted } clearLiveCasinoDataPoints() { this.liveGamesLookUp = new Map, this.liveGamesSubject.next(this.liveGamesLookUp) } secondsToStartTable(i) { let e = this.timeZoneService.getTimerStartInstance(i + ":00", "UTC"); return this.timeZoneService.getSecondsFromTimeString(e) } stopFeed() { this.listenersCnt--, 0 === this.listenersCnt && this.liveCasinoApiFeedIntervalRefresh && (this.timerService.clearInterval(this.liveCasinoApiFeedIntervalRefresh), this.liveCasinoApiFeedIntervalRefresh = void 0, this.liveGamesSubject && this.liveGamesSubject.unsubscribe(), this.liveGameswithSitecoreSubject && this.liveGameswithSitecoreSubject.unsubscribe(), this.liveCasinoApiSitecoreInfo && (this.liveCasinoApiSitecoreInfo = void 0), this.isSitecoreInfoPublished && (this.isSitecoreInfoPublished = !1)) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(TimeZoneService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.fWh)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), NewsFeedService = (() => { class s { constructor(i, e, o, r, c) { this.api = i, this.tracking = e, this.configProviderService = o, this.casinoManager = r, this.urlUtility = c, this.newsFeedSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.newsFeedObservable = this.newsFeedSubject.asObservable() } setNewsFeed() { let i = this.configProviderService.provideApiPathsConfig(), e = this.urlUtility.getApiurl(i.disjointFeeds.nsFeedSitecoreData); this.api.get(e).subscribe(o => { o && this.setNewsFeedResponse(o) }, o => { }) } setNewsFeedResponse(i) { this.newsFeedData = i, this.newsFeedSubject.next(i) } getNewsFeedData() { return this.newsFeedData } trackEvent(i, e, o, r, c) { let d = this.configProviderService.provideNewsFeedCasinoConfig(); this.tracking.triggerEvent("Event.Clicks", "Game_Launch" != i ? { "component.CategoryEvent": "NewsFeed", "component.LabelEvent": i, "component.ActionEvent": e, "component.PositionEvent": o, "component.LocationEvent": this.casinoManager.IsFeatureEnabledforLobbytype("lobbyType", d.newsFeedPosition), "component.EventDetails": r, "component.URLClicked": "not applicable" } : { "component.CategoryEvent": "NewsFeed", "component.LabelEvent": i, "component.ActionEvent": e, "component.PositionEvent": o, "component.LocationEvent": this.casinoManager.IsFeatureEnabledforLobbytype("lobbyType", d.newsFeedPosition), "component.EventDetails": r, "component.URLClicked": "not applicable", "component.DisplayGameName": c }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), PromotedGamesService = (() => { class s { constructor(i, e, o, r, c) { this.api = i, this.urlUtility = e, this.configProviderService = o, this.casinoManager = r, this.cacheManager = c, this.promotedGames = [], this.promotedGamesFromAllLobby = [], this.promotedGamesSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.promotedFeedObservable = this.promotedGamesSubject.asObservable(), this.promotedGamesFromAllLobbySubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.promotedFeedFromAllLobbyObservable = this.promotedGamesFromAllLobbySubject.asObservable() } setPromotedGames() { let i = this.configProviderService.provideApiPathsConfig(), e = this.configProviderService.provideFeaturesConfig(), o = this.urlUtility.getApiurl(i.gamesServices.promotedGames); this.api.get(o).subscribe(r => { var c; if (this.promotedGames = [], r) { for (let d = 0; d < r.length; d++)this.promotedGames.push(r[d].metadata.id.itemName); this.promotedGamesFromAllLobby = (0, lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(this.promotedGames), (null == e ? void 0 : e.rpGamesFilterInLiveCasino) && "livecasino" == (null === (c = this.casinoManager.getCurrentLobby()) || void 0 === c ? void 0 : c.toLowerCase()) && this.filterLiveCasinoGames(this.promotedGames), (null == e ? void 0 : e.rpWidgetGamesFilterInLiveCasino) && (this.promotedGamesFromAllLobby = this.promotedGames), this.promotedGamesSubject.next(this.promotedGames), this.promotedGamesFromAllLobbySubject.next(this.promotedGamesFromAllLobby) } }) } filterLiveCasinoGames(i) { var e, o; let r = this.cacheManager.getAllCategoriesFromLocalCache("LiveCasino", this.casinoManager.getInvokerProduct()); this.promotedGames = (null === (o = null === (e = null == r ? void 0 : r.lsGameMetaDataMap) || void 0 === e ? void 0 : e.map(c => c && c[0])) || void 0 === o ? void 0 : o.filter(c => null == i ? void 0 : i.includes(c))) || [] } getPromotedGames() { return this.promotedGames } getPromotedGamesFromAllLobby() { return this.promotedGamesFromAllLobby } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CacheManagerService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), FreespinSummaryService = (() => { class s { constructor(i, e, o, r, c) { this.api = i, this.tracking = e, this.configProviderService = o, this.logger = r, this.urlUtility = c, this.freeSpinsGameDetails = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.freeSpinsCategoryDetails = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.freeSpinsRewardDetails = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.freespinsMoreInfoClick = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.freeSpinsGameDetailsObser = this.freeSpinsGameDetails.asObservable(), this.freeSpinsCategoryDetailsObser = this.freeSpinsCategoryDetails.asObservable(), this.freeSpinsRewardDetailsObser = this.freeSpinsRewardDetails.asObservable(), this.freespinsMoreInfoClickObser = this.freespinsMoreInfoClick.asObservable(), this.freeSpinsGameDetailsMap = new Map, this.freeSpinsCategoryDetailsMap = new Map, this.freeSpinsRewardDetailsMap = new Map, this.moreinfoUrl = "" } setFreespinsummary() { let i = this.configProviderService.provideApiPathsConfig(), e = this.urlUtility.getApiurl(i.freeSpins.spinsSummary); this.api.get(e, {}, { withCredentials: !0 }).subscribe(o => { this.setFreespinsummaryData(o) }, o => { }) } setFreespinsummaryData(i) { if (i) { let e = i.freeSpinSummaryData, o = i.freeSpinRewardDetails; if (this.timeZoneData = i.timeZone, e) { if (e.gameDetails && Object.keys(e.gameDetails) && Object.keys(e.gameDetails).length > 0) { for (let r in e.gameDetails) this.freeSpinsGameDetailsMap.set(r, e.gameDetails[r]); this.freeSpinsGameDetails.next(this.freeSpinsGameDetailsMap) } else this.freeSpinsGameDetailsMap.clear(), this.freeSpinsGameDetails.next(this.freeSpinsGameDetailsMap); if (e.gameTypeDetails) { for (let r in e.gameTypeDetails) this.freeSpinsCategoryDetailsMap.set(r, e.gameTypeDetails[r]); this.freeSpinsCategoryDetails.next(this.freeSpinsCategoryDetailsMap) } o && o.rewardDetails && o.rewardDetails.length > 0 ? (o.rewardDetails.forEach(r => { this.freeSpinsRewardDetailsMap.set(r.userRewardId, r) }), this.freeSpinsRewardDetails.next(this.freeSpinsRewardDetailsMap)) : (this.freeSpinsRewardDetailsMap.clear(), this.freeSpinsRewardDetails.next(this.freeSpinsRewardDetailsMap)) } } } getTimeZoneInfo() { return this.timeZoneData } getFreespinCountInfoForGame(i) { return this.freeSpinsGameDetailsMap.get(i) } getFreespinCountInfoForCategory(i) { return this.freeSpinsCategoryDetailsMap.get(i) } getFreeSpinRewardDetail(i) { return this.freeSpinsRewardDetailsMap.get(i) } getFreeSpinRewardDetails(i) { this.configProviderService.providefreeSpinsClientConfig().freeSpinsMoreInfo && (this.moreinfoUrl = this.configProviderService.providefreeSpinsClientConfig().freeSpinsMoreInfo.url); let e = []; return i && i.length > 0 && i.forEach(o => { let r = this.getFreeSpinRewardDetail(o); if (r) { let c = String(r.userRewardId), d = this.moreinfoUrl.replace("{freespinId}", c); r.moreinfoUrl = d, e.push(r) } }), e } handleRejection(i) { if (i) { this.logger.debug("http code: " + i.status + "; message: " + i.message); let e = ""; i && i.errorCode && (e = i.errorCode), this.tracking.updateDataLayer({ "page.name": "MyFreeSpins" }), this.tracking.reportError({ message: "Technical error", code: e }), this.tracking.updateDataLayer({ pageName: "freespin", v68: "Technical error " + e }), this.logger.debug("error", i) } } freespinMoreinfoClick() { this.freespinsMoreInfoClick.next(!0) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.YdH), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GeolocationCoordinatorService = (() => { class s { constructor(i, e, o, r, c) { this.windowRef = i, this.casinoManager = e, this.deviceservice = o, this.userService = r, this.configProviderService = c, this._initializePending = !1, this._uninitializePending = !1, this.coordinationSynchronizer = d => { this.geolocationConfig.isEnabled && this.geolocationConfig.synchronizeCoordination && d && d.data && d.data.trim && d.data.trim() === this.geolocationConfig.synchronizationEvent.trim() && this.geolocationCoordinator.uninitialize() }, this.geolocationConfig = this.configProviderService.provideGeoLocationConfig(), this.hookupCoordinator(), addEventListener("geolocationcoordinator:bootstrapped", () => { this.hookupCoordinator() }, { once: !0 }) } get appDownloadUrl() { return this.geolocationCoordinator.appDownloadUrl } probe() { this.geolocationCoordinator.probe() } initialize(i) { this.geolocationCoordinator ? this.geolocationCoordinator.initialize({ session: i && i.session || this.userService && this.userService.ssoToken || "NotAvailable", channelId: i && i.channelId || null, plcIdentifier: i && i.plcIdentifier || null, showPLCPopup: i && i.showPLCPopup }) : (this._initializePending = !0, this._initializationInput = i) } uninitialize() { this.geolocationCoordinator ? this.geolocationCoordinator.uninitialize() : this._uninitializePending = !0 } set onInitialized(i) { this.geolocationCoordinator.onInitialized = i } set onUninitialized(i) { this.geolocationCoordinator.onUninitialized = i } set onError(i) { this.geolocationCoordinator.onError = i } set onProbed(i) { this.geolocationCoordinator.onProbed = i } registerUnload() { this.windowRef.nativeWindow.onunload = () => { console.info("Window onunload::"), this.uninitialize() }, this.windowRef.nativeWindow.removeEventListener("message", this.coordinationSynchronizer) } registerSynchronization() { this.geolocationConfig = this.configProviderService.provideGeoLocationConfig(), this.geolocationConfig.isEnabled && this.geolocationConfig.synchronizeCoordination && this.windowRef.nativeWindow.addEventListener("message", this.coordinationSynchronizer) } getPLCIdentifier() { return this.casinoManager.isTouch() ? this.deviceservice.isiOS ? "oobeeiOS" : "oobeeAndroid" : "geocomply" } onGeolocationError(i) { this.onError && this.onError(i) } onGeolocationInitialized(i) { this.onInitialized && this.onInitialized(i) } onGeolocationUninitialized() { this.onUninitialized && this.onUninitialized() } onGeolocationProbed(i) { this.onProbed && this.onProbed(i) } hookupCoordinator() { const i = window.geolocationCoordinator; if (i) { if (this.geolocationCoordinator = i, this.geolocationCoordinator.onError = this.onGeolocationError.bind(this), this.geolocationCoordinator.onInitialized = this.onGeolocationInitialized.bind(this), this.geolocationCoordinator.onUninitialized = this.onGeolocationUninitialized.bind(this), this.geolocationCoordinator.onProbed = this.onGeolocationProbed.bind(this), this.onAvailable && this.onAvailable.emit(this), this._initializePending) return this._initializePending = !1, this.initialize(this._initializationInput), void (this._initializationInput = null); this._uninitializePending && (this._uninitializePending = !1, this.uninitialize()) } } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.X9E), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U8N), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), PlayerSegmentationService = (() => { class s { constructor(i, e, o, r) { this.user = i, this.api = e, this.urlUtility = o, this.configProviderService = r, this.playerSegmentionSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.playerSegmentDataObservable = this.playerSegmentionSubject.asObservable() } setPlayerSegmentationData() { if (this.user.isAuthenticated) { let i = this.configProviderService.provideApiPathsConfig(), e = this.urlUtility.getApiurl(i.playerSegmentation.playerData); this.api.get(e).subscribe(o => { this.playerSegmentData = o, this.playerSegmentionSubject.next(o) }) } } getPlayerSegmentationData() { return this.playerSegmentData } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GeolocationActivatorService = (() => { class s { constructor(i, e) { this.configProviderService = i, this.activatedRoute = e } get isActive() { let i = this.configProviderService.provideGeoLocationConfig(), e = !1; const o = this.activatedRoute.snapshot.queryParamMap.get("_disableFeature"); return e = o && o.trim().split(",").some(r => "geolocation" === r.toLowerCase()), !e && i.isEnabled } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_router__WEBPACK_IMPORTED_MODULE_8__.gz)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), SlotRacesService = (() => { class s { constructor(i, e, o, r, c, d, f, y, M) { this.api = i, this.timerService = e, this.messageQueue = o, this.claims = r, this.casinoManager = c, this.user = d, this.configProviderService = f, this.urlUtility = y, this.rtmsService = M, this.stickerMap = new Map, this.raceGamesMap = new Map, this.contentPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X({}), this.content = this.contentPublisher.asObservable(), this.contentData = { raceRuleConfigs: [], rules: [], rulesBanner: {}, placeholderCardImage: {}, textTranslations: { sharedList: {}, versionedList: {} }, tips: [], errorMessages: { sharedList: {}, versionedList: {} } }, this.notifyPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.notifyObservable = this.notifyPublisher.asObservable(), this.liveRacesPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X({ liveNow: [] }), this.liveRacesData = this.liveRacesPublisher.asObservable(), this.forcRacepublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X({}), this.forceRace = this.forcRacepublisher.asObservable(), this.upcomingRacesPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X({ upcomingToday: [], upcomingTomorrow: [] }), this.upcomingRacesData = this.upcomingRacesPublisher.asObservable(), this.globalTimerPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X({}), this.globalTimerObservable = this.globalTimerPublisher.asObservable(), this.updateNavigationCategories = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!0), this.updateNavigation = this.updateNavigationCategories.asObservable(), this.stickerRacesPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X({}), this.stickerRacesData = this.stickerRacesPublisher.asObservable(), this.rtmsDatPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X({}), this.rtmsData = this.rtmsDatPublisher.asObservable(), this.pollForUser = !0, this.globalTimerInterval = 1e3, this.disabledGameNames = [], this.promoPrizesMap = {}, this.categoryMap = [] } setNotifyStatus(i, e, o) { this.notifyPublisher.next({ promoId: i, slotUniqueId: e, status: o }) } initSlotRaces(i, e, o) { this.isSlotRacesInitiated || (this.isSlotRacesInitiated = !0, this.updateLobbyNavigation(), this.getSitecoreData()); let r = this.configProviderService.provideSlotRacesConfig(); o && this.getlmtData(o), (this.user.isAuthenticated || r.enablePreLogin) && (this.getLiveRaces(), this.getUpcomingRaces()), i && i.size > 0 && this.updateGameMetaData(Array.from(i.values())), this.disabledGameNames = e && e.length > 0 ? e : [], r.enableSlotRacesStickers && this.slotRaceStickersData() } setSlotRaces(i) { this.setSlotRacesParams(i); let e = this.configProviderService.provideSlotRacesConfig(); this.isPrizesMapEmpty() && (!e.disablePrizesApiCall || e.disablePrizesApiCall && this.user.isAuthenticated) && this.getPrizes().subscribe(), this.timer || this.globalTimerCountDown() } getRaces() { this.isSlotRacesEnabled && (this.getLiveRaces(), this.getUpcomingRaces()) } startLiveSlotPolling() { if (!this.liveSlotPollingStarted && this.pollForUser) { let i = this.configProviderService.provideSlotRacesConfig(); this.liveSlotPollingStarted = !0, this.pollingInterval = this.timerService.setIntervalOutsideAngularZone(() => this.getLiveRaces(), i.racesListPollingInterval) } } stopLiveSlotPolling() { this.liveSlotPollingStarted = !1, this.timerService.clearInterval(this.pollingInterval) } getSitecoreData() { let i = this.configProviderService.provideApiPathsConfig(), e = this.urlUtility.getApiurl(i.slotRaces.racesContent); this.api.get(e).subscribe(o => { if (this.contentData = o, this.contentPublisher.next(o), o && o.textTranslations && o.textTranslations.sharedList && o.textTranslations.sharedList.progressBarColor && "" != o.textTranslations.sharedList.progressBarColor) { let r = document.createElement("style"); r.innerHTML = ".sr-progress-bar-color.mat-accent .mat-slider-thumb,.mat-slider-thumb-label,.mat-slider-track-fill { background-color:" + o.textTranslations.sharedList.progressBarColor + " !important } ", document.getElementsByTagName("head")[0].appendChild(r) } }) } getPrizes() { return this.getPrizesFromAPI().pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.U)(i => { let e; return i && i.length && (e = this.createPrizesMap(i)), e && (this.promoPrizesMap = e), e }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.K)(i => i)) } createPrizesMap(i) { let e = {}; i = i.filter(o => o && o.promoId && o.rankDetails && o.rankDetails.length); for (let o = 0; o < i.length; o++)if (!e[i[o].promoId]) { let r = []; for (let c = 0; c < i[o].rankDetails.length; c++)r.push(i[o].rankDetails[c].configMap); i[o].beatBanker && (i[o].beatBanker.isBeatBanker = !0, r.push(i[o].beatBanker)), e[i[o].promoId] = r } return e } getPrizesForPromo(i) { if (this.promoPrizesMap) { let e = this.promoPrizesMap[i]; if (e && e.length) { let o = e.find(r => r.currency && r.currency.length); return o ? o.currency === this.claims.get("currency") ? e : [] : e } } return [] } isPrizesMapEmpty() { for (let i in this.promoPrizesMap) if (this.promoPrizesMap.hasOwnProperty(i)) return !1; return JSON.stringify(this.promoPrizesMap) === JSON.stringify({}) } getLiveRaces() { this.getRacesList({ slotInput: "LIVE" }) } getUpcomingRaces() { let i = this.configProviderService.provideSlotRacesConfig(); this.getRacesList({ slotInput: "UPCOMING", slotDuration: i.upcomingSlotsDuration }) } getRacesList(i) { let e = this.configProviderService.provideSlotRacesConfig(); (!e.disablePreloginApiCalls || e.disablePreloginApiCalls && this.user.isAuthenticated) && this.getRacesFromAPI(i).subscribe(o => { o && (o.statusDtls && 1016 == o.statusDtls.statusCode && this.liveSlotPollingStarted ? (this.pollForUser = !1, this.stopLiveSlotPolling()) : this.pollForUser || (this.pollForUser = !0), o.offerResponses && o.offerResponses.length > 0 && this.makeDateConversions(o.offerResponses, i.slotInput)) }) } makeDateConversions(i, e) { let o = [], r = Date.now(); i.forEach(c => { let d = new Date(c.startTime), f = new Date(c.endTime), y = new Date(c.optinExpiryTime); c.startDate = d, c.endDate = f, c.optinExpiryDate = y, ("LIVE" === e && c.startDate.getTime() < r && c.endDate.getTime() > r || "UPCOMING" === e && c.startDate.getTime() > r) && (c.startTimeAMPM = this.getAMPMTime(c.startDate), o.push(c)) }), this.slotRaces = o, this.populateRacesObject() } getAMPMTime(i) { let e = this.configProviderService.provideSlotRacesConfig(), o = i.getHours(), r = i.getMinutes(); if (e.enable24HrTimeFormat) return ("0" + o).slice(-2) + ":" + ("0" + r).slice(-2); let c = o >= 12 ? "pm" : "am"; return o %= 12, o = o || 12, o + ":" + (r < 10 ? "0" + r : r) + c } populateRacesObject() { if (this.slotRaces && this.slotRaces.length && this.isGameMetadataAvailable) { let i = new Date; i.setHours(24, 0, 0, 0); let e = new Date; e.setHours(48, 0, 0, 0); let o = Date.now(), r = { liveNow: [] }, c = { upcomingToday: [], upcomingTomorrow: [] }; this.slotRaces.every(d => { var f; let M, y = {}; this.filterPromoGames(d); let T = this.gameMetadata[d.gameVariantList[0]]; return !(T && d.gameVariantList && d.gameVariantList.length && d.endDate.getTime() > o) || (d.gameVariantList.length > 1 && (M = this.raceGamesMap && this.raceGamesMap.get(null === (f = d.promoId) || void 0 === f ? void 0 : f.toString()), !M || M && (null == M ? void 0 : M.unorderedGames) !== d.gameVariantList ? (y.unorderedGames = d.gameVariantList, y.orderedGames = d.gameVariantList = this.getOrderedGames(d), this.raceGamesMap.set(d.promoId.toString(), y)) : d.gameVariantList = M.orderedGames), d.gameId = T.name, d.startDate.getTime() <= o ? (d.isLive = !0, r.liveNow.push(d), !0) : d.startDate < i ? (c.upcomingToday.push(d), !0) : d.startDate < e && (c.upcomingTomorrow.push(d), !0)) }), r && r.liveNow && r.liveNow.length ? this.publishRaces(r, c && (c.upcomingToday && c.upcomingToday.length || c.upcomingTomorrow && c.upcomingTomorrow.length) ? c : null) : this.publishRaces(null, c) } } filterPromoGames(i) { if (i) { (!i.gameVariantList || !i.gameVariantList.length) && (i.gameVariantList = [i.gameVariantName]); let e = []; for (let o = 0; o < i.gameVariantList.length; o++)this.gameMetadata[i.gameVariantList[o]] && this.disabledGameNames.indexOf(i.gameVariantList[o]) < 0 && e.push(i.gameVariantList[o]); i.gameVariantList = e } } getLeaderboard(i, e, o = 0, r) { return this.getLeaderboardFromAPI(i, e, o, r) } updateRacesArrays() { let i = this.upcomingRacesPublisher.value, e = this.liveRacesPublisher.value, o = Date.now(), r = i.upcomingToday.filter(d => d.startDate.getTime() <= o); r.forEach(d => { d.isLive = !0, i.upcomingToday.splice(i.upcomingToday.indexOf(d), 1) }), e.liveNow.filter(d => d.endDate.getTime() <= o).forEach(d => { e.liveNow.splice(e.liveNow.indexOf(d), 1) }), e.liveNow = e.liveNow.concat(r), this.publishRaces(e, i) } publishRaces(i, e) { if (e) if (e.upcomingToday && e.upcomingToday.length) { let o = e.upcomingToday[0].startDate.getTime() - Date.now(); setTimeout(() => { this.updateRacesArrays() }, o) } else if (e.upcomingTomorrow && e.upcomingTomorrow.length) { let o = e.upcomingTomorrow[0].startDate.getTime() - Date.now(); setTimeout(() => { this.updateRacesArrays() }, o) } i && i.liveNow && this.liveRacesPublisher.next(i), e && (e.upcomingToday || e.upcomingTomorrow) && this.upcomingRacesPublisher.next(e) } slotRaceStickersData() { this.content.subscribe(i => { this.contentData = i, this.messages = i && i.textTranslations ? i.textTranslations.versionedList : {}, (0, rxjs__WEBPACK_IMPORTED_MODULE_12__.a)(this.liveRacesData, this.upcomingRacesData).subscribe(e => { let o = e[0] && e[0].liveNow && e[0].liveNow.slice(0, e[0].liveNow.length), r = e[1] && e[1].upcomingToday && e[1].upcomingToday.slice(0, e[1].upcomingToday.length); this.raceData(o, r, this.contentData) }) }) } raceData(i, e, o) { if (i.length > 0 || e.length > 0) { for (let r = 0; r < e.length; r++) { let c = i.find(d => d.promoId === e[r].promoId); if (c) { if (c.optinExpiryDate.getTime() < Date.now()) continue; this.stickersDataMap(e[r], o, "upcomingRaces") } else this.stickersDataMap(e[r], o, "upcomingRaces") } for (let r = 0; r < i.length; r++)i[r].optinExpiryDate.getTime() < Date.now() || this.stickersDataMap(i[r], o, "liveRaces"); this.stickerMap.size > 0 && this.stickerRacesPublisher.next(this.stickerMap) } } stickersDataMap(i, e, o) { let r = this.configProviderService.provideSlotRacesConfig(), c = i.startDate.getTime() - Date.now(), d = Math.floor(c / 1e3), f = Math.floor(d / 60); if ("upcomingRaces" === o) { if (f > r.upcomingSlotStickersDuration) return; f && f <= r.upcomingSlotStickersDuration && this.getUpdatedSlotStickerDuration(i, e) } else if ("liveRaces" === o) { if (f > 30) return; f && f <= 30 && this.getUpdatedSlotStickerDuration(i, e) } } getUpdatedSlotStickerDuration(i, e) { this.messages = e && e.textTranslations ? e.textTranslations.versionedList : {}; let r, c, o = this.configProviderService.provideSlotRacesConfig(), d = i.additionalParams.awardType, f = "sticker_" + (null == d ? "" : d.toLowerCase()), y = i.subType, M = i.startDate.getTime() - Date.now(), T = Math.floor(M / 1e3), P = Math.floor(T / 60); for (let G = 0; G < i.gameVariantList.length; G++) { r = i.gameVariantList[G], "CASINO_LEADERBOARD" == y && d ? c = this.messages[f] : o.enableStickersFreeToPlay && "FREE_TO_PLAY" == y ? c = this.messages.sticker_free_to_play : o.enableStickersFreePlayTech && "free_play_tech" == y.toLowerCase() && (c = this.messages.sticker_free_play_tech); let x = { minutes: P, optinExpiryDate: i.optinExpiryDate, optinExpiryTime: i.optinExpiryTime, endDate: i.endDate, stickerText: [c] }; null != c && this.stickerMap.set(r, { data: x }) } } getResultsHistory(i, e) { return this.getResultsHistoryFromAPI(i, e).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.U)(o => { if (o && o.rankDetails && o.rankDetails.length > 0) return this.formatResults(o.rankDetails) }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.K)(o => (0, rxjs__WEBPACK_IMPORTED_MODULE_13__._)(o))) } formatResults(i) { let e, o; return i.forEach(r => { var c, d, f, y; this.filterPromoGames(r), r.startDate = new Date(r.slotStartDate), r.endDate = new Date(r.slotEndDate), r.dateStr = r.startDate.getDate() + "-" + (r.startDate.getMonth() + 1) + "-" + r.startDate.getFullYear(), (r.content && r.content.promotion && r.content.promotion.prizes || (null === (d = null === (c = null == r ? void 0 : r.content) || void 0 === c ? void 0 : c.promotion) || void 0 === d ? void 0 : d.beatBanker)) && (r.isWin = !(!r.configMap || !r.configMap.awardType), e = JSON.parse(r.content.promotion.prizes), (null === (y = null === (f = null == r ? void 0 : r.content) || void 0 === f ? void 0 : f.promotion) || void 0 === y ? void 0 : y.beatBanker) && (r.isBeatBanker = !0, o = JSON.parse(r.content.promotion.beatBanker)), e.forEach(M => { r.rank >= Number(M.FromRank) && r.rank < Number(M.ToRank) && (r.prizeIcon = M.Icon) }), o.forEach(M => { var T, P; (null === (T = null == r ? void 0 : r.configMap) || void 0 === T ? void 0 : T.awardType) && (null === (P = null == r ? void 0 : r.configMap) || void 0 === P ? void 0 : P.value) && (r.prizeIcon = M.Icon) })) }), i } updateGameMetaData(i) { this.gameMetadata = this.buildGameIdBasedMetadataIndex(i), this.populateRacesObject() } buildGameIdBasedMetadataIndex(i) { let e = {}; if (i && i.length) return this.isGameMetadataAvailable = !0, i.filter(o => o).forEach(o => { e[o.game.trim()] || (e[o.game.trim()] = o) }), e } getRacesFromAPI(i) { let e = this.configProviderService.provideApiPathsConfig(), o = this.urlUtility.getApiurl(e.slotRaces.racesList); return this.api.get(o, i) } getLeaderboardFromAPI(i, e, o, r) { let c = this.configProviderService.provideApiPathsConfig(), d = this.urlUtility.getApiurl(c.slotRaces.racesLeaderboard); return this.api.get(d, { prmId: i, slotId: e, maxRank: o, fromResultsHistory: r }) } getResultsHistoryFromAPI(i, e) { let o = this.configProviderService.provideApiPathsConfig(), r = this.urlUtility.getApiurl(o.slotRaces.racesResults); return this.api.get(r, { fromDate: e, endDate: i }) } getPrizesFromAPI() { let i = this.configProviderService.provideApiPathsConfig(), e = this.urlUtility.getApiurl(i.slotRaces.racesPrizes); return this.api.get(e) } updateOptinStatus(i, e) { let o = this.configProviderService.provideApiPathsConfig(), r = this.urlUtility.getApiurl(o.slotRaces.racesOptin); return this.api.get(r, { prmId: i, slotId: e }) } updateNotificationStatus(i, e, o) { let r = this.configProviderService.provideApiPathsConfig(), c = this.urlUtility.getApiurl(r.slotRaces.raceUpdateNotification); return this.api.get(c, { promoId: i, slotId: e, notificationStatus: o }) } addErrorMessage(i) { this.messageQueue.clear(); let e = this.getErrorMessage(i); e && (this.messageQueue.addError(e, "Single", "casinocorelobby"), window.scrollTo(0, 0)) } getErrorMessage(i) { if (this.contentData && this.contentData.errorMessages && this.contentData.errorMessages.versionedList) return this.contentData.errorMessages.versionedList[i] ? this.contentData.errorMessages.versionedList[i] : this.contentData.errorMessages.versionedList.defaultErrorCode } globalTimerCountDown() { this.timer = setInterval(() => { this.globalTimerPublisher.next({ timerInterval: this.globalTimerInterval }) }, this.globalTimerInterval) } forceOptin() { let i = sessionStorage.getItem("ForceOptin"); if (i) { let e = i && JSON.parse(i) || {}; sessionStorage.removeItem("ForceOptin"), this.updateOptinStatus(e.promoId, e.slotUniqueId).subscribe(() => { this.forcRacepublisher.next({ race: e }) }, c => { this.addErrorMessage(c.errorCode) }) } } getCurrentRaces() { let e = this.upcomingRacesPublisher.value; return { liveNow: this.liveRacesPublisher.value.liveNow || [], upcomingToday: e.upcomingToday || [], upcomingTomorrow: e.upcomingTomorrow || [] } } updateLobbyNavigation() { this.configProviderService.provideSlotRacesConfig().disableWhenNoPromotions && (0, rxjs__WEBPACK_IMPORTED_MODULE_12__.a)(this.liveRacesData, this.upcomingRacesData).subscribe(e => { let o; o = !(!e || !(e[0] && e[0].liveNow && e[0].liveNow.length || e[1] && (e[1].upcomingToday && e[1].upcomingToday.length || e[1].upcomingTomorrow && e[1].upcomingTomorrow.length))), o !== this.isNavCategoryVisible && (this.isNavCategoryVisible = o, this.updateNavigationCategories.next(!0)) }) } setSlotRacesParams(i) { this.slotRacesCategoryId = this.casinoManager.getSlotRaceCategoryId(i); let e = this.configProviderService.provideSlotRacesConfig(), o = this.configProviderService.provideFeaturesConfig(); this.casinoManager.IsFeatureEnabledforLobbytype(i, o.enableSlotRacesForLobbyType) && (this.user.isAuthenticated || !this.user.isAuthenticated && e.enablePreLogin) && (this.isSlotRacesEnabled = !0) } gameClose(i) { if (this.isSlotRacesEnabled) { let e = this.slotRacesCategoryId; document.getElementById("casinotournamentscards") ? (this.startLiveSlotPolling(), this.getRaces()) : i === e && this.getRaces() } } getOrderedGames(i = []) { var e, o; let r = (null === (e = this.categoryMap) || void 0 === e ? void 0 : e.length) && (null === (o = this.categoryMap.filter(c => c.categoryname == i.promoId)[0]) || void 0 === o ? void 0 : o.gamelist); if ((null == r ? void 0 : r.length) > 0) { let c = [], d = i.gameVariantList; for (let f = 0; f < r.length; f++)d.includes(r[f].game) && c.push(r[f].game); return Array.from(new Set(c.concat(d))) } return i.gameVariantList } getlmtData(i) { var e, o, r, c; this.categoryMap = null === (c = null === (r = null === (o = null === (e = i.categoriesMap) || void 0 === e ? void 0 : e.values()) || void 0 === o ? void 0 : o.next()) || void 0 === r ? void 0 : r.value) || void 0 === c ? void 0 : c.subcategories } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.fWh), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.UDe), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.$2w)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), ThumbnailService = (() => { class s { constructor() { this.thumbnailPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.thumbnailDataObservable = this.thumbnailPublisher.asObservable() } setThumbnailData(i) { this.thumbnailPublisher.next(i) } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), WindowRef = (() => { class s { get nativeWindow() { return window } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GameSelectorWidgetService = (() => { class s { constructor(i, e, o, r, c, d) { this.api = i, this.urlUtility = e, this.messageQueue = o, this.tracking = r, this.casinoManager = c, this.appInfoConfig = d, this.widgetsMap = new Map, this.widgetsMapPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.widgetsMapObservable = this.widgetsMapPublisher.asObservable() } emptyMap() { this.widgetsMap && this.widgetsMap.size > 0 && this.widgetsMap.clear() } fetchWidgets(i) { this.api.post(this.urlUtility.getApiurl("GameSelector/FetchWidgets"), i, { responseType: "json", withCredentials: !0, showSpinner: !1 }).subscribe(e => { e.globalConfig && (this.globalConfig = e.globalConfig), this.emptyMap(), e.widgets.forEach(o => { this.widgetsMap.set(o.path, o) }), this.widgetsMapPublisher.next(!0) }, e => { this.messageQueue.add({ html: e, type: "Error", lifetime: "Single", scope: "casinocorelobby" }) }) } getWidgetsMap() { return this.widgetsMap } getWidget(i) { return this.widgetsMap.get(i) } getGlobaConfig() { return this.globalConfig } addTrackingEvent(i, e, o, r, c, d, f) { this.tracking.triggerEvent("Event.Tracking", { "component.CategoryEvent": i, "component.LabelEvent": e, "component.ActionEvent": o, "component.PositionEvent": this.appInfoConfig.product + "-" + r, "component.LocationEvent": c, "component.EventDetails": d, "component.URLClicked": f }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.Veb)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CasinoLobbyService = (() => { class s { constructor(i, e, o, r, c, d, f, y, M, T, P, G, x, R, J, W, Q, Z, N, ae, re, ce, _e, le, be, xe, De, Oe, ge, Se, Te, Le, Pe, V, ne) { this.api = i, this.cacheManager = e, this.configProviderService = o, this.casinoManager = r, this.user = c, this.fastLoadingGamesService = d, this.nativeAppService = f, this.deviceService = y, this.jackpotDataService = M, this.recentGamesService = T, this.page = P, this.urlUtility = G, this.teaserService = x, this.favouriteService = R, this.unfinishedGamesService = J, this.invokerProductService = W, this.discoverFeedService = Q, this.liveCasinoService = Z, this.newsFeedService = N, this.promotedGamesService = ae, this.freespinSummaryService = re, this.apiPathsHelperService = ce, this.geolocationCoordinatorService = _e, this.playerSegmentationService = le, this.geolocationActivator = be, this.slotRacesService = xe, this.route = De, this.cozybingoService = Oe, this.productService = ge, this.cookies = Se, this.thumbnailService = Te, this.dslService = Le, this.windowRef = Pe, this.casinoCoreNpmParamsService = V, this.gameSelectorWidgetService = ne, this.lobbyTypeMaps = new Map, this.gJLobbyTypeMaps = new Map, this.lobbyTypeMapsForInvokerProduct = new Map, this.lobbyLoadedSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.lobbyLoadedSubjectForInvokerProduct = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.gameMetaDataMap = new Map, this.lobbyLoadedObservable = this.lobbyLoadedSubject.asObservable(), this.lobbyLoadedObservableForInvokerProduct = this.lobbyLoadedSubjectForInvokerProduct.asObservable(), this.gameDataFromLMT = [], this.forceGameLaunchBehaviourSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.forceGameLaunchObservable = this.forceGameLaunchBehaviourSubject.asObservable(), this.categoryNotFoundSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.categoryNotFoundObservable = this.categoryNotFoundSubject.asObservable(), this.optMiniTeasersSource = new Array, this.postLoginFeedsInitiated = !1, this.gameSelectorWidgetSource = new Array } onAppInit() { this.configProviderService.casinoClientConfigObservable.subscribe(i => { if (i) { this.initializeGeolocationCoordinator(); let e = this.casinoCoreNpmParamsService.getcasinoCoreNpmParams(); e.disableFullLobbyFetch || this.setCasinoLobby(!0), e.disableFullLobbyFetch && e.customLobbyTypeMaps && e.customLobbyTypeMaps.length > 0 ? (this.setPartialCasinoLobbiesforOtherProducts(e.customLobbyTypeMaps, !0, !1), this.configProviderService.setLmtConfig(e.customLobbyTypeMaps)) : e.disableFullLobbyFetch && e.targetOverlayLobby && this.setPartialCasinoLobbiesForOverlay() } }), this.lobbyLoadedObservable.subscribe(i => { i && this.onLobbyLoaded(i.initiateFeeds) }), this.user.events.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.h)(i => i instanceof _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U0n)).subscribe(() => { this.lobbyTypeMaps && this.lobbyTypeMaps.size > 0 && this.lobbyTypeMaps.clear(), this.gameMetaDataMap && this.gameMetaDataMap.size > 0 && this.gameMetaDataMap.clear(), this.postLoginCalls(!1), this.initializeGeolocationCoordinator() }) } setPartialCasinoLobbiesForOverlay() { let i = this.configProviderService.provideCasinoAsIFrameConfig(), e = this.invokerProductService.getInvokerProduct(); if (i && i.overlayLobbyTypeMap && i.overlayLobbyTypeMap.length > 0) { let o = i.overlayLobbyTypeMap.filter(r => r.invokerProduct.toLowerCase() === e.toLowerCase()); o && o.length > 0 && (this.setPartialCasinoLobbiesforOtherProducts(o, !0, !1), this.configProviderService.setLmtConfig(o)) } } onLobbyLoaded(i) { i && this.initiateDisjointFeeds(), this.user.isAuthenticated && this.postLoginCalls(!0) } getThumbnailbasedonroute(i) { if (i && i.sitecoreData && i.sitecoreData.gameThumbnail && i.sitecoreData.gameThumbnail.length > 0) { let e = i.sitecoreData.gameThumbnail.filter(r => r.isVipThumbnail), o = i.sitecoreData.gameThumbnail.filter(r => !r.isVipThumbnail); if (!this.user.isAuthenticated && o && o[0]) return o[0]; if (this.user.isAuthenticated) { if (!this.user.claims.get("vipLevel") && o[0]) return o[0]; if (this.user.claims.get("vipLevel") && e[0]) return e[0]; if (0 == e.length && o && o[0]) return o[0] } } } initGameSelectorWidget() { if (this.gameSelectorWidgetSource && this.gameSelectorWidgetSource.length) { const i = [...new Set(this.gameSelectorWidgetSource.map(e => e.path))]; this.gameSelectorWidgetService.fetchWidgets(i) } } refreshFeeds() { var i, e; this.disjointFeedsInitiated && (null === (i = this.configProviderService.providePromotedGamesConfig()) || void 0 === i ? void 0 : i.isEnabled) && this.promotedGamesService.setPromotedGames(), this.user.isAuthenticated ? this.postLoginFeedsInitiated && (this.recentGamesService.setRecentGames(), this.unfinishedGamesService.setUnfinishedGames()) : this.disjointFeedsInitiated && (null === (e = this.configProviderService.provideFeaturesConfig()) || void 0 === e ? void 0 : e.enablePreLoginRecentlyPlayed) && this.cookies.get("lastVisitor") && this.recentGamesService.setRecentGames() } initiateDisjointFeeds() { this.user.isAuthenticated || this.initGameSelectorWidget(), this.configProviderService.provideLmtConfig().enableDynamicSequentialCalls && !this.rpfavandunfinishedcalled && (this.recentGamesService.setRecentGames(), this.favouriteService.setFavouriteGames(), this.unfinishedGamesService.setUnfinishedGames()); let e = this.configProviderService.provideFeaturesConfig(), o = this.configProviderService.provideFeedCacheConfig(), r = this.casinoCoreNpmParamsService.getcasinoCoreNpmParams(); e.enableFastLoadingGames && this.fastLoadingGamesService.setFastLoadingGamesFromLMT(), o.enableJackpotFeed && !(null == r ? void 0 : r.isDisableJackpotCalls) && this.jackpotDataService.startFeed(), this.teaserService.setTeasers(); const c = [...new Set(this.optMiniTeasersSource.map(T => T.path))]; this.teaserService.fetchOptMiniTeasers(c), this.configProviderService.provideDiscoverFeedConfig().enableDiscoverFeed && this.discoverFeedService.GetDiscoverFeedSitecoreData(), this.configProviderService.provideLiveCasinoConfig().enabled && !(null == r ? void 0 : r.isDisableLiveCasinoCalls) && this.liveCasinoService.getLiveCasinoData(!0), this.configProviderService.providePromotedGamesConfig().isEnabled && this.promotedGamesService.setPromotedGames(), this.configProviderService.provideNewsFeedCasinoConfig().isEnabled && this.newsFeedService.setNewsFeed(), !this.user.isAuthenticated && e.enablePreLoginRecentlyPlayed && this.cookies.get("lastVisitor") && this.recentGamesService.setRecentGames(), this.initSlotRaces(), this.disjointFeedsInitiated = !0 } initSlotRaces() { let i = this.configProviderService.provideSlotRacesConfig(); if (i.enableSlotRaces) { this.slotRacesService.forceOptin(); let e = this.getGameMetaData(), o = this.getDisabledGames(); this.slotRacesService.initSlotRaces(e, o, this.lobbyTypeMaps.get(i.slotraceLobbytypeForGamesOrdering)) } } isDisjointFeedsInitiated() { return this.disjointFeedsInitiated } postLoginCalls(i) { this.lmtConfig = this.configProviderService.provideLmtConfig(); let e = this.casinoCoreNpmParamsService.getcasinoCoreNpmParams(); i ? this.initiatePostLoginDisjointFeeds() : e && e.disableFullLobbyFetch && e.customLobbyTypeMaps && e.customLobbyTypeMaps.length > 0 ? this.setPartialCasinoLobbiesforOtherProducts(e.customLobbyTypeMaps, !0, !1) : e.disableFullLobbyFetch && e.targetOverlayLobby ? this.setPartialCasinoLobbiesForOverlay() : this.configProviderService.provideLmtConfig().enablePostloginPartialCalls || this.setCasinoLobby(!1, !i) } handleForceGameLaunch() { let i = this.configProviderService.provideModularSettingsConfig(); setTimeout(() => { let e = i.forceLoginGameObjectExpirationTime, o = (new Date).getTime(), r = this.cacheManager.readForceGameLaunchObjDataFromSessionStorage("CasinoCoreForceGameObj"); r && (r.gameLaunchParam && "thumbnail" == r.gameLaunchParam.from && (this.cacheManager.setThumbnailLocalStorageCacheMap(r.gameLaunchParam.lobbyType, r.gameLaunchParam.game.gameId, !0), this.thumbnailService.setThumbnailData(r.gameLaunchParam)), r.gameLaunchParam.noGameTraking = !0, sessionStorage.removeItem("CasinoCoreForceGameObj"), o - r.timeStamp <= 1e3 * e && this.forceGameLaunchBehaviourSubject.next(r)) }, i.forceGameLaunchExecutionTimeOut) } handleScreenNameGameLaunch() { let e = this.configProviderService.provideModularSettingsConfig().forceLoginGameObjectExpirationTime, o = (new Date).getTime(), r = this.user.screenname, c = this.cacheManager.readForceGameLaunchObjDataFromSessionStorage("CasinoCoreScreenNameGameObj"); c && (sessionStorage.removeItem("CasinoCoreScreenNameGameObj"), o - c.timeStamp <= 1e3 * e && r && this.forceGameLaunchBehaviourSubject.next(c)) } initiatePostLoginDisjointFeeds() { if (this.user.isAuthenticated && !this.postLoginFeedsInitiated) { this.handleForceGameLaunch(), this.configProviderService.provideLmtConfig().enableDynamicSequentialCalls || (this.recentGamesService.setRecentGames(), this.favouriteService.setFavouriteGames(), this.unfinishedGamesService.setUnfinishedGames()); let e = this.configProviderService.provideFeaturesConfig(), o = this.configProviderService.provideCozyBingoConfig(), r = this.configProviderService.providefreeSpinsClientConfig(), d = (this.configProviderService.provideGlobalSearchConfig(), this.configProviderService.provideFeedCacheConfig()), f = this.casinoCoreNpmParamsService.getcasinoCoreNpmParams(); (o.cozyBingoFavouritesInRpwidget || o.cozyBingoRecentGamesInRpwidget) && this.cozybingoService.getBingoData(!0, o.cozyBingoRecentGamesInRpwidget), r.isFreeSpinSummaryEnabled && this.freespinSummaryService.setFreespinsummary(), this.configProviderService.provideLiveCasinoConfig().enabled && !(null == f ? void 0 : f.isDisableLiveCasinoCalls) && this.liveCasinoService.getLiveCasinoData(!this.liveCasinoService.getSitecoreInfoPublishedStatus()), this.initGameSelectorWidget(), this.teaserService.setTeasers(); const M = [...new Set(this.optMiniTeasersSource.map(P => P.path))]; this.teaserService.fetchOptMiniTeasers(M), this.configProviderService.provideNewsFeedCasinoConfig().isEnabled && this.newsFeedService.setNewsFeed(), e.enableOptimoveFavProduct && this.playerSegmentationService.setPlayerSegmentationData(), this.initSlotRaces(), d.enableJackpotFeed && !(null == f ? void 0 : f.isDisableJackpotCalls) && (this.jackpotDataService.stopFeed(), this.jackpotDataService.startFeed()), this.postLoginFeedsInitiated = !0 } } initializeGeolocationCoordinator() { if (this.route) { const i = this.route.snapshot.queryParamMap.get("_bootstrapCoordinationStart"); if (i && "false" === i) return } this.casinoCoreNpmParamsService.getcasinoCoreNpmParams().isDll || this.checkGeolocationScript(), this.user.isAuthenticated && this.geolocationActivator.isActive && (this.geolocationCoordinatorService.initialize({ showPLCPopup: !1 }), this.geolocationCoordinatorService.registerUnload(), this.geolocationCoordinatorService.registerSynchronization()) } checkGeolocationScript() { let i = this.configProviderService.provideGeoLocationConfig(); i.assetsPath && i.assetsPath.length > 0 && i.assetsPath.forEach(e => { e.indexOf("pathIdentifier=geocomplyjs") > -1 && (this.windowRef.nativeWindow.GeoComply || this.appendGeolocationScript(e)), e.indexOf("pathIdentifier=oobeejs") > -1 && (this.windowRef.nativeWindow.GCOobee || this.appendGeolocationScript(e)), e.indexOf("pathIdentifier=appintegrationjs") > -1 && (this.windowRef.nativeWindow.geolocationCoordinator || this.appendGeolocationScript(e)) }) } appendGeolocationScript(i) { let e = document.createElement("script"); e.type = "text/javascript", e.src = i, document.body.appendChild(e) } getApplicableLobbyTypes(i) { return i.filter(e => e.invokerProduct.toLowerCase() === this.invokerProductService.getInvokerProduct() && e.fetchMeta) } getApplicableLobbyTypeMapsDynacon() { let e = this.configProviderService.provideLmtConfig().lobbyTypeMap; return this.getApplicableLobbyTypes(e) } retrieveRawLobbyTypesMapDataFromLocalStorage(i = !1) { let c, e = this.getApplicableLobbyTypeMapsDynacon(), o = this.configProviderService.provideFeaturesConfig(), r = []; if (e && e.length > 0) { for (let d = 0; d < e.length; d++) { const f = e[d].lobbyType; let y = this.cacheManager.readCategoryDataLocalCache(o.browserLocalStorageCategoryDataUpdateInterval, f, e[d].invokerProduct.toLowerCase()); if (null == y) { c = !1; break } r.push({ lobbyType: f, feed: y }), c = !0 } c && r && r.length > 0 ? dispatchEvent(new CustomEvent("LocalStorage_Collected_Lobbies", { detail: { collectedLobbies: r } })) : i && dispatchEvent(new CustomEvent("LocalStorage_Collected_Lobbies")) } } checkAndRetrieveAllLobbyTypeMapsOnLocalStorage(i) { let r, e = this.configProviderService.provideFeaturesConfig(), o = new Map; if (i && i.length > 0) for (let c = 0; c < i.length; c++) { let d = this.cacheManager.readCategoryDataLocalCache(e.browserLocalStorageCategoryDataUpdateInterval, i[c].lobbyType, i[c].invokerProduct.toLowerCase()); if (null == d) { r = !1; break } { let f = new LobbyItem; f.setLobbyItemFromLocalStorage(d); for (let y = 0; y < d.lsGameMetaDataMap.length; y++) { let M = d.lsGameMetaDataMap[y][1]; this.gameMetaDataMap.set(M.game, M) } o.set(i[c].lobbyType, f), r = !0 } } else console.error("Please configure necessary lobbyTypeMaps in dynacon"), r = !1; if (this.gJLobbyTypeMaps && this.gJLobbyTypeMaps.size > 0 && this.gJLobbyTypeMaps.forEach((c, d) => { o.set(d, c) }), o && o.size > 0) { this.gameSelectorWidgetSource = new Array; const c = this.configProviderService.provideGameSelectorWidgetConfig(); this.optMiniTeasersSource = new Array; const d = this.configProviderService.provideOptimizedTeaserConfig(); o.forEach(f => { f.categoriesMap && f.categoriesMap.size > 0 && f.categoriesMap.forEach(y => { const M = y.sitecoreData; c && c.isEnabled && M.displayGameSelectorWidget && M.gameSelectorWidget && this.gameSelectorWidgetSource.push(M.gameSelectorWidget), M.optimisedMiniTeasers && M.optimisedMiniTeasers.length && d.teaserOptimization && d.enableOptMiniTeasers && !this.isTouch() && this.optMiniTeasersSource.push(...M.optimisedMiniTeasers) }) }) } return r ? o : null } checkAndRetrieveAllCustomLobbyTypeMapsOnLocalStorage(i) { let e = this.getApplicableLobbyTypes(i); return this.checkAndRetrieveAllLobbyTypeMapsOnLocalStorage(e) } checkAndRetrieveAllApplicableLobbyTypeMapsOnLocalStorage() { let i = this.getApplicableLobbyTypeMapsDynacon(); return this.checkAndRetrieveAllLobbyTypeMapsOnLocalStorage(i) } setPartialCasinoLobby(i) { if (this.lmtConfig = this.configProviderService.provideLmtConfig(), this.readAndDispatchLobbyDataForGlobalSearch(), !(this.lobbyTypeMaps && this.lobbyTypeMaps.size > 0 && this.lobbyTypeMaps.get(i) && this.lobbyTypeMaps.get(i).categoriesMap && this.lobbyTypeMaps.get(i).categoriesMap.size > 0)) if (this.lobbyTypeMaps = this.checkAndRetrieveAllApplicableLobbyTypeMapsOnLocalStorage(), this.lobbyTypeMaps || (this.lobbyTypeMaps = new Map), this.lobbyTypeMaps && this.lobbyTypeMaps.size > 0 && this.lobbyTypeMaps.get(i) && this.lobbyTypeMaps.get(i).categoriesMap && this.lobbyTypeMaps.get(i).categoriesMap.size > 0) this.setCasinoLobbyFromLocalStorage(this.lobbyTypeMaps, !0); else { let e = this.configProviderService.provideApiPathsConfig(), o = this.urlUtility.getApiurl(e.lmt.lmtPartialFeed), r = this.invokerProductService.getInvokerProduct(); this.api.get(o, { lobbyType: i, invokerProduct: r }, { withCredentials: !0 }).subscribe(c => { c && (this.setLobbyContent(c, !1), this.lmtConfig.enablePostloginPartialCalls ? this.setCasinoLobby(!0, !!this.user.isAuthenticated) : this.setCasinoLobby(!0), this.readAndDispatchLobbyDataForGlobalSearch()) }, c => { console.error("Unable to retrieve casino lobby data" + c) }) } } setPartialCasinoLobbiesforOtherProducts(i, e, o = !1) { if (this.lobbyTypeMaps = this.checkAndRetrieveAllCustomLobbyTypeMapsOnLocalStorage(i), this.lobbyTypeMaps || (this.lobbyTypeMaps = new Map), this.lobbyTypeMaps && this.lobbyTypeMaps.size > 0) this.setCasinoLobbyFromLocalStorage(this.lobbyTypeMaps, e, o); else { let r = this.apiPathsHelperService.transformApi("lmtfeed/GetCustomLobbyTypesFeed?invokerProduct=${args[0]}", this.invokerProductService.getInvokerProduct()), c = this.urlUtility.getApiurl(r); this.api.post(c, i, { withCredentials: !0 }).subscribe(d => { d && (this.setLobbyContent(d, e, o), this.readAndDispatchLobbyDataForGlobalSearch()) }, d => { console.error("Unable to retrieve casino lobby data" + d) }) } } readAndDispatchLobbyDataForGlobalSearch(i = !1) { const e = this.configProviderService.provideGlobalSearchConfig(); e && e.isEnabled && this.retrieveRawLobbyTypesMapDataFromLocalStorage(i) } setCasinoLobby(i, e = !1) { let o = (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(this.lobbyTypeMaps), r = this.configProviderService.provideLmtConfig(); if (this.lobbyTypeMaps = this.checkAndRetrieveAllApplicableLobbyTypeMapsOnLocalStorage(), this.lobbyTypeMaps || (this.lobbyTypeMaps = new Map), this.lobbyTypeMaps && this.lobbyTypeMaps.size > 0) this.setCasinoLobbyFromLocalStorage(this.lobbyTypeMaps, i, e); else { this.lobbyTypeMaps = o || new Map; let c = this.configProviderService.provideApiPathsConfig(), d = this.apiPathsHelperService.transformApi(c.lmt.lmtFeedOfProduct, this.invokerProductService.getInvokerProduct()), f = this.urlUtility.getApiurl(d); this.api.get(f, null, { withCredentials: !0 }).subscribe(y => { y && (r.enableDynamicSequentialCalls && (this.recentGamesService.setRecentGames(), this.favouriteService.setFavouriteGames(), this.unfinishedGamesService.setUnfinishedGames(), this.rpfavandunfinishedcalled = !0), this.setLobbyContent(y, i, e), this.readAndDispatchLobbyDataForGlobalSearch()) }, y => { console.error("Unable to retrieve casino lobby data" + y) }) } } setCasinoLobbyFromLocalStorage(i, e, o = !1) { let r = this.configProviderService.provideApiPathsConfig(), c = this.urlUtility.getApiurl(r.gamesServices.disabledGames); this.api.get(c, null, { withCredentials: !0 }).subscribe(d => { this.disabledGames = d, this.publishLobbyLoadedEvent({ lobbyTypeMaps: i, initiateFeeds: e, userAuthenticated: this.user.isAuthenticated, isPostLogin: o }) }, d => { console.error(d), this.publishLobbyLoadedEvent({ lobbyTypeMaps: i, initiateFeeds: e, userAuthenticated: this.user.isAuthenticated, isPostLogin: o }) }) } setCasinoLobbyForInvokerProduct(i, e) { let o = this.configProviderService.provideFeaturesConfig(); this.configProviderService.provideLmtConfig(), this.lobbyTypeMapsForInvokerProduct.clear(); let c = this.cacheManager.readCategoryDataLocalCache(o.browserLocalStorageCategoryDataUpdateInterval, i, e.toLowerCase()); if (null != c) { let d = new LobbyItem; d.setLobbyItemFromLocalStorage(c), this.lobbyTypeMapsForInvokerProduct.set(i, d) } if (this.lobbyTypeMapsForInvokerProduct && this.lobbyTypeMapsForInvokerProduct.size > 0) this.publishLobbyLoadedEventForInvokerProduct({ lobbyTypeMaps: this.lobbyTypeMapsForInvokerProduct, userAuthenticated: this.user.isAuthenticated }); else { let d = this.configProviderService.provideApiPathsConfig(), f = this.urlUtility.getApiurl(d.lmt.lmtPartialFeed); this.api.get(f, { lobbyType: i, invokerProduct: e }, { withCredentials: !0 }).subscribe(y => { y && this.setLobbyContentForInvokerProduct(y, i, e) }, y => { console.error("Unable to retrieve casino lobby data" + y) }) } } initiateCasinoLobby(i) { this.servicesOnAppInit(), this.casinoCoreNpmParamsService.setcasinoCoreNpmParams(i), this.configProviderService.fillClientConfig(i.isDll), this.checkForTouchDevice(), this.casinoManager.checkForTouchDevice() } servicesOnAppInit() { } publishLobbyLoadedEvent(i) { this.setSearchCriteriaforCategoryGames(), i.isLoggedIn = this.user.isAuthenticated, this.lobbyLoadedSubject.next(i), this.raiseLobbyLoadedEvent(i), this.casinoManager.setCurrentWidth() } publishLobbyLoadedEventForInvokerProduct(i) { this.lobbyLoadedSubjectForInvokerProduct.next(i), this.raiseLobbyLoadedEvent(i) } setLobbyContent(i, e, o = !1) { this.setLobbySitecoreData(i.collectedSitecoreCategory), this.setLobbyTypeMaps(i.collectedLobby, e, o), this.setDisabledGames(i.disabledGames) } setLobbyContentForInvokerProduct(i, e, o) { this.setLobbySitecoreDataForInvokerProduct(i.collectedSitecoreCategory), this.setLobbyTypeMapsForInvokerProduct(i.collectedLobby, e, o) } setLobbySitecoreData(i) { this.lobbySitecoreData = i } setLobbySitecoreDataForInvokerProduct(i) { this.lobbySitecoreDataForInvokerProduct = i } getLobbySitecoreData() { return this.lobbySitecoreData ? this.lobbySitecoreData : this.lobbySitecoreDataForInvokerProduct } setLobbyTypeMaps(i, e, o = !1) { if (i && i.length > 0) { for (let c = 0; c < i.length; c++) { let d = this.getLobbyTypeItemMap(i[c]); this.lobbyTypeMaps.set(d.key, d.value), this.cacheManager.writeCategoryLocalStorageCacheMap(d.key, (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(d.value), this.invokerProductService.getInvokerProduct()) } this.gJLobbyTypeMaps && this.gJLobbyTypeMaps.size > 0 && this.gJLobbyTypeMaps.forEach((c, d) => { this.lobbyTypeMaps.set(d, c) }), this.publishLobbyLoadedEvent({ lobbyTypeMaps: this.lobbyTypeMaps, initiateFeeds: e, userAuthenticated: this.user.isAuthenticated, isPostLogin: o }) } } setLobbyTypeMapsForInvokerProduct(i, e, o) { let r = !1; if (i && i.length > 0) { for (let d = 0; d < i.length; d++)if (e == i[d].lobbyType) { r = !0, i = i[d]; break } if (r) { let d = this.getLobbyTypeItemMap(i); this.lobbyTypeMapsForInvokerProduct.set(d.key, d.value), this.cacheManager.writeCategoryLocalStorageCacheMap(d.key, (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(d.value), o.toLowerCase()) } this.publishLobbyLoadedEventForInvokerProduct({ lobbyTypeMaps: this.lobbyTypeMapsForInvokerProduct, userAuthenticated: this.user.isAuthenticated }) } } getLobbyTypeItemMap(i) { let e = this.getLobbyContent(i.lobbyFeedJson.lobbyconfiguration, i.lobbyType); return { key: i.lobbyType, value: e } } setDisabledGames(i) { this.disabledGames = i } getDisabledGames() { return this.disabledGames ? this.disabledGames : [] } getLobbyContent(i, e) { let o = new Map, r = new Map, c = new Map; i && i.languageContent && i.languageContent[0] && (i.languageContent[0].categories && i.languageContent[0].categories.length > 0 && (o = this.getLanguageContentMap(i.languageContent[0].categories)), i.languageContent[0].stickers && i.languageContent[0].stickers.length > 0 && (r = this.getLanguageContentMap(i.languageContent[0].stickers)), i.gamemetadata && i.gamemetadata.length > 0 && (c = this.getGameMetaDataMap(i.gamemetadata, e))); let d = new Map, f = new Map; if (i && i.categories && i.categories.length > 0) { (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(i.categories); for (let G = 0; G < i.categories.length; G++) { let x = this.getLobbyCategory(i.categories[G], o, e); if (x.subcategories && x.subcategories.length > 0) { x.lmtSubCategories = []; for (let R = 0; R < x.subcategories.length; R++) { let J = this.getLobbySubCategory(x.subcategories[R], o, e); J.parentCategoryId = x.categoryid, J.parentLMTCategoryId = x.lmtCategoryId, J.filterRecentlyPlayedGames = this.isFilterRecentlyPlayedGames(i.catVsFeatureMetadata, J), J.havingCasiaGames = this.filterCasiaCategory(i.catVsFeatureMetadata, J), f.set(J.route, J), x.lmtSubCategories.push(J.categoryid) } } d.set(x.route, x) } let T = { categoryid: ConstService.Recent_Games.toLowerCase(), route: ConstService.Recent_Games.toLowerCase(), categoryname: this.getCategoryNameFromSitecore(ConstService.Recent_Games.toLowerCase(), e, !0), subTitle: this.getSubtitleFromSitecore(ConstService.Recent_Games.toLowerCase(), e), isNavigationCategory: !0, sitecoreData: this.getSitecoreInfoForCategoryIdAndLobbyType(ConstService.Recent_Games.toLowerCase(), e), isSubCatVisible: !1, lmtCategoryId: ConstService.Recent_Games.toUpperCase(), engCategoryName: "RECENTGAMES" }; d.set(T.route, T); let P = { categoryid: ConstService.Favourite_Games.toLowerCase(), route: ConstService.Favourite_Games.toLowerCase(), categoryname: this.getCategoryNameFromSitecore(ConstService.Favourite_Games.toLowerCase(), e, !0), subTitle: this.getSubtitleFromSitecore(ConstService.Favourite_Games.toLowerCase(), e), isNavigationCategory: !0, sitecoreData: this.getSitecoreInfoForCategoryIdAndLobbyType(ConstService.Favourite_Games.toLowerCase(), e), isSubCatVisible: !0, lmtCategoryId: ConstService.Favourite_Games.toUpperCase(), engCategoryName: "FAVOURITEGAMES" }; d.set(P.route, P), f.size > 0 && f.forEach((G, x) => { d.set(x, G) }) } let y = new LobbyItem; return y.setCategoriesMap(d), y.setcategoryNameLangMap(o), y.setStickerNameMap(r), y.setGameMetaDataMap(c), y } isFilterRecentlyPlayedGames(i, e) { let o = !1; return i && 0 != i.length && i.forEach(r => { r.subCategoryId != e.subcategoryid || (o = !0) }), o } filterCasiaCategory(i, e) { if (i && i.length > 0) { let o = i.filter(r => r.subCategoryId == e.subcategoryid); if (o && o.length > 0) return o[0].featureIds.indexOf("CasiaGamesYouMightLike") > -1 } return !1 } getLanguageContentMap(i) { let e = new Map; if (i && i.length > 0) for (let o = 0; o < i.length; o++) { let r = i[o]; if (r.indexOf(":") > -1) { let c = r.split(":"); e.set(c[0], c[1]) } } return e } getGameMetaDataMap(i, e) { let o = new Map; if (i && i.length > 0) for (let r = 0; r < i.length; r++) { let c = i[r]; c.metaLobbyType = e, o.set(c.game, c), this.gameMetaDataMap.set(c.game, c) } return o } setSearchCriteriaforCategoryGames() { let i = this.configProviderService.provideSearchConfig(); if (i.enableCategorySearchCriteria && i.categoryGamesSearchCriteria.length > 0) for (let e of this.lobbyTypeMaps.keys()) for (let o = 0; o < i.categoryGamesSearchCriteria.length; o++) { let c = this.getCategoryInfo(e, i.categoryGamesSearchCriteria[o].categoryRoute); if (c && c.categoryInfo && c.categoryInfo.gamelist && c.categoryInfo.gamelist.length > 0) for (let d = 0; d < c.categoryInfo.gamelist.length; d++) { let f = c.categoryInfo.gamelist[d].game, y = this.gameMetaDataMap.get(f); y && (y.condition = i.categoryGamesSearchCriteria[o].clientDsl, this.gameMetaDataMap.set(f, y)) } } } getLobbyCategory(i, e, o) { if (i) { let r = i.categoryid; i.lmtCategoryId = r, i.route && (i.categoryid === ConstService.LMC_GYML ? (i.categoryid = i.categoryid, i.isSubCatVisible = !1) : (i.categoryid = i.route.replace(/\s/g, "").toLowerCase(), i.isSubCatVisible = !0), i.route = i.categoryid), i.engCategoryName = (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(i.categoryname), i.categoryname = this.getCategoryNameFromLangMap(r, e, i.categoryname), i.isNavigationCategory = this.getNavigationVisibility(i.isHidden), i.sitecoreData = this.getSitecoreInfoForCategoryIdAndLobbyType(i.route, o); let c = this.getTitleAndSubTitle(i); return i.categoryname = c.title, i.subTitle = c.subTitle, i } } getLobbySubCategory(i, e, o) { if (i) { let r = i.subcategoryid; i.lmtCategoryId = r, i.route && (i.subcategoryid === ConstService.LMC_GYML ? (i.categoryid = i.subcategoryid, i.isSubCatVisible = !1) : (i.categoryid = i.route.replace(/\s/g, "").toLowerCase(), i.isSubCatVisible = !0), i.categoryid = i.subcategoryid === ConstService.LMC_GYML ? i.subcategoryid : i.route.replace(/\s/g, "").toLowerCase(), i.route = i.categoryid), i.engCategoryName = (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(i.subcategoryname), i.categoryname = this.getCategoryNameFromLangMap(r, e, i.subcategoryname), i.sitecoreData = this.getSitecoreInfoForCategoryIdAndLobbyType(i.categoryid, o), i.hideSubCategory = i.subcategoryid.toLowerCase() === ConstService.Recent_Games.toLowerCase() || i.subcategoryid.toLowerCase() === ConstService.LMC_GYML; let c = this.getTitleAndSubTitle(i); return i.categoryname = c.title, i.subTitle = c.subTitle, i } } getCategoryNameFromLangMap(i, e, o) { return e && e.size > 0 && e.get(i) ? e.get(i) : o } getNavigationVisibility(i) { return !i || "false" == i.toLowerCase().trim() } getTitleAndSubTitle(i) { let e, o, r = this.configProviderService.provideFeaturesConfig(); if (i && (o = i.sitecoreData.overridenCategoryname || i.categoryname, i.sitecoreData && (e = i.sitecoreData.headerTitle), r.delimiterForDynamicGameNames && "" != r.delimiterForDynamicGameNames)) { let d = (i.sitecoreData.overridenCategoryname || i.categoryname).split(r.delimiterForDynamicGameNames); o = d[0], d[1] && (e = d[1]) } return { title: o, subTitle: e } } getParentCategoryId(i, e) { if (i.isHidden && "true" === i.isHidden) for (let o = 0; o < e.length; o++) { let r = e[o]; if (r.subcategories && r.subcategories.length > 0) for (let c = 0; c < r.subcategories.length; c++)if (r.subcategories[c].subcategoryid.toLowerCase() === i.lmtCategoryId.toLowerCase()) return r.categoryid === ConstService.LMC_GYML ? r.categoryid : r.route.replace(/\s/g, "").toLowerCase() } return i.categoryid } getSitecoreInfoForCategoryIdAndLobbyType(i, e) { const o = this.configProviderService.provideOptimizedTeaserConfig(), r = this.configProviderService.provideGameSelectorWidgetConfig(); let c = this.getLobbySitecoreData(); if (c) for (let d = 0; d < c.length; d++)if (c[d].lobbyType == e) { let f = c[d].sitecoreData; for (let y = 0; y < f.length; y++) { let M = f[y]; if (M.categoryId.toLowerCase() == i.toLowerCase()) return M.jackpotWidget && M.jackpotWidget.length > 0 && (M.jackpotWidgetIds = this.getJackpotList(M.jackpotWidget)), r && r.isEnabled && M.displayGameSelectorWidget && M.gameSelectorWidget && this.gameSelectorWidgetSource.push(M.gameSelectorWidget), o.teaserOptimization && o.enableOptMiniTeasers && !this.isTouch() && M.optimisedMiniTeasers && M.optimisedMiniTeasers.length && this.optMiniTeasersSource.push(...M.optimisedMiniTeasers), M } } return { attributes: { icon: "theme-home-i" } } } getJackpotList(i) { let e = []; return i.forEach(o => { null != o && e.push(o.itemName) }), e } getCategoryNameFromSitecore(i, e, o) { let r = this.getSitecoreInfoForCategoryIdAndLobbyType(i, e); return r ? r.title : o ? i : null } getSubtitleFromSitecore(i, e) { let o = this.getSitecoreInfoForCategoryIdAndLobbyType(i, e); return o ? o.headerTitle : null } getCategoryInfo(i, e) { if (i = this.checkIfGlobalJackpotLobby(i), this.lobbyTypeMaps && this.lobbyTypeMaps.size > 0) { let o = this.lobbyTypeMaps.get(i); if (o && o.categoriesMap && o.categoriesMap.size > 0) return { categoryInfo: o.categoriesMap.get(e), categoryNameLangMap: o.categoryNameLangMap, stickerNameMap: o.stickerNameMap } } } getLobbyInfo(i) { if (this.lobbyTypeMaps && this.lobbyTypeMaps.size > 0) return this.lobbyTypeMaps.get(i) } getCategoryInfoOnLMTId(i, e) { let o = this.lobbyTypeMaps.get(i); if (o && o.categoriesMap && o.categoriesMap.size > 0) { let r = Array.from(o.categoriesMap.values()).filter(c => c.lmtCategoryId === e); if (r && r.length > 0) return r[0] } } getInstantCasinoLobby() { for (let i = 0; i < this.lobbyTypeMaps.size; i++)if (this.lobbyTypeMaps[i].key == ConstService.Instant_Casino) return this.lobbyTypeMaps[i] } getLiveCasinoLobby() { for (let i = 0; i < this.lobbyTypeMaps.size; i++)if (this.lobbyTypeMaps[i].key == ConstService.Live_Casino) return this.lobbyTypeMaps[i] } getAllCategoriesFromLocalCache(i = "", e = "") { let o = this.configProviderService.provideFeaturesConfig(); return this.cacheManager.readCategoryDataLocalCache(o.browserLocalStorageCategoryDataUpdateInterval, i, e.toLowerCase()) } getGameMetaData() { return this.gameMetaDataMap } getGameInfo(i) { return this.gameMetaDataMap && this.gameMetaDataMap.size > 0 ? this.gameMetaDataMap.get(i) : null } getGameDisplayName(i) { if (this.gameMetaDataMap && this.gameMetaDataMap.size > 0) { let e = this.gameMetaDataMap.get(i); if (e) return e.name } return null } getGameProvider(i) { if (this.gameMetaDataMap && this.gameMetaDataMap.size > 0) { let e = this.gameMetaDataMap.get(i); if (e) return e.provider } return null } setGameIconNotFound(i, e = 1) { if (this.gameMetaDataMap && this.gameMetaDataMap.size > 0) { let o = this.gameMetaDataMap.get(i); o && (o.isImageNotFound || (o.isImageNotFound = new Map), o.isImageNotFound.set(e.toString(), !0)) } } isGameIconNotAvailable(i, e = 1) { if (this.gameMetaDataMap && this.gameMetaDataMap.size > 0) { let o = this.gameMetaDataMap.get(i); if (o) { const r = o.isImageNotFound; if (r && r.size > 0) return r.get(e.toString()) } } } isGameInCategory(i, e) { let r; if (r = this.lobbyTypeMaps.get(i.lobbyType), r) { let c = r.categoriesMap.get(e); c && c.gamelist && c.gamelist.forEach(d => { if (d.game.toLowerCase() === i.gameId.toLowerCase()) return !0 }) } return !1 } isDefaultCategory(i, e) { if (i && "" != i && e && "" != e) { let o = this.getDefaultOrFirstCategoryInfo(i); if (o && o.categoryInfo && o.categoryInfo.categoryid === e) return !0 } return !1 } getDefaultOrFirstCategoryInfo(i) { let e, o; if (i = this.checkIfGlobalJackpotLobby(i), this.lobbyTypeMaps && this.lobbyTypeMaps.size > 0 && (o = this.lobbyTypeMaps.get(i), o && o.categoriesMap && o.categoriesMap.size > 0)) { let r = this.configProviderService.provideCasinoConfig(), c = this.casinoManager.IsFeatureEnabledforLobbytype(i, r.defaultyLobbyTypeCategory); c && "" != c && (e = o.categoriesMap.get(c)), e || (e = o.categoriesMap.entries().next().value[1]) } if (e && o) return { categoryInfo: e, categoryNameLangMap: o.categoryNameLangMap, stickerNameMap: o.stickerNameMap } } getDefaultOrFirstCategoryInfoForInvokerProduct(i) { let e, o; if (this.lobbyTypeMapsForInvokerProduct && this.lobbyTypeMapsForInvokerProduct.size > 0 && (o = this.lobbyTypeMapsForInvokerProduct.get(i), o && o.categoriesMap && o.categoriesMap.size > 0)) { let r = this.configProviderService.provideCasinoConfig(), c = this.casinoManager.IsFeatureEnabledforLobbytype(i, r.defaultyLobbyTypeCategory); c && "" != c && (e = o.categoriesMap.get(c)), e || (e = o.categoriesMap.entries().next().value[1]) } if (e && o) return { categoryInfo: e, categoryNameLangMap: o.categoryNameLangMap, stickerNameMap: o.stickerNameMap } } checkForTouchDevice() { try { this.isTouchDevice = !this.nativeAppService.isDownloadClient && this.deviceService.isTouch && !window.matchMedia("(pointer: fine)").matches && !navigator.userAgent.match(/Win64/) } catch (i) { this.isTouchDevice = "ontouchstart" in window || navigator.maxTouchPoints > 0 } } isTouch() { return this.isTouchDevice } searchGames(i) { this.gameDataFromLMT = this.gameMetaDataMap, i = i.toLowerCase(); let e = this.getDisabledGames(); if (this.gameDataFromLMT && this.gameDataFromLMT.size > 0) { let o = []; this.gameDataFromLMT.forEach(f => { if (-1 !== f.name.toLowerCase().indexOf(i)) if (f.condition) this.dslService.evaluateExpression(f.condition).subscribe(y => { if (y) { let M = e.filter(T => T === f.game); M && M.length > 0 || o.push(this.setSearchGameIcon(f.game, f.name, f.provider, f.condition)) } }); else { let y = e.filter(M => M === f.game); y && y.length > 0 || o.push(this.setSearchGameIcon(f.game, f.name, f.provider, f.condition)) } }); let r = [], c = [], d = []; return o && o.length > 0 && o.forEach(f => { 0 == f.title.toLowerCase().indexOf(i) ? c.push(f) : d.push(f) }), r = r.concat(c), r = r.concat(d), r } } setSearchGameIcon(i, e, o, r) { let c = this.configProviderService.provideGameConfig(), d = new GameLobbyModel; return d.gameId = i, d.internalGameName = i, d.title = e, d.provider = o, d.condition = r, d.icon = { src: c.host + c.gameIconTemplate.replace("{0}", c.iconTypeMapping[1]).replace("{1}", d.gameId) + ".jpg" }, d.rowSpan = 1, d.colSpan = 1, d } getNavCategories(i, e) { var o; let r = this.configProviderService.provideFeaturesConfig(), c = this.configProviderService.provideSlotRacesConfig(), d = this.configProviderService.provideSubNavigationConfig(), f = this.getLobby(i), y = this.getProductForGivenLobbyType(i), M = [], T = null === (o = this.getDefaultOrFirstCategoryInfo(i)) || void 0 === o ? void 0 : o.categoryInfo; if (!e && d.hardProductOverride && (e = d.hardProductOverride), f && f.lobby) { let P = this.casinoManager.getSlotRaceCategoryId(i), G = this.casinoManager.IsFeatureEnabledforLobbytype(i, r.enableSlotRacesForLobbyType), x = (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(f.lobby.categoriesMap); x && x.size > 0 && (this.productService.getMetadata("casino"), x.forEach(J => { let W = !0, Q = P == J.categoryid, Z = J.sitecoreData.categoryUrl; if (J.isNavigationCategory) { if (J.sitecoreData || (J.sitecoreData = { attributes: { icon: "theme-home" } }), T && T.categoryid === J.categoryid) { J.isdefault = !0; let N = this.configProviderService.provideLmtConfig(); J.url = this.urlUtility.getProductApiBaseUrl(e) + "/" + y, N.enableDefaultLink && this.casinoManager.getProductForGivenLobbyType(i).toLowerCase() == N.defaultProductHomeUrl.toLowerCase() && (J.url = this.urlUtility.getProductBaseUrl(e) + "/", N.appendCultureToDefaultUrl && (J.url = this.urlUtility.getProductBaseUrl(e) + "/" + this.page.lang)) } else J.url = Z ? Z.url : this.urlUtility.getProductApiBaseUrl(e) + "/" + y + "/c/" + J.categoryid; W = this.addCategoryForLivegamesIframe(i), P && Q && (!G || !c.enablePreLogin && !this.user.isAuthenticated) && (W = !1), W && M.push(J) } })) } return M } addCategoryForLivegamesIframe(i) { let o = this.configProviderService.provideCasinoConfig().liveGamesCategories, r = this.getProductForGivenLobbyType(i); return !(o && o.length > 0 && o.indexOf(r) > -1) } getNavCategoriesForInvokerProduct(i, e) { let o = this.getLobbyForInvokerProduct(i, e), r = this.getProductForGivenLobbyType(i), c = [], d = this.getDefaultOrFirstCategoryInfoForInvokerProduct(i); if (o && o.lobby) { let f = o.lobby.categoriesMap; f && f.size > 0 && f.forEach(y => { y.isNavigationCategory && (y.sitecoreData || (y.sitecoreData = { attributes: { icon: "theme-home" } }), d && d.categoryid === y.categoryid ? (y.isdefault = !0, y.url = "/" + this.page.lang + "/" + r) : y.url = "/" + this.page.lang + "/" + r + "/c/" + y.categoryid, c.push(y)) }) } return c } getLobby(i) { return { lobby: this.lobbyTypeMaps.get(i), disabledGames: this.disabledGames } } getLobbyForInvokerProduct(i, e) { return this.configProviderService.provideFeaturesConfig(), { lobby: this.lobbyTypeMapsForInvokerProduct.get(i) } } getProductForGivenLobbyType(i) { let o = this.configProviderService.provideLmtConfig().lobbyTypeMap; for (let r = 0; r < o.length; r++)if (o[r].lobbyType == i && o[r].product) return o[r].product.toLowerCase() } getStickerMap(i) { let e = this.lobbyTypeMaps.get(i); return e ? e.stickerNameMap : null } setGlobalJackpotLobbyTypeMap(i, e) { let o = this.getLobbyContent(e, i); this.lobbyTypeMaps.set(i, o), this.gJLobbyTypeMaps.set(i, o), this.cacheManager.writeCategoryLocalStorageCacheMap(i, (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(o), this.invokerProductService.getInvokerProduct()), this.disjointFeedsInitiated || this.setCasinoLobby(!0) } checkNSetGJLobbyTypeMaps() { } checkNGetGJLobbyTypeMaps() { return this.gJLobbyTypeMaps } getGlobalJackpotLobbyDataFromLocalStorage(i) { let e = this.configProviderService.provideFeaturesConfig(), o = this.cacheManager.readCategoryDataLocalCache(e.browserLocalStorageCategoryDataUpdateInterval, i, this.invokerProductService.getInvokerProduct()); if (null != o) { let r = new LobbyItem; r.setLobbyItemFromLocalStorage(o); for (let c = 0; c < o.lsGameMetaDataMap.length; c++) { let d = o.lsGameMetaDataMap[c][1]; this.gameMetaDataMap.set(d.game, d) } return this.lobbyTypeMaps.set(i, r), this.gJLobbyTypeMaps.set(i, r), this.disjointFeedsInitiated || this.setCasinoLobby(!0), r } } getCategoryName(i, e) { let o = this.getCategoryInfo(i, e), r = ""; return o && o.categoryInfo && (r = o.categoryInfo.engCategoryName ? o.categoryInfo.engCategoryName : ""), r } getLinkedToCategory(i, e) { let o = this.getLobby(i); if (o && o.lobby) { let r = (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(o.lobby.categoriesMap); if (r && r.size > 0) { let c = []; return r.forEach(d => { d.linkedCategory === e && c.push(d) }), c } } } setGJPathSegment(i) { this.GJpathSegment = i } checkIfGlobalJackpotLobby(i) { if (i) { let o = this.configProviderService.provideGlobalJackpotConfig().globalJackpotPathSegmentsArray.filter(r => r.lobbyType && r.lobbyType.toLowerCase() == i.toLowerCase()); return o && o.length > 0 ? i + "#" + this.GJpathSegment + "#" : i } } raiseLobbyLoadedEvent(i) { i.invokerProduct = this.invokerProductService.getInvokerProduct(), i.disabledGames = this.disabledGames; let e = new CustomEvent("cc:casinocore_lobby_data", { detail: i }); window.casinoLobbyData = i, window.dispatchEvent(e) } getFromCookie(i) { return this.cookies.get(i) > "0" } getDropShadow(i) { var e, o, r, c, d, f, y, M; let G, T = this.configProviderService.provideGlobalConfig(); return G = this.getFromCookie("dark-mode") ? (null === (o = null === (e = null == i ? void 0 : i.sitecoreData) || void 0 === e ? void 0 : e.attributes) || void 0 === o ? void 0 : o.darkmodegametiledropshadow) ? null === (c = null === (r = null == i ? void 0 : i.sitecoreData) || void 0 === r ? void 0 : r.attributes) || void 0 === c ? void 0 : c.darkmodegametiledropshadow : T.lobbyConfigurations.darkModeGameTileDropShadow : (null === (f = null === (d = null == i ? void 0 : i.sitecoreData) || void 0 === d ? void 0 : d.attributes) || void 0 === f ? void 0 : f.gametiledropshadow) ? null === (M = null === (y = null == i ? void 0 : i.sitecoreData) || void 0 === y ? void 0 : y.attributes) || void 0 === M ? void 0 : M.gametiledropshadow : T.lobbyConfigurations.gameTileDropShadow, G } getBorderRadius(i) { var e, o, r, c; let d = this.configProviderService.provideGlobalConfig(), f = (null === (o = null === (e = null == i ? void 0 : i.sitecoreData) || void 0 === e ? void 0 : e.attributes) || void 0 === o ? void 0 : o.gametileborderradius) ? null === (c = null === (r = null == i ? void 0 : i.sitecoreData) || void 0 === r ? void 0 : r.attributes) || void 0 === c ? void 0 : c.gametileborderradius : d.lobbyConfigurations.gameTileBorderRadius; return i.isIconSixCategory ? null : f } getLTileFontFamily(i) { var e, o, r, c; let d = this.configProviderService.provideGlobalConfig(); return (null === (o = null === (e = null == i ? void 0 : i.sitecoreData) || void 0 === e ? void 0 : e.attributes) || void 0 === o ? void 0 : o.lobbytilefontfamily) ? null === (c = null === (r = null == i ? void 0 : i.sitecoreData) || void 0 === r ? void 0 : r.attributes) || void 0 === c ? void 0 : c.lobbytilefontfamily : d.lobbyConfigurations.lobbyTileFontFamily } getsubCategoryTextColor(i) { var e, o, r, c; let d = this.configProviderService.provideGlobalConfig(); return (null === (o = null === (e = null == i ? void 0 : i.sitecoreData) || void 0 === e ? void 0 : e.attributes) || void 0 === o ? void 0 : o.subcategorytextcolor) ? null === (c = null === (r = null == i ? void 0 : i.sitecoreData) || void 0 === r ? void 0 : r.attributes) || void 0 === c ? void 0 : c.subcategorytextcolor : d.lobbyConfigurations.subCategoryTextColor } getsubCategoryTitleFontSize(i) { var e, o, r, c; let d = this.configProviderService.provideGlobalConfig(); return (null === (o = null === (e = null == i ? void 0 : i.sitecoreData) || void 0 === e ? void 0 : e.attributes) || void 0 === o ? void 0 : o.subcategorytitlefontsize) ? null === (c = null === (r = null == i ? void 0 : i.sitecoreData) || void 0 === r ? void 0 : r.attributes) || void 0 === c ? void 0 : c.subcategorytitlefontsize : d.messages.subCategoryTitleFontSize } getsubCategorySubTitleFontSize(i) { var e, o, r, c; let d = this.configProviderService.provideGlobalConfig(); return (null === (o = null === (e = null == i ? void 0 : i.sitecoreData) || void 0 === e ? void 0 : e.attributes) || void 0 === o ? void 0 : o.subcategorysubtitlefontsize) ? null === (c = null === (r = null == i ? void 0 : i.sitecoreData) || void 0 === r ? void 0 : r.attributes) || void 0 === c ? void 0 : c.subcategorysubtitlefontsize : d.messages.subCategorySubTitleFontSize } appendTheme(i, e) { let o = this.configProviderService.provideFeaturesConfig(), r = ""; const { [e]: c } = o.gameIconTheming; if (c) for (let d in c) c[d] && (r = d); if (r && i && i.indexOf(r) < 0) { let d = null == i ? void 0 : i.split("/"); null == d || d.splice(d.length - 1, 0, r), i = d.join("/") } return i } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CacheManagerService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(FastLoadingGamesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.rBu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U8N), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(JackpotDataService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(RecentGamesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.T3C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(TeaserService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(FavouriteService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UnfinishedGamesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(InvokerProductService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(DiscoverFeedService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(LiveCasinoService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(NewsFeedService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PromotedGamesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(FreespinSummaryService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ApiPathsHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GeolocationCoordinatorService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlayerSegmentationService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GeolocationActivatorService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(SlotRacesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_router__WEBPACK_IMPORTED_MODULE_8__.gz), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CozyBingoDataService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.M52), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.N_8), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ThumbnailService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.XXf), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(WindowRef), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoCoreNpmParamsService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GameSelectorWidgetService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(); class AdvanceGameDataModel { constructor() { } } let AdvanceGameDataService = (() => { class s { constructor(i, e, o, r) { this.casinoLobbyService = i, this.configProviderService = e, this.deviceService = o, this.nativeAppService = r, this.advanceGameDataModel = new AdvanceGameDataModel } getAdvanceCategoryInfo(i) { let e, o, d, f, r = i.gameSection, c = this.casinoLobbyService.getCategoryInfo(i.game.lobbyType, r); return c && (f = c.categoryInfo), f ? f.parentLMTCategoryId ? (e = f.parentLMTCategoryId, o = f.lmtCategoryId) : f.lmtCategoryId ? (e = f.lmtCategoryId, o = "") : (e = r, o = "") : (e = r, o = ""), (r == ConstService.SEARCH || r == ConstService.SEARCH_GYML) && (d = ""), { parentCategoryId: e, subCategoryId: o, rowNumber: d } } createAdvanceGameModel(i, e, o, r, c) { if (this.configProviderService.provideAdvanceGameDataConfig().enableAdvanceGameData) { let f = new AdvanceGameDataModel; f.parentcategoryId = i, f.subcategoryId = e, f.rowNumber = c, f.columnNumber = o + 1, f.iconSize = r, this.setRemainingAdvanceGameDataParameters(f) } } gameClickedFromSearchAdvanceGameDataModel(i, e, o, r) { let c = new AdvanceGameDataModel; c.parentcategoryId = "egv_" + e, c.subcategoryId = "", c.rowNumber = "", e != ConstService.SEARCH && (c.rowNumber = o || ""), c.columnNumber = r + 1, c.iconSize = i.iconType, this.setRemainingAdvanceGameDataParameters(c) } setRemainingAdvanceGameDataParameters(i) { let e = bowser__WEBPACK_IMPORTED_MODULE_1__.parse(window.navigator.userAgent); i.userAgent = window.navigator.userAgent, i.browserName = e.browser.name, i.browserVersion = e.browser.version, i.osName = e.os.name, i.osVersion = e.os.version, i.devicemake = e.platform.vendor, this.setAdvanceGameModel(i) } setAdvanceGameModel(i) { this.advanceGameDataModel = i } getAdvanceGameModel() { let i = { parentcategoryId: this.advanceGameDataModel.parentcategoryId, subcategoryId: this.advanceGameDataModel.subcategoryId, rowNumber: this.advanceGameDataModel.rowNumber, columnNumber: this.advanceGameDataModel.columnNumber, iconSize: this.advanceGameDataModel.iconSize, browserName: this.advanceGameDataModel.browserName, browserVersion: this.advanceGameDataModel.browserVersion, osName: this.advanceGameDataModel.osName, osVersion: this.advanceGameDataModel.osVersion, userAgent: this.advanceGameDataModel.userAgent, devicemake: this.advanceGameDataModel.devicemake }; if (Object.keys(i).length > 0) return i } appendAdvanceGameDataUrl(i, e) { let y, o = this.configProviderService.provideAdvanceGameDataConfig(), r = this.getAdvanceGameModel(), c = this.deviceService.isMobilePhone ? "mobile" : this.deviceService.isTablet ? "tablet" : "desktop", f = null != this.deviceService.model ? this.deviceService.model : ""; switch (e) { case "VC": y = "VC_Client"; break; case "MC": y = "MAC_Client"; break; case "AW": y = "Android_Web"; break; case "IW": y = "IOS_Web"; break; case "AN": case "IN": y = this.nativeAppService.isNativeApp ? "NativeApp" : this.nativeAppService.isNativeWrapper ? "NativeWrapperApp" : ""; break; case "FC": y = "Desktop"; break; default: y = "Web" }let T = this.format(o.advanceUrlPattern, [r.parentcategoryId, r.subcategoryId, r.rowNumber, r.columnNumber, r.iconSize, r.browserName, r.browserVersion, r.osName, c, "", r.userAgent, r.osVersion, r.devicemake, f, y]); return this.appendAdvanceGameDataQueryString(i, T) } format(i, e) { let o = i; for (let r = 0; r < i.length; r++) { let c = new RegExp("\\{" + r + "\\}", "gm"); o = o.replace(c, null != e[r] ? encodeURIComponent(e[r]) : "") } return o } appendAdvanceGameDataQueryString(i, e) { return i.indexOf("?") > -1 ? i += "&" + e : i += "?" + e, i } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoLobbyService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U8N), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.rBu)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CashierService = (() => { class s { constructor(i, e, o) { this.api = i, this.configProviderService = e, this.urlUtility = o } getQuickDepositAllowedStatus() { let i = this.configProviderService.provideApiPathsConfig(), e = this.urlUtility.getApiurl(i.cashier.csQuickDeposit); return this.api.get(e) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CasinoIFrameOverlayService = (() => { class s { constructor(i, e, o, r) { this.casinoManager = i, this.configProviderService = e, this.casinoCoreNpmParamsService = o, this.invokerProductService = r } isOverLayOnAProduct(i = null) { let e = this.configProviderService.provideCasinoAsIFrameConfig(); if ((null == e ? void 0 : e.overlayLobbyTypeMap) && e.overlayLobbyTypeMap.length > 0) { let o = null == e ? void 0 : e.overlayLobbyTypeMap.filter(r => r.invokerProduct.toLowerCase() === this.invokerProductService.getInvokerProduct().toLowerCase()); return !!i && this.casinoManager.IsFeatureEnabledforLobbytype(i, o) } return !1 } lobbyTypeForNavCategories(i) { let e = this.configProviderService.provideCasinoAsIFrameConfig(); if (e && e.overlayBottomNavLobbyTypeMap && e.overlayBottomNavLobbyTypeMap.length > 0) { let o = e.overlayBottomNavLobbyTypeMap.filter(r => r.invokerProduct.toLowerCase() === this.invokerProductService.getInvokerProduct().toLowerCase()); if (o && o.length > 0) for (let r = 0; r < o.length; r++)return o[r].lobbyType } return null } fetchOverlayLobby() { let i = this.configProviderService.provideLmtConfig(), e = this.invokerProductService.getInvokerProduct(), o = this.configProviderService.provideCasinoAsIFrameConfig(), r = this.casinoCoreNpmParamsService.getcasinoCoreNpmParams(), c = ""; if (i.lobbyTypeMap && i.lobbyTypeMap.length > 0) { let d = i.lobbyTypeMap.filter(f => f.invokerProduct.toLowerCase() === e.toLowerCase()); if (d && d.length > 0) if (r.customLobbyTypeMaps && r.customLobbyTypeMaps.length > 0) c = d[0].lobbyType ? d[0].lobbyType : ""; else if (o && o.overlayLobbyTypeMap && o.overlayLobbyTypeMap.length > 0) { let f = o.overlayLobbyTypeMap.filter(y => y.invokerProduct.toLowerCase() === e.toLowerCase()); (null == f ? void 0 : f.length) > 0 && (c = f[0].fetchMeta ? f[0].lobbyType : "") } } return c } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoCoreNpmParamsService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(InvokerProductService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CategoryManager = (() => { class s { constructor(i, e, o, r, c, d, f) { this.api = i, this.cacheManager = e, this.user = o, this.favouriteService = r, this.casinoManager = c, this.configProviderService = d, this.urlUtility = f, this.lobbyCategoryLookup = new Map, this.parentCategoryLookUpMap = new Map, this.categoryLookUpFilledPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(new Map), this.categoryLookUpObservable = this.categoryLookUpFilledPublisher.asObservable(), this.defaultCategoryFilledPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.defaultCategoryLookUpObservable = this.defaultCategoryFilledPublisher.asObservable(), this.gameStickersMap = {}, this.stickersLookupCompletePublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(new Boolean) } getCategoryInfo(i) { let e = this.casinoManager.getLobbyType(), o = this.lobbyCategoryLookup.get(e); if ((!o || 0 === o.size) && (o = this.cacheManager.getAllCategoriesFromLocalCache(), o && o.size > 0 && (this.lobbyCategoryLookup.set(e, o), this.parentCategoryLookUpMap.set(e, this.setParentCategoryLookUpMap(o)))), o && o.size > 0) return o.get(i) } getCategoryInfoLobbyType(i, e) { let o = this.lobbyCategoryLookup.get(e); if ((!o || 0 === o.size) && (o = this.cacheManager.getAllCategoriesFromLocalCache(), o && o.size > 0 && (this.lobbyCategoryLookup.set(e, o), this.parentCategoryLookUpMap.set(e, this.setParentCategoryLookUpMap(o)))), o && o.size > 0) return o.get(i) } getAllLMTCategories(i = null, e = null) { let o = this.configProviderService.provideApiPathsConfig(), r = this.urlUtility.getApiurl(o.lmt.lmtCategoriesAsync); return this.api.get(r, { lobbytype: i, invokerProduct: e }) } defaultCategoryLoadEvent(i) { this.defaultCategoryFilledPublisher.next(i) } setCategoryLookUpMap(i, e, o) { this.mapGameStickers(i); let r = new Map; i.forEach(c => { r.set(c.categoryid, c) }), e && this.cacheManager.setCategoryLocalStorageCacheMap(r, o), this.lobbyCategoryLookup.set(o, r), this.parentCategoryLookUpMap.set(o, this.setParentCategoryLookUpMap(r)), this.casinoManager.getLobbyType() == o && this.categoryLookUpFilledPublisher.next(r) } clearLobbyCategoryLookups() { this.lobbyCategoryLookup.clear(), this.parentCategoryLookUpMap.clear() } updateGamesOrder() { let i = new Map; this.user.isAuthenticated && this.favouriteService.favouriteGamesFeedObservable.subscribe(e => { e && e.length > 0 && Array.from(i.entries()).forEach(o => { if (o[1].games && o[1].games.length > 0) { let r = o[1].games; o[1].games = [], e.forEach(c => { let d = r.indexOf(c); d > -1 && (o[1].games.push(c), r.splice(d, 1)) }), o[1].games = o[1].games.concat(r) } }) }) } getSubCategoryData(i) { let e = { availableSubCategories: [], unAvailableSubCategories: [] }; return i.forEach(o => { let r = this.getCategoryInfo(o); r ? e.availableSubCategories.push(r) : e.unAvailableSubCategories.push(o) }), e } getAllCategories(i = "") { "" === i && (i = this.casinoManager.getLobbyType()); let e = new Map; if (e = this.lobbyCategoryLookup.get(i), e && e.size > 0) return e; { let o = this.cacheManager.getAllCategoriesFromLocalCache(i); return o && (this.lobbyCategoryLookup.set(i, o), this.parentCategoryLookUpMap.set(i, this.setParentCategoryLookUpMap(o))), o } } isGameInCategory(i, e) { let o = this.casinoManager.getLobbyType(), r = new Map; if (r = this.lobbyCategoryLookup.get(o), r && r.size > 0) { let c = r.get(e); c && c.gamesModel && c.gamesModel.forEach(d => { if (d.game === i) return !0 }) } return !1 } setParentCategoryLookUpMap(i) { let e = new Map; if (i && i.size > 0) for (let o of Array.from(i.entries())) if (!o[1].isNavigationCategory) for (let r of Array.from(i.entries())) if (r[1].linkedCategory == o[0]) for (let c of Array.from(i.entries())) c[1].lmtSubCategories && c[1].lmtSubCategories.indexOf(r[1].categoryid) > -1 && (o[1].parentCategoryid = c[1].categoryid, e.set(o[1].categoryid, o[1].parentCategoryid)); return e } getParentCategory(i) { let e = this.parentCategoryLookUpMap.get(this.casinoManager.getLobbyType()); if (e && e.size > 0) { let o = e.get(i); return this.getCategoryInfo(o) } } getDefaultCategoryTypeforLobbyType() { let o, i = this.configProviderService.provideCasinoConfig(), e = this.casinoManager.getLobbyType(); if (e) for (let r = 0; r < i.defaultyLobbyTypeCategory.length; r++)i.defaultyLobbyTypeCategory[r].lobbyType.toLowerCase() === e.toLowerCase() && (o = i.defaultyLobbyTypeCategory[r].defaultCategory); return o ? this.getLMTMap(o) : null } getDefaultCategoryTypeforGivenLobbyType(i) { let o, e = this.configProviderService.provideCasinoConfig(); if (i) for (let r = 0; r < e.defaultyLobbyTypeCategory.length; r++)e.defaultyLobbyTypeCategory[r].lobbyType.toLowerCase() === i.toLowerCase() && (o = e.defaultyLobbyTypeCategory[r].defaultCategory); return o ? this.getLMTMap(o) : null } getDefaultCategoryIdforGivenLobbyType(i) { let o, e = this.configProviderService.provideCasinoConfig(); if (i) for (let r = 0; r < e.defaultyLobbyTypeCategory.length; r++)e.defaultyLobbyTypeCategory[r].lobbyType.toLowerCase() === i.toLowerCase() && (o = e.defaultyLobbyTypeCategory[r].defaultCategory); return o ? o.toLowerCase() : null } getDefaultCategoryFromDynacon() { let i = this.configProviderService.provideCasinoConfig(), e = this.casinoManager.getLobbyType(); if (e) for (let o = 0; o < i.defaultyLobbyTypeCategory.length; o++)if (i.defaultyLobbyTypeCategory[o].lobbyType.toLowerCase() === e.toLowerCase()) return i.defaultyLobbyTypeCategory[o].defaultCategory } getParentCategoryId(i) { let e = this.getAllCategories(), o = null; return e && e.size > 0 && e.get(i) && (o = e.get(i).parentCategoryid, o || (o = i)), o } getDefaultLMTCategory() { let i = this.configProviderService.provideCasinoConfig(); return this.getLMTMap(i.defaultCategory) } getLMTMap(i) { return i && "" !== i ? i.toLowerCase() === this.getDefaultCategoryFromDynacon().toLowerCase() ? this.getDefaultCategoryInfo() : this.fetchCategoryInfoOnsiteCoreDataCategoryId(i) : this.getDefaultCategoryInfo() } fetchCategoryInfoOnsiteCoreDataCategoryId(i) { if (i) { let e = this.getAllCategories(); if (e && e.size > 0) { for (let o of Array.from(e.keys())) { let r = e.get(o); if (r && r.categoryid && r.categoryid.toLowerCase() === i.toLowerCase()) return e.get(o) } return null } } return null } getDefaultCategoryInfo() { let i = this.getDefaultCategoryFromDynacon(), e = this.fetchCategoryInfoOnsiteCoreDataCategoryId(i); if (e) return e; { let o = this.getAllCategories(); if (o && o.size > 0) return o.entries().next().value[1] } return null } setUserSessionLMTLookUpFromLocalStorage() { let i = this.casinoManager.getLobbyType(), e = this.cacheManager.getAllCategoriesFromLocalCache(); this.lobbyCategoryLookup.set(i, e), this.parentCategoryLookUpMap.set(i, this.setParentCategoryLookUpMap(e)), e && e.size > 0 && this.categoryLookUpFilledPublisher.next(e) } mapGameStickers(i) { let e = {}; i.forEach(o => { o.gamesModel && o.gamesModel.forEach(r => { "sticker" in r && (e[r.game] = r.sticker) }) }), this.gameStickersMap = e, this.cacheManager.setGameToStickersMap(this.gameStickersMap), this.stickersLookupCompletePublisher.next(!0) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CacheManagerService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(FavouriteService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), ToastMessageService = (() => { class s { constructor() { } on(i, e, o = !1) { this.isShown = !0, this.eventId = setTimeout(() => { this.off() }, 2e3), this.iconClass = i, this.message = e, this.isIconShown = o } off() { clearTimeout(this.eventId), this.isShown = !1 } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(); class GameDataFromCacheResponseModel { constructor() { this.gameMetaData = new Map, this.gamesNotInCache = [] } } let GameDataManager = (() => { class s { constructor(i, e, o, r) { this.configProviderService = i, this.api = e, this.cacheManager = o, this.urlUtility = r, this.gameDataLookup = new Map, this.gamesLookUp = [], this.gameDataFromLMT = [], this.liveCasinoLookup = [], this.gameLookUpFilledPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.gameLookUpObservable = this.gameLookUpFilledPublisher.asObservable() } setGameLobbyModel(i, e) { let o = this.configProviderService.provideGameConfig(), r = new GameLobbyModel; return r.gameId = i.game, r.name = i.name, r.provider = i.provider, r.ownerId = i.ownerId, i.sticker && (r.sticker = i.sticker), r.internalGameName = i.gameId, r.lobbyType = i.lobbyType, r.gameIndex = i.gameIndex, r.icon = { src: o.host + o.gameIconTemplate.replace("{0}", this.getGameIcon(i)).replace("{1}", r.gameId) + "." + this.getGameFormat(i) }, r.format = this.getGameFormat(i), r.rowSpan = this.getRowSpan(String(i.icon)), r.colSpan = this.getColSpan(String(i.icon), e), r.iconType = i.icon ? i.icon : "1", r.iconType && "number" == typeof r.iconType && (r.iconType = String(r.iconType)), r.iconType && r.iconType.indexOf("-") > -1 && (r.iconType = r.iconType.replace("-", "")), r } getGameIcon(i) { let o = this.configProviderService.provideGameConfig().iconConfigMap; if (i) { let r = o.filter(c => c.id == i.icon); if (r && r[0]) return r[0].icon } return o[5].icon } getGameFormat(i) { let o = this.configProviderService.provideGameConfig().iconConfigMap; if (i) { let r = o.filter(c => c.id == i.icon); if (r && r[0]) return r[0].format } return o[5].format } getRowSpan(i) { switch (i) { case "2": case "-2": case "6": case "-6": case "7": case "-7": default: return 1; case "3": case "-3": case "4": case "-4": case "5": case "-5": return 2 } } getColSpan(i, e) { switch (i) { case "2": case "-2": case "4": case "-4": case "7": case "-7": return 2; case "3": case "-3": case "6": case "-6": default: return 1; case "5": case "-5": return e ? 2 : 3 } } getAllGamesFromLMT() { return this.gameDataFromLMT } getGameData(i) { return new Promise((o, r) => { let c = this.tryAndGetGameDataFromCache([i]); if (c && c.gameMetaData.size > 0 && c.gameMetaData.get(i)) o(c.gameMetaData.get(i)); else { let d = this.configProviderService.provideApiPathsConfig(); this.api.get(d.gameData.gameData, { n: [i], gameNames: !0 }).subscribe(f => { if (f && f[0]) o(f[0]), this.updateLookUp(f); else { let y = this.createEmptyGameModel(i); o(y), this.updateLookUp([y]) } }, f => { r(f) }) } }) } tryAndGetGameDataFromCache(i) { let e = null, o = this.getGamesDataFromLookUp(i); if (null !== o && (e = o, i = o.gamesNotInCache), null == o || null !== o.gamesNotInCache) { let r = this.cacheManager.getGamesDataFromCache(i); null !== r && r.gameMetaData.size > 0 && (null == e && (e = new GameDataFromCacheResponseModel), Array.from(r.gameMetaData.entries()).forEach(c => { e.gameMetaData.set(c[0], c[1]) }), e.gamesNotInCache = r.gamesNotInCache) } return e } updateLookUp(i) { i.forEach(e => { this.gameDataLookup.set(e.gameId, e) }), this.cacheManager.setGameDataCache(this.gameDataLookup) } createEmptyGameModel(i) { let e = new GameLobbyModel; return e.isDataNotAvailable = !0, e.gameId = i, e } getGamesDataFromLookUp(i) { let e = new Map, o = []; if (this.gameDataLookup.size > 0) { let r = this.gameDataLookup; return i && i.length > 0 && i.forEach(d => { r.get(d) ? e.set(d, r.get(d)) : o.push(d) }), { gameMetaData: e, gamesNotInCache: o.length > 0 ? o : null } } return null } setDefaultGameIcons(i) { let e = []; return i && i.length > 0 && i.forEach(o => { e.push({ game: o, icon: "1" }) }), e } getGameDisplayName(i) { let e = this.getLMTGameData(i); return e && e.name } getLMTGameData(i) { if (this.gameDataFromLMT && this.gameDataFromLMT.length > 0) for (let e = 0; e < this.gameDataFromLMT.length; e++)if (this.gameDataFromLMT[e].game === i) return this.gameDataFromLMT[e]; return null } getGameDescription(i, e) { if (i) { let o = this.configProviderService.provideApiPathsConfig(), r = this.urlUtility.getApiurl(o.gameData.gameDataDescription); return this.api.get(r, { gameId: i, providerId: e }) } } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CacheManagerService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CasinoCoreGameLaunchFactoryService = (() => { class s { constructor() { } setGameLaunchService(i) { this.gameLaunchService = i } getGameLaunchService() { return this.gameLaunchService } setGameService(i) { this.gameService = i } getGameService() { return this.gameService } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GlobalTranslateComponent = (() => { class s { constructor(i) { this.configProviderService = i } ngOnInit() { this.configProviderService.casinoClientConfigObservable.subscribe(i => { i && (this.global = this.configProviderService.provideGlobalConfig(), this.global.messages[this.key] && (this.value = this.global.messages[this.key])) }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-global-translate"]], inputs: { key: "key" }, decls: 1, vars: 1, template: function (i, e) { 1 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(0), 2 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(e.value) }, encapsulation: 2 }), s })(), HeaderBoxComponent = (() => { class s { constructor(i, e, o) { this.nativeApplication = i, this.navigation = e, this.configProviderService = o, this.navigateTo = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.vpe } ngOnInit() { let i = this.configProviderService.provideMcPageConfig(); this.isVisible = !0 === this.showInNative || !this.nativeApplication.isNative, this.isNavigation = !1, this.navigateTo && this.navigateTo.observers && this.navigateTo.observers.length > 0 && (this.isNavigation = !0), this.goBackURL = this.navigation.location.search.get("gobackUrl"), (!this.goBackURL || "" === this.goBackURL) && (this.goBackURL = i.prefix) } goBack() { this.navigateTo.emit() } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.rBu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-header-box"]], inputs: { showInNative: "showInNative", title: "title" }, outputs: { navigateTo: "navigateTo" }, decls: 1, vars: 1, consts: [[4, "ngIf"], ["ms-feedback", "after", 1, "casino-page-nav", 3, "ngStyle"], [1, "left-nav"], [1, "icon", 3, "click"], [1, "theme-left"], ["ms-marquee", "", 3, "hidden", "click"], [3, "key"], [1, "clear"]], template: function (i, e) { 1 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(0, HeaderBoxComponent_div_0_Template, 8, 4, "div", 0), 2 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.isVisible) }, directives: [GlobalTranslateComponent, _angular_common__WEBPACK_IMPORTED_MODULE_15__.O5, _angular_common__WEBPACK_IMPORTED_MODULE_15__.PC], encapsulation: 2 }), s })(); class GameLaunch { constructor() { this.replaceRouteInHistory = !1, this.isDemoLaunch = !1, this.skipUnfinGame = !1, this.specialProduct = null, this.mode = "", this.gameSection = null, this.trackingproduct = void 0, this.isNewSportsNative = !1, this.lobbyType = "", this.returnUrl = "", this.highlightedColor = null, this.Globalsearchsection = null, this.skipMetaDataCheck = !1, this.fetchLiveGameIFrame = !1 } } let GameLaunchPlaces = (() => { class s { constructor() { this.gameIconOnLobby = "p", this.gameTitleOnLobby = "l", this.gameInfoIconOnLobby = "i", this.demoPlayPage = "demoPlay", this.playNowOnDetailPage = 1, this.playNowOnDetailPageAfterScreenshots = 3, this.playRedirectCtrl = "playRedirectCtrl", this.unfinGamePage = "unfinGamePage", this.searchOnLobby = "searchOnLobby", this.teaser = "Teaser", this.activeFreeSpin = "activeFreeSpin" } isLobby(i) { return !i || i === this.gameIconOnLobby || i === this.gameTitleOnLobby || i === this.gameInfoIconOnLobby || i === this.searchOnLobby || i === this.teaser } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GameDetailButtonsComponent = (() => { class s { constructor(i, e, o, r, c, d) { this.gameLaunchService = i, this.deviceService = e, this.configProviderService = o, this.casinoLobbyService = r, this.casinoManager = c, this.gameLaunchPlaces = d } ngOnInit() { let i = this.configProviderService.provideClientSideConfig(); this.twoButtons = i.playForFunAndRealButtons, this.isInhouseGame = "inhouse" === this.launchType } goToPlayGame(i) { let e = new GameLaunch; e.game = this.game, e.isTouch = this.casinoManager.isTouch(), e.lobbyType = this.game.lobbyType, e.gamePosition = 0, e.categoryType = this.game.categoryType, e.from = this.gameLaunchPlaces.playNowOnDetailPage.toLocaleString(), e.replaceRouteInHistory = !1, e.isDemoLaunch = i, e.skipUnfinGame = !1, e.gameLaunchedFrom = "", e.gameSection = this.game.gameSection, e.gameContainer = "PageContainer", e.returnUrl = window.location.href; let o = this.gameLaunchService.getGameLaunchService(); e.clickTimeStamp = o.currentTimeStamp(), o.launchGame(e) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoCoreGameLaunchFactoryService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U8N), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoLobbyService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(GameLaunchPlaces)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-game-detail-buttons"]], inputs: { game: "game", launchType: "launchType", place: "place", cssClass: "cssClass" }, decls: 4, vars: 4, consts: [[3, "class", "click", 4, "ngIf"], [3, "click"], [3, "key"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(0, GameDetailButtonsComponent_button_0_Template, 2, 4, "button", 0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(1, GameDetailButtonsComponent_button_1_Template, 2, 4, "button", 0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, GameDetailButtonsComponent_button_2_Template, 2, 4, "button", 0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(3, GameDetailButtonsComponent_button_3_Template, 2, 4, "button", 0)), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !e.isInhouseGame && e.twoButtons), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !e.isInhouseGame && e.twoButtons), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.isInhouseGame && e.twoButtons), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !e.twoButtons)) }, directives: [GlobalTranslateComponent, _angular_common__WEBPACK_IMPORTED_MODULE_15__.O5], encapsulation: 2 }), s })(), GameDetailComponent = (() => { class s { constructor(i, e, o, r, c, d, f, y, M, T, P, G) { this.user = i, this.gameDataManager = e, this.deviceService = o, this.route = r, this.navigation = c, this.favouritesService = d, this.casinoManager = f, this.configProviderService = y, this.gameLaunchService = M, this.gameLaunchFactoryService = T, this.gameInfo = P, this.dialogRef = G, this.favouriteStyle = "theme-favorite-i", this.unFavouriteStyle = "theme-favorite", this.gameLaunchFactoryService.setGameLaunchService(this.gameLaunchService) } ngOnInit() { this.gameInfo && this.assignGameModel(); let i = this.configProviderService.provideGlobalConfig(); ("true" === i.lobbyConfigurations.FavouriteHeart || "True" === i.lobbyConfigurations.FavouriteHeart || "TRUE" === i.lobbyConfigurations.FavouriteHeart) && (this.favouriteStyle = "theme-heart-solid", this.unFavouriteStyle = "theme-heart-outline") } assignGameModel() { let i = this.configProviderService.provideMcPageConfig(), e = this.configProviderService.provideGlobalConfig(), o = this.configProviderService.provideClientSideConfig(), r = this.configProviderService.provideFeaturesConfig(); this.data = this.gameDataManager.setGameLobbyModel({ game: this.gameInfo.game.game.gameId, gameId: this.gameInfo.game.game.gameId, name: this.gameInfo.game.game.name, ownerId: this.gameInfo.game.game.ownerId, provider: this.gameInfo.game.game.provider, icon: this.gameInfo.game.game.iconType }, this.deviceService.isTouch), this.twoButtons = o.playForFunAndRealButtons, this.useFavouriteGames = r.useFavouriteGames, this.data ? (this.model = this.data, this.model.categoryType = this.gameInfo.game.categoryType, this.model.lobbyType = this.gameInfo.game.game.lobbyType, this.model.gameSection = this.gameInfo.game.gameSection, this.model = this.model && this.model[0] ? this.model[0] : this.model, this.model.disclaimer = e.messages.Disclaimer, this.model.isFavourite = this.favouritesService.checkForFavouriteGame(this.model)) : this.navigation.goTo(i.prefix) } goToPlayGame(i) { } playButtonMode(i) { return "inhouse" === i.launchType ? 1 : 2 } toggleFavourite(i, e) { this.user.isAuthenticated && (e.stopImmediatePropagation(), this.favouritesService.toggleGameFavourite(i)) } isFavouriteGame(i) { return this.favouritesService.checkForFavouriteGame(i) } closeGameDetailDialog(i) { this.dialogRef.close() } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(GameDataManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U8N), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_router__WEBPACK_IMPORTED_MODULE_8__.gz), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(FavouriteService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoCoreGamelaunchService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoCoreGameLaunchFactoryService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-game-detail"]], decls: 16, vars: 15, consts: [["id", "gameDetailPage", 1, "gameDetailPage"], [3, "title", "showInNative", "navigateTo"], [1, "casino-game-detail", "casino-lobby-games", 3, "hidden"], [1, "casino-game-detail-header"], [1, "game", "casino-game-detail-header1"], ["href", "javascript:void(0)", 1, "game-image-link"], [1, "game-icon", 3, "src", "alt", "width", "height"], ["class", "game-badge", 3, "ngClass", 4, "ngIf"], ["class", "casino-game-detail-header2", 4, "ngIf"], [3, "game", "cssClass", "place", "launchType", 4, "ngIf"], [3, "href", 4, "ngIf"], ["class", "game-detail-info", 3, "innerHTML", 4, "ngIf"], ["class", "game-detail-disclaimer", 4, "ngIf"], ["class", "game-preview", 4, "ngIf"], ["class", "btn", 3, "click", 4, "ngIf"], [1, "game-badge", 3, "ngClass"], [3, "click"], [1, "casino-game-detail-header2"], [3, "game", "cssClass", "place", "launchType"], [3, "href"], [1, "game-detail-info", 3, "innerHTML"], [1, "game-detail-disclaimer"], [1, "game-preview"], [3, "key"], [1, "btn", 3, "click"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "span", 0)(1, "cc-header-box", 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("navigateTo", function (r) { return e.closeGameDetailDialog(r) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "vn-message-panel"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(3, "div", 2)(4, "div", 3)(5, "div", 4)(6, "a", 5), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(7, "img", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(8, GameDetailComponent_div_8_Template, 2, 1, "div", 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(9, GameDetailComponent_div_9_Template, 3, 1, "div", 8), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(10, GameDetailComponent_cc_game_detail_buttons_10_Template, 1, 4, "cc-game-detail-buttons", 9), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(11, GameDetailComponent_a_11_Template, 2, 2, "a", 10), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(12, GameDetailComponent_div_12_Template, 2, 3, "div", 11), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(13, GameDetailComponent_div_13_Template, 3, 1, "div", 12), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(14, GameDetailComponent_div_14_Template, 3, 1, "div", 13), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(15, GameDetailComponent_button_15_Template, 2, 1, "button", 14), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("title", "DetailPageHeader")("showInNative", !0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("hidden", !e.model), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("src", e.model.icon.src, _angular_core__WEBPACK_IMPORTED_MODULE_3__.LSH)("alt", e.model.icon.alt)("width", e.model.icon.width)("height", e.model.icon.height), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.useFavouriteGames), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.gameInfo), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.model), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.model && e.model.responsibleGamingLink), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.model && e.model.info && "" !== e.model.info), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.model && e.model.disclaimer && "" !== e.model.disclaimer), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.model && e.model.screenshots && e.model.screenshots.length > 0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !e.twoButtons)) }, directives: [HeaderBoxComponent, _frontend_vanilla_features_message_panel__WEBPACK_IMPORTED_MODULE_17__.Y, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.MIT, GameDetailButtonsComponent, GlobalTranslateComponent, _angular_common__WEBPACK_IMPORTED_MODULE_15__.O5, _angular_common__WEBPACK_IMPORTED_MODULE_15__.mk], pipes: [_frontend_vanilla_common__WEBPACK_IMPORTED_MODULE_18__.WL], encapsulation: 2 }), s })(), OverlayDialogTrustUrlPipe = (() => { class s { constructor(i) { this.sanitizer = i } transform(i) { return this.sanitizer.bypassSecurityTrustResourceUrl(i) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_19__.H7, 16)) }, s.\u0275pipe = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yjl({ name: "overlayDialogTrustUrl", type: s, pure: !0 }), s })(), CashierIframeComponent = (() => { class s { constructor(i, e, o, r, c, d, f, y) { this.dialogRef = i, this.data = e, this.user = o, this.page = r, this.windowRef = c, this.utils = d, this.appInfoConfig = f, this.configProviderService = y, this.iframeCommunicationEnabled = !1 } onNoClick() { this.dialogRef.close() } ngOnInit() { let i = this.configProviderService.provideCasinoConfig(), e = this.configProviderService.provideMcPageConfig(), o = this.configProviderService.provideFeaturesConfig(); this.iframeCommunicationEnabled || (this.enableIframeCommunication(), this.iframeCommunicationEnabled = !0), this.qdUrl = this.utils.format(e.cashierQDUrlTemplate, this.user.id, this.appInfoConfig.brand, i.productId, this.appInfoConfig.channel, this.page.lang, this.user.ssoToken), this.qdUrl += "&hideCloseButton=true", this.depositUrl = e.cashierDepositUrlTemplate, this.depositUrl = this.depositUrl.replace("{0}", this.user.ssoToken), this.depositUrl = this.depositUrl.replace("{1}", this.page.lang), this.depositUrl = this.depositUrl.replace("{2}", ""), this.depositUrl = this.depositUrl.replace("{3}", ""), this.depositUrl = this.depositUrl + "&hideCloseButton=true", this.cashierIframeUrl = o.checkQDAllowedForDepositURL && this.isQDAllowed ? this.qdUrl : this.depositUrl } ngOnDestroy() { this.windowRef.nativeWindow.removeEventListener("message", () => { }) } enableIframeCommunication() { let i = document.getElementById("casinocashieriframe"); this.windowRef.nativeWindow.addEventListener("message", e => { if (!e || !e.data || "string" != typeof e.data) return; const o = unescape(e.data).split("&").reduce((c, d) => { const f = d.trim().split("="); return c[f[0]] = f[1], c }, {}); "CLOSE" === (o.action || "").toUpperCase() && ("true" === o.showAllOptions ? i.src = this.depositUrl : this.dialogRef.close()) }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.T3C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.X9E), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.FWc), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.Veb), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-cashier-iframe"]], inputs: { isQDAllowed: "isQDAllowed" }, decls: 7, vars: 3, consts: [["mat-dialog-content", "", 1, "cashier-iframe-content", "embed-overlay-popup"], [1, "cashier-iframe"], ["mat-dialog-actions", "", 1, "iframe-close", "iframe-theme-bg-popup"], ["mat-button", "", 3, "click"], [1, "theme-ex"], ["id", "casinocashieriframe", "scrolling", "yes", "horizontalscrolling", "yes", "verticalscrolling", "yes", "frameborder", "0", "allowtransparency", "true", 3, "src"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "button", 3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return e.onNoClick() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(4, "span", 4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(5, "iframe", 5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ALo(6, "overlayDialogTrustUrl"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("src", _angular_core__WEBPACK_IMPORTED_MODULE_3__.lcZ(6, 1, e.cashierIframeUrl), _angular_core__WEBPACK_IMPORTED_MODULE_3__.uOi)) }, directives: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.xY, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.H8], pipes: [OverlayDialogTrustUrlPipe], encapsulation: 2 }), s })(), GamePopoutComponent = (() => { class s { constructor(i, e, o, r) { this.dialogRef = i, this.data = e, this.commonMessages = o, this.configProviderService = r } onNoClick() { this.dialogRef.close() } ngOnInit() { let i = this.configProviderService.provideGlobalConfig(), e = this.configProviderService.provideMcPageConfig(); this.continue = this.commonMessages.Continue, this.cancel = this.commonMessages.Cancel, this.gameLaunchNewWindow = i.messages.LaunchGameNewWindow, this.gameSessionRestart = i.messages.GameSessionRestart, this.gamePopOutUrl = e.cashierDepositUrlTemplate } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.EC$), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-game-pop-out"]], decls: 13, vars: 5, consts: [[1, "casino-lobby-container-main"], [1, "embed-overlay-popup"], ["mat-dialog-content", ""], [1, "game-pop-out"], [1, "iframe-theme-bg-popup"], ["mat-dialog-actions", "", 1, "iframe-theme-bg-popup"], ["mat-button", "", "cdkFocusInitial", "", 1, "egv-pop-btn-left", 3, "mat-dialog-close"], ["mat-button", "", 1, "egv-pop-btn-right", 3, "click"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h1", 4), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(6, "h2", 4), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(8, "div", 5)(9, "button", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(10), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(11, "button", 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return e.onNoClick() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(12), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()()()), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(e.gameLaunchNewWindow), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(e.gameSessionRestart), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("mat-dialog-close", "continue"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(e.continue), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(e.cancel)) }, directives: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.xY, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.H8, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.ZT], encapsulation: 2 }), s })(), JackpotService = (() => { class s { constructor(i, e, o, r) { this.api = i, this.timerService = e, this.configProviderService = o, this.urlUtility = r, this.jackpotsCache = {}, this.listenersCnt = 0 } fetchJackpot() { let i = this.configProviderService.provideApiPathsConfig(), e = this.urlUtility.getApiurl(i.jackpots.jpData); this.api.get(e, null, { showSpinner: !1 }).subscribe(o => { this.jackpotsCache = o }) } startFeed() { let i = this.configProviderService.provideJackpotConfig(); this.listenersCnt++, this.fetchJackpotPromise || (this.fetchJackpot(), this.fetchJackpotPromise = this.timerService.setIntervalOutsideAngularZone(() => { this.fetchJackpot() }, i.jpInterval)) } getJackpotData() { return this.jackpotsCache } stopFeed() { this.listenersCnt--, 0 === this.listenersCnt && this.fetchJackpotPromise && (this.timerService.clearInterval(this.fetchJackpotPromise), this.fetchJackpotPromise = void 0, this.jackpotsCache = []) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.fWh), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), OpenLoginDialog = (() => { class s { constructor(i, e, o, r) { this.loginDialogService = i, this.navigation = e, this.user = o, this.configProviderService = r } open(i) { let e = this.configProviderService.providePreLoginConfig(); if (e.redirectForLogin) { let o = e.nemIDHost + e.nemIdPathSegment.replace("__encodeURL_location_href__", encodeURIComponent(window.location.href)); this.navigation.goTo(o) } else this.loginDialogService.whenReady.subscribe(i ? () => { let r = this.loginDialogService.open(i).afterClosed().subscribe(() => { r && r.unsubscribe(), this.user.isAuthenticated || (sessionStorage.removeItem("CasinoCoreForceGameObj"), sessionStorage.removeItem("CasinoCoreScreenNameGameObj"), (null == i ? void 0 : i.loginCloseUrl) && this.navigation.goTo(i.loginCloseUrl)) }) } : () => { this.loginDialogService.open() }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.eYs), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), NavigatorService = (() => { class s { constructor(i, e, o, r, c, d) { this.navigation = i, this.configProviderService = e, this.windowRef = o, this.m2Page = r, this.casinoWidgetService = c, this.casinoIFrameOverlayService = d, this.firstLoadFlag = 2, this.goingBack = !1, this.showSpinnerForExternalNavigation = !0, this.defaultNavigateOptions = { forceReload: !1, appendReferrer: !1, replace: !1, showSpinnerForExternalNavigation: !0 } } detailPage(i) { let e = this.configProviderService.provideMcPageConfig(), o = this.windowRef.nativeWindow; return o.location.protocol + "://" + o.location.host + e.prefix + "/gamedetail/" + i + o.location.search } demoPlayPage(i) { let e = this.configProviderService.provideMcPageConfig(), o = this.windowRef.nativeWindow; return o.location.protocol + "://" + o.location.host + e.prefix + "/demoplay/" + i + o.location.search } publicPage(i, e, o) { let d, r = "lang", c = this.configProviderService.provideMcPageConfig(); e = Object.assign({}, this.defaultNavigateOptions, e), o ? (d = c.portalUrl + "/p/" + i, r = !1) : d = "p/" + i, this.navigate(d, e, r) } navigate(i, e, o, r, c) { e = Object.assign({}, this.defaultNavigateOptions, e); let d = this.configProviderService.provideMcPageConfig(); this.showSpinnerForExternalNavigation = this.defaultNavigateOptions.showSpinnerForExternalNavigation, -1 === i.indexOf("http") && ("/" !== i.charAt(0) && (i = "/" + i), !0 === o ? i = d.prefix + i : "lang" === o && (i = "/" + this.m2Page.lang + i)), this.casinoWidgetService.isCasinoWidget() || this.casinoIFrameOverlayService.isOverLayOnAProduct() ? 0 === r ? this.casinoWidgetService.postMessageToParent("GameLaunch", { promptLogin: !1, redirectUrl: i }) : -1 === r && this.casinoWidgetService.postMessageToParent("Error", { promptLogin: !1, redirectUrl: i, errorMessages: c }) : this.navigation.goTo(i, e) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.X9E), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.T3C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoWidgetService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoIFrameOverlayService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), HighlightSearch = (() => { class s { transform(i, e) { let o = e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&"); o = o.split(" ").filter(c => c.length > 0).join("|"); let r = new RegExp(o, "gi"); return e ? i.replace(r, c => "<pre>" + c + "</pre>") : i } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275pipe = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yjl({ name: "highlightsearch", type: s, pure: !0 }), s })(), SearchDesktopComponent = (() => { class s { constructor(i, e, o, r, c, d, f, y, M, T, P, G, x, R, J) { this.gameDataManager = i, this.fastLoadingGamesService = e, this.categoryManager = o, this.user = r, this.messageQueue = c, this.casinoManager = d, this.tracking = f, this.api = y, this.casinoWidgetService = M, this.configProviderService = T, this.casinoLobbyService = P, this.urlUtility = G, this.gameLaunchFactoryService = x, this.apiPathsHelperService = R, this.dslService = J, this.embedGameClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.vpe, this.loadNewSet = !0, this.model = { query: "", results: [] }, this.index = 1, this.activeIndex = 0, this.keypressed = "default", this.isMsgVisible = !1, this.GYMLGames = [], this.showGlobalSearch = !1, this.recommendationGames = [], this.recommendationGamesList = [], this.combineData = [], this.showDesktopSearch = !0, this.displayValue = !0 } ngOnInit() { this.gameLaunchService = this.gameLaunchFactoryService.getGameLaunchService(); let i = this.configProviderService.provideFeaturesConfig(), e = this.configProviderService.provideGlobalConfig(), o = this.configProviderService.provideCasinoConfig(); this.showGlobalSearch = i.showGlobalSearch, this.showDesktopSearch = i.showDesktopSearch, "embedgame" === this.placeholder && (this.showDesktopSearch = !0), this.SearchCloseIcon = !1, this.setIdSuffix(), this.gymlText = e.messages.SearchGamesYouMightLike ? e.messages.SearchGamesYouMightLike : e.messages.GamesYouMightLike, this.innerWidth = window.innerWidth, this.enableEnhancedSearch() && (this.setGYML(), this.categoryManager.categoryLookUpObservable.subscribe(r => { if (r && r.size > 0 && (this.gymlCategory = (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(r.get("LMC_GYML")), this.gymlCategory && this.gymlCategory.categoryInfo && this.gymlCategory.categoryInfo.gamelist && this.gymlCategory.categoryInfo.gamelist.length > 0)) { this.gymlCategory.gamesModel = this.gymlCategory.categoryInfo.gamelist.slice(0, o.gymlLimitForSearch); let c = []; this.gymlCategory.gamesModel.forEach(f => { c.push(f.game) }); let d = this.gameDataManager.setDefaultGameIcons(c); this.getGyMLGames(d) } }), this.casinoManager.lobbyObservable.subscribe(r => { r && (this.displayValue = !0) }), this.gameDataManager.gameLookUpObservable.subscribe(r => { if (this.gymlCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"), this.gymlCategory && this.gymlCategory.categoryInfo && this.gymlCategory.categoryInfo.gamelist && this.gymlCategory.categoryInfo.gamelist.length > 0) { this.gymlCategory.gamesModel = this.gymlCategory.categoryInfo.gamelist.slice(0, o.gymlLimitForSearch); let c = []; this.gymlCategory.gamesModel.forEach(f => { c.push(f.game) }); let d = this.gameDataManager.setDefaultGameIcons(c); this.getGyMLGames(d) } }), this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(r => { this.fastLoadingGamesService.setFastLoadingGames(this.GYMLGames, r) }), this.lobbyLoadedObs = this.casinoLobbyService.lobbyLoadedObservable.subscribe(r => { if (r && (this.gymlCategory = (0, lodash_es__WEBPACK_IMPORTED_MODULE_7__.Z)(this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML")), this.gymlCategory && this.gymlCategory.categoryInfo && this.gymlCategory.categoryInfo.gamelist && this.gymlCategory.categoryInfo.gamelist.length > 0)) { this.gymlCategory.gamesModel = this.gymlCategory.categoryInfo.gamelist.slice(0, o.gymlLimitForSearch); let c = []; this.gymlCategory.gamesModel.forEach(f => { c.push(f.game) }); let d = this.gameDataManager.setDefaultGameIcons(c); this.getGyMLGames(d) } })) } ngOnChanges(i) { var e, o; (null === (e = null == i ? void 0 : i.categoryRoute) || void 0 === e ? void 0 : e.currentValue) !== (null === (o = null == i ? void 0 : i.categoryRoute) || void 0 === o ? void 0 : o.previousValue) && (this.model.query = "", this.model.results = [], this.SearchCloseIcon = !1, this.showGymlSearch = !1, this.displayValue = !0), this.setIdSuffix() } displaySearchCloseIcon() { 0 == this.model.query.length && (this.SearchCloseIcon = !1) } closeSearchIcon() { this.model.query = "", this.displaySearchCloseIcon() } setGYML() { let i = this.configProviderService.provideCasinoConfig(); if (this.gymlCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"), this.gymlCategory && this.gymlCategory.categoryInfo && this.gymlCategory.categoryInfo.gamelist && this.gymlCategory.categoryInfo.gamelist.length > 0) { this.gymlCategory.categoryInfo.gamesModel = this.gymlCategory.categoryInfo.gamelist.slice(0, i.gymlLimitForSearch); let e = []; this.gymlCategory.categoryInfo.gamesModel.forEach(r => { e.push(r.game) }); let o = this.gameDataManager.setDefaultGameIcons(e); this.getGyMLGames(o) } } setIdSuffix() { this.idSuffix = "navigation" === this.placeholder ? "nav" : "" } getGyMLGames(i) { this.GYMLGames = []; for (let e = 0; e < i.length; e++) { let o = this.casinoLobbyService.getGameInfo(i[e].game); o.icon = "1"; let r = this.gameDataManager.setGameLobbyModel(o, this.isTouch); this.GYMLGames.push(r) } this.GYMLGames = this.checkGameIconTheming(this.GYMLGames) } getRecomendationGames(i) { this.recommendationGamesList = []; for (let e = 0; e < i.length; e++) { let o = this.casinoLobbyService.getGameInfo(i[e]); if (o) { let r = this.gameDataManager.setGameLobbyModel(o, this.isTouch); o && (r.title = o.name), this.recommendationGamesList.push(r) } } } getGamesYouMightLikeOnLMT() { this.recommendationGames.length < 6 || 0 == this.recommendationGames.length ? (this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(i => { this.fastLoadingGamesService.setFastLoadingGames(this.GYMLGames, i) }), this.recommendationGamesList = this.recommendationGames.length > 0 ? this.getRecomendationGames(this.recommendationGames) : [], this.combineData = this.recommendationGamesList.concat(this.GYMLGames), this.GYMLGames = Array.from(this.combineData.reduce((i, e) => i.set(e.gameId, e), new Map).values())) : this.GYMLGames = this.getRecomendationGames(this.recommendationGames), this.GYMLGames = this.checkGameIconTheming(this.GYMLGames) } recommendationFeed(i) { let e = this.configProviderService.provideApiPathsConfig(), o = this.apiPathsHelperService.transformApi(e.gameData.gameRecommendations, i), r = this.urlUtility.getApiurl(o); this.api.get(r).subscribe(c => { c && (this.recommendationGames = c, this.getGamesYouMightLikeOnLMT()) }) } launchGame(i, e, o) { this.messageQueue.clear(), this.user.isAuthenticated && "embedgame" === this.placeholder && this.recommendationFeed(i.gameId); let r = ""; if (r = this.casinoWidgetService.isCasinoWidget() ? document.referrer : window.location.href, i.iconType = 1, "navigation" === this.placeholder) if (e) { let c = new GameLaunch; c.game = i, c.isTouch = this.isTouch, c.categoryType = "Search", c.from = "q", c.replaceRouteInHistory = !1, c.isDemoLaunch = !1, c.skipUnfinGame = !1, c.gameLaunchedFrom = "Search_GYML", c.gameSection = "Search_GYML", c.gameContainer = "Search", c.game.lobbyType = this.lobbyType, c.gamePosition = o, c.clickTimeStamp = this.gameLaunchService.currentTimeStamp(), this.gameLaunchService.launchGame(c) } else { let c = new GameLaunch; c.game = i, c.isTouch = this.isTouch, c.categoryType = "Search", c.from = "q", c.replaceRouteInHistory = !1, c.isDemoLaunch = !1, c.skipUnfinGame = !1, c.gameLaunchedFrom = "Search", c.gameSection = "Search", c.gameContainer = "Search", c.game.lobbyType = this.lobbyType, c.gamePosition = o, c.clickTimeStamp = this.gameLaunchService.currentTimeStamp(), this.gameLaunchService.launchGame(c) } else "embedgame" === this.placeholder && (i.GamePosition = o, this.embedGameClicked.emit(i)); this.model.query = "", this.model.results = [], this.displayValue = !0, this.showGymlSearch = !1, this.SearchCloseIcon = !1 } trackInput() { this.tracking.triggerEvent("GameSearch", { eventAction: "embedgame" == this.placeholder ? "EGV_Search" : "Search", "page.search": this.model.query }) } queryChanged(i) { if (this.loadNewSet = !0, this.displayValue = !1, this.showGymlSearch = !1, this.enableEnhancedSearch(), 0 !== this.model.query.length ? (this.displayValue = !0, this.SearchCloseIcon = !0) : (this.SearchCloseIcon = !1, this.enableEnhancedSearch() && "navigation" === this.placeholder && (this.displayValue = !1, this.user.isAuthenticated && (this.showGymlSearch = !0))), this.model.query.length < 1) return this.model.results = [], this.isMsgVisible = !1, "embedgame" === this.placeholder && (this.displayValue = !0), this.user.isAuthenticated || (this.displayValue = !0), void this.enableEnhancedSearch(); if ("ArrowUp" === i.key) { let e, o; for (1 === this.index || 0 === this.index ? (this.activeIndex = 0, this.index = 1) : "ArrowDown" === this.keypressed ? (this.activeIndex = this.activeIndex - 1, this.index = this.index - 2) : this.activeIndex = this.index - 1, this.index--, e = document.querySelectorAll(".search-non-touch li"), o = 0; o < e.length; ++o)e[o].classList.remove("active"); if (e[this.activeIndex].classList.add("active"), this.activeIndex > 5) { let r = document.getElementsByClassName("search-non-touch"); r[0].scrollTop = r[0].scrollTop - 65 } this.keypressed = "ArrowUp" } else if ("ArrowDown" === i.key) { let e, o; for (1 === this.index ? this.activeIndex = 0 : "ArrowUp" === this.keypressed ? (this.activeIndex = this.activeIndex + 1, this.index = this.index + 2) : this.activeIndex = this.index - 1, this.index++, e = document.querySelectorAll(".search-non-touch li"), o = 0; o < e.length; ++o)e[o].classList.remove("active"); if (e[this.activeIndex].classList.add("active"), this.activeIndex > 5) { let r = document.getElementsByClassName("search-non-touch"); r[0].scrollTop = r[0].scrollTop + 65 } this.keypressed = "ArrowDown" } else "Enter" === i.key ? (this.index = 1, this.model.results[this.activeIndex] && this.model.results[this.activeIndex].condition ? this.dslService.evaluateExpression(this.model.results[this.activeIndex].condition).subscribe(e => { e && this.launchGame(this.model.results[this.activeIndex], !1, 0) }) : this.launchGame(this.model.results[this.activeIndex], !1, 0)) : "Backspace" === i.key ? (this.index = 1, this.displaySearchResults(), "embedgame" === this.placeholder && (this.displayValue = !0), this.enableEnhancedSearch()) : (setTimeout(() => { this.model.query.length < 1 ? this.model.results = [] : this.displaySearchResults() }, 500), this.isMsgVisible = !1) } displaySearchResults() { this.model.results = this.casinoLobbyService.searchGames(this.model.query), this.model.results = this.checkGameIconTheming(this.model.results), this.isMsgVisible = !(this.model.results.length > 0) } queryRemoved() { this.isCancel || (this.model.query = "", this.model.results = []) } checkGameIconTheming(i) { return this.configProviderService.provideFeaturesConfig().enableGameIconTheming && i.map(o => { o.icon.src = this.casinoLobbyService.appendTheme(o.icon.src, o.gameId) }), i } hideDisplayGYML() { return "embedgame" === this.placeholder || !this.GYMLGames || this.GYMLGames.length <= 0 || this.displayValue } enableEnhancedSearch() { return this.configProviderService.provideFeaturesConfig().enableEnhancedSearch && this.GYMLGames && this.GYMLGames.length >= 0 } docClick(i) { let e, o; if (e = document.getElementsByClassName("casino-desktop-search-results"), "casino-search-input ng-untouched ng-pristine ng-valid" != i.target.className && "casino-search-input ng-pristine ng-valid ng-touched" != i.target.className && "casino-search-input ng-valid ng-touched ng-dirty" != i.target.className && "casino-search-input ng-valid ng-dirty ng-touched" != i.target.className) { for (o = 0; o < e.length; ++o); this.model.query = "", this.model.results = [] } } clickInside(i) { let e = this.configProviderService.provideCasinoConfig(), o = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); o && o.categoryInfo ? (this.gymlCategory = o, this.getGyMLGames(this.gymlCategory.categoryInfo.gamelist.slice(0, e.gymlLimitForSearch))) : (this.gymlCategory = null, this.getGyMLGames([])), this.wasInside = !0, (!i || !i.target || "gyml-desktop-id" !== i.target.id && "gym-desktop-heading-id" !== i.target.id && "lobby-games-id" !== i.target.id) && (!i || !i.target || "search-text" !== i.target.id || this.model.query && "" !== this.model.query ? (this.displayValue = !0, this.showGymlSearch = !1) : this.enableEnhancedSearch() && this.user.isAuthenticated && "navigation" === this.placeholder && (this.displayValue = !1, this.user.isAuthenticated && (this.showGymlSearch = !0))) } clickout() { this.configProviderService.provideFeaturesConfig(), this.wasInside || (this.model.query = "", this.model.results = [], this.displayValue = !0, this.showGymlSearch = !1, this.SearchCloseIcon = !1), this.wasInside = !1 } clickGymlHeading(i) { i.stopImmediatePropagation() } clickGymlGames(i) { i.stopImmediatePropagation() } ngOnDestroy() { this.lobbyLoadedObs && this.lobbyLoadedObs.unsubscribe() } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(GameDataManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(FastLoadingGamesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CategoryManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoWidgetService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoLobbyService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoCoreGameLaunchFactoryService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ApiPathsHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.XXf)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-search-desktop"]], viewQuery: function (i, e) { if (1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.Gf(_c1, 5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Gf(_c2, 5)), 2 & i) { let o; _angular_core__WEBPACK_IMPORTED_MODULE_3__.iGM(o = _angular_core__WEBPACK_IMPORTED_MODULE_3__.CRH()) && (e.searchtext = o.first), _angular_core__WEBPACK_IMPORTED_MODULE_3__.iGM(o = _angular_core__WEBPACK_IMPORTED_MODULE_3__.CRH()) && (e.cursorFocus = o) } }, hostBindings: function (i, e) { 1 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function (r) { return e.clickInside(r) })("click", function () { return e.clickout() }, !1, _angular_core__WEBPACK_IMPORTED_MODULE_3__.evT) }, inputs: { isTouch: "isTouch", placeholder: "placeholder", lobbyType: "lobbyType", categoryRoute: "categoryRoute" }, outputs: { embedGameClicked: "embedGameClicked" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__.TTD], decls: 1, vars: 1, consts: [[4, "ngIf"], [3, "id", "class", 4, "ngIf"], [3, "id"], [1, "casino-search-input-div"], [1, "theme-search", 3, "ngClass"], ["class", "close-button theme-close-i", 3, "click", 4, "ngIf"], ["id", "search-text", "type", "text", "autocomplete", "off", 1, "casino-search-input", 3, "ngClass", "ngModel", "placeholder", "change", "ngModelChange", "keyup", "focusout", "focus", "blur"], ["searchtext", "", "searchInput", ""], [3, "key", "hidden"], ["SearchProduct", ""], [1, "casino-desktop-gyml-results", 3, "hidden"], ["id", "gym-desktop-heading-id", 1, "gym-heading", 3, "click"], [1, "gyml-list"], [3, "click", 4, "ngFor", "ngForOf"], ["class", "casino-desktop-search-results", 4, "ngIf"], [1, "close-button", "theme-close-i", 3, "click"], [3, "click"], [3, "src"], [1, "search-result-title", 3, "innerHTML"], [1, "casino-desktop-search-results"], [1, "search-results-list", 3, "ngClass"], [1, "no-result", 3, "hidden"], [3, "key"]], template: function (i, e) { 1 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(0, SearchDesktopComponent_div_0_Template, 2, 1, "div", 0), 2 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.showDesktopSearch) }, directives: [GlobalTranslateComponent, _angular_common__WEBPACK_IMPORTED_MODULE_15__.O5, _angular_common__WEBPACK_IMPORTED_MODULE_15__.mk, _angular_forms__WEBPACK_IMPORTED_MODULE_20__.Fj, _angular_forms__WEBPACK_IMPORTED_MODULE_20__.JJ, _angular_forms__WEBPACK_IMPORTED_MODULE_20__.On, _angular_common__WEBPACK_IMPORTED_MODULE_15__.sg], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_15__.Ov, _frontend_vanilla_common__WEBPACK_IMPORTED_MODULE_18__.Ut, HighlightSearch], encapsulation: 2 }), s })(); var IntersectionStatus = (() => { return (s = IntersectionStatus || (IntersectionStatus = {})).Visible = "Visible", s.Pending = "Pending", s.NotVisible = "NotVisible", IntersectionStatus; var s })(); const fromIntersectionObserver = (s, h, i = 0) => new rxjs__WEBPACK_IMPORTED_MODULE_21__.y(e => { const o = new rxjs__WEBPACK_IMPORTED_MODULE_9__.x, r = new IntersectionObserver((c, d) => { c.forEach(f => { isIntersecting(f) ? o.next({ entry: f, observer: d }) : e.next({ status: IntersectionStatus.NotVisible }) }) }, h); return o.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_22__.b)(i), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.h)(Boolean)).subscribe(c => (0, tslib__WEBPACK_IMPORTED_MODULE_5__.mG)(void 0, void 0, void 0, function* () { if (yield isVisible(c.entry.target)) { let f = { status: IntersectionStatus.Visible, src: getSrc(c.entry.target) }; e.next(f) } })), r.observe(s), { unsubscribe() { r.disconnect(), o.unsubscribe() } } }); function getSrc(s) { var h, i, e, o; return null !== (h = s.currentSrc) && void 0 !== h ? h : null === (o = null === (e = null === (i = s.childNodes[0]) || void 0 === i ? void 0 : i.attributes) || void 0 === e ? void 0 : e.src) || void 0 === o ? void 0 : o.nodeValue } function isVisible(s) { return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.mG)(this, void 0, void 0, function* () { return new Promise(h => { new IntersectionObserver(([e]) => { h(e.isIntersecting) }).observe(s) }) }) } function isIntersecting(s) { return s.isIntersecting && s.intersectionRatio > 0 } let IntersectionObserverDirective = (() => { class s { constructor(i) { this.element = i, this.intersectionDebounce = 0, this.intersectionRootMargin = "0px", this.intersectionThreshold = .1, this.visibilityChange = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.vpe, this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_9__.x } ngOnInit() { fromIntersectionObserver(this.element.nativeElement, { root: this.intersectionRoot, rootMargin: this.intersectionRootMargin, threshold: this.intersectionThreshold }, this.intersectionDebounce).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.R)(this.destroy$)).subscribe(o => { this.visibilityChange.emit(o) }) } ngOnDestroy() { this.destroy$.next(!0) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_core__WEBPACK_IMPORTED_MODULE_3__.SBq)) }, s.\u0275dir = _angular_core__WEBPACK_IMPORTED_MODULE_3__.lG2({ type: s, selectors: [["", "ccIntersectionObserver", ""]], inputs: { intersectionDebounce: "intersectionDebounce", intersectionRootMargin: "intersectionRootMargin", intersectionRoot: "intersectionRoot", intersectionThreshold: "intersectionThreshold" }, outputs: { visibilityChange: "visibilityChange" } }), s })(), ImageLoaderComponent = (() => { class s { constructor(i, e, o, r) { this.urlUtilityService = i, this.casinoLobbyService = e, this.configProviderService = o, this.casinoNpmParamsService = r, this.format = "jpg", this.disableLazyLoading = !1 } getFallbackIcon() { return this.icon.src.replace("/" + this.iconName + "/", "/" + this.fallBackIconName + "/") } initialize() { var i, e; if (this.isDll = this.casinoNpmParamsService.getcasinoCoreNpmParams().isDll, this.defaultSrc = this.urlUtilityService.getCasinoBaseUrl() + "/pictures/grey.jpg", this.disableLazyLoading || (this.lazySrc = this.defaultSrc), this.smartLobbyConfig = this.configProviderService.provideSmartLobbyConfig(), this.smartLobbyConfig.enableGameIconFallback) if (this.gameConfig = this.configProviderService.provideGameConfig(), this.iconName = null === (i = this.gameConfig.iconConfigMap.find(r => r.id === this.iconType.toString())) || void 0 === i ? void 0 : i.icon, this.fallBackIconName = null === (e = this.gameConfig.iconConfigMap.find(r => "0" === r.id)) || void 0 === e ? void 0 : e.icon, this.enableFallback = this.iconName !== this.fallBackIconName, this.enableFallback) { const r = this.casinoLobbyService.isGameIconNotAvailable(this.gameInfo, this.iconType); this.src = r ? this.getFallbackIcon() : this.icon.src } else this.src = this.icon.src; else this.src = this.icon.src; this.configProviderService.provideFeaturesConfig().enableGameIconTheming && (this.src = this.casinoLobbyService.appendTheme(this.src, this.gameInfo)) } ngOnInit() { this.initialize() } ngOnChanges() { this.initialize() } onImageStateChange(i) { "loading-failed" === i.reason && (this.casinoLobbyService.setGameIconNotFound(this.gameInfo, this.iconType), this.src = this.getFallbackIcon()) } onVisibilityChanged(i) { try { let e = this.configProviderService.provideFeaturesConfig(); i && "Visible" == i.status && (e.enableGameIconTheming && (this.lazySrc = this.casinoLobbyService.appendTheme(this.lazySrc, this.gameInfo)), this.lazySrc = this.src) } catch (e) { } } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoLobbyService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoCoreNpmParamsService)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-image-loader"]], inputs: { icon: "icon", promo: "promo", forcevisible: "forcevisible", format: "format", gameInfo: "gameInfo", gameTitle: "gameTitle", iconType: "iconType", alt: "alt", style: "style", disableLazyLoading: "disableLazyLoading" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__.TTD], decls: 5, vars: 4, consts: [[1, "image-load-div"], [3, "ngStyle", "lazyLoad", "defaultImage", "onStateChange", 4, "ngIf"], [3, "ngStyle", "lazyLoad", "defaultImage", 4, "ngIf"], ["ccIntersectionObserver", "", 3, "src", "intersectionDebounce", "visibilityChange", 4, "ngIf"], [3, "src", 4, "ngIf"], [3, "ngStyle", "lazyLoad", "defaultImage", "onStateChange"], [3, "ngStyle", "lazyLoad", "defaultImage"], ["ccIntersectionObserver", "", 3, "src", "intersectionDebounce", "visibilityChange"], [3, "src"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(1, ImageLoaderComponent_img_1_Template, 1, 5, "img", 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, ImageLoaderComponent_img_2_Template, 1, 5, "img", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(3, ImageLoaderComponent_img_3_Template, 1, 2, "img", 3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(4, ImageLoaderComponent_img_4_Template, 1, 1, "img", 4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !e.disableLazyLoading && e.isDll && e.enableFallback), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !e.disableLazyLoading && e.isDll && !e.enableFallback), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !e.disableLazyLoading && !e.isDll), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.disableLazyLoading)) }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_15__.O5, _angular_common__WEBPACK_IMPORTED_MODULE_15__.PC, ng_lazyload_image__WEBPACK_IMPORTED_MODULE_24__.z1, IntersectionObserverDirective], encapsulation: 2 }), s })(), GameEmbedComponent = (() => { class s { constructor(i, e, o, r, c, d, f, y) { this.user = i, this.favouriteService = e, this.messageQueue = o, this.unfinishedGamesService = r, this.casinoManager = c, this.jackpot = d, this.configProviderService = f, this.gameLaunchFactoryService = y, this.embedGameClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.vpe, this.gameClass = [], this.forceVisible = !0, this.QuickInfoDisplay = new Map } ngOnInit() { this.gameService = this.gameLaunchFactoryService.getGameService(), this.game && !this.game.icon && (this.game.icon = { alt: "", height: 0, width: 0 }); let i = this.configProviderService.provideGlobalConfig(), e = this.configProviderService.provideJackpotConfig(); this.enableTickingForJackpotOnGameTiles = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, e.enableJpTickingForLobbyType), this.showJackpotOnGameTiles = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, e.showJackpotOnGameTilesLobbyType), this.unfinishedStyle = i.unfinishedStyle.bageStyle, this.unfinishedBG = i.unfinishedStyle.unfinishedBackground ? i.unfinishedStyle.unfinishedBackground : "transparent", this.unfinishedBGOpacity = i.unfinishedStyle.unfinishedBGOpacity ? i.unfinishedStyle.unfinishedBGOpacity : "0.5", this.unfinishedText = i.messages.UNFINISHED; let o = this.configProviderService.provideFeaturesConfig(), r = this.configProviderService.provideGameConfig(); this.isTouch = this.casinoManager.isTouch(), this.useFavouriteGames = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, o.favouriteGamesLobbyType), this.useQuickInfo = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, o.enableQuickInfoLobbyType), this.showGameTitle = o.showGameTitle, this.setGameClass(), this.game.isFavourite = this.favouriteService.checkForFavouriteGame(this.game), this.QuickInfoDisplay = new Map, this.subscribrToUnfinishedFeed(), this.setJackPotValue(), this.subscribtToJackpotFeed(), this.newJackpotRibbonStyling = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, o.newJackpotRibbonStyling), this.enableHotIcon = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, o.enableHotIcon), this.hotIcon = r.host + "/htmllobby/images/newlmticons/square/hotjackpot.png" } ngOnDestroy() { this.unfinishedFeedSubscription.unsubscribe(), this.jackpotHandle.unsubscribe() } onResize() { this.isTouch = this.casinoManager.isTouch() } toggleFavourite(i, e) { this.user.isAuthenticated ? (e.stopImmediatePropagation(), this.FavouriteGames.toggleGameFavourite(i)) : this.Navigator.navigateToLogin() } displayQuickInfo(i, e) { e.stopImmediatePropagation(), this.QuickInfoDisplay.set(i.gameId + this.categorytype, !0) } hideQuickInfo(i) { this.QuickInfoDisplay.set(i.gameId + this.categorytype, !1) } mouseOver(i) { this.gameService.overlayVisibilityStatus.subscribe(e => { !this.isTouch && !e && this.QuickInfoDisplay.set(i.gameId + this.categorytype, !0) }) } mouseLeave(i) { this.isTouch || this.QuickInfoDisplay.set(i.gameId + this.categorytype, !1) } gameLaunchTracking() { let i, e = this.casinoManager.getActiveCategory(); e && (i = e), this.categorytype && (i = i + "/" + this.categorytype) } action(i) { this.messageQueue.clear({ clearPersistent: !0 }), this.embedGameClicked.emit(i) } setUnfinishedImageStyle() { return !this.game.isUnfinishedBadge || this.categorytype !== ConstService.RECENT_GAMES_CATEGORY_ID && this.categorytype !== ConstService.UNFINISHED_GAMES_CATEGORY_ID ? null : "opacity: " + this.unfinishedBGOpacity + " ; border-radius : " + this.radius } setBageStyle() { let i = this.unfinishedStyle; this.unfinishedText.length > 11 && (i += "; font-size: 0.56em;"); let e = /(iPad|iPhone|iPod)/g.test(navigator.userAgent); return this.game.isUnfinishedBadge && e && (this.categorytype === ConstService.RECENT_GAMES_CATEGORY_ID || this.categorytype === ConstService.UNFINISHED_GAMES_CATEGORY_ID) && (i += " ; padding : 2px " + 5.5 * this.unfinishedText.length + "px 2px 2px ; width: -web-fit-content !important;"), i } subscribrToUnfinishedFeed() { this.unfinishedFeedSubscription = this.unfinishedGamesService.unfinishedFeedObservable.subscribe(i => { this.game.isUnfinishedBadge = this.unfinishedGamesService.checkForUnfinishedGame(this.game), this.game.isUnfinishedBadge && (this.categorytype === ConstService.RECENT_GAMES_CATEGORY_ID || this.categorytype === ConstService.UNFINISHED_GAMES_CATEGORY_ID) && this.gameClass.push("showunfinishedbage") }) } setJackPotValue() { var i, e, o, r; let c = this.jackpot.getGameJackpotValue(this.game.gameId), d = this.configProviderService.provideJackpotConfig(); c && (this.game.jackpotValue = c.amount, this.game.isHotJackpotGroup = c.isHotJackpotGroup, d.enableRibbonConfig && (this.game.jpBgColor = null === (i = null == c ? void 0 : c.jackpotAttributes) || void 0 === i ? void 0 : i.JackpotRibbonBgColor, this.game.jpTextCOlor = null === (e = null == c ? void 0 : c.jackpotAttributes) || void 0 === e ? void 0 : e.JackpotRibbonTextColor, (null == c ? void 0 : c.globalJackpotAttributes) && (this.game.jpBgColor = null === (o = null == c ? void 0 : c.globalJackpotAttributes) || void 0 === o ? void 0 : o.JackpotRibbonBgColor, this.game.jpTextCOlor = null === (r = null == c ? void 0 : c.globalJackpotAttributes) || void 0 === r ? void 0 : r.JackpotRibbonTextColor))) } subscribtToJackpotFeed() { this.jackpotHandle = this.jackpot.jackpotFeedObservable.subscribe(i => { this.setJackPotValue() }), this.enableTickingForJackpotOnGameTiles && this.jackpot.jpTickingObservable.subscribe(i => { this.setJackPotValue() }) } setGameClass() { this.game && (!this.user.isAuthenticated && this.game.demoAvailable && this.gameClass.push("demo"), this.game.isNewBadge && this.gameClass.push("new"), this.game.isCashbackBadge && this.gameClass.push("cashback"), this.game.isCasinoLiveBadge && this.gameClass.push("casino-live"), this.game.isFlagBadge && this.gameClass.push("flag"), this.game.isExclusiveBadge && this.gameClass.push("exclusive"), this.game.isUnfinishedBadge && (this.categorytype === ConstService.RECENT_GAMES_CATEGORY_ID || this.categorytype === ConstService.UNFINISHED_GAMES_CATEGORY_ID) && this.gameClass.push("showunfinishedbage")), this.gameClass.length > 0 && (this.gameClass = ["game-badge"].concat(this.gameClass)) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(FavouriteService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(UnfinishedGamesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(JackpotDataService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoCoreGameLaunchFactoryService)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-game-embed"]], inputs: { game: "game", radius: "radius", categorytype: "categorytype", lobbyType: "lobbyType" }, outputs: { embedGameClicked: "embedGameClicked" }, decls: 10, vars: 17, consts: [[1, "casino-game-cls", "small-icon"], [1, "game-image-link", 3, "ngStyle", "click", "resize"], [3, "icon", "iconType", "gameInfo", "forcevisible", "alt", "disableLazyLoading"], ["class", "jackpot", 3, "ngStyle", "ngClass", "is-fast-loading-game-embed", 4, "ngIf"], ["class", "fast-loading-game", 4, "ngIf"], [3, "ngClass"], [4, "ngIf"], [1, "theme-playbutton", "embed-play-icon"], ["class", "game-title", 4, "ngIf"], [1, "jackpot", 3, "ngStyle", "ngClass"], ["class", "hot-icon", 4, "ngIf"], [1, "hot-icon"], [3, "src"], [1, "fast-loading-game"], ["src", "/pictures/Fast-Loading-Game-Animation.gif", 1, "embed-fast-loading-img"], ["class", "game-badge theme-info quick-info", 4, "ngIf", "ngIfElse"], ["Favourite", ""], [1, "game-badge", "theme-info", "quick-info"], [3, "click"], ["class", "game-badge", 3, "ngClass", 4, "ngIf"], [1, "game-badge", 3, "ngClass"], [1, "game-title"], [1, "icon", "theme-info", 3, "click"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 0)(1, "a", 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return e.action(e.game) })("resize", function () { return e.onResize() }, !1, _angular_core__WEBPACK_IMPORTED_MODULE_3__.Jf7), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(2, "cc-image-loader", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(3, GameEmbedComponent_div_3_Template, 4, 11, "div", 3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(4, GameEmbedComponent_div_4_Template, 2, 0, "div", 4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(5, "div", 5), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(6, "span"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(7, GameEmbedComponent_div_7_Template, 4, 2, "div", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(8, "span", 7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(9, GameEmbedComponent_div_9_Template, 4, 2, "div", 8), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_3__.WLB(14, _c9, e.radius, e.unfinishedBG)), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Akn(e.setUnfinishedImageStyle()), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("icon", e.game.icon)("iconType", e.game.iconType)("gameInfo", e.game.gameId)("forcevisible", "true")("alt", e.game.icon.alt)("disableLazyLoading", !0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.showJackpotOnGameTiles && e.game.jackpotValue), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.game.isFastLoadingGame), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngClass", e.gameClass), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.isTouch), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.showGameTitle)) }, directives: [ImageLoaderComponent, _angular_common__WEBPACK_IMPORTED_MODULE_15__.PC, _angular_common__WEBPACK_IMPORTED_MODULE_15__.O5, _angular_common__WEBPACK_IMPORTED_MODULE_15__.mk], encapsulation: 2 }), s })(), TrustUrlPipeEmbed = (() => { class s { constructor(i) { this.sanitizer = i } transform(i) { return this.sanitizer.bypassSecurityTrustResourceUrl(i) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_19__.H7, 16)) }, s.\u0275pipe = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yjl({ name: "trustUrlPipe", type: s, pure: !0 }), s })(), EmbeddedGameViewComponent = (() => { class s { constructor(i, e, o, r, c, d, f, y, M, T, P, G, x, R, J, W, Q, Z, N, ae, re, ce, _e, le, be, xe, De, Oe, ge, Se, Te, Le, Pe, V, ne) { this.user = i, this.recentGameService = e, this.favouriteService = o, this.fastLoadingGamesService = r, this.gameDataManager = c, this.document = d, this.api = f, this.jackpotService = y, this.messageQueue = M, this.dialog = T, this.balanceService = P, this.cookie = G, this.navigationService = x, this.tracking = R, this.location = J, this.unfinishedGamesService = W, this.gameLaunchFactoryService = Q, this.loginDialogService = Z, this.commonMessagesObject = N, this.navigator = ae, this.casinoManager = re, this.jackpotDataService = ce, this.m2Page = _e, this.route = le, this.casinoWidgetService = be, this.productHomepagesConfig = xe, this.freespinSummaryService = De, this.cashierService = Oe, this.configProviderService = ge, this.casinoLobbyService = Se, this.advanceGameDataService = Te, this.slotRacesService = Le, this.urlUtility = Pe, this.apiPathsHelperService = V, this.deviceService = ne, this.sendDataToEmbeddedGamePopUp = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.vpe, this.isIframeVisible = !1, this.gameIds = [], this.isGreaterthan = !1, this.isFullScreen = !1, this.extrasColumnFlag = !1, this.RecentlyPlayedGamesList = [], this.gamesUMightLikeList = [], this.gamesUMightLikeStringList = [], this.recentlyPlayedGamesStringList = [], this.iconShrinkClickedFirst = !1, this.recentGames = ConstService.RECENT_GAMES_CATEGORY_ID, this.GYML = ConstService.GYML_GAMES_CATEGORY_ID, this.EGV_GYML = ConstService.EGV_GYML, this.favouriteStyle = "theme-favorite-i", this.unFavouriteStyle = "theme-favorite", this.recommendationGames = [], this.recommendationGamesList = [], this.combineData = [], this.multipleGameLaunched = !1, this.isGameCloseTracked = !1, this.unsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_9__.x } ngOnInit() { this.casinoCoreGamelaunchService = this.gameLaunchFactoryService.getGameLaunchService(), this.gameConfig = this.configProviderService.provideGameConfig(), this.allowAttributes = this.gameConfig.iframeAllowattributes, this.Game = this.gameEmbedPop.game, this.iframeUrl = this.gameEmbedPop.iframeUrl, this.category = this.gameEmbedPop.categoryType, this.setGameTitle(); let i = this.configProviderService.provideFeaturesConfig(); this.Global = this.configProviderService.provideGlobalConfig(), this.globalsearchconfig = this.configProviderService.provideGlobalSearchConfig(), this.GamesyouMightLikeMessage = this.Global.messages.EmbeddedYouMightLike ? this.Global.messages.EmbeddedYouMightLike : this.Global.messages.GamesYouMightLike, this.isTouch = this.casinoManager.isTouch(), this.iconsNewPosition = i.enableNewEmbeddedViewIconsPosition; let e = this.casinoManager.getProductForLobbyType(this.lobbyType), o = this.route.snapshot.queryParamMap.get("widgetHomeUrl"); o && o.length > 0 && this.casinoManager.setGameHomeUrl(o), i.checkQDAllowedForDepositURL && this.cashierService.getQuickDepositAllowedStatus().subscribe(d => { this.isQDAllowed = d.isQuickDepositAllowed, this.depositButtonString = this.isQDAllowed ? this.Global.messages.QuickDeposit : this.Global.messages.Deposit }), this.teaserLaunchRealtiveUri = "/" + e + "/launchng/", this.messageQueue.clear({ clearPersistent: !0 }), this.commonMessages = this.commonMessagesObject, this.lobbyType || (this.lobbyType = this.casinoManager.getLobbyType()), this.useFavouriteGames = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, i.favouriteGamesLobbyType), this.recommendationFeed(this.Game.gameId); let r = this.configProviderService.provideNonCriticalConfig(); this.user.isAuthenticated && !r.enableRecommendationGames && this.getGamesYouMightLikeOnLMT(); let c = this.recentGameService.getrecentGames(); if (this.assignRecentlyPlayedGames(c), this.recentObs = this.recentGameService.recentGamesFeedObservable.subscribe(d => { d && this.assignRecentlyPlayedGames(d) }), this.casinoLobbyService.lobbyLoadedObservable.subscribe(d => { d && this.setGameTitle() }), this.RecentlyPlayedNGamesUMightLike = this.casinoLobbyService.getCategoryInfo(this.lobbyType, ConstService.RECENT_GAMES_CATEGORY_ID), this.casinoLobbyService.lobbyLoadedObservable.subscribe(d => { }), this.favouriteService.favouriteGamesFeedObservable.subscribe(d => { d && (this.Game.isFavourite = d.indexOf(this.Game.gameId) > -1) }), this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(d => { this.fastLoadingGamesService.setFastLoadingGames(this.RecentlyPlayedGamesList, d), this.fastLoadingGamesService.setFastLoadingGames(this.gamesUMightLikeList, d) }), ("true" === this.Global.lobbyConfigurations.FavouriteHeart || "True" === this.Global.lobbyConfigurations.FavouriteHeart || "TRUE" === this.Global.lobbyConfigurations.FavouriteHeart) && (this.favouriteStyle = "theme-heart-solid", this.unFavouriteStyle = "theme-heart-outline"), this.innerWidth = window.screen.width, this.isLoaderHide = !1, this.depositButtonString = this.isQDAllowed ? this.Global.messages.QuickDeposit : this.Global.messages.Deposit, document.getElementById("casinoEmbeddedModal").style.height = window.screen.height + "px", this.gameLaunchSuccess = !0, this.multipleGameLaunched = this.getFromCookie(i.useSingleCookieForGameIndexCountInEGV ? "gameIndexCount" : "gameLaunchedCount"), this.multipleGameLaunched ? (this.gameLaunchSuccess = !1, this.iconsNewPosition || this.messageQueue.addError(this.Global.messages.OnlyOneGameAtTime, "Single", "embeddedGameError")) : !this.iframeUrl && this.errorMessageQueue && (this.gameLaunchSuccess = !1, this.messageQueue.add(this.errorMessageQueue)), this.date = new Date, this.Favorites = !1, i.useLMTFeed); else if (i.useRecentGames) { let d = this.configProviderService.provideApiPathsConfig(), f = this.urlUtility.getApiurl(d.gamesServices.rpGames); this.api.get(f).subscribe(y => { y && this.RecentlyPlayedNGamesUMightLike && (this.RecentlyPlayedNGamesUMightLike.games.forEach(M => { let T = !1; for (let P of y) if (M === P) { T = !0, this.recentlyPlayedGamesStringList.push(M); break } T || this.gamesUMightLikeStringList.push(M) }), this.assignRecentlyPlayedGames(this.recentlyPlayedGamesStringList), this.assignGamesYouMightLike(this.gamesUMightLikeStringList)) }, y => { "-1" === y.errorCode && (this.messageQueue.addError(this.Global.messages.UnableRetrieveRecentlyPlayedGames), this.messageQueue.clear()), this.RecentlyPlayedNGamesUMightLike && this.assignGamesYouMightLike(this.RecentlyPlayedNGamesUMightLike.games) }) } else this.RecentlyPlayedNGamesUMightLike && this.assignGamesYouMightLike(this.RecentlyPlayedNGamesUMightLike.games) } ngAfterViewInit() { var i; null === (i = document.getElementById("embedGameIframe")) || void 0 === i || i.setAttribute("allow", this.allowAttributes), this.configProviderService.provideFeaturesConfig().enableOverlayMobileSearchTopPosition && this.deviceService.isTouch && this.embeddedGameOverlayTopAllignment() } recommendationFeed(i) { let e = this.configProviderService.provideNonCriticalConfig(); if (this.user.isAuthenticated && e.enableRecommendationGames) { let o = this.configProviderService.provideApiPathsConfig(), r = this.apiPathsHelperService.transformApi(o.gameData.gameRecommendations, i), c = this.urlUtility.getApiurl(r); this.api.get(c).subscribe(d => { d && (this.recommendationGames = d, this.getGamesYouMightLikeOnLMT()) }) } } setGameTitle() { let i = this.casinoLobbyService.getGameInfo(this.Game.gameId); this.Game && this.Game.name ? this.Game.title = this.Game.name : i && (this.Game.title = i.name) } setToCookie(i, e) { this.cookie.put(i, e) } getFromCookie(i) { return "1" === this.cookie.get(i) } GetParam(i, e) { const o = new RegExp("[\\?&]" + i + "=([^&#]*)").exec(e); return o && o[1] || 0 } getGamesYouMightLikeOnLMT() { if (this.recommendationGames.length < 6 || 0 == this.recommendationGames.length) { let i = this.casinoLobbyService.getDisabledGames(), e = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); if (e && e.categoryInfo && e.categoryInfo.gamelist.length > 0) { let o = e.categoryInfo.gamelist; for (let r = 0; r < o.length; r++) { let c = o[r], d = i.filter(f => f === c.game); if (!(d && d.length > 0)) { c.icon = "1"; let f = this.gameDataManager.setGameLobbyModel(c, this.isTouch); f.jackpotvalue = this.getJackpotValueForGame(f), this.gamesUMightLikeList.length > 0 && this.gamesUMightLikeList.find(y => y.gameId === f.gameId) || this.gamesUMightLikeList.push(f) } } } this.assignRecommendationGamesList(this.recommendationGames), this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(o => { this.fastLoadingGamesService.setFastLoadingGames(this.gamesUMightLikeList, o) }), this.combineData = this.recommendationGamesList.concat(this.gamesUMightLikeList), this.recommendationGamesList = Array.from(this.combineData.reduce((o, r) => o.set(r.gameId, r), new Map).values()) } else this.recommendationGamesList = this.assignRecommendationGamesList(this.recommendationGames) } assignRecommendationGamesList(i) { let e = this.assignGames(i); if (this.recommendationGamesList = [], e.forEach(o => { this.recommendationGamesList.push(this.getJackpotValueForGame(o)) }), this.recommendationGamesList && this.recommendationGamesList.length > 0) return this.recommendationGamesList = this.recommendationGamesList.filter(o => !o.isDataNotAvailable), this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(o => { this.fastLoadingGamesService.setFastLoadingGames(this.recommendationGamesList, o) }), this.recommendationGamesList } assignRecentlyPlayedGames(i) { let e = this.unfinishedGamesService.getUnfinishedGames(); i && i.length > 0 && (i = i.filter(c => -1 === e.indexOf(c))); let o = e.concat(i), r = this.assignGames(o); this.RecentlyPlayedGamesList = [], r.forEach(c => { this.RecentlyPlayedGamesList.push(this.getJackpotValueForGame(c)) }), this.RecentlyPlayedGamesList && this.RecentlyPlayedGamesList.length > 0 && (this.RecentlyPlayedGamesList = this.RecentlyPlayedGamesList.filter(c => !c.isDataNotAvailable)) } assignGamesYouMightLike(i) { let e = this.assignGames(i); this.gamesUMightLikeList = [], e.length > 0 && e.forEach(o => { this.gamesUMightLikeList.find(r => r.gameId === o.gameId) || this.gamesUMightLikeList.push(this.getJackpotValueForGame(o)) }) } assignGames(i, e) { let o = [], r = this.gameDataManager.setDefaultGameIcons(i); for (let c = 0; c < r.length; c++) { let d = this.casinoLobbyService.getGameInfo(r[c].game); if (d) { let f = this.gameDataManager.setGameLobbyModel(d, this.isTouch); f.isUnfinished = this.getUnfinishedStatus(f.gameId), f.jackpotvalue = this.jackpotDataService.getGameJackpotValue(f.gameId), o.push(f) } } return o } getUnfinishedStatus(i) { return -1 != this.unfinishedGamesService.getUnfinishedGames().indexOf(i) } getJackpotValueForGame(i) { if (this.jackpotsFeed = this.jackpotService.getJackpotData(), this.jackpotsFeed) for (let e in this.jackpotsFeed) if (-1 !== this.jackpotsFeed[e].gamesAvailable.indexOf(i.gameId)) return i.jackpotValue = this.jackpotsFeed[e].amount, i; return i } refreshJackpots() { if (this.jackpotsFeed = this.jackpotService.getJackpotData(), this.jackpotsFeed) for (let i in this.jackpotsFeed) this.RecentlyPlayedGamesList.forEach(e => { -1 !== this.jackpotsFeed[i].gamesAvailable.indexOf(e.gameId) && (e.jackpotValue = this.jackpotsFeed[i].amount) }), this.gamesUMightLikeList.forEach(e => { -1 !== this.jackpotsFeed[i].gamesAvailable.indexOf(e.gameId) && (e.jackpotValue = this.jackpotsFeed[i].amount) }) } handleScreenChange(i) { document.getElementById("casinoEmbeddedModal").style.height = window.screen.height + "px", i.stopImmediatePropagation() } closeOnRCPUClose(i) { ("CASINO_GAME_CLOSED" === i.data || "CASINO_GAME_EXIT" === i.data) && (this.gameCloseAckEventReceived = !0, this.summaryPopUpIsOpened = !1, this.close(!1)), "PREVIOUS_CASINO_GAME_CLOSED_ACK" === i.data && !this.gameclickedfromsearch && (this.gameCloseAckEventReceived = !0, this.summaryPopUpIsOpened = !1, console.log("Received by Casino_PortalPREVIOUS_CASINO_GAME_CLOSED_ACK"), this.close(!0, !1, !1)), "PREVIOUS_CASINO_GAME_CLOSED_ACK" === i.data && this.gameConfig.isGameCloseAckEventEnabled && (this.gameCloseAckEventReceived = !0, this.summaryPopUpIsOpened = !1, console.log("Received by Casino_PortalPREVIOUS_CASINO_GAME_CLOSED_ACK"), this.gameclickedfromsearch ? (this.gameclickedfromsearch = !1, this.gameClickedProcessing(this.game, this.index, this.section)) : this.popUpClicked && (this.popUpClicked = !1, this.popUpClickedProcessing())), "CASINOGAME_IDLE_LOGGED_OUT" === i.data && (this.gameCloseAckEventReceived = !0, this.summaryPopUpIsOpened = !1, this.close(!0, !0)), "CASINO_GAME_STARTED" === i.data && this.gameConfig.enableGamestartCookie && this.setToCookie("gameInProgress", 1) } unloadHandler() { this.cookie.remove("gameLaunchedCount"), this.setToCookie("gameIndexCount", 0), this.cookie.remove("gameInProgress") } fullscreenchangeHandler(i) { this.isFullScreen = document.webkitIsFullScreen, this.handleScreenChange(i) } webkitfullscreenchangeHandler(i) { this.isFullScreen = document.webkitIsFullScreen, this.handleScreenChange(i) } mozfullscreenchangeHandler(i) { let e = document; this.isFullScreen = e.mozFullScreen, this.handleScreenChange(i) } MSFullscreenChangeHandler(i) { this.isFullScreen = document.webkitIsFullScreen, this.handleScreenChange(i) } ngDoCheck() { this.date = new Date } close(i, e = !1, o = !0) { if (!this.summaryPopUpIsOpened) { this.slotRacesService.gameClose(this.category), this.configProviderService.provideGlobalJackpotConfig(), this.configProviderService.provideFeaturesConfig(); let d = this.configProviderService.providefreeSpinsClientConfig(), f = this.configProviderService.provideMcPageConfig(), y = this.casinoWidgetService.getWidgetPosition(), M = this.route.snapshot.queryParamMap.get("launchCategory"); if (this.messageQueue.clear({ clearPersistent: !0 }), i && !this.getFromCookie("gamePopOutWindow") && (this.cookie.remove("gameLaunchedCount"), this.setToCookie("gameIndexCount", 0), this.cookie.remove("gameInProgress")), i && (this.gameclickedfromsearch = !1), !e) { this.balanceService.refresh(); let G = this.configProviderService.provideApiPathsConfig(), x = this.urlUtility.getApiurl(G.ping.pgKeepAlive); this.api.get(x, null, { withCredentials: !0 }).subscribe(R => { }, R => { }) } let T = document.getElementById("embedGameIframe"); T && T.contentWindow && (T.contentWindow.postMessage("PREVIOUS_CASINO_GAME_CLOSED", "*"), console.log("Sent from Casino_PortalPREVIOUS_CASINO_GAME_CLOSED"), this.setToCookie("gameIndexCount", 0)); let P = this.route.snapshot.queryParamMap.get("widgetGameLaunch"); if (this.gameConfig.isGameCloseApiEnabled) this.casinoCoreGamelaunchService.closeGame(this.Game.gameId).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.R)(this.unsubscribe)).subscribe(G => { G && this.gameCloseAction() }, () => { this.gameCloseAction() }); else { if (this.gameConfig.isGameCloseAckEventEnabled && !this.gameCloseAckEventReceived && this.gameLaunchSuccess) return void (this.summaryPopUpIsOpened = !0); setTimeout(() => { this.gameCloseAction() }, this.gameConfig.gameCloseDelay) } P && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": y ? "X-Sell Casino " + y : "X-Sell - Sports Widget", "component.LabelEvent": y ? "X-Sell Casino " + y + "|" + M : "X-Sell - Sports Widget", "component.ActionEvent": "Game Exit", "component.LocationEvent": y ? "X-Sell Casino " + y : "X-Sell Widget", "component.EventDetails": y ? "User closes the casino game and is taken back to sports lobby" : "User exits the game and is returned back to sports page", "component.URLClicked": f.invokerProductHomePage.url }), this.isGameCloseTracked || (this.tracking.triggerEvent("gameClose", { "component.gameName": this.Game.gameId, "component.gameType": this.getGameLunchType(this.Game.gameId), "component.gameDisplayName": this.casinoLobbyService.getGameDisplayName(this.Game.gameId) }), this.isGameCloseTracked = !0), e || (this.unfinishedGamesService.setUnfinishedGames(), o && this.recentGameService.setRecentGames()), d.isFreeSpinSummaryEnabled && this.freespinSummaryService.setFreespinsummary(), this.gameConfig.enableRefreshonGameClose && this.casinoCoreGamelaunchService.playerPlayBreakStatus() } } gameCloseAction() { let i = this.configProviderService.provideGlobalJackpotConfig(); document.body.classList.remove("embed-hide-scroll"), this.sendDataToEmbeddedGamePopUp.emit(this.Game), this.innerWidth = window.screen.width, this.location.path().indexOf("forcedEmbeddedLaunch") > -1 && ("globaljackpot" == this.casinoManager.getProductForLobbyType(this.lobbyType).toLowerCase() ? this.navigationService.goTo("/" + this.m2Page.lang + "/g/" + i.globalJackpotPathSegments.toLowerCase()) : this.navigationService.goTo("/" + this.m2Page.lang + "/" + this.casinoManager.getProductForLobbyType(this.lobbyType).toLowerCase())) } isCasinoDomain(i) { return !(i && (!i || "" == i || 0 !== i.indexOf(this.productHomepagesConfig.casino))) } urlParser(i) { let e = document.createElement("a"); return e.href = i, e } isLiveDealer() { } addFavourate(i, e) { this.user.isAuthenticated ? (e.stopImmediatePropagation(), this.favouriteService.toggleGameFavourite(i, !1, !0)) : this.loginDialogService.open({ loginMessageKey: "Favourite" }), this.tracking.triggerEvent("GameInteraction", this.Game.isFavourite ? { "component.Game.interaction": "Remove_Game_Favorites_EGV" } : { "component.Game.interaction": "Add_Game_Favorites_EGV" }) } openNav() { this.isIframeVisible = !0, this.isGreaterthan = !0, document.getElementById("mySidenav").style.width = "100%", document.getElementById("mySidenav").style.position = "fixed" } closeNav() { this.isIframeVisible = !1, this.isGreaterthan = !1, document.getElementById("mySidenav").style.width = "100%", document.getElementById("mySidenav").style.position = "inherit" } fullScreen() { this.checkFullScreen() ? (this.adjustGamesPanel(), this.requestFullScreen()) : this.minimizeFullScreen() } minimizeFullScreen() { this.isIframeVisible = !1, document.getElementById("mySidenav").style.width = "100%", document.getElementById("mySidenav").style.position = "inherit", this.isFullScreen = !1, this.document.cancelFullScreen ? this.document.cancelFullScreen() : this.document.mozCancelFullScreen ? this.document.mozCancelFullScreen() : this.document.webkitCancelFullScreen ? this.document.webkitCancelFullScreen() : this.document.msExitFullscreen && this.document.msExitFullscreen() } adjustGamesPanel() { document.getElementById("mySidenav").style.width = "100%", document.getElementById("mySidenav").style.position = "fixed", this.isIframeVisible = !0, this.isFullScreen = !0, this.isFullScreen && (this.isGreaterthan = !1) } checkFullScreen() { return void 0 !== this.document.fullScreenElement && null === this.document.fullScreenElement || void 0 !== this.document.msFullscreenElement && null === this.document.msFullscreenElement || void 0 !== this.document.mozFullScreen && !this.document.mozFullScreen || void 0 !== this.document.webkitIsFullScreen && !this.document.webkitIsFullScreen } requestFullScreen() { this.document.body.requestFullScreen ? this.document.body.requestFullScreen() : this.document.body.mozRequestFullScreen ? this.document.body.mozRequestFullScreen() : this.document.body.webkitRequestFullScreen ? this.document.querySelector("body").webkitRequestFullScreen() : this.document.body.msRequestFullscreen && this.document.body.msRequestFullscreen() } toggleFullWindowScreen() { document.webkitIsFullScreen ? this.cancelFullScreen() : this.allowFullScreen() } allowFullScreen() { let i = document; this.document.body.requestFullScreen ? this.document.body.requestFullScreen() : i.body.mozRequestFullScreen ? document.documentElement.mozRequestFullScreen() : this.document.body.webkitRequestFullScreen ? this.document.querySelector("body").webkitRequestFullScreen() : this.document.body.msRequestFullscreen && this.document.body.msRequestFullscreen() } cancelFullScreen() { this.document.cancelFullScreen ? this.document.cancelFullScreen() : this.document.mozCancelFullScreen ? this.document.mozCancelFullScreen() : this.document.webkitCancelFullScreen ? this.document.webkitCancelFullScreen() : this.document.msExitFullscreen && this.document.msExitFullscreen() } toggleFullScreen(i) { this.summaryPopUpIsOpened || (this.tracking.triggerEvent("GameInteraction", { "component.Game.interaction": "EGV_PlayGame_FullScreen" }), document.getElementsByClassName("embed-left-section")[0].setAttribute("style", "width:100%"), void 0 !== this.document.fullScreenElement && null === this.document.fullScreenElement || void 0 !== this.document.msFullscreenElement && null === this.document.msFullscreenElement || void 0 !== this.document.mozFullScreen && !this.document.mozFullScreen || void 0 !== this.document.webkitIsFullScreen && !this.document.webkitIsFullScreen ? (this.iconShrinkClickedFirst = !1, this.document.body.requestFullScreen ? this.document.body.requestFullScreen() : this.document.body.mozRequestFullScreen ? this.document.body.mozRequestFullScreen() : this.document.body.webkitRequestFullScreen ? this.document.querySelector("body").webkitRequestFullScreen() : this.document.body.msRequestFullscreen && this.document.body.msRequestFullscreen(), document.getElementById("casinoEmbeddedModal").style.height = window.screen.height + "px") : ("icon-shrink" === i.target.className && (this.iconShrinkClickedFirst = !0), this.document.cancelFullScreen ? this.document.cancelFullScreen() : this.document.mozCancelFullScreen ? this.document.mozCancelFullScreen() : this.document.webkitCancelFullScreen ? this.document.webkitCancelFullScreen() : this.document.msExitFullscreen && this.document.msExitFullscreen(), document.getElementById("casinoEmbeddedModal").style.height = window.screen.height + "px")) } toggleExtrasColumn() { this.extrasColumnFlag = !this.extrasColumnFlag, document.getElementsByClassName("embed-left-section")[0].setAttribute("style", "width:100%") } getGameLunchType(i) { let e = this.casinoLobbyService.getGameInfo(i); return e ? e.provider : null } gameClickedOnSearch(i, e, o) { this.gameclickedfromsearch = !0; let r = document.getElementById("embedGameIframe"); r && r.contentWindow && (r.contentWindow.postMessage("PREVIOUS_CASINO_GAME_CLOSED", "*"), console.log("Sent from Casino_Portal on gameClickedOnSearchPREVIOUS_CASINO_GAME_CLOSED")), this.gameConfig.isGameCloseAckEventEnabled && this.gameLaunchSuccess ? (this.game = i, this.index = e, this.section = o, this.summaryPopUpIsOpened = !0) : this.gameClickedProcessing(i, e, o) } gameClickedProcessing(i, e, o) { let r = this.configProviderService.provideGlobalConfig(), c = this.configProviderService.provideFeaturesConfig(); if (this.gameCloseAckEventReceived = !1, this.recommendationFeed(i.gameId), this.getFromCookie("gamePopOutWindow")) { let d = this.Game.returnUrl; this.Game = i, this.Game.returnUrl = d, this.gameLaunchSuccess = !1, this.iconsNewPosition || this.messageQueue.addError(r.messages.OnlyOneGameAtTime, "Single", "embeddedGameError") } else if (this.messageQueue.clear(), e || o) { this.unfinishedGamesService.checkForUnfinishedGame(i); let f = 1; this.RecentlyPlayedGamesList && this.RecentlyPlayedGamesList.length > 0 && (f = 2), i.GamePosition >= 0 && (e = i.GamePosition), this.tracking.triggerEvent("gameOpen", "Search" == o ? { "component.Game.position": e + 1, "component.Game.section": "egv_" + o, "component.gameName": i.gameId, "component.gameDisplayName": this.casinoLobbyService.getGameDisplayName(i.gameId), "component.gameType": i.provider ? i.provider : this.getGameLunchType(i.gameId), "component.gameContainerLocation": `${(null == i ? void 0 : i.gameContainer) ? null == i ? void 0 : i.gameContainer : "Page Container"}` } : { "component.Game.position": e + 1, "component.Game.section": "egv_" + o, "component.gameName": i.gameId, "component.gameDisplayName": i.name ? i.name : this.casinoLobbyService.getGameDisplayName(i.gameId), "component.gameType": i.provider ? i.provider : this.getGameLunchType(i.gameId), "component.Game.GridPosition": (o == this.recentGames ? 1 : f) + ":" + (e + 1), "component.gameContainerLocation": `${(null == i ? void 0 : i.gameContainer) ? null == i ? void 0 : i.gameContainer : "Page Container"}` }); let y = o == this.recentGames ? 1 : f; i.iconType = 1, this.advanceGameDataService.gameClickedFromSearchAdvanceGameDataModel(i, o, y, e); let M = new GameLaunch; M.game = i, M.isTouch = this.isTouch, M.gamePosition = e, M.gameSection = o, M.clickTimeStamp = this.casinoCoreGamelaunchService.currentTimeStamp(), this.messageQueue.clear(), !this.casinoCoreGamelaunchService.checkGameInGameMetaData(M.game.gameId) && this.user.isAuthenticated && this.casinoCoreGamelaunchService.gameNotFoundAction(M); let T = this.casinoLobbyService.getDisabledGames(); T && T.forEach(P => { P.toLowerCase() == M.game.gameId.toLowerCase() && this.user.isAuthenticated && this.casinoCoreGamelaunchService.gameNotFoundAction(M) }), this.casinoCoreGamelaunchService.getDesktopGameLaunchUrl(M, P => { setTimeout(() => { this.gameclickedfromsearch = !0, this.iframeUrl = P.iframeUrl, c.useSingleCookieForGameIndexCountInEGV || this.setToCookie("gameLaunchedCount", "1"); let G = this.Game.returnUrl; this.Game = i, this.Game.returnUrl = G, this.setGameTitle(), this.gameLaunchSuccess = !0, this.recentGameService.setRecentGames() }, 400) }) } } openDialog() { let i = this.dialog.open(CashierIframeComponent, { width: "790px", data: { name: "cashier" }, panelClass: "casino-lobby-container-main" }); i.componentInstance.isQDAllowed = this.isQDAllowed, i.afterClosed().subscribe(() => { }) } openRequestedPopup() { if (!this.summaryPopUpIsOpened) { let i = this.configProviderService.provideFeaturesConfig(); this.tracking.triggerEvent("GameInteraction", { "component.Game.interaction": "EGV_PlayGame_NewWindow" }), this.dialog.open(GamePopoutComponent, { width: "386px", data: { name: "popOut" } }).afterClosed().subscribe(o => { if ("continue" === o) { if (i.useSingleCookieForGameIndexCountInEGV) { this.setToCookie("gameIndexCount", 0); let r = document.getElementById("embedGameIframe"); r && r.contentWindow && (r.contentWindow.postMessage("PREVIOUS_CASINO_GAME_CLOSED", "*"), console.log("Sent from Casino_Portal on openRequestedPopupPREVIOUS_CASINO_GAME_CLOSED")) } else this.setToCookie("gameLaunchedCount", "1"); this.gameConfig.isGameCloseAckEventEnabled ? (this.popUpClicked = !0, this.summaryPopUpIsOpened = !0) : this.popUpClickedProcessing() } }) } } popUpClickedProcessing() { let e = window.open(this.iframeUrl, "GameWindow", "resizable=no,toolbar=no,scrollbars=no,width=" + this.embededPopUpWidth + ",height=" + this.embededPopUpHeight); e.closed || this.setToCookie("gamePopOutWindow", "1"), this.close(!0); let o = setInterval(() => { e.closed && (this.cookie.remove("gameLaunchedCount"), this.cookie.remove("gamePopOutWindow"), this.setToCookie("gameIndexCount", 0), this.cookie.remove("gameInProgress"), clearInterval(o)) }, this.gameConfig.gameCloseDelay) } ngOnDestroy() { this.recentObs && this.recentObs.unsubscribe(), this.unsubscribe.next(!0), this.unsubscribe.complete() } embeddedGameOverlayTopAllignment() { if (document.querySelector(".content-messages-header-top .content-message-container")) { let i = document.querySelector(".content-messages-header-top .content-message-container"); document.querySelector(".game-container").style.top = i.clientHeight + "px" } } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(RecentGamesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(FavouriteService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(FastLoadingGamesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(GameDataManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_common__WEBPACK_IMPORTED_MODULE_15__.K0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(JackpotService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.uw), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.mOY), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.N_8), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_common__WEBPACK_IMPORTED_MODULE_15__.Ye), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(UnfinishedGamesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoCoreGameLaunchFactoryService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(OpenLoginDialog), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.EC$), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(NavigatorService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(JackpotDataService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.T3C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_router__WEBPACK_IMPORTED_MODULE_8__.gz), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoWidgetService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.t6E), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(FreespinSummaryService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CashierService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoLobbyService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(AdvanceGameDataService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(SlotRacesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ApiPathsHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U8N)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-embedded-game-view"]], hostBindings: function (i, e) { 1 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("message", function (r) { return e.closeOnRCPUClose(r) }, !1, _angular_core__WEBPACK_IMPORTED_MODULE_3__.Jf7)("unload", function () { return e.unloadHandler() }, !1, _angular_core__WEBPACK_IMPORTED_MODULE_3__.Jf7)("fullscreenchange", function (r) { return e.fullscreenchangeHandler(r) }, !1, _angular_core__WEBPACK_IMPORTED_MODULE_3__.evT)("webkitfullscreenchange", function (r) { return e.webkitfullscreenchangeHandler(r) }, !1, _angular_core__WEBPACK_IMPORTED_MODULE_3__.evT)("mozfullscreenchange", function (r) { return e.mozfullscreenchangeHandler(r) }, !1, _angular_core__WEBPACK_IMPORTED_MODULE_3__.evT)("MSFullscreenChange", function (r) { return e.MSFullscreenChangeHandler(r) }, !1, _angular_core__WEBPACK_IMPORTED_MODULE_3__.evT) }, inputs: { borderRadius: "borderRadius", gameEmbedPop: "gameEmbedPop", lobbyType: "lobbyType", errorMessageQueue: "errorMessageQueue" }, outputs: { sendDataToEmbeddedGamePopUp: "sendDataToEmbeddedGamePopUp" }, decls: 5, vars: 4, consts: [["id", "casino-embed-game-view", 1, "casino-embed-game-view"], [3, "scope"], ["class", "game-launch-fail-close", 4, "ngIf"], ["class", "embed-left-section", 4, "ngIf"], ["class", "embed-right-section", 4, "ngIf"], [1, "game-launch-fail-close"], [3, "click"], [1, "theme-close-i"], [1, "embed-left-section"], [1, "embed-left-section-width"], ["class", "embed-settings", 4, "ngIf"], [1, "embed-iframe"], [4, "ngIf"], [1, "embed-settings"], ["class", "client-time-full-screen", 4, "ngIf"], [1, "embed-list"], ["mat-raised-button", "", 1, "header-btn", "btn", "btn-primary", "ml-2", 3, "click"], [3, "ngStyle", 4, "ngIf"], [3, "ngStyle"], [3, "ngClass"], ["style", "position:relative;right:-50px;", 4, "ngIf"], [1, "client-time-full-screen"], [3, "ngClass", 4, "ngIf"], ["src", "", "href", "javascript:void(0)", 3, "click"], [1, "theme-pop-out"], [2, "position", "relative", "right", "-50px"], [1, "theme-left", 3, "click"], [1, "gameOverlay"], ["id", "embedGameIframe", "allowfullscreen", "true", "webkitallowfullscreen", "true", "mozallowfullscreen", "true", 1, "iframeClass", 3, "src", "ngClass"], [1, "embed-right-section"], [1, "casino-embed-search"], ["class", "search-right-icon", 3, "ngClass", 4, "ngIf"], [3, "ngClass", "placeholder", "lobbyType", "embedGameClicked"], [1, "games-div", 3, "ngClass"], [1, "embed-game-title"], ["class", "game-title", 3, "innerHTML", 4, "ngIf"], ["class", "add-fav-btn", 4, "ngIf"], ["id", "categoryIdentifier_EmbedRecentlyPlayed", "class", "embed-games-list sidepanel-recentlyplayed-games", 4, "ngIf"], ["id", "categoryIdentifier_EmbedGamesyouMightLike", "class", "embed-games-list sidepanel-suggested-games", 4, "ngIf"], [1, "search-right-icon", 3, "ngClass"], [3, "ngClass", "click"], [1, "game-title", 3, "innerHTML"], [1, "add-fav-btn"], [1, "favourite", "btn-s3", 3, "click"], ["class", "favaddbutton", 4, "ngIf"], [1, "favaddbutton"], ["id", "categoryIdentifier_EmbedRecentlyPlayed", 1, "embed-games-list", "sidepanel-recentlyplayed-games"], [1, "emb-header"], [1, "games-container"], ["class", "game embed-game", 3, "ngClass", 4, "ngFor", "ngForOf"], [1, "game", "embed-game", 3, "ngClass"], [3, "id", "game", "radius", "categorytype", "lobbyType", "embedGameClicked"], ["id", "categoryIdentifier_EmbedGamesyouMightLike", 1, "embed-games-list", "sidepanel-suggested-games"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 0), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(1, "vn-message-panel", 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, EmbeddedGameViewComponent_span_2_Template, 3, 0, "span", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(3, EmbeddedGameViewComponent_div_3_Template, 5, 2, "div", 3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(4, EmbeddedGameViewComponent_div_4_Template, 11, 10, "div", 4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("scope", "embeddedGameError"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !e.gameLaunchSuccess), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.gameLaunchSuccess), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !e.extrasColumnFlag && !e.isFullScreen)) }, directives: [_frontend_vanilla_features_message_panel__WEBPACK_IMPORTED_MODULE_17__.Y, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.MIT, SearchDesktopComponent, GameEmbedComponent, _angular_common__WEBPACK_IMPORTED_MODULE_15__.O5, _angular_common__WEBPACK_IMPORTED_MODULE_15__.mk, _angular_common__WEBPACK_IMPORTED_MODULE_15__.PC, _angular_common__WEBPACK_IMPORTED_MODULE_15__.sg], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_15__.uU, TrustUrlPipeEmbed, _angular_common__WEBPACK_IMPORTED_MODULE_15__.OU], encapsulation: 2 }), s })(), EmbeddedGamePopupComponent = (() => { class s { constructor(i, e, o, r, c, d, f) { this.dialogRef = i, this.navigation = e, this.gameLaunchService = o, this.gameLaunchFactoryService = r, this.gameData = c, this.messageQueue = d, this.teaserService = f, this.gameLaunchFactoryService.setGameLaunchService(this.gameLaunchService) } ngOnInit() { this.teaserService.muteAllVideos() } eventFromEmbeddedGameView(i) { let e = this.navigation.location.search.get("returnurl"); e ? this.navigation.goTo(e) : location.href.includes("games/launchng") && (this.messageQueue.clear(), this.dialogRef.close(), this.navigation.goTo(i.returnUrl)), this.dialogRef.close() } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoCoreGamelaunchService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoCoreGameLaunchFactoryService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(TeaserService)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-embedded-game-popup"]], decls: 5, vars: 1, consts: [[1, "casino-lobby-container-main"], [1, "casino-egv-modal-popup"], ["id", "casinoEmbeddedModal", 1, "casino-modal"], [1, "modal-content"], [4, "ngIf"], [3, "gameEmbedPop", "errorMessageQueue", "lobbyType", "sendDataToEmbeddedGamePopUp"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(4, EmbeddedGamePopupComponent_div_4_Template, 2, 3, "div", 4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()()()), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.gameData)) }, directives: [EmbeddedGameViewComponent, _angular_common__WEBPACK_IMPORTED_MODULE_15__.O5], encapsulation: 2 }), s })(), LiveDealerService = (() => { class s { constructor(i) { this.configProviderService = i, this.liveDealerStateChange = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.liveDealerStateChangeObservable = this.liveDealerStateChange.asObservable() } getOperatingTimes() { let i = this.configProviderService.provideLiveDealerConfig(), e = this.getUtcTime(), o = this.getUtcTime(); o.setHours(i.openHours, i.openMinutes, i.openSeconds); let r = this.getUtcTime(); return r.setHours(i.closeHours, i.closeMinutes, i.closeSeconds), r > o ? e > r && (r.setDate(r.getDate() + 1), o.setDate(o.getDate() + 1)) : e >= o ? r.setDate(r.getDate() + 1) : e < r && o.setDate(o.getDate() - 1), { openTime: o, closeTime: r } } onStateChange(i) { this.state = i, this.liveDealerStateChange.next({ open: i }) } init() { this.state = this.isOpen(), setInterval(() => { let i = this.isOpen(); this.state !== i && this.onStateChange(i) }, 6e4) } fireStateChange(i) { this.onStateChange(i) } isOpen() { if (!this.configProviderService.provideLiveDealerConfig().operatingHoursEnabled) return !0; let e = this.getOperatingTimes(), o = this.getUtcTime(); return o >= e.openTime && o < e.closeTime } getSecondsUntilOpen() { if (!this.configProviderService.provideLiveDealerConfig().operatingHoursEnabled) return 0; let e = this.getOperatingTimes(), o = this.getUtcTime(); return Math.abs((e.openTime.getTime() - o.getTime()) / 1e3) } getUtcTime() { let i = new Date; return i.setTime(i.getTime() + 6e4 * i.getTimezoneOffset()), i } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GameLaunchUrlFormationService = (() => { class s { constructor(i, e, o, r, c, d, f, y, M) { this.configProviderService = i, this.claimsConfig = e, this.advanceGameDataService = o, this.urlUtilityService = r, this.favouriteService = c, this.casinoManager = d, this.apiPathsHelperService = f, this.nativeAppService = y, this.cookieService = M } launchMGSGame(i, e) { let o, r, c = i.casinoCoreGameLaunchResponseParams, d = i.casinoCoreGameLaunchQueryResponseParams, f = this.configProviderService.provideGameConfig(), y = this.configProviderService.provideFeaturesConfig(), M = this.configProviderService.provideCasinoConfig(), T = this.configProviderService.provideAdvanceGameDataConfig(), P = this.getInvokerProduct(c.product), G = c.channelId, x = this.claimsConfig.get("currency"), R = this.claimsConfig.get("ssoToken"), J = y.enableMultiGameVIew, W = y.egvFavourites, Q = M.brandId, Z = M.frontendId, N = this.getPingUrlWithToken() ? this.getPingUrlWithToken() : "", ce = (this.claimsConfig.get("sessionToken"), this.claimsConfig.get("userToken"), this.getAccountUrl()), _e = this.getHistoryUrl(), le = this.getIndexFilePath(), be = this.favouriteService.checkForFavouriteGame(e.game); this.claimsConfig.get("jurisdiction"); const De = !(this.nativeAppService.isNativeApp || this.nativeAppService.isNativeWrapper), Oe = c.geoPollingUrl; let ge = this.casinoManager.isTouch() ? "EL" : "IL", Se = this.configProviderService.provideCasinoAsIFrameConfig(), Te = c.depositRedirectUrl; "playRedirect" != e.gameLaunchedFrom && (Te = this.updateDepositRedirectUrl(c.depositRedirectUrl)), c.gameHomeUrl = decodeURIComponent(c.gameHomeUrl), "Overlay" === e.gameContainer && Se.appendOpenCasinoCoreOverlayQueryParam && (c.gameHomeUrl.indexOf("openCasinoCoreOverlay=true") > -1 || (c.gameHomeUrl = this.appendQueryString(c.gameHomeUrl, "openCasinoCoreOverlay", "true"))), e.returnUrl && "" != e.returnUrl && (c.gameHomeUrl = e.returnUrl), c.gameHomeUrl = encodeURIComponent(c.gameHomeUrl); let Le = [R, c.internalGameName, c.languageCode, G, P, c.gameHomeUrl, encodeURIComponent(N), encodeURIComponent(ce), encodeURIComponent(Te), encodeURIComponent(c.responsibleGamingUrl), Q, e.game.lobbyType, f.win.casinoEnvironment, c.userHostAddress, f.win.keepAliveInterval, _e, encodeURIComponent(c.generalTermsAndConditionsUrl), encodeURIComponent(c.casinoHomeUrl), e.mode, e.isDemoLaunch, encodeURIComponent(le), c.portalLanguage.routeValue, encodeURIComponent(Oe), De, Z], Pe = [c.languageCode, c.internalGameName, P, G, c.languageCode, x, R, "lobby", "1", "1", "1024", "770", encodeURIComponent(c.casinoNoLanguageBaseUrl), J, W.toString(), Q, Z, be.toString(), c.portalLanguage.routeValue, f.win.keepAliveInterval, encodeURIComponent(N), ge, c.gameHomeUrl]; return f.desktopChannelIds.indexOf(G) > -1 ? e.fetchLiveGameIFrame || i.isLiveGame ? (r = f.desktopMGSLiveGameLaunchURL, o = this.format(r, Pe)) : (r = f.desktopMGSGameLaunchUrl.defaultUrlPattern, o = this.format(r, Pe)) : (r = f.mgsGameLaunchUrl.defaultUrlPattern, o = this.format(r, Le)), d && (d.clickTimeStamp && (d.clickTimeStamp = e.clickTimeStamp), d.launchSource && (d.launchSource = e.launchSource ? e.launchSource : this.launchSource()), Object.keys(d).forEach(V => { o = this.appendQueryString(o, V, d[V]) })), T.enableAdvanceGameData && (o = this.advanceGameDataService.appendAdvanceGameDataUrl(o, G)), o = o.split("//").join("/"), o = this.encodeQueryParam(o, "bgColor"), o = this.addHost(o), console.log("gamelaunchurl:" + o), o } format(i, e) { let o = i; for (let r = 0; r < i.length; r++) { let c = new RegExp("\\{" + r + "\\}", "gm"); o = o.replace(c, null != e[r] ? e[r] : "") } return o } getPingUrlWithToken() { let i = this.claimsConfig.get("userToken"), e = this.claimsConfig.get("sessionToken"), o = this.configProviderService.provideApiPathsConfig(); return this.apiPathsHelperService.transformApi(o.ping.pgUrlWithToken, this.urlUtilityService.getApiBaseUrl(), i, e) } getAccountUrl() { let i = this.configProviderService.provideApiPathsConfig(); return this.urlUtilityService.getApiBaseUrl() + i.gameData.myCasino } getHistoryUrl() { if (null == this.configProviderService.provideCasinoConfig().gameLogUrl) return null; { let o = this.configProviderService.provideApiPathsConfig(); return encodeURIComponent(this.urlUtilityService.getApiBaseUrl() + o.gameData.gameLogs) } } getIndexFilePath() { let e = this.configProviderService.provideGameConfig().win.winGameLaunchFile; return e.substring(0, e.lastIndexOf("/")) } addHost(i) { let e = this.configProviderService.provideGameConfig(); return -1 != i.indexOf("http") && (i = e.host + "/" + i), i } appendQueryString(i, e, o) { return i.indexOf("?") > -1 ? i += "&" + e + "=" + o : i += "?" + e + "=" + o, i } launchSource() { let i = this.cookieService.get("NativeApp"); return !i || "pokervc" !== i.toLowerCase() && "pokermc" !== i.toLowerCase() ? "casino_portal" : "poker_portal" } encodeQueryParam(i, e) { let o = this.getQueryParameter(i, e); if (o) { let r = this.removeParam(i, e); return r = this.appendQueryString(r, e, encodeURIComponent(o)), r } return i } getQueryParameter(i, e) { return new URLSearchParams(i).get(e) } removeParam(i, e) { let o = i.split("?")[0], r = [], c = -1 !== i.indexOf("?") ? i.split("?")[1] : ""; if ("" !== c) { r = c.split("&"); for (let d = r.length - 1; d >= 0; d -= 1)r[d].split("=")[0] === e && r.splice(d, 1); o = o + "?" + r.join("&") } return o } getInvokerProduct(i) { return this.configProviderService.provideModularSettingsConfig().productMap.filter(c => c.product.toLowerCase() === i.toLowerCase())[0].invokerProduct.toUpperCase() } updateDepositRedirectUrl(i) { let e = decodeURIComponent(i); if (e) { let o = e.slice(e.indexOf("parentUrl=") + 10); o = this.appendQueryString(o, "returnUrl", window.location.href), e = this.removeParam(e, "parentUrl"), e = this.appendQueryString(e, "parentUrl", o) } return e } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.UDe), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(AdvanceGameDataService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(FavouriteService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ApiPathsHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.rBu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.N_8)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), VCConstService = (() => { class s { } return s.CASINO_OPEN_GAME_URL = "CASINO_OPEN_GAME_URL", s.CASINO_OPEN_GAME = "CASINO_OPEN_GAME", s })(), VCClientService = (() => { class s { constructor(i, e, o, r, c, d, f, y, M, T, P, G) { this.windowRef = i, this.api = e, this.configProviderService = o, this.messageQueue = r, this.user = c, this.cookieService = d, this.casinoLobbyService = f, this.navigationService = y, this.casinoManager = M, this.gameLaunchUrlFormationService = T, this.urlUtility = P, this.lhProductHomepagesConfig = G } handleVCGameLaunch(i, e, o) { this.user.isAuthenticated ? this.launchGameForVC(i, e, o) : this.raiseNativeVCEvent(i.game.gameId, i.returnUrl, "") } launchGameForVC(i, e, o) { let r = this.configProviderService.provideGlobalConfig(), c = this.configProviderService.provideApiPathsConfig(), d = this.urlUtility.getApiurl(c.gameData.gameLaunchData); this.api.get(d, { gameId: i.game.gameId, skipUnfinGame: !0 }).subscribe(f => { if (f) if (f.redirect && f.redirect.indexOf("/unfinished") > -1) this.messageQueue.addError(r.messages.UnfinishedGames); else { let y = this.gameLaunchUrlFormationService.launchMGSGame(f, i); f.redirect = y, o ? o({ isError: !1, errorMessage: "", gameLaunchUrl: y }) : this.raiseNativeVCEvent(i.game.gameId, i.returnUrl, f.redirect, e) } }, f => { f && f.data && f.data.common && f.data.common.messages && f.data.common.messages[0] && (o ? o({ isError: !0, errorMessage: f.data.common.messages[0], gameLaunchUrl: "" }) : this.messageQueue.addError(f.data.common.messages[0])) }) } raiseNativeVCEvent(i, e, o, r = !1, c = "") { let d = this.configProviderService.provideNativeGameLaunchConfig(), f = this.cookieService.get("NativeApp"); if (d.isOnlyGameidLaunchEvent) { let y = { CASINO_OPEN_GAME: i, gameName: i, clickTimeStamp: this.getQueryParameter(o, "clickTimeStamp"), launchSource: this.getQueryParameter(o, "launchSource"), lobbyType: this.casinoManager.getCurrentLobby() }; if ((r = !!r || this.checkPokerVCOutsideCasinoLobby(e)) && "pokervc" === f.toLowerCase()) this.windowRef.nativeWindow.external.NativeDispatch("app:GAME_NAME=" + i + "#" + c, JSON.stringify(y)), console.log("app:GAME_NAME= event rised from GameidLaunchEvent"); else { let M = this.casinoLobbyService.getGameInfo(i), T = d.vendorsforShouldOverrideUserAgent; M && T && T.indexOf(M.provider) > -1 && (y.shouldOverrideUserAgent = "1"), this.windowRef.nativeWindow.external.NativeDispatch(VCConstService.CASINO_OPEN_GAME, JSON.stringify(y)), console.log("CASINO_OPEN_GAME event rised from GameidLaunchEvent") } } else { let y = { CASINO_OPEN_GAME_URL: o, casinoEvents: { CASINO_OPEN_GAME: o }, gameName: i, height: "680", width: "960" }; if ((r = !!r || this.checkPokerVCOutsideCasinoLobby(e)) && "pokervc" === f.toLowerCase()) this.windowRef.nativeWindow.external.NativeDispatch("app:GAME_NAME=" + i + "#" + c, JSON.stringify(y)), console.log("app:GAME_NAME= event rised with GameDetails"); else { let M = this.casinoLobbyService.getGameInfo(i), T = d.vendorsforShouldOverrideUserAgent; M && T && T.indexOf(M.provider) > -1 && (y.shouldOverrideUserAgent = "1"), this.windowRef.nativeWindow.external.NativeDispatch(VCConstService.CASINO_OPEN_GAME_URL, JSON.stringify(y)), console.log("CASINO_OPEN_GAME event rised with GameDetails") } } e && this.navigationService.goTo(e) } getQueryParameter(i, e) { return new URLSearchParams(i).get(e) } isPokerVC() { let i = this.cookieService.get("NativeApp"); return i && ("pokervc" === i.toLowerCase() || "pokermc" === i.toLowerCase()) } checkPokerVCOutsideCasinoLobby(i) { return "" != i && -1 == i.indexOf(this.lhProductHomepagesConfig.casino) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.X9E), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.N_8), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoLobbyService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GameLaunchUrlFormationService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.t6E)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(); class NativeAppFeatures { constructor() { this.topBar = "topBar", this.footer = "footer", this.navigationBar = "navigationBar", this.fixednav = "fixednav", this.nativeStyle = "nativeStyle" } } let NativeAppHelperService = (() => { class s { constructor(i, e, o, r, c, d, f, y) { this.nativeApplication = i, this.configProviderService = e, this.messageQueue = o, this.casinoapi = r, this.user = c, this.loginDialog = d, this.gameLaunchUrlFormationService = f, this.urlUtility = y, this.nativeAppFeatures = new NativeAppFeatures } isNativeFeatureEnabled(i) { switch (i) { case this.nativeAppFeatures.topBar: case this.nativeAppFeatures.footer: case this.nativeAppFeatures.navigationBar: if (!this.nativeApplication.isNativeApp || this.nativeApplication.isNativeWrapper) return !0; break; case this.nativeAppFeatures.fixednav: if (!this.nativeApplication.isNativeApp && !this.nativeApplication.isNativeWrapper) return !0; break; case this.nativeAppFeatures.nativeStyle: if (this.nativeApplication.isNativeApp) return !0 }return !1 } handleNativeGameLaunch(i, e, o) { this.user.isAuthenticated ? this.launchGameForNativeApp(i, e, o) : this.loginDialog.open() } launchGameForNativeApp(i, e, o) { let r = this.configProviderService.provideGlobalConfig(); this.getLaunchData(i).subscribe(c => { if (c) if (c.redirect && c.redirect.indexOf("/unfinished") > -1) this.messageQueue.addError(r.messages.UnfinishedGames); else { let d = this.gameLaunchUrlFormationService.launchMGSGame(c, e); c.redirect = d, o ? o({ isError: !1, errorMessage: "", gameLaunchUrl: d }) : this.raiseNativeGameLaunchEvent(c.redirect) } }, c => { c && c.data && c.data.common && c.data.common.messages && c.data.common.messages[0] && (o ? o({ isError: !0, errorMessage: c.data.common.messages[0], gameLaunchUrl: "" }) : this.messageQueue.addError(c.data.common.messages[0])) }) } getLaunchData(i) { let e = this.configProviderService.provideApiPathsConfig(), o = this.urlUtility.getApiurl(e.gameData.gameLaunchData); return this.casinoapi.get(o, i) } raiseNativeGameLaunchEvent(i) { this.nativeApplication.sendToNative({ eventName: "Native_Game_Launch", parameters: { gameLaunchUrl: i } }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.rBu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(OpenLoginDialog), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GameLaunchUrlFormationService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), MonitorService = (() => { class s { constructor() { this.active = !1, this.portalInfoAvailable = !1, this.portalInfo = null, this.MONITOR_INACTIVE = "monitor:inactive", this.monitorActiveStatus = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.monitorActiveObservable = this.monitorActiveStatus.asObservable() } setMonitorActiveStatus(i) { this.monitorActiveStatus.next(i) } activate() { return this.active = !0, !0 } deactivate() { return this.active = !1, this.setMonitorActiveStatus(this.MONITOR_INACTIVE), !0 } isActive() { return this.active } isPortalInfoAvailable() { return this.portalInfoAvailable } getPortalInfo() { return this.portalInfo } managePortalInfo(i, e) { if (!this.active) return; let o; i && (e && i.portalInfo ? o = i.portalInfo : i.data && i.data.data && i.data.data.portalInfo && (o = i.data.data.portalInfo)), o || (o = {}), null == o.statusCode && (o.statusCode = -1), o.statusMessage || (o.statusMessage = "Result unknown. Unable to receive Portal Info from server", o.isProtected = !1), this.portalInfo = o, this.portalInfoAvailable = !0 } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GeolocationTrackingService = (() => { class s { constructor(i) { this.trackingService = i } trackPosition(i, e, o) { this.trackingService.triggerEvent("Event.Tracking", { "component.CategoryEvent": "US_NJ_GEOAPP", "component.LabelEvent": i, "component.ActionEvent": e, "component.PositionEvent": o, "component.LocationEvent": "not_applicable", "component.EventDetails": "not_applicable", "component.URLClicked": "not_applicable" }) } track(i, e, o) { this.trackingService.triggerEvent("Event.Tracking", o ? { "component.CategoryEvent": "US_NJ_GEOAPP", "component.LabelEvent": i, "component.ActionEvent": e, "component.PositionEvent": "not_applicable", "component.LocationEvent": o, "component.EventDetails": "not_applicable", "component.URLClicked": "not_applicable" } : { "component.CategoryEvent": "US_NJ_GEOAPP", "component.LabelEvent": i, "component.ActionEvent": e, "component.PositionEvent": "not_applicable", "component.LocationEvent": "not_applicable", "component.EventDetails": "not_applicable", "component.URLClicked": "not_applicable" }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GeolocationInstallerComponent = (() => { class s { constructor(i, e, o, r, c, d, f, y, M, T) { this.dialogRef = i, this.geolocationCoordinatorService = e, this._domSanitizer = o, this.additionalInfo = r, this._geolocationTrackingService = c, this.configProviderService = d, this.navigationService = f, this.casinoManager = y, this.m2Page = M, this.route = T, this.showLoader = !1 } get geoComplyMessage() { return this.configProviderService.provideDownloadAppFromDeviceConfig().geoComplyMessage } get appDownloadLink() { return this._domSanitizer.bypassSecurityTrustUrl(/(iPad|iPhone|iPod)/g.test(navigator.userAgent) ? "javascript:void(0)" : /(Android)/g.test(navigator.userAgent) ? this.getGlobalConfig().messages.AndroidAppDownloadLink : "") } get continueButtonText() { return this.getGlobalConfig().messages.GeoComplyContinueButtonText } get continuePlayOnAppInstructionText() { return this.getGlobalConfig().messages.ContinuePlayOnAppInstructionText || "Continue play on our app, with automatic geolocation" } get continuePlayOnAppUserActionText() { return this.getGlobalConfig().messages.ContinuePlayOnAppUserActionText || "CONTINUE PLAY ON PLAYMGM APP" } get continuePlayOnWebInstructionText() { return this.getGlobalConfig().messages.ContinuePlayOnWebInstructionText || "To play on web, Geoguard needs to be installed and running on your device" } get oobeeInstallerDownloadUserActionText() { return this.getGlobalConfig().messages.OobeeInstallerDownloadUserActionText || "INSTALL OR OPEN GEOGUARD" } get oobeeInstallerContinueUserActionText() { return this.getGlobalConfig().messages.OobeeInstallerContinueUserActionText || "GEOGUARD IS INSTALLED AND RUNNING" } get downloadButtonText() { return this.getGlobalConfig().messages.GeoComplyDownloadButtonText } get geocomplyText() { return this.getGlobalConfig().messages.GeoComplyText } get geocomplyTitle() { return this.getGlobalConfig().messages.GeoComplyTitle } get geoguardEnquiryUserActionText() { return this.getGlobalConfig().messages.GeoguardEnquiryUserActionText || "WHAT IS GEOGUARD?" } get oobeeInstallerDownloadStepText() { return this.getGlobalConfig().messages.OobeeInstallerDownloadStepText || "Step 1" } get oobeeInstallerContinueStepText() { return this.getGlobalConfig().messages.OobeeInstallerContinueStepText || "Step 2" } get geolocationMobileInstallerTitle() { return this.getGlobalConfig().messages.GeolocationMobileInstallerTitle || "LOCATION" } get isMobileInstaller() { return this.data && this.data.isMobileInstaller ? this.data && this.data.isMobileInstaller : this.additionalInfo && this.additionalInfo.isMobileInstaller } get oobeeInstallerHeadingText() { return this.getGlobalConfig().messages.OobeeInstallerHeadingText || "Want to continue playing?" } get oobeeInstallerHeadingInstruction() { return this.getGlobalConfig().messages.OobeeInstallerHeadingInstruction || "Before you launch a game we are required by law to confirm your location." } get playOnAppOrWebPlayerOptionsSeparatorText() { return this.getGlobalConfig().messages.PlayOnAppOrWebPlayerOptionsSeparatorText || "OR" } get geoGuardDescriptionText() { return this.getGlobalConfig().messages.GeoGuardDescriptionText || "GeoGuard, a trusted 3rd party partner, allows you to obtain location data from your Android device. One time only install, launch every time you want to place a bet on web" } continue() { this.showLoader = !0, this.isMobileInstaller && this._geolocationTrackingService.track("GeoLoc_Pop-up how to", "Step 2 - Geoguard is Intalled and running - CTA Clicked"), this.geolocationCoordinatorService.initialize({ showPLCPopup: !0 }) } download() { if (this.isMobileInstaller) return this._geolocationTrackingService.track("GeoLoc_Pop-up how to", "Step 1 - install or Open GeoGuard - CTA Clicked"), this.data && this.data.downloadUrl ? void window.open(this.data && this.data.downloadUrl || "", "_blank") : void window.open(this.additionalInfo && this.additionalInfo.downloadUrl || "", "_blank"); this.data && this.data.downloadUrl ? window.open(this.data && this.data.downloadUrl || "", "_self") : window.open(this.additionalInfo && this.additionalInfo.downloadUrl || "", "_self") } close() { var i, e, o, r, c, d, f, y, M, T, P, G, x, R, J, W, Q, Z, N, ae, re, ce, _e, le, be, xe, De, Oe, ge, Se, Te, Le, Pe, V, ne, k; if (this.isMobileInstaller && this._geolocationTrackingService.track("GeoLoc_Pop-up how to", "Pop-up_Close"), this.dialogRef && this.dialogRef.close(), this.navigationService.location.search.has("specialproduct") && "globalsearch" === this.navigationService.location.search.get("specialproduct")) { let $ = this.navigationService.location.search.has("returnurl") ? this.navigationService.location.search.get("returnurl") : this.navigationService.goToLastKnownProduct(); $ && this.navigationService.goTo($) } else if ((null === (r = null === (o = null === (e = null === (i = this.route) || void 0 === i ? void 0 : i.snapshot._routerState) || void 0 === e ? void 0 : e.url) || void 0 === o ? void 0 : o.toLowerCase()) || void 0 === r ? void 0 : r.indexOf("launchng")) >= 0) { let $ = (null === (f = null === (d = null === (c = this.route) || void 0 === c ? void 0 : c.snapshot) || void 0 === d ? void 0 : d.queryParamMap) || void 0 === f ? void 0 : f.get("returnUrl")) || (null === (T = null === (M = null === (y = this.route) || void 0 === y ? void 0 : y.snapshot) || void 0 === M ? void 0 : M.queryParamMap) || void 0 === T ? void 0 : T.get("returnurl")); if ($) null === (P = this.navigationService) || void 0 === P || P.goTo($); else { let ie = null === (G = this.casinoManager) || void 0 === G ? void 0 : G.getLobbyType(); null === (x = this.navigationService) || void 0 === x || x.goTo("/" + this.m2Page.lang + "/" + (null === (J = null === (R = this.casinoManager) || void 0 === R ? void 0 : R.getProductForLobbyType(ie)) || void 0 === J ? void 0 : J.toLowerCase())) } } else if ((null === (N = null === (Z = null === (Q = null === (W = this.route) || void 0 === W ? void 0 : W.snapshot._routerState) || void 0 === Q ? void 0 : Q.url) || void 0 === Z ? void 0 : Z.toLowerCase()) || void 0 === N ? void 0 : N.indexOf("forcedgamelaunch")) >= 0) { let $ = (null === (ce = null === (re = null === (ae = this.route) || void 0 === ae ? void 0 : ae.snapshot) || void 0 === re ? void 0 : re.queryParamMap) || void 0 === ce ? void 0 : ce.get("originUrl")) || (null === (be = null === (le = null === (_e = this.route) || void 0 === _e ? void 0 : _e.snapshot) || void 0 === le ? void 0 : le.queryParamMap) || void 0 === be ? void 0 : be.get("originurl")) || (null === (Oe = null === (De = null === (xe = this.route) || void 0 === xe ? void 0 : xe.snapshot) || void 0 === De ? void 0 : De.queryParamMap) || void 0 === Oe ? void 0 : Oe.get("returnUrl")) || (null === (Te = null === (Se = null === (ge = this.route) || void 0 === ge ? void 0 : ge.snapshot) || void 0 === Se ? void 0 : Se.queryParamMap) || void 0 === Te ? void 0 : Te.get("returnurl")); if ($) null === (Le = this.navigationService) || void 0 === Le || Le.goTo($); else { let ie = null === (Pe = this.casinoManager) || void 0 === Pe ? void 0 : Pe.getLobbyType(); null === (V = this.navigationService) || void 0 === V || V.goTo("/" + this.m2Page.lang + "/" + (null === (k = null === (ne = this.casinoManager) || void 0 === ne ? void 0 : ne.getProductForLobbyType(ie)) || void 0 === k ? void 0 : k.toLowerCase())) } } } appDownloaderClicked() { let i = "", e = this.getGlobalConfig().messages.AndroidAppID ? this.getGlobalConfig().messages.AndroidAppID : ""; /(iPad|iPhone|iPod)/g.test(navigator.userAgent) && (i = this.getGlobalConfig().messages.iOSAppDownloadLink, e = this.getGlobalConfig().messages.iOSAppID ? this.getGlobalConfig().messages.iOSAppID : ""), this._geolocationTrackingService.trackPosition("GeoLoc_Pop-up how to", "Continue to play on an APP_ CTA Clicked", e), i && window.open(i, "_blank") } hideLoader() { this.showLoader = !1 } info() { this.isMobileInstaller && this._geolocationTrackingService.track("GeoLoc_Pop-up how to", "InfoTool - What is Geoguard - CTA Clicked") } ngAfterViewInit() { this._geolocationTrackingService.track("GeoLoc_Pop-up how to", "Pop-up_Loaded") } getGlobalConfig() { return this.configProviderService.provideGlobalConfig() } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(GeolocationCoordinatorService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_19__.H7), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(GeolocationTrackingService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.T3C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_router__WEBPACK_IMPORTED_MODULE_8__.gz)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-geolocation-installer"]], inputs: { data: "data" }, decls: 4, vars: 3, consts: [["id", "casino-geolocation-installer-container", 1, "casino-geolocation-installer-container"], ["id", "geolocation-desktop-installer", "class", "geolocation-desktop-installer geo-location-popup-container", 4, "ngIf"], ["id", "geolocation-mobile-installer", "class", "geolocation-mobile-installer casino-modal", 4, "ngIf"], ["class", "loading", 4, "ngIf"], ["id", "geolocation-desktop-installer", 1, "geolocation-desktop-installer", "geo-location-popup-container"], [1, "geo-title-heading"], ["mat-dialog-title", "", 1, "geo-title", 3, "textContent"], ["id", "dialogclosebutton", 1, "theme-ex", "dialogclosebutton", 3, "click"], ["mat-dialog-content", "", 1, "geo-content", 3, "vnDynamicHtml"], ["mat-dialog-actions", "", 1, "geo-buttons"], ["mat-button", "", 1, "geo-left-button", 3, "textContent", "click"], ["mat-button", "", "cdkFocusInitial", "", 1, "geo-right-button", 3, "textContent", "click"], ["id", "geolocation-mobile-installer", 1, "geolocation-mobile-installer", "casino-modal"], [1, "geolocation-mobile-installer-title-heading"], ["mat-dialog-title", "", 1, "geolocation-mobile-installer-title", 3, "textContent"], [1, "container-overlay"], [1, "theme-location-pin"], [1, "container-overlay-header"], [3, "textContent"], [1, "header-text", 3, "textContent"], [1, "clearfix"], ["id", "appDownloaderLink", "target", "_blank", 1, "btn", "btn-primary", 3, "href", "textContent", "click"], [1, "container-overlay-break"], [1, "or-container", 3, "textContent"], [1, "p-text-middle", 3, "textContent"], [1, "oobeeInstallerUserActionsContainer"], ["id", "oobeeInstallerDownloadContainer", 1, "oobeeInstallerDownloadContainer"], ["id", "oobeeInstallerDownloadStepText", 1, "oobeeInstallerDownloadStepText", 3, "textContent"], ["id", "btn-download", 1, "oobeeInstallerDownloadUserActionButton", "btn", "btn-secondary", 3, "textContent", "click"], ["id", "oobeeInstallerContinueContainer", 1, "oobeeInstallerContinueContainer"], ["id", "oobeeInstallerContinueStepText", 1, "oobeeInstallerContinueStepText", 3, "textContent"], ["id", "btn-continue", 1, "oobeeInstallerContinueUserActionButton", "btn", "btn-primary", 3, "textContent", "click"], [1, "container-overlay-footer"], [1, "geoGuardEnquiryUserActionContainer"], [1, "ui-icon", "theme-info-i", 3, "popper", "click"], [1, "geoGuardEnquiryUserActionText", 3, "popper", "textContent", "click"], ["cssClass", "tooltip-info"], ["popper", ""], ["content", ""], [1, "loading"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(1, GeolocationInstallerComponent_div_1_Template, 8, 4, "div", 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, GeolocationInstallerComponent_div_2_Template, 33, 16, "div", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(3, GeolocationInstallerComponent_div_3_Template, 2, 0, "div", 3)), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !e.isMobileInstaller), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.isMobileInstaller), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.showLoader)) }, directives: [_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.MIT, _frontend_vanilla_features_popper__WEBPACK_IMPORTED_MODULE_25__.e, _angular_common__WEBPACK_IMPORTED_MODULE_15__.O5, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.uh, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.xY, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.gHj, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.H8, ngx_popper_ng10__WEBPACK_IMPORTED_MODULE_26__.Ml], encapsulation: 2 }), s })(), GeolocationInstallerDialogService = (() => { class s { constructor(i) { this.dialog = i, this._isDialogOpen = !1 } openDialog(i, e) { this.dialogRef = this.dialog.open(GeolocationInstallerComponent, { width: "250px", data: { downloadUrl: i, isMobileInstaller: e }, panelClass: "geo-location-installer" }), this._isDialogOpen = !0, this.dialogRef.afterClosed().subscribe(o => { console.info("The dialog was closed:", o), this._isDialogOpen = !1, this.onDialogClosed && this.onDialogClosed() }) } closeDialog() { this.dialogRef && this.dialogRef.close() } get isDialogOpen() { return this._isDialogOpen } hideLoader() { this.dialogRef && this.dialogRef.componentInstance && this.dialogRef.componentInstance.hideLoader() } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.uw)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GeolocationCheckService = (() => { class s { constructor(i, e, o) { this.geolocationCoordinatorService = i, this.geolocationInstallerService = e, this.casinoManager = o, this.geolocationInstallerService.onDialogClosed = this.onInstallerServiceDialogClosed.bind(this) } checkGeolocation(i, e) { this.geolocationCoordinatorService.onInitialized = o => { console.info("[GeolocationCheckService]", "GeolocationCoordinatorService::", "onInitialized::", o), "INITIALIZED" === o && this.closeDialogAndLaunchGame(i) }, this.geolocationCoordinatorService.onError = o => { if (console.error("[GeolocationCheckService]", "GeolocationCoordinatorService::", "onError::", o), o && -1111 == o.errorCode) return this.showGeolocationInstallerPopup(o && o.additionalInfo && o.additionalInfo.appDownloadUrl || this.geolocationCoordinatorService.appDownloadUrl, this.isMobileInstaller()), void e(); this.closeDialogAndLaunchGame(i) }, this.geolocationCoordinatorService.onUninitialized = () => { console.info("[GeolocationCheckService]", "GeolocationCoordinatorService::", "onUninitialized::") }, this.geolocationCoordinatorService.initialize({ showPLCPopup: !1 }) } closeDialogAndLaunchGame(i) { this.geolocationInstallerService.closeDialog(), i() } showGeolocationInstallerPopup(i, e) { this.geolocationInstallerService.hideLoader(), this.geolocationInstallerService.isDialogOpen || this.geolocationInstallerService.openDialog(i, e) } isMobileInstaller() { return this.casinoManager.isTouch() } onInstallerServiceDialogClosed() { this.onCheckClosed && this.onCheckClosed() } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GeolocationCoordinatorService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GeolocationInstallerDialogService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(); var ErrorTypes = (() => { return (s = ErrorTypes || (ErrorTypes = {})).APP_ERROR = "APPLICATION_ERROR", s.COMM_ERROR = "COMMUNICATION_ERROR", s.NETWORK_ERROR = "NETWORK_ERROR", s.DATA_ERROR = "DATA_ERROR", s.CONFIG_ERROR = "CONFIGURATION_ERROR", s.FATAL = "FATAL", ErrorTypes; var s })(), RetryType = (() => { return (s = RetryType || (RetryType = {}))[s.NonRetry = 0] = "NonRetry", s[s.Retry = 1] = "Retry", RetryType; var s })(), TriggerGeoLocationOption = (() => { return (s = TriggerGeoLocationOption || (TriggerGeoLocationOption = {})).EventName = "TRIGGER_GEO_LOCATION", s.Action = "fetchLocation", TriggerGeoLocationOption; var s })(), GeoLocationOptionFetchType = (() => { return (s = GeoLocationOptionFetchType || (GeoLocationOptionFetchType = {})).NativeCcb = "NATIVE_CCB", s.Gds = "GDS", GeoLocationOptionFetchType; var s })(); let GeoLocationErrorComponent = (() => { class s { constructor(i, e, o, r, c, d, f, y, M) { this.dialogRef = i, this.data = e, this.geoLocationValidationService = o, this.nativeAppService = r, this.configProviderService = c, this.navigator = d, this.casinoManager = f, this.m2Page = y, this.route = M, this.geoLocationErrorMessages = [], this.shouldRetryLocation = !1, this.errorMessages = [] } ngOnInit() { this.errorMessages = this.data.errorMessages, this.geolocationConfig = this.configProviderService.provideGeoLocationConfig(), this.checkGeoLocationError() } getGlobalConfig() { return this.configProviderService.provideGlobalConfig() } get geoComplyErrorHeader() { return this.getGlobalConfig().messages.GeoComplyErrorHeader || "We Cannot Place Your Bet" } get turnOnWiFiDescription() { return this.getGlobalConfig().messages.TurnOnWiFiDescription } get addressAboveItemsDescription() { return this.getGlobalConfig().messages.AddressAboveItemsDescription || "Please address the items above, then try  again" } get recheckLocation() { return this.getGlobalConfig().messages.RecheckLocation || "RECHECK LOCATION" } get ok() { return this.getGlobalConfig().messages.Ok || "OK" } get invalidLocation() { return this.getGlobalConfig().messages.InvalidLocation || "Ensure you are well within a permitted area to place your bet successfully" } close() { var i, e, o, r, c, d, f, y, M, T, P, G, x, R; if (this.dialogRef && this.dialogRef.close(), (null === (r = null === (o = null === (e = null === (i = this.route) || void 0 === i ? void 0 : i.snapshot._routerState) || void 0 === e ? void 0 : e.url) || void 0 === o ? void 0 : o.toLowerCase()) || void 0 === r ? void 0 : r.indexOf("launchng")) >= 0) { let J = (null === (f = null === (d = null === (c = this.route) || void 0 === c ? void 0 : c.snapshot) || void 0 === d ? void 0 : d.queryParamMap) || void 0 === f ? void 0 : f.get("returnUrl")) || (null === (T = null === (M = null === (y = this.route) || void 0 === y ? void 0 : y.snapshot) || void 0 === M ? void 0 : M.queryParamMap) || void 0 === T ? void 0 : T.get("returnurl")); if (J) null === (P = this.navigator) || void 0 === P || P.goTo(J); else { let W = null === (G = this.casinoManager) || void 0 === G ? void 0 : G.getLobbyType(); null === (x = this.navigator) || void 0 === x || x.goTo("/" + this.m2Page.lang + "/" + (null === (R = this.casinoManager) || void 0 === R ? void 0 : R.getProductForLobbyType(W).toLowerCase())) } } } reCheckLocation() { this.geolocationConfig.shouldCheckNativeGeoLocation ? this.fetchLocationDetailsfromNativeEvent() : this.geoLocationValidationService.reCheckLocationClicked.next(!0), this.close() } checkGeoLocationError() { var i; (null === (i = this.errorMessages) || void 0 === i ? void 0 : i.length) ? (this.geoLocationErrorMessages = [...this.errorMessages], this.shouldRetryLocation = this.geolocationConfig.isRetryButtonEnabled && this.errorMessages.some(e => e.retry === RetryType.Retry)) : this.geoLocationErrorMessages.push({ rule: "", retry: RetryType.NonRetry, message: this.invalidLocation }) } fetchLocationDetailsfromNativeEvent() { this.nativeAppService.sendToNative({ eventName: TriggerGeoLocationOption.EventName, parameters: { action: TriggerGeoLocationOption.Action } }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(GeoLocationValidationService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.rBu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.T3C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_router__WEBPACK_IMPORTED_MODULE_8__.gz)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-geo-location-error"]], decls: 17, vars: 6, consts: [[1, "geo-comply-error-validation-container"], [1, "main-header"], [1, "main-header-text"], [1, "btn-close", 3, "click"], [1, "theme-ex"], [1, "geo-comply-error-validation-body"], [1, "header-description"], [1, "description-text"], [1, "geo-error-list"], [4, "ngFor", "ngForOf"], [1, "address-error-info"], ["class", "btn btn-primary", 3, "click", 4, "ngIf"], [1, "btn", "btn-primary", 3, "click"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 0)(1, "div", 1)(2, "div", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(4, "div", 3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("click", function () { return e.close() }), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(5, "i", 4), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(6, "div", 5)(7, "div", 6), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(8), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(9, "div", 7)(10, "ul", 8), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(11, GeoLocationErrorComponent_li_11_Template, 2, 1, "li", 9), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(12, "div", 10), _angular_core__WEBPACK_IMPORTED_MODULE_3__._uU(13), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(14, "div"), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(15, GeoLocationErrorComponent_button_15_Template, 2, 1, "button", 11), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(16, GeoLocationErrorComponent_button_16_Template, 2, 1, "button", 11), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()()), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(e.geoComplyErrorHeader), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(e.turnOnWiFiDescription), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngForOf", e.geoLocationErrorMessages), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Oqu(e.addressAboveItemsDescription), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.shouldRetryLocation), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", !e.shouldRetryLocation)) }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_15__.sg, _angular_common__WEBPACK_IMPORTED_MODULE_15__.O5], encapsulation: 2 }), s })(), GeoLocationValidationService = (() => { class s { constructor(i, e, o, r, c, d) { this.apiService = i, this.timerService = e, this.dialog = o, this.configProviderService = r, this.geolocationCoordinatorService = c, this.user = d, this.reCheckLocationClicked = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.reCheckLocationClickedObservable = this.reCheckLocationClicked.asObservable() } validateLocation(i) { this.geolocationConfig = this.configProviderService.provideGeoLocationConfig(), this.isLocationFetchTimeOut = !1, this.isLocationFetched = !1, this.resetTimerAndRefetchLocation = !1, this.errorResponse = {}, this.gdsApiInterval = this.geolocationConfig.initialRetryInterval, this.getLocationDetailsfromGDS(i), this.startTimer(i) } startTimer(i) { this.clearTimer(), this.resetTimer = this.timerService.setTimeout(() => { if (this.isLocationFetchTimeOut = !0, !this.isLocationFetched) return this.showGeoLocationError(), void i(!0) }, this.gdsApiInterval) } getLocationDetailsfromGDS(i) { this.isLocationFetchTimeOut || this.apiService.post(this.geolocationConfig.gdsUrl, "ssoKey=" + this.user.ssoToken).subscribe(e => { var o, r; let c = e; if (null == c ? void 0 : c.isLocationAvailable) { if ("VALID_LOCATION" === (null == c ? void 0 : c.locationStatus) && 0 === (null == c ? void 0 : c.errorCode)) return this.isLocationFetched = !0, void i(!1); const d = this.geolocationConfig.isRetryButtonEnabled && (null === (r = null === (o = null == c ? void 0 : c.troubleShooterMessages) || void 0 === o ? void 0 : o.tsMsgs) || void 0 === r ? void 0 : r.find(f => f.retry === RetryType.Retry)); if (this.errorResponse = c, !d) return this.clearTimer(), this.showGeoLocationError(), void i(!0); this.isLocationFetched = !1, this.refetchLocationOnRetryableErrorCodes(i), this.refetchGdsApi(i) } else this.errorResponse = c, this.refetchGdsApi(i) }) } refetchLocationOnRetryableErrorCodes(i) { this.resetTimerAndRefetchLocation || (this.isLocationFetchTimeOut = !1, this.gdsApiInterval = this.geolocationConfig.retryInterval, this.resetTimerAndRefetchLocation = !0, this.startTimer(i)) } clearTimer() { this.resetTimer && this.timerService.clearTimeout(this.resetTimer) } refetchGdsApi(i) { this.timerService.setTimeout(() => { this.getLocationDetailsfromGDS(i) }, 1e3) } showGeoLocationError() { var i, e; let o = null === (e = null === (i = this.errorResponse) || void 0 === i ? void 0 : i.troubleShooterMessages) || void 0 === e ? void 0 : e.tsMsgs; this.dialogRef = this.dialog.open(GeoLocationErrorComponent, { data: { errorMessages: o }, disableClose: !0, panelClass: "geo-comply-error-dialog" }) } assignToCoordinatorService() { this.geolocationCoordinatorService.onError = void 0, this.geolocationCoordinatorService.onInitialized = void 0 } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_common_http__WEBPACK_IMPORTED_MODULE_27__.eN), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.fWh), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.uw), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GeolocationCoordinatorService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CasinoCoreGamelaunchService = (() => { class s { constructor(i, e, o, r, c, d, f, y, M, T, P, G, x, R, J, W, Q, Z, N, ae, re, ce, _e, le, be, xe, De, Oe, ge, Se, Te, Le, Pe, V, ne, k, $, ie, ve, Me, de) { this.configProviderService = i, this.claimsConfig = e, this.m2NativeApp = o, this.user = r, this.messageQueue = c, this.casinoLobbyService = d, this.api = f, this.navigation = y, this.casinoWidgetService = M, this.route = T, this.gameLaunchPlaces = P, this.productHomepagesConfig = G, this.liveDealerService = x, this.navigator = R, this.cookies = J, this.nativeApiService = W, this.vCClientService = Q, this.nativeAppHelperService = Z, this.monitorService = N, this.casinoIFrameOverlayService = ae, this.geolocationCheckService = re, this.loginDialog = ce, this.casinoManager = _e, this.dialog = le, this.cacheManagerService = be, this.advanceGameDataService = xe, this.gameLaunchUrlFormationService = De, this.urlUtility = Oe, this.tracking = ge, this.unfinishedGamesService = Se, this.favouriteService = Te, this.invokerProductService = Le, this.geolocationActivator = Pe, this.slotRacesService = V, this.router = ne, this.apiPathsHelperService = k, this.loadingIndicatorService = $, this.casinoNpmParamsService = ie, this.geoLocationValidation = ve, this.appInfoConfig = Me, this.page = de, this.aamsBehaviorSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.aamsObservable = this.aamsBehaviorSubject.asObservable(), this.iframeUrlBehaviourSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.iframeUrlObservable = this.iframeUrlBehaviourSubject.asObservable(), this.updateFreespinsSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.updateFreespinsObs = this.updateFreespinsSubject.asObservable(), this.gameDetailPageSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.gameDetailPageObservable = this.gameDetailPageSubject.asObservable() } launchGame(i, e) { let o = this.configProviderService.provideGameConfig(); if (this.gameNotAvailableTimeOutData = o.gameNotAvailableTimeOut, this.gameNotAvailableTimeOutData && this.gameNotAvailableTimeOutData[0] && (this.delayAfterRefreshInterval = this.gameNotAvailableTimeOutData[0].delayAfterRefresh, this.millisecondsToDisplayInterval = this.gameNotAvailableTimeOutData[0].millisecondsToDisplay), o.enableSpinnerOnGameLaunch && this.user.isAuthenticated) { if (this._gameLaunchInProgress) return; this._gameLaunchInProgress = !0, i.loadingIndicatorHandler = this.loadingIndicatorService.start() } this.messageQueue.clear(), this.isTouch = i.isTouch, this.gameObj = i.game, this.gameObj.returnUrl = i.returnUrl, this.customRecommendationType = i.recommendationType; let r = this.configProviderService.provideFeaturesConfig(), c = this.configProviderService.provideAdvanceGameDataConfig(), d = this.configProviderService.provideMcPageConfig(); i.mode = i.isDemoLaunch ? "play" : o.gameMode, i.gameSection || (i.gameSection = void 0 !== i.gameLaunchedFrom ? i.gameLaunchedFrom : i.categoryType), i.game.isDemo = i.isDemoLaunch; let f = i; if (i.gridPosition = this.calculateGridPosition(i), c.enableAdvanceGameData) { let T = i.game.iconType, P = this.advanceGameDataService.getAdvanceCategoryInfo(i); this.advanceGameDataService.createAdvanceGameModel(P.parentCategoryId, P.subCategoryId, i.gamePosition, T, null == P.rowNumber ? i.gridPosition : P.rowNumber) } if (this.gameLaunchTracking(i), this.user.isAuthenticated && "in-shop" == this.claimsConfig.get("accBusinessPhase") && r.enableAccountUpgrade) return void this.navigation.goTo(d.accountUpgrade); if (this.vCClientService.isPokerVC()) return this.vCClientService.handleVCGameLaunch(i, !0, e), void this.onGameLaunchDone(i); if (o.nativeGameLaunchEnabled) { let T = this.getParams(i); return void this.nativeAppHelperService.handleNativeGameLaunch(T, i, e) } if (!this.checkGameInGameMetaData(i.game.gameId) && this.user.isAuthenticated && !i.skipMetaDataCheck) return void this.gameNotFoundAction(i, e); let y = this.casinoLobbyService.getDisabledGames(); y && y.forEach(T => { T.toLowerCase() == i.game.gameId.toLowerCase() && this.user.isAuthenticated && this.gameNotFoundAction(i, e) }); let M = this.getPlayUrl(i); if (this.user.isAuthenticated) if (this.slotRacesService.liveSlotPollingStarted && this.slotRacesService.stopLiveSlotPolling(), i.isTouch) if (this.casinoWidgetService.isCasinoWidget()) { let T = { promptLogin: !1, redirectUrl: M += "&returnUrl=" + document.referrer, categoryid: "rcp-widget" }; this.casinoWidgetService.postMessageToParent("GameLaunch", T) } else { let T = this.configProviderService.provideDownloadAppFromDeviceConfig(); T && T.downloadAppFromDevice ? this.goToPlayGame(i, e) : this.checkGeolocationAndLaunchMobileGame(() => { this.goToPlayGame(i, e) }, () => { i.loadingIndicatorHandler && (i.loadingIndicatorHandler.done(), this._gameLaunchInProgress = !1) }) } else this.casinoWidgetService.isCasinoWidget() && (M += "&returnUrl=" + document.referrer), this.checkGeolocationAndLaunchDesktopGame(i, M, e); else if (this.casinoWidgetService.isCasinoWidget() || this.casinoIFrameOverlayService.isOverLayOnAProduct()) M += "&returnUrl=" + document.referrer, this.casinoWidgetService.postMessageToParent("UserAction", { promptLogin: !0, redirectUrl: M, loginMessageKey: "GameLaunch" }); else { let T = this.getPlayUrl(i), P = this.casinoWidgetService.getWidgetProduct(); (!P || "casino" == P.toLowerCase()) && (T = this.appendQueryString(T, "skipreferrer", "true")); let G = { loginMessageKey: "GameLaunch" }, x = { lobbyType: i.game.lobbyType, gameLaunchParam: f, timeStamp: (new Date).getTime() }; "playRedirect" != i.gameLaunchedFrom && this.cacheManagerService.writeForceGameLaunchObjInSessionStorage("CasinoCoreForceGameObj", x), i.appendRUrlToLoginDialogWindow && (G.returnUrl = i.returnUrl), "playRedirect" == i.gameLaunchedFrom && (G.loginCloseUrl = i.returnUrl, this.loginDialog.open(G)), "globalsearch" != i.gameLaunchedFrom && this.loginDialog.open(G), "globalsearch" == i.gameLaunchedFrom && (G.loginCloseUrl = i.returnUrl, this.loginDialog.open(G)) } } getLaunchData(i) { let e = this.configProviderService.provideApiPathsConfig(), o = this.apiPathsHelperService.transformApi(e.gameData.gameLaunchDataOfProduct, this.invokerProductService.getInvokerProduct()), r = this.urlUtility.getApiurl(o); return this.api.get(r, i, { withCredentials: !0 }) } getParams(i) { let e = this.casinoManager.getGameHomeUrl(), o = this.casinoNpmParamsService.getcasinoCoreNpmParams(); e || (e = i.returnUrl), e || (e = window.location.href); let r = this.configProviderService.provideGameConfig(); return i.skipUnfinGame || (i.skipUnfinGame = !0), i.mode || (i.mode = r.gameMode), { gameId: i.game.gameId, mode: i.mode, demo: i.isDemoLaunch, launchProductId: this.navigation.location.search.get("launchProductId"), launchOrigin: this.navigation.location.search.get("launchOrigin"), skipUnfinGame: i.skipUnfinGame, gameHomeUrl: encodeURIComponent(e), isLiveGames: i.isLive, skipMetaDataCheck: i.skipMetaDataCheck, fetchLiveGameIFrame: i.fetchLiveGameIFrame, customLobbyTypeMap: o.customLobbyTypeMaps ? [...new Set(o.customLobbyTypeMaps.map(c => c.lobbyType))] : null } } checkGameInGameMetaData(i) { return !!this.casinoLobbyService.getGameInfo(i) } getPlayUrl(i) { let e = this.configProviderService.provideGameConfig(), o = this.configProviderService.provideGlobalJackpotConfig(); i.mode || (i.mode = e.gameMode); let r = this.casinoManager.getProductForLobbyType(i.game.lobbyType); i.specialProduct && (r = i.specialProduct), r || (r = "games"); let c = this.urlUtility.getApiBaseUrl() + "/" + r.toLowerCase(); if ("globaljackpot" == r.toLowerCase() && (c = this.productHomepagesConfig.casino + "/g/" + o.globalJackpotPathSegments.toLowerCase()), c += "/launchng/" + i.game.gameId, this.casinoWidgetService.isCasinoWidget() || this.route.snapshot.queryParamMap.get("widgetGameLaunch")) { let d = new Map; d.set("widgetGameLaunch", "true"), d.set("invokerProduct", this.casinoWidgetService.getWidgetProduct()), d.set("widgetPostion", this.casinoWidgetService.getWidgetPosition()), d.set("launchCategory", i.categoryType), c = this.appendQueryStringMap(c, d) } return i.isDemoLaunch ? c = this.appendQueryString(c, "demo", "true") : i.mode && (c = this.appendQueryString(c, "mode", i.mode)), i.from && (c = this.appendQueryString(c, "place", i.from), (i.from === this.gameLaunchPlaces.gameIconOnLobby || i.from === this.gameLaunchPlaces.gameTitleOnLobby || i.from === this.gameLaunchPlaces.gameInfoIconOnLobby) && (c = this.appendQueryString(c, "gameLaunchCategory", i.categoryType)), i.gamePosition && (c = this.appendQueryString(c, "gamePosition", i.gamePosition.toString()))), c } goToPlayGame(i, e) { let o = this.configProviderService.provideFeaturesConfig(), r = this.configProviderService.provideDownloadAppFromDeviceConfig(), d = (this.configProviderService.provideGlobalConfig(), this.configProviderService.provideMcPageConfig()), f = this.configProviderService.provideGameConfig(); if (this.casinoManager.isTouch(), r && r.downloadAppFromDevice && this.user.isAuthenticated && this.user.isAuthenticated) { let M = r.downloadAppErrorMsgs; this.messageQueue.clear(), this.messageQueue.add({ html: M, type: "Information", lifetime: "Single", scope: "casinocorelobby" }), this.onGameLaunchDone(i) } else { if (this.casinoLobbyService.isGameInCategory(i.game, ConstService.LIVE_DEALER_GAMES_CATEGORY_ID) && !this.liveDealerService.isOpen()) return void this.navigator.navigate(d.prefix + "/" + ConstService.LIVE_DEALER_GAMES_CATEGORY_ID, { appendReferrer: !1 }); if (i.isNewSportsNative = this.m2NativeApp.isNativeApp && ("SPORTSBOOK" === this.m2NativeApp.product || "BETTING" === this.m2NativeApp.product) && ("true" === this.cookies.get("useNewOpenGames") || "true" === this.navigation.location.search.get("useNewOpenGames")), i.isNewSportsNative && o.isAnonymousLobbyEnabled && !this.user.isAuthenticated) return void (this.casinoManager.gameEventId = this.nativeApiService.raiseOpenGameEvent(this.casinoManager.gameEventId, void 0, i.game.gameId, !1)); let M = i.from === this.gameLaunchPlaces.gameIconOnLobby || i.from === this.gameLaunchPlaces.searchOnLobby || i.from === this.gameLaunchPlaces.gameTitleOnLobby || "q" === i.from || "s" === i.from || i.from === this.gameLaunchPlaces.teaser; if (M && i.game.lobbyType && (i.game = this.checkforGameDetailVisible(i.game)), M && i.game.ForceDetailPage || M && i.game.EnableDetailPage) { if (i.isNewSportsNative && (this.casinoManager.gameEventId = this.nativeApiService.raiseOpenGameEvent(this.casinoManager.gameEventId, encodeURIComponent(this.navigator.detailPage(i.game.gameId)), i.game.gameId, this.user.isAuthenticated)), i.isNewSportsNative) this.casinoManager.gameEventId = this.nativeApiService.raiseOpenGameEvent(this.casinoManager.gameEventId, encodeURIComponent(this.navigator.detailPage(i.game.gameId)), i.game.gameId, this.user.isAuthenticated); else { let G = { game: i }; this.dialog.open(GameDetailComponent, { data: G }), this.gameDetailPageSubject.next(G) } return } this.messageQueue.clear({ clearPersistent: !0 }); let P = this.getParams(i); this.getLaunchData(P).subscribe(G => { if (this.onGameLaunchDone(i), G.data && G.data.aams) this.aamsBehaviorSubject.next({ sessionId: G.data.aams.sessionId, participantId: G.data.aams.participantId, game: i.game, replaceRouteInHistory: i.replaceRouteInHistory, isNewSportsNative: i.isNewSportsNative, place: i.from, response: G }); else { let x = this.gameLaunchUrlFormationService.launchMGSGame(G, i); G.redirect = x, this.iframeUrlBehaviourSubject.next(x), this.launchGameFromResponse(G, i, e) } f.storeSsotokenInCookies && this.cookies.put("ssoToken", this.user.ssoToken, { domain: this.page.domain }) }, G => { this.onGameLaunchDone(i), this.handleGameLaunchError(G, i, e) }) } } onGameLaunchDone(i) { this.configProviderService.provideGameConfig().enableSpinnerOnGameLaunch && i.loadingIndicatorHandler && this._gameLaunchInProgress && (i.loadingIndicatorHandler.done(), this._gameLaunchInProgress = !1) } getDesktopGameLaunchUrl(i, e) { let o = this.getParams(i); this.getLaunchData(o).subscribe(r => { if (r.data && r.data.aams) this.aamsBehaviorSubject.next({ sessionId: r.data.aams.sessionId, participantId: r.data.aams.participantId, game: i.game, replaceRouteInHistory: i.replaceRouteInHistory, isNewSportsNative: i.isNewSportsNative, place: i.from, response: r }); else { let d = { iframeUrl: this.gameLaunchUrlFormationService.launchMGSGame(r, i) }; e(d) } }, r => { this.handleGameLaunchError(r, i) }) } appendQueryString(i, e, o) { return i.indexOf("?") > -1 ? i += "&" + e + "=" + o : i += "?" + e + "=" + o, i } appendQueryStringMap(i, e) { return e && e.size > 0 && e.forEach((o, r) => { i.indexOf("?") > -1 ? i += "&" + r + "=" + o : i += "?" + r + "=" + o }), i } validateUser(i, e) { let o = this.configProviderService.provideMcPageConfig(); if (!this.user.isAuthenticated) return this.loginDialog.open({ returnUrl: i, loginMessageKey: "GameLaunch" }), !1; let r = new Date(this.user.dateOfBirth), c = o.minAgeValidationCasinoPlay; if (c > 0) { let d = new Date, f = !0; d.setFullYear(d.getFullYear() - c); let y = { replace: e }; if (d < r) return 18 === c && this.navigator.publicPage("18plus", y, f), 21 === c && this.navigator.publicPage("18_21plus", y, f), !1 } return !0 } checkforGameDetailVisible(i) { let e = this.configProviderService.provideGameConfig(), o = this.configProviderService.provideCasinoConfig(), r = i.lobbyType; if (i && (!i.provider || "" === i.provider)) { let M = this.casinoLobbyService.getGameInfo(i.gameId); M && (i.provider = M.provider) } let c = this.casinoManager.IsFeatureEnabledforLobbytype(r, o.detailPageModeLobbyType), d = this.casinoManager.IsFeatureEnabledforLobbytype(r, e.vendorsWithOnlyRealModeLobbyType), f = e.enableDemoMode, y = this.casinoManager.IsFeatureEnabledforLobbytype(r, e.showRGLinkOnDetailPageLobbyType); if (c == ConstService.DETAIL_PAGE_MODE_PICKER || c == ConstService.DETAIL_PAGE_MODE_FORCEPICKER) !e.enablePlaytechLiveGameDetailsPage && d.indexOf(i.provider) > -1 && !i.gameId.startsWith("ivy") || "Playtech" == i.provider && i.gameId.startsWith("playtechlive") ? (i.EnableDetailPage = !1, i.ForceDetailPage = !1) : (i.EnableDetailPage = !0, i.ForceDetailPage = !0); else { let M = c == ConstService.DETAIL_PAGE_MODE_FORCE, T = c == ConstService.DETAIL_PAGE_MODE_ALL || M; !e.enablePlaytechLiveGameDetailsPage && d.indexOf(i.provider) > -1 && !i.gameId.startsWith("ivy") || "Playtech" == i.provider && i.gameId.startsWith("playtechlive") ? (i.EnableDetailPage = !1, i.ForceDetailPage = !1) : (i.EnableDetailPage = T, i.ForceDetailPage = M) } if (f && (!(d.indexOf(i.provider) > -1) || i.gameId.startsWith("ivy")) && (i.DemoEnabled = !0, i.DemoAvailable = !0, y && y.length > 0)) { let M = y.filter(T => T === i.provider); M && M[0] && (i.ResponsibleGamingLink = e.responsibleGamingLink) } return i } launchGameFromResponse(i, e, o) { this.monitorService.managePortalInfo(i, !0), !1 === this.monitorService.isActive() ? this.proceed(i, e, o) : this.monitorService.monitorActiveObservable.subscribe(r => { r && r === this.monitorService.MONITOR_INACTIVE && this.proceed(i, e, o) }) } proceed(i, e, o) { if (e.isNewSportsNative && this.gameLaunchPlaces.isLobby(e.from)) this.casinoManager.gameEventId = this.nativeApiService.raiseOpenGameEvent(this.casinoManager.gameEventId, encodeURIComponent(i.redirect), e.game.gameId, this.user.isAuthenticated); else { let r = { replace: e.replaceRouteInHistory, forceReload: !0 }; if ("thumbnail" == e.from && e.lobbyType && this.cacheManagerService.setThumbnailLocalStorageCacheMap(e.lobbyType, e.game.gameId), o) o({ isError: !1, errorMessage: "", gameLaunchUrl: i.redirect }); else if (this.isTouch) this.navigator.navigate(i.redirect, r, !0, 0); else if (this.configProviderService.provideFeaturesConfig().enableNewEmbeddedViewIconsPosition) if (this.getFromCookie("gamePopOutWindow")) { let y = this.configProviderService.provideGlobalConfig().messages.OnlyOneGameAtTime; this.messageQueue.addError(y, "Single", "casinocorelobby"), setTimeout(() => { this.messageQueue.clear() }, 5e3) } else this.openEmbeddedGameDailog({ iframeUrl: i.redirect, game: this.gameObj, categoryType: e.categoryType }); else this.openEmbeddedGameDailog({ iframeUrl: i.redirect, game: this.gameObj, categoryType: e.categoryType }) } } getFromCookie(i) { return "1" === this.cookies.get(i) } openEmbeddedGameDailog(i = null) { this.dialog.open(EmbeddedGamePopupComponent, { width: "790px", height: "779px", data: i }).afterClosed().subscribe(() => { this.updateFreespinsSubject.next(!0) }) } checkGeolocationAndLaunchDesktopGame(i, e, o) { this.configProviderService.provideGeoLocationConfig().isEnabled ? this.geolocationCheckService.checkGeolocation(() => { this.launchDesktopGame(i, e, o) }, () => { i.loadingIndicatorHandler && (i.loadingIndicatorHandler.done(), this._gameLaunchInProgress = !1) }) : this.launchDesktopGame(i, e, o) } handleGameLaunchError(i, e, o) { if (this.configProviderService.provideCasinoConfig(), i) { let c = []; if (i.common && i.common.messages && (c = i.common.messages), i.redirect) if (this.m2NativeApp.isNativeApp && this.gameLaunchPlaces.isLobby(e.from)) this.casinoManager.gameEventId = this.nativeApiService.raiseOpenGameEvent(this.casinoManager.gameEventId, encodeURIComponent(i.redirect), e.game.gameId, this.user.isAuthenticated), this.casinoIFrameOverlayService.isOverLayOnAProduct() && window.parent.postMessage({ eventName: "UserAction", params: { redirectUrl: i.redirect } }, "*"); else { let f = { replace: e.replaceRouteInHistory }; if (this.casinoIFrameOverlayService.isOverLayOnAProduct()) window.parent.postMessage({ eventName: "UserAction", params: { redirectUrl: i.redirect } }, "*"); else if (i.portalInfo && 101 == i.portalInfo.statusCode) { let y = { lobbyType: e.game.lobbyType, gameLaunchParam: e, timeStamp: (new Date).getTime() }; e.fetchLiveGameIFrame || this.cacheManagerService.writeForceGameLaunchObjInSessionStorage("CasinoCoreScreenNameGameObj", y); let M = this.addClickTimeStamp(decodeURIComponent(i.redirect), e); this.navigator.navigate(M, f, !0, -1, c) } else this.gameLaunchRedirectErrorAction(c, o), this.navigator.navigate(decodeURIComponent(i.redirect), f, !0, -1, c) } else this.gameLaunchRedirectErrorAction(c, o) } } launchDesktopGame(i, e, o) { this.casinoWidgetService.isCasinoWidget() ? this.casinoWidgetService.postMessageToParent("GameLaunch", { promptLogin: !1, redirectUrl: e, categoryid: "rcp-widget" }) : this.goToPlayGame(i, o) } getGameLunchType(i) { let o, e = this.casinoLobbyService.getGameMetaData(); if (e && e.size > 0) { let r = e.get(i); if (r) return o = r.provider, o } return null } getProductForLobbyType(i) { let e = this.appInfoConfig.product; return i && "casino" == e.toLowerCase() && (e = this.casinoLobbyService.getProductForGivenLobbyType(i), "games" == e.toLowerCase() && (e = "casino")), e.toUpperCase() } gameLaunchTracking(i) { var e, o, r, c, d, f, y, M, T, P, G, x, R; let W, Q, Z, N, ae, J = this.casinoLobbyService.getCategoryInfo(i.game.lobbyType, i.categoryType), re = this.getProductForLobbyType(i.game.lobbyType); J && J.categoryInfo && (Q = J.categoryInfo.parentCategoryId, N = J.categoryInfo.categoryid, Z = this.casinoLobbyService.getCategoryName(i.game.lobbyType, N), Q || (Q = N, Z = null == i ? void 0 : i.gameLaunchedFrom), ((null === (e = null == i ? void 0 : i.gameLaunchedFrom) || void 0 === e ? void 0 : e.startsWith("MustGoJackpot_")) || (null === (o = null == i ? void 0 : i.gameLaunchedFrom) || void 0 === o ? void 0 : o.startsWith("JackpotWidget_")) || (null === (r = null == i ? void 0 : i.gameLaunchedFrom) || void 0 === r ? void 0 : r.startsWith("Netflix_Video_")) || (null === (c = null == i ? void 0 : i.gameLaunchedFrom) || void 0 === c ? void 0 : c.startsWith("Teaser"))) && (Z = i.gameLaunchedFrom), ae = this.casinoLobbyService.getCategoryName(i.game.lobbyType, Q), W = J.categoryInfo.sitecoreData && (J.categoryInfo.sitecoreData.backgroundImageLayer1 || J.categoryInfo.sitecoreData.backgroundImageLayer2 || J.categoryInfo.sitecoreData.backgroundImageLayer3) ? "Highlighted | image" : "Non Highlighted | nocolor"); let ce = i.game.name ? null === (d = null == i ? void 0 : i.game) || void 0 === d ? void 0 : d.name : this.casinoLobbyService.getGameDisplayName(null == i ? void 0 : i.game.gameId), _e = Q || i.gameSection; W = (null === (f = null == i ? void 0 : i.game) || void 0 === f ? void 0 : f.gameContainerDescription) ? i.game.gameContainerDescription : W; let le = i.gridPosition; (null === (y = null == i ? void 0 : i.gameLaunchedFrom) || void 0 === y ? void 0 : y.startsWith("RecentlyPlayed_widget_")) && (Z = i.gameLaunchedFrom, ae = this.casinoLobbyService.getCategoryName(i.game.lobbyType, N)), le = "Module_Discover_Promo" == (null == i ? void 0 : i.gameSection) || "globalsearch" == (null == i ? void 0 : i.gameSection.toLowerCase()) ? "Not Applicable" : (null == i ? void 0 : i.gridPosition) ? (null == i ? void 0 : i.gamePosition) ? `${null == i ? void 0 : i.gridPosition}:${(null == i ? void 0 : i.gamePosition) + 1}` : `${null == i ? void 0 : i.gridPosition}:1` : (null == i ? void 0 : i.gamePosition) ? `1:${(null == i ? void 0 : i.gamePosition) + 1}` : "1:1", i.Globalsearchgameposition && (i.gamePosition = i.Globalsearchgameposition), this.tracking.triggerEvent("gameOpen", { "component.gameName": null === (M = null == i ? void 0 : i.game) || void 0 === M ? void 0 : M.gameId, "component.gameType": (null === (T = null == i ? void 0 : i.game) || void 0 === T ? void 0 : T.provider) ? null === (P = null == i ? void 0 : i.game) || void 0 === P ? void 0 : P.provider : this.getGameLunchType(i.game.gameId), "component.Game.position": (null == i ? void 0 : i.gamePosition) + 1, "component.Game.section": Z || (null == i ? void 0 : i.gameSection), "component.Game.GridPosition": le, "component.gameContainerLocation": (null == i ? void 0 : i.gameLaunchedLocation) ? null == i ? void 0 : i.gameLaunchedLocation : ((null == i ? void 0 : i.gameContainer) ? null == i ? void 0 : i.gameContainer : "Page Container") + " | " + _e, "component.gameStatus": (null === (G = null == i ? void 0 : i.game) || void 0 === G ? void 0 : G.isSignPostedGame) ? "New" : "Existing", "component.gameContainerDescription": W || "Not Applicable", "component.gameFavourite": this.favouriteService.checkForFavouriteGame(null == i ? void 0 : i.game) ? "Favourite" : "Non_favourite", "component.gamePlayingStatus": this.unfinishedGamesService.checkForUnfinishedGame(null == i ? void 0 : i.game) ? "Unfinished" : "Start", "component.gameDisplayName": ce || (null === (x = null == i ? void 0 : i.game) || void 0 === x ? void 0 : x.gameVariantName), "component.categoryType": re, "component.categorySubType": (null == i ? void 0 : i.Globalsearchsection) ? null == i ? void 0 : i.Globalsearchsection : ae || (null == i ? void 0 : i.gameSection), "component.recommendationtype": this.customRecommendationType ? this.customRecommendationType : (null === (R = null == J ? void 0 : J.categoryInfo) || void 0 === R ? void 0 : R.havingCasiaGames) ? "Casia" : "Default" }) } checkGeolocationAndLaunchMobileGame(i, e) { let o = this.configProviderService.provideGeoLocationConfig(); if (this.geolocationActivator.isActive) return this.geolocationCheckService.onCheckClosed = () => { if (this.route.snapshot.queryParamMap.has("returnUrl")) { const r = this.route.snapshot.queryParamMap.get("returnUrl"); if (r && r.trim()) return void this.navigator.navigate(r.trim()) } if (this.router.routerState.snapshot.url.split("/").some(r => "launchng" === r.trim().toLowerCase())) { const r = this.casinoManager.getGameHomeUrl(); if (r) return void this.navigator.navigate(r) } }, void this.geolocationCheckService.checkGeolocation(() => { i() }, () => { e() }); o.shouldCheckNativeGeoLocation && (this.m2NativeApp.isNativeApp || this.m2NativeApp.isNativeWrapper) ? this.geoLocationValidation.validateLocation(r => { null == r || r ? e() : i() }) : i() } calculateGridPosition(i) { let e = document.getElementsByClassName("gametracking"), o = i.gridPosition; if (i.game.trackCategory && "" != i.game.trackCategory && (i.categoryType = i.game.trackCategory), e.length > 0) for (let r = 0; r < e.length; r++)if (e[r].classList.contains("track_" + i.categoryType)) return (r + 1).toString(); return o ? o.toString() : "" } gameNotFoundAction(i, e) { this.onGameLaunchDone(i), this.messageQueue.clear(); let r = this.configProviderService.provideGlobalConfig().messages.GameNotAvailable; r = r.replace("{0}", i.game.gameId); let c = { html: r, type: "Information", lifetime: "Single", scope: "casinocorelobby" }; if (e) e({ isError: !0, errorMessage: r, gameLaunchUrl: "" }); else if (i.isTouch) { if (this.messageQueue.add(c), i.returnUrl) { let d = this.casinoNpmParamsService.getcasinoCoreNpmParams(), f = i.returnUrl; "true" === this.navigation.location.search.get("gamenotfound") ? f = i.returnUrl : d.isDll || (f = this.appendQueryString(i.returnUrl, "gamenotfound", "true")), sessionStorage.setItem("gameNotAvailable", JSON.stringify(c)), this.navigation.goTo(f), setTimeout(() => { this.getGameNotAvailable() }, this.delayAfterRefreshInterval) } } else this.configProviderService.provideFeaturesConfig().enableNewEmbeddedViewIconsPosition ? (this.messageQueue.addError(r, "Single", "casinocorelobby"), setTimeout(() => { this.messageQueue.clear() }, 5e3)) : (c.scope = "embeddedGameError", this.openEmbeddedGameDailog({ game: this.gameObj, errorMessageQueue: c })) } getGameNotAvailable() { let i = JSON.parse(sessionStorage.getItem("gameNotAvailable")); this.messageQueue.add(i), setTimeout(() => { this.messageQueue.clear(), sessionStorage.removeItem("gameNotAvailable") }, this.millisecondsToDisplayInterval) } gameLaunchRedirectErrorAction(i, e) { e ? e({ isError: !0, errorMessage: i[0].html, gameLaunchUrl: "" }) : i && i.length > 0 && (this.messageQueue.clear(), i.forEach(o => { o.lifetime = "Single", o.scope = "casinocorelobby" }), this.messageQueue.addMultiple(i)) } handleDirectDesktopGameLaunch(i) { if (this.user.isAuthenticated) { if (this.vCClientService.isPokerVC()) { let o = !1; return this.cookies.get("fromLobby") && (o = !0), void this.vCClientService.handleVCGameLaunch(i, o) } this.checkGeolocationAndLaunchDesktopGame({ gameId: i }, "") } else this.loginDialog.open() } currentTimeStamp() { return (new Date).getTime() } addClickTimeStamp(i, e) { if (e && e.clickTimeStamp) { let o = new URL(i), r = o.searchParams.get("rurl"); if (o && r && "" != r) { let c = ""; return e.clickTimeStamp && (c += "&clickTimeStamp=" + e.clickTimeStamp), e.launchSource && (c += "&launchSource=" + e.launchSource), o.searchParams.set("rurl", r + c), o.toString() } } return i } validateGames(i) { let e = this.urlUtility.getApiurl("gamedata/validategame"); return this.api.get(e, { gameId: i }, { withCredentials: !0 }) } closeGame(i) { let e = this.urlUtility.getApiurl("gamedata/closegame"); return this.api.get(e, { gameId: i }, { withCredentials: !0 }) } playerPlayBreakStatus() { let i = this.urlUtility.getApiurl("gamedata/GetUserPlayBreakStatus"); this.api.get(i, null, { withCredentials: !0 }).toPromise().then(e => { e && (e.playBreak || e.gracePeriod) && window.location.reload() }, e => { console.error("Unable to retrieve user play break status" + e) }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.UDe), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.rBu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoLobbyService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoWidgetService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_router__WEBPACK_IMPORTED_MODULE_8__.gz), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GameLaunchPlaces), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.t6E), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(LiveDealerService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(NavigatorService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.N_8), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(NativeApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(VCClientService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(NativeAppHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(MonitorService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoIFrameOverlayService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GeolocationCheckService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(OpenLoginDialog), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.uw), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CacheManagerService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(AdvanceGameDataService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GameLaunchUrlFormationService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UnfinishedGamesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(FavouriteService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(InvokerProductService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GeolocationActivatorService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(SlotRacesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_router__WEBPACK_IMPORTED_MODULE_8__.F0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ApiPathsHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.vt5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoCoreNpmParamsService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GeoLocationValidationService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.Veb), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.T3C)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), ConfirmMessageComponent = (() => { class s { constructor(i, e, o, r) { this.navigator = i, this.dialogRef = e, this.data = o, this.configProviderService = r } ngOnInit() { this.messagesInfo = this.data } cancelBtn() { this.dialogRef.close() } depositBtn() { let i = this.configProviderService.provideMcPageConfig(); this.navigator.goTo(i.depositUrl.url) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-confirm-message"]], decls: 1, vars: 1, consts: [["class", "casino-bg-confirm-message", "tabindex", "-1", "role", "dialog", "style", "display:block!important; z-index:9999;", 4, "ngIf"], ["tabindex", "-1", "role", "dialog", 1, "casino-bg-confirm-message", 2, "display", "block!important", "z-index", "9999"], [1, "message-body"], [1, "row"], [1, "col-md-12", "message-header"], [1, "text-header"], [1, "col-md-12", "message-text"], [1, "text-message"], [1, "col-md-12", "footer"], [1, "btn-div"], [3, "click"], [1, "cancel", "btn", "btn-outline-secondary", "btn-block"], [1, "purchase", "btn", "btn-primary", "btn-block"]], template: function (i, e) { 1 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(0, ConfirmMessageComponent_div_0_Template, 19, 3, "div", 0), 2 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.messagesInfo) }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_15__.O5], encapsulation: 2 }), s })(), BingoGameLaunchService = (() => { class s { constructor(i, e, o, r, c, d, f, y, M, T, P, G, x, R, J, W, Q, Z, N) { this.activatedRoute = i, this.user = e, this.loginDialog = o, this.messageQueue = r, this.claimsConfig = c, this.navigator = d, this.session = f, this.recentGamesService = y, this.deviceService = M, this.casinoWidgetService = T, this.dialog = P, this.tracking = G, this.api = x, this.urlUtilityService = R, this.configProviderService = J, this.cacheManagerService = W, this.cozyBingoDataService = Q, this.apiPathsHelperService = Z, this.loginDurationConfig = N, ("true" == this.activatedRoute.snapshot.queryParamMap.get("hideHeader") || this.activatedRoute.snapshot.queryParamMap.get(".box")) && (this.isInGameClient = !0) } checkUserStatus() { return (void 0 === this.isRealPlayer || null == this.isRealPlayer) && (this.isRealPlayer = this.claimsConfig.get("realplayer")), "True" == this.isRealPlayer } bingoGameLaunchTracking(i) { let e; e = this.cozyBingoDataService.getRoomdatabyId(i.id), e && e.sitecoreInfo && (e.isNew = e.sitecoreInfo.isNew), e = e || {}, this.tracking.triggerEvent("gameOpen", { "component.gameName": i.gameName, "component.gameType": i.gameType, "component.Game.section": i.section, "component.Game.position": Number.isInteger(i.position) ? i.position + 1 : "undefined", "component.Game.GridPosition": Number.isInteger(i.position) ? i.position + 1 + ":1" : "undefined", "component.gameStatus": e.isNew ? "New" : "Existing", "component.gameContainerLocation": i.gameContainerLocation, "component.gameContainerDescription": i.widgetFrameClr ? "Highlighted|" + i.widgetFrameClr : "Non-Highlighted|No Color Code", "component.gameFavourite": e.isFavourite ? "Favourite" : "Non-Favourite", "component.gamePlayingStatus": "Not Applicable", "component.gameDisplayName": i.gameName, "component.categoryType": "Bingo", "component.categorySubType": "Bingo" }) } initiateGameLaunch(i, e, o, r, c, d, f, y, M = {}) { let T, P = this.configProviderService.provideGlobalConfig(); if (T = y || window.location.href, M.id = d, M.gameType = e, M.gameName = i, this.validateUser(i, e, o, r, c, d, f, T, M)) { if (!this.checkUserStatus()) return void ("false" === this.claimsConfig.get("realplayer").toLowerCase() && this.openBingoPlayUserDialog(T)); if (this.bingoGameLaunchTracking(M), this.messageQueue.clear(), this.deviceService.isTouch) { let G = this.configProviderService.provideApiPathsConfig(), x = this.apiPathsHelperService.transformApi(G.bingo.bgMenuLaunchRoom, this.urlUtilityService.getBingoApiBaseUrl(), i); this.casinoWidgetService.postMessageToParent("GameLaunch", { promptLogin: !1, redirectUrl: x, categoryid: "rcp-widget" }) } this.deviceService.isMobilePhone && "casino" === e.toLowerCase() ? this.getCasinoGameLaunchUrl(d).subscribe(G => { G.redirect ? this.launchGame(G.redirect) : this.messageQueue.addError(P.messages.gameLaunchErrorMessage) }, G => { G && this.messageQueue.addError(P.messages.gameLaunchErrorMessage) }) : this.getGameLaunchUrl(i, e, o, r, c, d, f, T).subscribe(G => { if (G.redirectUrl) this.launchBingoGames(G.redirectUrl, i, e, T); else if (G.responseCode && "0" != G.responseCode) { let x = P.messages[G.responseCode]; x || (x = P.messages.gameLaunchErrorMessage), this.messageQueue.addError(x), this.isForcedGameLaunch() && (this.session.set("GameLaunchErrorCode", G.responseCode), this.navigator.goTo(T)) } else this.messageQueue.addError(P.messages.gameLaunchErrorMessage) }, G => { G && this.messageQueue.addError(P.messages.gameLaunchErrorMessage) }) } } isForcedGameLaunch() { return window.location.href.indexOf("bingoForcedGameLaunch") > -1 } openBingoPlayUserDialog(i) { if (this.user.isAuthenticated && "false" == this.claimsConfig.get("realplayer").toLowerCase()) { let e; if (this.configProviderService.provideCozyBingoConfig().cozyBingoFavouritesInRpwidget) { let c = this.cozyBingoDataService.getGlobalMessages(); e = { message: c.preBuyUserDepositMessage, header: c.preBuyUserDepositHeader, closeBtn: c.confirmCloseButton, purchaseButtonText: c.preBuyUserDepositBtn } } else { let c = this.configProviderService.provideGlobalConfig(); e = { message: c.messages.preBuyUserDepositMessage, header: c.messages.preBuyUserDepositHeader, closeBtn: c.messages.confirmCloseButton, purchaseButtonText: c.messages.preBuyUserDepositBtn } } this.dialog.open(ConfirmMessageComponent, { width: "378px", data: e }).afterClosed().subscribe(() => { this.navigator.goTo(i) }) } } getPlayUrl(i, e, o, r, c, d, f, y) { let M = ""; return M = -1 === y.indexOf("?") ? y + "?bingoForcedGameLaunch=true&gameName=" + i + "&gameType=" + e + "&ballType=" + o + "&launchType=" + r + "&gameIcon=" + c + "&gameId=" + d + "&favstatus=" + f + "&originUrl=" + y : y + "&bingoForcedGameLaunch=true&gameName=" + i + "&gameType=" + e + "&ballType=" + o + "&launchType=" + r + "&gameIcon=" + c + "&gameId=" + d + "&favstatus=" + f + "&originUrl=" + y, M } validateUser(i, e, o, r, c, d, f, y, M) { let T, P = {}; return P.gameName = i, P.gameType = e, P.ballType = o, P.launchType = r, P.gameIcon = c, P.gameId = d, P.favstatus = f, P.origin = y, P.vfBingo = !0, P.gameObj = M, T = { gameLaunchParam: P, timeStamp: (new Date).getTime() }, !!this.user.isAuthenticated || (this.cacheManagerService.writeForceGameLaunchObjInSessionStorage("CasinoCoreForceGameObj", T), this.loginDialog.open(), !1) } launchBingoGames(i, e, o, r) { if (i = decodeURIComponent(i), "Bingovf" == o) if (this.deviceService.isTouch) this.navigator.goTo(i); else { if (this.openedRooms = [], this.session.get("openedRooms") || this.session.set("openedRooms", this.openedRooms), this.openedRooms = this.session.get("openedRooms"), this.openedRooms.indexOf(e) > -1) return void (this.activeroom = e); let c = window.open(i, "_blank", "height=605,width=975,left=10,top=10,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes"); r && this.navigator.goTo(r), this.openedRooms.push(e), this.session.set("openedRooms", this.openedRooms); let d = setInterval(() => { this.activeroom == e && (this.activeroom = "", c.focus()), c.closed && (this.openedRooms = this.openedRooms.filter(f => f != e), this.session.set("openedRooms", this.openedRooms), clearInterval(d), this.recentGamesService.setRecentGames()) }, 500) } else this.navigator.goTo(i) } launchGame(i) { if (i = decodeURIComponent(i), this.isInGameClient) return window.parent.postMessage({ type: "LaunchGame", data: i }, "*"), !0; this.navigator.goTo(i) } getGameLaunchUrl(i, e, o, r, c, d, f, y) { let M = this.configProviderService.provideApiPathsConfig(), T = this.apiPathsHelperService.transformApi(M.bingo.bgGameLaunch, this.urlUtilityService.getBingoApiBaseUrl()), P = this.configProviderService.provideCozyBingoConfig(); if (P.enableBingoGameLaunchPostMethod) { let x; P.enableLastLoginTimeCheck && (x = (new Date).getTime() - this.loginDurationConfig.loginDuration); let R = { gameName: i, gameType: e, ballType: o, launchType: r, gameIcon: c, gameId: d, favstatus: f, originUrl: y, sso: this.claimsConfig.get("ssotoken"), themeId: "", originGameId: "", isReplaceGameSrc: !1, lastLoginTime: x, isInGameClient: !1 }; this.api.post(T, R, { withCredentials: !0 }) } return this.api.get(T, { gameName: i, gameType: e, ballType: o, launchType: r, gameIcon: c, gameId: d, favstatus: f, originUrl: y, sso: this.claimsConfig.get("ssotoken") }, { withCredentials: !0 }) } getCasinoGameLaunchUrl(i) { let e = this.configProviderService.provideApiPathsConfig(); return this.api.get(e.bingo.ccGameLaunch, { variantName: i }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_router__WEBPACK_IMPORTED_MODULE_8__.gz), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.eYs), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.UDe), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.IUF), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(RecentGamesService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U8N), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoWidgetService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.uw), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CacheManagerService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CozyBingoDataService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ApiPathsHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_features_login_duration__WEBPACK_IMPORTED_MODULE_28__.LoginDurationConfig)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), ForceGameLaunchHandlerService = (() => { class s { constructor(i, e, o) { this.casinoLobbyService = i, this.casinoCoreGamelaunchService = e, this.bingoGameLaunchService = o } onAppInit() { this.casinoLobbyService.forceGameLaunchObservable.subscribe(i => { if (i) if (i.gameLaunchParam.vfBingo) { let e = i.gameLaunchParam; this.bingoGameLaunchService.initiateGameLaunch(e.gameName, e.gameType, e.ballType, e.launchType, e.gameIcon, e.gameId, e.favstatus, e.origin, e.gameObj) } else this.casinoCoreGamelaunchService.launchGame(i.gameLaunchParam) }, i => { }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoLobbyService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoCoreGamelaunchService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(BingoGameLaunchService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GameService = (() => { class s { constructor(i, e, o) { this.page = i, this.user = e, this.dialog = o, this.gameDataVar = {}, this.isVisible = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.gameData = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(this.gameDataVar), this.overlayVisibilityStatus = this.isVisible.asObservable(), this.gameDataObject = this.gameData.asObservable() } setOverlayVisibility(i) { this.isVisible.next(i) } openDialog(i) { i.fromEmbedPopUp = !0, this.dialogRef = this.dialog.open(EmbeddedGamePopupComponent, { width: document.documentElement.clientWidth + "px", data: i }) } closeDialog() { this.dialogRef && this.dialogRef.close() } gameDataInfo(i) { this.gameData.next(i) } getCategoryGamesFromLocalStorage(i) { let e = this.getDataFromSessionStorage(this.getCacheKey()); if (e) { let o = JSON.parse(e); if (o[i] && o[i].games && o[i].games.length > 0) return this.findGamesInLocalStorage(o[i].games) } return null } getGameDataByGameId(i) { let e = this.getDataFromLocalStorage(i + "_GameMetaData"); return e ? JSON.parse(e) : null } findGamesInLocalStorage(i) { let e = { gamesInLocalStorage: null, gamesNotAvailableInLocalStorage: null }, o = [], r = []; return i.forEach(c => { let d = this.getDataFromLocalStorage(c + "_GameMetaData"); d ? o.push(d) : r.push(c) }), e.gamesInLocalStorage = o, e.gamesNotAvailableInLocalStorage = r, e } getCacheKey() { return this.user.isAuthenticated ? "allCategoryLookupData_" + this.page.lang + "_" + this.user.username : "allCategoryLookupData_" + this.page.lang } getDataFromSessionStorage(i) { try { return sessionStorage.getItem(i) } catch (e) { return null } } getDataFromLocalStorage(i) { try { return localStorage.getItem(i) } catch (e) { return null } } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.T3C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.uw)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GJackpotConstService = (() => { class s { } return s.WelcomeOverlay = "WelcomeOverlay", s.ParentCard = "ParentCard", s.MainCard = "MainCard", s.SubCard = "SubCard", s.main = "main", s.overlay = "overlay", s.parent = "parent", s.sub = "sub", s.ClaimCardShown = "ClaimCardShown", s.ClearCardShown = "ClearCardShown", s.JackpotCardsNotToShow = "JackpotCardsNotToShow", s.Success = "SUCCESS", s.LoginFailed = "LOGIN_FAILED", s.WinExpired = "WIN_EXPIRED", s.improperRefId = "IMPROPER REF_ID", s.alreadyInProgress = "ALREADY_IN_PROGRESS", s.alreadyInProgressOrDataNotAvilable = "ALREADY_PROCESSED_OR_DATA_NOT_AVAILABLE", s.ClaimJackpotsDetails = "ClaimJackpotsDetails", s.WelcomeOverlayShown = "WelcomeOverlayShown", s.TRIGGER_TIME = "TRIGGER_TIME", s.tablet = "Tablet", s.mobile = "Mobile", s.desktop = "Desktop", s.ParentCardReveal = "ParentCard-Reveal", s.MainCardReveal = "MainCard-Reveal", s.SubCardReveal = "SubCard-Reveal", s.Overlay = "Overlay", s.clearContainer = "clear-container", s.claimContainer = "claim-container", s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GlobalJackpotModService = (() => { class s { constructor(i) { this.casinoLobbyService = i, this.globalJackpotPoolInfoMap = new Map, this.siteCoreData = new Map, this.lobbyData = new Map, this.jackpotConfigData = new Map, this.historyFeedData = new Map, this.defaultTandCData = new Map, this.defaultTandCDataSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.defaultTandCDataSubjectObservable = this.defaultTandCDataSubject.asObservable() } onAppInit() { } setGlobalJackpotPoolInfoMap(i, e, o) { this.globalJackpotPoolInfoMap.set(i + "#" + e + "#", o) } getGlobalJackpotPoolInfoMap(i) { return this.globalJackpotPoolInfoMap.get(i) } setSitecoreTemplateMap(i, e, o) { this.siteCoreData.set(i + "#" + e + "#", o) } getSitecoreTemplateMap(i) { return this.siteCoreData.get(i) } setGlobalJackpotConfigData(i, e, o) { this.jackpotConfigData.set(i + "#" + e + "#", o) } getGlobalJackpotConfigData(i) { return this.jackpotConfigData.get(i) } setGlobalJackpotLobbyTypeMap(i, e, o) { let r = i + "#" + e + "#"; this.lobbyData.set(r, o), this.casinoLobbyService.setGlobalJackpotLobbyTypeMap(r, o) } getGlobalJackpotLobbyDataFromLocalStorage(i) { return this.casinoLobbyService.getGlobalJackpotLobbyDataFromLocalStorage(i) } setHistoryFeedData(i, e, o) { this.historyFeedData.set(e + "#" + o + "#", i) } getHistoryFeedData(i) { return this.historyFeedData.get(i) } setDisabledGames(i) { this.casinoLobbyService.setDisabledGames(i) } setDefaultTandCData(i, e, o) { this.defaultTandCData.set(i + "#" + e + "#", o), this.defaultTandCDataSubject.next(o) } getDefaultTandCData(i) { return this.defaultTandCData.get(i) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoLobbyService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GlobalJackpotService = (() => { class s { constructor(i, e, o, r, c, d, f) { this.api = i, this.deviceService = e, this.casinoManager = o, this.categoryManager = r, this.user = c, this.configProviderService = d, this.urlUtility = f, this.globalJackpotsSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.globalJackpotsFeedObservable = this.globalJackpotsSubject.asObservable(), this.globalJackpotsTemplateSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.globalJackpotsTempslateObservable = this.globalJackpotsTemplateSubject.asObservable(), this.wonStatusSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.userWinStatusObservable = this.wonStatusSubject.asObservable(), this.claimStatusSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.claimStatusObservable = this.claimStatusSubject.asObservable(), this.claimStatusErrorResponce = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.claimStatusErrorResponceObservable = this.claimStatusErrorResponce.asObservable(), this.historyFeedMarketingContentSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.historyFeedTemplateSubjectObservable = this.historyFeedMarketingContentSubject.asObservable(), this.gameslobbyfeedcategories = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.lobbyfeedcategoriesObservable = this.gameslobbyfeedcategories.asObservable(), this.RecentGames = "RECENTGAMES", this.FavouriteGames = "FAVOURITEGAMES", this.devicetype = this.deviceService.isTablet ? "Tablet" : this.deviceService.isMobile ? "Mobile" : "Desktop" } onAppInit() { } setGlobalJackpots(i, e, o, r, c, d) { let f = this, y = this.configProviderService.provideApiPathsConfig(), M = this.urlUtility.getApiurl(y.globalJackpots.gjpLobbyPoolFeed); this.api.get(M, { jackpotGroupId: i, device: this.devicetype, activeTemplate: e, configurationType: o, enablePhase2: r, refreshLobby: d, folderId: c }, { withCredentials: !0 }).subscribe(T => { T && (f.globalJackpotObject = T, f.globalJackpotsSubject.next(T)) }, T => { console.error("Unable to retrieve GlobalJackpot Data" + T) }) } setGlobalJackpotObject(i) { this.globalJackpotObject = i, this.globalJackpotsSubject.next(i) } getGlobalJackpots() { return this.globalJackpotObject } checkIfUserWonGroupJackpot(i) { let e = this, o = this.configProviderService.provideApiPathsConfig(), r = this.urlUtility.getApiurl(o.globalJackpots.gjpUserWonJackpot); this.api.get(r, { subJackpotId: i }).subscribe(c => { c && e.wonStatusSubject.next(c) }, c => { console.error("Unable to retrieve JackpotWon Data" + c) }) } userClaimGlobalJackpotStatus(i) { let e = this, o = this.configProviderService.provideApiPathsConfig(), r = this.urlUtility.getApiurl(o.globalJackpots.gjpUserClaimStatus); this.api.get(r, { winRefId: i }, { responseType: "text" }).subscribe(c => { e.claimStatusSubject.next(c) }, c => { e.claimStatusErrorResponce.next(c), console.error("Unable to retrieve Claim Status" + c) }) } clearRevealObservable() { this.wonStatusSubject.next("") } userClaimGlobalJackpotStatusClear() { this.claimStatusSubject.next("") } getAvailableGames() { return this.lobbyfeedcategories } getUILobby(i, e) { let o = new Map, r = new Map; i.languageContent && i.languageContent[0] && (i.languageContent[0].categories && i.languageContent[0].categories.length > 0 && (o = this.getLanguageContentMap(i.languageContent[0].categories)), i.languageContent[0].stickers && i.languageContent[0].stickers.length > 0 && (r = this.getLanguageContentMap(i.languageContent[0].stickers))); let c = new Map, d = new Map; if (i && i.categories && i.categories.length > 0) { for (let T = 0; T < i.categories.length; T++) { let P = this.getLobbyCategory(i.categories[T], o, e); if (P.subcategories && P.subcategories.length > 0) { P.lmtSubCategories = []; for (let G = 0; G < P.subcategories.length; G++) { let x = this.getLobbySubCategory(P.subcategories[G], o, e); x.parentCategoryId = this.getParentCategoryId(P, i.categories), d.set(x.route, x), P.lmtSubCategories.push(x.categoryid) } } c.set(P.route, P) } let y = { categoryid: this.RecentGames.toLowerCase(), route: this.RecentGames.toLowerCase(), categoryname: this.getCategoryNameFromSitecore(this.RecentGames.toLowerCase(), e, !0), isNavigationCategory: !0, sitecoreData: this.getSitecoreInfoForCategoryIdAndLobbyType(this.RecentGames.toLowerCase(), e) }; c.set(y.route, y); let M = { categoryid: this.FavouriteGames.toLowerCase(), route: this.FavouriteGames.toLowerCase(), categoryname: this.getCategoryNameFromSitecore(this.FavouriteGames.toLowerCase(), e, !0), isNavigationCategory: !0, sitecoreData: this.getSitecoreInfoForCategoryIdAndLobbyType(this.FavouriteGames.toLowerCase(), e) }; c.set(M.route, M), d.size > 0 && d.forEach((T, P) => { c.set(P, T) }) } return { categoriesMap: c, categoryNameLangMap: o, stickerNameMap: r, gamemetadata: i.gamemetadata } } getLobbyCategory(i, e, o) { if (i) { let r = i.categoryid; if (i.lmtCategoryId = r, i.route && (i.categoryid = "LMC_GYML" === i.categoryid ? i.categoryid : i.route.trim().replace(/ /g, "").toLowerCase(), i.route = i.categoryid), i.engName = i.categoryname, i.categoryname = this.getCategoryNameFromLangMap(r, e, i.categoryname), i.isNavigationCategory = this.getNavigationVisibility(i.isHidden), i.sitecoreData = this.getSitecoreInfoForCategoryIdAndLobbyType(i.categoryid, o), i.gamelist.length > 0) for (let c = 0; c < i.gamelist.length; c++)if ("number" == typeof i.gamelist[c].icon) { let d = String(i.gamelist[c].icon); i.gamelist[c].icon = d } return i.gamesModel = i.gamelist, i } } getLobbySubCategory(i, e, o) { if (i) { let r = i.subcategoryid; if (i.lmtCategoryId = r, i.route && (i.categoryid = "LMC_GYML" === i.subcategoryid ? i.subcategoryid : i.route.trim().replace(/ /g, "").toLowerCase(), i.route = i.categoryid), i.engName = i.categoryname, i.categoryname = this.getCategoryNameFromLangMap(r, e, i.subcategoryname), i.sitecoreData = this.getSitecoreInfoForCategoryIdAndLobbyType(i.categoryid, o), i.hideSubCategory = i.categoryid.toLowerCase() === ConstService.RECENT_GAMES_CATEGORY_ID || i.categoryid.toLowerCase() === ConstService.LMC_GYML_CATEGORY_ID, i.gamelist.length > 0) for (let c = 0; c < i.gamelist.length; c++)if ("number" == typeof i.gamelist[c].icon) { let d = String(i.gamelist[c].icon); i.gamelist[c].icon = d } return i.gamesModel = i.gamelist, i } } getLanguageContentMap(i) { let e = new Map; if (i && i.length > 0) for (let o = 0; o < i.length; o++) { let r = i[o]; if (r.indexOf(":") > -1) { let c = r.split(":"); e.set(c[0], c[1]) } } return e } getParentCategoryId(i, e) { if (i.isHidden && "true" === i.isHidden) for (let o = 0; o < e.length; o++) { let r = e[o]; if (r.subcategories && r.subcategories.length > 0) for (let c = 0; c < r.subcategories.length; c++)if (r.subcategories[c].toLowerCase() === i.lmtCategoryId.toLowerCase()) return "LMC_GYML" === r.categoryid ? r.categoryid : r.route.replace(/\s/g, "").toLowerCase() } return i.categoryid } getCategoryNameFromSitecore(i, e, o) { let r = this.getSitecoreInfoForCategoryIdAndLobbyType(i, e); return r ? r.title : o ? i : null } getSitecoreInfoForCategoryIdAndLobbyType(i, e) { return { attributes: { icon: "theme-home" }, categoryId: i } } getCategoryNameFromLangMap(i, e, o) { return e && e.size > 0 && e.get(i) ? e.get(i) : o } getNavigationVisibility(i) { return !i || "false" == i.toLowerCase().trim() } setGlobalJackpotCategories() { this.gameslobbyfeedcategories.next(this.categoryManager.getAllCategories()) } setIsGlobalJackpot(i) { this.isGlobalJackpot = i } getIsGlobalJackpot() { return this.isGlobalJackpot } setHistoryFeedContent(i, e) { let o = this, r = this.configProviderService.provideApiPathsConfig(), c = this.urlUtility.getApiurl(r.globalJackpots.gjpHistoryFeed); this.api.get(c, { enablePhase2: i, folderId: e }).subscribe(d => { d && (o.historyFeedMarketingContent = d, o.historyFeedMarketingContentSubject.next(d)) }, d => { console.error("Unable to retrieve HistoryFeed Data" + d) }) } getHistoryFeedContent() { return this.historyFeedMarketingContent } setGJPathSegment(i) { this.oldPathSegment != i && (this.globalJackpotObject = null, this.globalJackpotsSubject.next(null), this.wonStatusSubject.next(null), this.claimStatusSubject.next(null), this.claimStatusErrorResponce.next(null), this.historyFeedMarketingContent = null, this.historyFeedMarketingContentSubject.next(null), this.oldPathSegment = i) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U8N), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CategoryManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), GlobalSearchHelperService = (() => { class s { constructor() { this.globalSearchHelperSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.globalSearchHelperObservable = this.globalSearchHelperSubject.asObservable(), this.globalSearchLoadedSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.globalSearchLoadedObservable = this.globalSearchLoadedSubject.asObservable() } sendEventforGlobalSearch(i) { this.globalSearchHelperSubject.next({ eventName: i }) } sendcssClassasEventforGlobalSearch(i) { this.globalSearchHelperSubject.next({ eventName: i }) } setGlobalSearchLoadedEvent(i) { this.globalSearchLoadedSubject.next(i) } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), NewsFeedV2Service = (() => { class s { constructor(i, e, o) { this.api = i, this.configProviderService = e, this.urlUtility = o, this.newsFeedV2Subject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.newsFeedV2Observable = this.newsFeedV2Subject.asObservable(), this.newsFeedMap = new Map, this.newsFeedV2WidgetSubject = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.newsFeedV2WidgetObservable = this.newsFeedV2WidgetSubject.asObservable() } setNewsFeedMap(i) { let e = this.urlUtility.getApiurl("newsfeed/getNewsFeedContent"); this.api.get(e, { path: i }, { withCredentials: !0 }).subscribe(o => { o && (this.newsFeedMap.set(i, o), this.newsFeedV2Subject.next(this.newsFeedMap)) }, o => { }) } getNewsFeedMap(i) { let e = this.newsFeedMap.get(i); return e ? e.isSiteCoreDataFetched ? e : null : (this.setNewsFeedMap(i), null) } setNewsFeedContent(i) { let e = this.urlUtility.getApiurl("newsfeed/getNewsFeedContent"); this.api.get(e, { path: i }, { withCredentials: !0 }).subscribe(o => { o && this.newsFeedV2WidgetSubject.next(o) }, o => { }) } setNewsFeedResponseArray(i) { let e = []; return i.forEach(o => { let r = o.fields; e.push({ header: null != r.header ? r.header : "", subHeader: null != r["sub Header"] ? r["sub Header"] : "", type: o.templateName, iconClass: r["icon Class"], gameID: null != r["game ID"] ? r["game ID"] : "", jackpotGroupName: null != r["jackpot Group Name"] ? r["jackpot Group Name"] : "", link: null != r.link ? r.link.url : "#", value: null != r.value ? r.value : "", condition: null != r.condition ? r.condition : "", subTitle: null != r.subTitle ? r.subTitle : "", displayLiveStatus: null != r.displayLiveStatus ? r.displayLiveStatus : "", displayDealerImage: null != r.displayDealerImage ? r.displayDealerImage : "" }) }), e } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), OptimizedTeaserManager = (() => { class s { constructor(i, e, o) { this.casinoManager = i, this.configProviderService = e, this.teaserService = o, this.optimizedHeaderTeasers = [], this.lMTCategories = [] } setOptimizedTeasers(i, e) { this.maxRenderedTeasers = this.configProviderService.provideOptimizedTeaserConfig().maxRenderedTeasers; let o = this.maxRenderedTeasers > 0 ? this.maxRenderedTeasers : 999; this.optimizedHeaderTeasers = []; let r = this.teaserService.getTeaserData(); if (r) { let c = r.optimizedTeaserContents; if (this.globalTeaserSettings = r.globalTeaserSettings, i && i.sitecoreData.showTeasers && i.sitecoreData.optimizedTeasers && i.sitecoreData.optimizedTeasers.length > 0 && c && c.length > 0) for (let d = 0; d < i.sitecoreData.optimizedTeasers.length; d++) { let f = i.sitecoreData.optimizedTeasers[d], y = c.filter(M => M.data.metadata.id.parent.path === f.path); y && y.length > 0 && y.forEach(M => { M.displayMode == e && this.optimizedHeaderTeasers.length < o && this.optimizedHeaderTeasers.push(M) }) } } return this.optimizedHeaderTeasers } setOptimizedTeasersBasedOnCatery(i) { this.maxRenderedTeasers = this.configProviderService.provideOptimizedTeaserConfig().maxRenderedTeasers; let e = [], o = [], r = [], c = [], d = this.teaserService.getTeaserData(); if (d) { let y, f = d.optimizedTeaserContents; return this.globalTeaserSettings = d.globalTeaserSettings, i && i.sitecoreData.showTeasers && i.sitecoreData.optimizedTeasers && i.sitecoreData.optimizedTeasers.length > 0 && f && f.length > 0 && i.sitecoreData.optimizedTeasers.forEach(M => { let T = f.filter(P => P.data.metadata.id.parent.path === M.path); T && T.length > 0 && T.forEach(P => { switch (P.displayMode) { case "SubNavigation": e.push(P); break; case "EmbeddedBelowGames": o.push(P); break; case "EmbeddedAboveGames": r.push(P); break; case "Top": c.push(P) } }) }), y = { optimizedSubNavigationTeasers: this.maxRenderedTeasers > 0 ? e.splice(0, this.maxRenderedTeasers) : e, optimizedEmbeddedBelowTeasers: this.maxRenderedTeasers > 0 ? o.splice(0, this.maxRenderedTeasers) : o, optimizedEmbeddedAboveTeasers: this.maxRenderedTeasers > 0 ? r.splice(0, this.maxRenderedTeasers) : r, optimizedTopTeasers: this.maxRenderedTeasers > 0 ? c.splice(0, this.maxRenderedTeasers) : c }, y } } getGlobalTeaserSettings() { return this.globalTeaserSettings } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(TeaserService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), OtherProductService = (() => { class s { constructor(i, e) { this.cozyBingoDataService = i, this.configProviderService = e } updateFavGamesForOtherProducts() { let i = this.configProviderService.provideCozyBingoConfig(); i && i.cozyBingoFavouritesInRpwidget && this.cozyBingoDataService.getBingoData(!1, !1) } updateRecentlyplayedGamesOnOtherProducts() { let i = this.configProviderService.provideCozyBingoConfig(); i && i.cozyBingoRecentGamesInRpwidget && this.cozyBingoDataService.getBingoData(!1, !0) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CozyBingoDataService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), SearchSectionService = (() => { class s { constructor() { this.isMobileSearchVisible = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.isDesktopSearchGYMLVisible = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.searchVisibilityStatus = this.isMobileSearchVisible.asObservable(), this.searchGYMLVisibilityStatus = this.isDesktopSearchGYMLVisible.asObservable() } setSearchVisibility(i) { this.isMobileSearchVisible.next(i) } setDesktopSearchGYMLVisibility(i) { this.isDesktopSearchGYMLVisible.next(i) } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), SignPostingService = (() => { class s { constructor(i) { this.recentGamesService = i } getSignPostingCount(i, e) { let o = 0, r = [], c = []; if (i && i.length > 0 && i.forEach(d => { d.sticker && (c = -1 !== d.sticker.indexOf("#") ? d.sticker.split("#") : [d.sticker], c.indexOf("LMS_LATEST") > -1 && r.push(d)) }), r && r.length > 0 && e) { let d = r.filter(f => !(e.indexOf(f.game) > -1)); d && (o = d.length) } return o } isSignPostedGame(i) { let e = this.recentGamesService.getrecentGames(); return !(!(i.sticker && i.sticker.indexOf("LMS_LATEST") > -1) || e && e.length > 0 && -1 !== e.indexOf(i.gameId)) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(RecentGamesService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), SmartBannerService = (() => { class s { constructor(i) { this.cookieService = i, this.smartBannerStatus = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!0), this.smartBannersExists = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.smartBannerStatusObservable = this.smartBannerStatus.asObservable(), this.smartBannersExistsObservable = this.smartBannersExists.asObservable() } smartBannerStatusChange(i) { this.smartBannerStatus.next(i) } smartBannersExistsChanged(i) { this.smartBannersExists.next(i) } getSbClosedCookieValue(i) { return this.cookieService.get("sb-closed-" + i) } getSbInstalledCookieValue(i) { return this.cookieService.get("sb-installed-" + i) } installSmartBanner(i, e) { this.cookieService.put("sb-installed-" + i, "true", e) } closeSmartBanner(i, e) { this.cookieService.put("sb-closed-" + i, "true", e) } setCookie(i, e, o) { let r = new Date, c = parseInt(o, 10); isNaN(c) ? this.cookieService.put(i, e) : (r.setDate(r.getDate() + c), this.cookieService.put(i, e, { expires: r.toUTCString() })) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.N_8)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), UtilityService = (() => { class s { constructor() { } getPositionXY(i) { let e = { x: 0, y: 0 }; if ("touchstart" === i.type || "touchmove" === i.type || "touchend" === i.type || "touchcancel" === i.type) { let o = i.touches[0] || i.changedTouches[0]; e.x = o.pageX, e.y = o.pageY } else ("mousedown" === i.type || "mouseup" === i.type || "mousemove" === i.type || "mouseover" === i.type || "mouseout" === i.type || "mouseenter" === i.type || "mouseleave" === i.type) && (e.x = i.pageX, e.y = i.pageY); return e } deepMergeObjects(i, ...e) { null == i && (i = {}); let o = Object(i); for (let r = 0; r < e.length; r++) { const c = e[r]; if (c) for (let d in c) Object.prototype.hasOwnProperty.call(c, d) && ("object" == typeof o[d] && o[d] && "object" == typeof c[d] && c[d] ? this.deepMergeObjects(o[d]) : o[d] = c[d]) } return o } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(); var LottieAnimationStatus = (() => { return (s = LottieAnimationStatus || (LottieAnimationStatus = {}))[s.Play = 0] = "Play", s[s.Pause = 1] = "Pause", LottieAnimationStatus; var s })(); let GameShowHubService = (() => { class s { constructor(i, e, o, r, c, d, f) { this.api = i, this.tracking = e, this.deviceService = o, this.urlUtility = r, this.messageQueue = c, this.casinoLobbyService = d, this.configProviderService = f, this.categoryRoutePrefix = "/c/", this.sectorIdPrefix = "gsCat", this.loadingPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!0), this.mapPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.backgroundPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.animatedLayerPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), this.noOfLoadedSectors = 0, this.sectorsPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(0), this.sectorOpenedPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.scheduleSubMapItemPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.lottieAnimationStatusPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.drawerContentMap = new Map, this.drawerContentMapPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.onboardingDataPublisher = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(null), this.loadingObservable = this.loadingPublisher.asObservable(), this.mapObservable = this.mapPublisher.asObservable(), this.backgroundObservable = this.backgroundPublisher.asObservable(), this.animatedLayerObservable = this.animatedLayerPublisher.asObservable(), this.sectorsObservable = this.sectorsPublisher.asObservable(), this.sectorOpenedObservable = this.sectorOpenedPublisher.asObservable(), this.scheduleSubMapItemObservable = this.scheduleSubMapItemPublisher.asObservable(), this.lottieAnimationStatusObservable = this.lottieAnimationStatusPublisher.asObservable(), this.drawerContentMapAvailable = this.drawerContentMapPublisher.asObservable(), this.onboardingDataAvailable = this.onboardingDataPublisher.asObservable(), this.gameShowHubConfig = this.configProviderService.provideGameShowHubConfig() } get map() { return this.mapData } get globalConfig() { return this.globalConfigData } get globalClrConfig() { return this.globalConfigClr } get isMobile() { return this.currentWidth <= 1024 } get lobbyType() { return this.currentLobbyType } get mainElement() { return document.getElementById("main-content").parentElement } get currentWidth() { return this.deviceService.isiOS ? document.getElementById("casino-viewport").offsetWidth : window.innerWidth } get currentHeight() { return this.deviceService.isiOS ? document.getElementById("casino-viewport").offsetHeight : window.innerHeight } get isMobileLandscape() { return this.deviceService.isMobilePhone && this.currentWidth >= this.gameShowHubConfig.mobileLandscapeConfig.minWidth && this.currentWidth <= this.gameShowHubConfig.mobileLandscapeConfig.maxWidth } getLoadingStatus() { return (0, rxjs__WEBPACK_IMPORTED_MODULE_12__.a)([this.mapObservable, this.backgroundObservable, this.animatedLayerObservable, this.sectorsObservable]) } getMap(i) { this.api.post(this.urlUtility.getApiurl("gameshowhub/getmap"), { mapPath: i }, { responseType: "json", withCredentials: !0, showSpinner: !1 }).subscribe(e => { e && (this.globalConfigData = null == e ? void 0 : e.globalConfig, this.globalConfigClr = null == e ? void 0 : e.globalClrConfig, this.mapData = e.map, this.mapPublisher.next(!0), this.setCustomLinkDrawerContent()) }, e => { this.messageQueue.add({ html: e, type: "Error", lifetime: "Single", scope: "casinocorelobby" }) }) } initSectors() { this.noOfLoadedSectors = 0, this.sectorsPublisher.next(this.noOfLoadedSectors) } initMap() { this.mainElement.classList.remove("casino-gshub-main"), this.loadingPublisher.next(!0), this.backgroundPublisher.next(!1), this.animatedLayerPublisher.next(!1), this.initSectors() } setLobbyType(i) { this.currentLobbyType = i } setBackgroundStatus(i) { this.backgroundPublisher.next(i) } setAnimatedLayerStatus(i) { this.animatedLayerPublisher.next(i) } setSectorsLoadedCount() { this.noOfLoadedSectors = this.noOfLoadedSectors + 1, this.sectorsPublisher.next(this.noOfLoadedSectors) } setSectorOpened(i) { this.sectorOpenedPublisher.next(i) } setScheduleSubMapItem(i) { this.scheduleSubMapItemPublisher.next(i) } setLottieAnimationStatus(i) { this.lottieAnimationStatusPublisher.next(i) } fetchContent(i) { this.api.post(this.urlUtility.getApiurl("gameshowhub/fetchcontent"), { contentPaths: i }, { responseType: "json", withCredentials: !0, showSpinner: !1 }).subscribe(e => { e && (this.emptyMap(), e.forEach(o => { this.drawerContentMap.set(o.path, o) }), this.drawerContentMapPublisher.next(!0)) }, e => { this.messageQueue.add({ html: e, type: "Error", lifetime: "Single", scope: "casinocorelobby" }) }) } setOnboardingData() { this.api.get(this.urlUtility.getApiurl("gameshowhub/getOnboardingContent"), {}, { responseType: "json", withCredentials: !0, showSpinner: !1 }).subscribe(i => { i && (this.onboardingData = i, this.onboardingDataPublisher.next(!0)) }, i => { this.messageQueue.add({ html: i, type: "Error", lifetime: "Single", scope: "casinocorelobby" }) }) } getOnboardingData() { return this.onboardingData } getDrawerContentMap() { return this.drawerContentMap } getDrawerContent(i) { const e = new Array; return i.forEach(o => { e.push(this.drawerContentMap.get(o)) }), e } showLoading() { document.querySelector(".height-cls-skeleton") || this.loadingPublisher.next(!0) } hideLoading() { document.querySelector(".height-cls-skeleton") && this.loadingPublisher.next(!1) } getCategoryInfo() { const i = window.location.href, e = this.categoryRoutePrefix; let o = i.substr(i.indexOf(e) + ((null == e ? void 0 : e.length) || 0)); -1 !== o.indexOf("?") && (o = o.substr(0, o.indexOf("?"))); const c = this.casinoLobbyService.getLobbyInfo(this.lobbyType).categoriesMap.get(o); return { categoryId: o, categoryName: null == c ? void 0 : c.engCategoryName } } trackEvent(i, e, o, r, c, d, f, y) { this.tracking.triggerEvent(i, { "component.CategoryEvent": e, "component.LabelEvent": o, "component.ActionEvent": r, "component.PositionEvent": c, "component.LocationEvent": d, "component.EventDetails": f, "component.URLClicked": y }) } emptyMap() { this.drawerContentMap && this.drawerContentMap.size > 0 && this.drawerContentMap.clear() } setCustomLinkDrawerContent() { var i; if (this.mapData) { let e = new Array; null === (i = this.mapData) || void 0 === i || i.mapItems.forEach(o => { var r; ((null === (r = o.subMap) || void 0 === r ? void 0 : r.subMapItems.filter(d => !(null == d ? void 0 : d.isGame) && "Drawer" === (null == d ? void 0 : d.customLinkType))) || []).forEach(d => { (null == d ? void 0 : d.customLinkDrawerContent) && e.push(...d.customLinkDrawerContent) }) }), e && e.length && this.fetchContent(e.filter(UtilHelper.onlyUnique)) } } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(PlatformApiService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U8N), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(UrlUtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.wrx), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(CasinoLobbyService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CookieService = (() => { class s { constructor() { this.isConsented = !1 } deleteCookie(i) { this.setCookie(i, "", -1) } getCookie(i) { const e = decodeURIComponent(document.cookie).split(";"), o = e.length, r = `${i}=`; let c; for (let d = 0; d < o; d += 1)if (c = e[d].replace(/^\s+/g, ""), 0 === c.indexOf(r)) return c.substring(r.length, c.length); return "" } setCookie(i, e, o, r = "") { const c = new Date; c.setTime(c.getTime() + 24 * o * 60 * 60 * 1e3); const d = `expires=${c.toUTCString()}`; document.cookie = `${i}=${e}; ${d}${r ? `; path=${r}` : ""}; SameSite=Lax` } consent(i, e, o, r) { if (!i) return this.isConsented; i && (this.setCookie(o, "1", r), this.isConsented = !0, e.preventDefault()) } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(); class CasinoCoreNpmParams { } class ProgressBar { constructor(h, i, e) { this.min = h, this.max = i, this.step = i / e, this.value = 0 } } class Wizard { constructor(h) { this.currentIndex = 0, this.totalItems = h, this.lastIndex = h - 1, this.showPrev = !1, this.progressBar = new ProgressBar(0, 100, h) } } class RecommendedGamesFilterModel { constructor() { this.answers = new Array } } class RecommendedGameModel { } var WizardType = (() => { return (s = WizardType || (WizardType = {}))[s.Questions = 0] = "Questions", s[s.Games = 1] = "Games", s[s.NoGamesFound = 2] = "NoGamesFound", WizardType; var s })(), ImageType = (() => { return (s = ImageType || (ImageType = {}))[s.SVG = 0] = "SVG", s[s.Image = 1] = "Image", s[s.Lottie = 2] = "Lottie", ImageType; var s })(); class GameShowHubDimension { } class GeolocationConfigurationModel { } class InstallerSettingsModel { } class OobeeIntimationModel { } class PublishLobbyModel { constructor() { } } class OutputEventModel { } let GeolocationInstallerModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.Is] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ providers: [{ provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI, useValue: {} }, { provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so, useValue: {} }], imports: [[_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.Is, _angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, ngx_popper_ng10__WEBPACK_IMPORTED_MODULE_26__.jz, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i, _frontend_vanilla_features_popper__WEBPACK_IMPORTED_MODULE_25__.C]] }), s })(), GeolocationValidationErrorModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.Is] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ providers: [{ provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI, useValue: {} }, { provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so, useValue: {} }], imports: [[_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.Is, _angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, ngx_popper_ng10__WEBPACK_IMPORTED_MODULE_26__.jz, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i]] }), s })(), ConfirmMessageModule = (() => { class s { static forRoot() { return { ngModule: s } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ providers: [{ provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI, useValue: {} }, { provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so, useValue: {} }], imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.Is]] }), s })(), CashierIframeModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ providers: [{ provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI, useValue: {} }, { provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so, useValue: {} }], imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, _angular_forms__WEBPACK_IMPORTED_MODULE_20__.UX, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.Is, _angular_cdk_table__WEBPACK_IMPORTED_MODULE_29__.HT, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i]] }), s })(), TrustUrlPipe = (() => { class s { constructor(i) { this.sanitizer = i } transform(i) { return this.sanitizer.bypassSecurityTrustResourceUrl(i) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_19__.H7, 16)) }, s.\u0275pipe = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yjl({ name: "trustUrl", type: s, pure: !0 }), s })(), CustomCarouselPaginationComponent = (() => { class s { constructor() { this.loop = !0, this.backgroundColor = !1, this.disableClick = !1 } paginationClick(i, e) { var o; if (this.disableClick || this.currentIndex === i) e.stopPropagation(), e.stopImmediatePropagation(); else { const r = this.loop ? i + 1 : i, c = (null === (o = this.carousel.swiperRef) || void 0 === o ? void 0 : o.slides.length) > r ? r : 0; this.carousel.swiperRef.slideTo(c) } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-custom-carousel-pagination"]], inputs: { loop: "loop", backgroundColor: "backgroundColor", disableClick: "disableClick", noOfItems: "noOfItems", currentIndex: "currentIndex", carousel: "carousel" }, decls: 3, vars: 6, consts: [[1, "swiper-custom-pagination"], [1, "swiper-pagination", "swiper-pagination-bullets"], [4, "ngFor", "ngForOf"], ["role", "button", 1, "swiper-pagination-bullet", 3, "click"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 0)(1, "div", 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(2, CustomCarouselPaginationComponent_ng_container_2_Template, 2, 2, "ng-container", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()()), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Udp("background-color", e.backgroundColor || ""), _angular_core__WEBPACK_IMPORTED_MODULE_3__.ekj("swiper-pagination-clickable", !e.disableClick), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_3__.DdM(5, _c13).constructor(e.noOfItems))) }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_15__.sg], encapsulation: 2 }), s })(), LongPressDirective = (() => { class s { constructor(i) { this.elementRef = i, this.threshold = 500, this.onMouseLongPress = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.vpe; const e = (0, rxjs__WEBPACK_IMPORTED_MODULE_30__.R)(this.elementRef.nativeElement, "touchstart").pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.U)(() => !0)), o = (0, rxjs__WEBPACK_IMPORTED_MODULE_30__.R)(this.elementRef.nativeElement, "touchend").pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.U)(() => !1)), r = (0, rxjs__WEBPACK_IMPORTED_MODULE_30__.R)(this.elementRef.nativeElement, "mousedown").pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.h)(d => 0 == d.button), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.U)(() => !0)), c = (0, rxjs__WEBPACK_IMPORTED_MODULE_30__.R)(this.elementRef.nativeElement, "mouseup").pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.h)(d => 0 == d.button), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.U)(() => !1)); this.eventSubscribe = (0, rxjs__WEBPACK_IMPORTED_MODULE_31__.T)(r, c, e, o).subscribe(d => this.onMouseLongPress.emit(d)) } ngOnDestroy() { this.eventSubscribe && this.eventSubscribe.unsubscribe() } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_core__WEBPACK_IMPORTED_MODULE_3__.SBq)) }, s.\u0275dir = _angular_core__WEBPACK_IMPORTED_MODULE_3__.lG2({ type: s, selectors: [["", "ccLongPress", ""]], outputs: { onMouseLongPress: "onMouseLongPress" } }), s })(), BroswerStateDirective = (() => { class s { constructor(i) { this.gameShowHubService = i } onBlur() { this.gameShowHubService.setLottieAnimationStatus(LottieAnimationStatus.Pause) } onFocus() { this.gameShowHubService.setLottieAnimationStatus(LottieAnimationStatus.Play) } onPointerDown() { this.gameShowHubService.setLottieAnimationStatus(LottieAnimationStatus.Play), this.checkIfIdle() } onKeyDown() { this.gameShowHubService.setLottieAnimationStatus(LottieAnimationStatus.Play), this.checkIfIdle() } ngOnInit() { this.checkIfIdle() } checkIfIdle() { clearTimeout(this.idleTimeout), this.idleTimeout = setTimeout(() => this.gameShowHubService.setLottieAnimationStatus(LottieAnimationStatus.Pause), this.idleTimeoutIn) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(GameShowHubService)) }, s.\u0275dir = _angular_core__WEBPACK_IMPORTED_MODULE_3__.lG2({ type: s, selectors: [["", "ccBrowserState", ""]], hostBindings: function (i, e) { 1 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("blur", function () { return e.onBlur() }, !1, _angular_core__WEBPACK_IMPORTED_MODULE_3__.Jf7)("focus", function () { return e.onFocus() }, !1, _angular_core__WEBPACK_IMPORTED_MODULE_3__.Jf7)("pointerdown", function () { return e.onPointerDown() })("keydown", function () { return e.onKeyDown() }) }, inputs: { idleTimeoutIn: "idleTimeoutIn" } }), s })(), DraggableDirective = (() => { class s { constructor(i, e) { this.elementRef = i, this.zone = e, this.moveOffset = window.devicePixelRatio, this.delta = { x: 0, y: 0 }, this.offset = { x: 0, y: 0 }, this.hidden = { x: 0, y: 0 }, this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_9__.x } ngOnChanges() { if (this.createDrag) switch (this.offset = UtilHelper.getTranslateValues(this.dragTarget), this.hidden = UtilHelper.getHiddenValues(this.dragTarget, this.dragContainer), this.dragLockAxis) { case "x": this.offset.x = 0, this.hidden.x = 0; break; case "y": this.offset.y = 0, this.hidden.y = 0 } } ngOnInit() { this.dragHandle = this.elementRef.nativeElement, this.setupEvents() } ngOnDestroy() { this.destroyEvents() } destroyEvents() { this.destroy$.next(), this.destroy$.complete() } setupEvents() { this.zone.runOutsideAngular(() => { const i = new Hammer.Manager(this.dragHandle, { recognizers: [[Hammer.Pan, { direction: Hammer.DIRECTION_ALL, threshold: 0 }]] }), e = (0, rxjs__WEBPACK_IMPORTED_MODULE_30__.R)(i, "panstart"), o = (0, rxjs__WEBPACK_IMPORTED_MODULE_30__.R)(i, "panmove"), r = (0, rxjs__WEBPACK_IMPORTED_MODULE_30__.R)(i, "panend"); e.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.R)(this.destroy$), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_32__.w)(d => { let f, y; return d.preventDefault(), this.disableDrag || (this.isDragging = !0, f = d.deltaX, y = d.deltaY), o.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.U)(M => { M.preventDefault(), this.disableDrag || (this.delta = { x: M.deltaX - f, y: M.deltaY - y }) }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.R)(r)) })).subscribe(() => { this.drag() }), r.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.R)(this.destroy$)).subscribe(d => { d.preventDefault(), this.dragEnd() }) }) } get hasMovedFarEnough() { return Math.abs(this.delta.x) >= this.moveOffset || Math.abs(this.delta.y) >= this.moveOffset } drag() { if (!(0 === this.delta.x && 0 === this.delta.y || this.disableDrag)) { switch (this.dragLockAxis) { case "x": this.offset.x = 0, this.delta.x = 0, this.hidden.x = 0; break; case "y": this.offset.y = 0, this.delta.y = 0, this.hidden.y = 0 }this.isDragging && this.hasMovedFarEnough && this.translate() } } dragEnd() { if (!this.isDragging || this.disableDrag) return; this.offset.x += this.delta.x, this.offset.y += this.delta.y, this.delta = { x: 0, y: 0 }; const i = { x: !1, y: !1 }; let e; this.offset.x > 0 ? (i.x = !0, this.offset.x = 0) : this.hidden.x < Math.abs(this.offset.x) && (i.x = !0, this.offset.x = -(this.hidden.x + 0)), this.offset.y > 0 ? (i.y = !0, this.offset.y = 0) : this.hidden.y < Math.abs(this.offset.y) && (i.y = !0, e = !0, this.offset.y = -(this.hidden.y + 0)), this.isDragging = !1, this.dragHandle.classList.remove("is-dragging"), this.translate(), e && !this.dragLockAxis && window.scroll(0, 60) } translate() { requestAnimationFrame(() => { this.isDragging ? this.dragHandle.classList.add("is-dragging") : this.dragHandle.classList.remove("is-dragging"), this.dragTarget.style.transform = `translate3d(${this.offset.x + this.delta.x}px, ${this.offset.y + this.delta.y}px, 0px)` }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_core__WEBPACK_IMPORTED_MODULE_3__.SBq), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_core__WEBPACK_IMPORTED_MODULE_3__.R0b)) }, s.\u0275dir = _angular_core__WEBPACK_IMPORTED_MODULE_3__.lG2({ type: s, selectors: [["", "ccDraggable", ""]], inputs: { dragContainer: "dragContainer", dragTarget: "dragTarget", dragLockAxis: "dragLockAxis", createDrag: "createDrag", disableDrag: "disableDrag" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__.TTD] }), s })(), DirectivesModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i]] }), s })(), ImageLoaderModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ imports: [[_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i, _angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, DirectivesModule, ng_lazyload_image__WEBPACK_IMPORTED_MODULE_24__.mZ]] }), s })(), GameEmbedModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i, DirectivesModule, ImageLoaderModule]] }), s })(), SearchDesktopModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, DirectivesModule, _angular_forms__WEBPACK_IMPORTED_MODULE_20__.u5, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i, _frontend_vanilla_common__WEBPACK_IMPORTED_MODULE_18__.I8]] }), s })(), EmbeddedGameViewModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i, DirectivesModule, GameEmbedModule, SearchDesktopModule, _frontend_vanilla_features_message_panel__WEBPACK_IMPORTED_MODULE_17__.w]] }), s })(), EmbeddedGamePopupModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ providers: [{ provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI, useValue: {} }, { provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so, useValue: {} }], imports: [[_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i, _angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.Is, EmbeddedGameViewModule]] }), s })(), HeaderBoxModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i, DirectivesModule]] }), s })(), GameDetailModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ providers: [{ provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.WI, useValue: {} }, { provide: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.so, useValue: {} }], imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, DirectivesModule, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__.Is, HeaderBoxModule, _frontend_vanilla_features_message_panel__WEBPACK_IMPORTED_MODULE_17__.w, _frontend_vanilla_common__WEBPACK_IMPORTED_MODULE_18__.I8]] }), s })(), LCTimerComponent = (() => { class s { constructor(i, e) { this.timerService = i, this.timeZoneService = e, this.showDays = !1, this.daysDisplayText = null, this.showTimer = !0, this.onTimerEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.vpe } ngOnInit() { } ngOnChanges() { this.displayTime = this.startTime; const i = this; this.timerInstance || (this.timerInstance = this.timerService.setIntervalOutsideAngularZone(() => { const e = this.timeZoneService.getSecondsFromTimeString(i.displayTime); 0 === e && (this.timerService.clearInterval(this.timerInstance), this.onTimerEnd.emit(!0)), i.displayTime = this.timeZoneService.formatTimeFromSeconds(e - 1) }, 1e3)) } get time() { if (!this.showDays) return this.displayTime; const i = this.timeZoneService.getSecondsFromTimeString(this.displayTime), e = Math.ceil(i / 86400); return e > 1 ? e - 1 + (this.daysDisplayText ? " " + this.daysDisplayText : "") : this.displayTime } ngOnDestroy() { this.timerService.clearInterval(this.timerInstance) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.fWh), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(TimeZoneService)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-lc-timer"]], inputs: { showDays: "showDays", daysDisplayText: "daysDisplayText", showTimer: "showTimer", startTime: "startTime" }, outputs: { onTimerEnd: "onTimerEnd" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__.TTD], decls: 1, vars: 1, consts: [[4, "ngIf"]], template: function (i, e) { 1 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(0, LCTimerComponent_ng_container_0_Template, 2, 1, "ng-container", 0), 2 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", e.showTimer) }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_15__.O5], encapsulation: 2 }), s })(), LCTimerModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i]] }), s })(), SitecoreImageResizePipe = (() => { class s { constructor(i) { this.configProvider = i } transform(i) { let e = this.configProvider.provideImageLoadOptimizationClientConfig(); if (e && e.isDynamicResizingEnabled && e.dynamicResizingQueryString && e.dynamicResizingQueryString.length > 0 && !this.isImageRezied(i)) { let o = (-1 !== i.indexOf("?") ? "&" : "?") + e.dynamicResizingQueryString; i += o } return i } isImageRezied(i) { return -1 !== i.indexOf("resized=true") } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService, 16)) }, s.\u0275pipe = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yjl({ name: "sitecore_image_resize", type: s, pure: !0 }), s })(), CultureDatePipe = (() => { class s { constructor(i, e) { this.configProviderService = i, this.intlService = e } transform(i) { let e = this.configProviderService.provideFeaturesConfig(); return i && e.enableLocalDateTimeFormat && (i = this.intlService.formatDate(i, "mediumDate") + " " + this.intlService.formatDate(i, "shortTime")), i } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService, 16), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.aJW, 16)) }, s.\u0275pipe = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yjl({ name: "cultureDate", type: s, pure: !0 }), s })(), SafePipe = (() => { class s { constructor(i) { this.sanitizer = i } transform(i, e) { if (i) try { switch (e) { case "html": default: return this.sanitizer.bypassSecurityTrustHtml(i); case "style": return this.sanitizer.bypassSecurityTrustStyle(i); case "script": return this.sanitizer.bypassSecurityTrustScript(i); case "url": return this.sanitizer.bypassSecurityTrustUrl(i); case "resourceUrl": return this.sanitizer.bypassSecurityTrustResourceUrl(i) } } catch (o) { } } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_19__.H7, 16)) }, s.\u0275pipe = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yjl({ name: "safe", type: s, pure: !0 }), s })(), PipesModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ imports: [[]] }), s })(), GifTagComponent = (() => { class s { constructor(i, e, o, r, c) { this.casinoManager = i, this.navigation = e, this.casinoCoreGamelaunchService = o, this.configProviderService = r, this.casinoLobbyService = c, this.gameObj = {}, this.isTouch = this.casinoManager.isTouch(); let d = this.configProviderService.provideMcPageConfig(); this.videoLaunchRealtiveUri = "/" + d.labelPrefix + "/launchng/" } ngOnInit() { this.imageThumbnailSrc = this.imageThumbnail && this.imageThumbnail.src ? this.imageThumbnail.src : "" } launchGame() { let i; i = "gif" == this.type ? "Netflix_gif" : "Netflix_svg"; let e = new GameLaunch, o = this.getGameIdFromLaunchUrl(this.launchUrl.url); e.game = this.casinoLobbyService.getGameInfo(o), e.game.gameId = o, e.game.lobbyType = this.lobbyType, e.isTouch = this.isTouch, e.gamePosition = 1, e.categoryType = this.subcategory, e.from = "q", e.replaceRouteInHistory = !1, e.isDemoLaunch = !1, e.skipUnfinGame = !1, e.gameLaunchedFrom = "Netflix_Video", e.gridPosition = 1, e.gameSection = i, e.gameContainer = this.gameContainer, e.returnUrl = window.location.href, e.clickTimeStamp = this.casinoCoreGamelaunchService.currentTimeStamp(), this.launchUrl && (this.isGameUrl(this.launchUrl.url) ? this.casinoCoreGamelaunchService.launchGame(e) : this.navigation.goTo(this.launchUrl.url)) } getGameIdFromLaunchUrl(i) { return i.substr(i.indexOf(this.videoLaunchRealtiveUri) + this.videoLaunchRealtiveUri.length) } isGameUrl(i) { return i.indexOf(this.videoLaunchRealtiveUri) > 0 } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoManager), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.f5Y), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoCoreGamelaunchService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(ConfigProviderService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(CasinoLobbyService)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-gif-tag"]], inputs: { url: "url", imageThumbnail: "imageThumbnail", type: "type", launchUrl: "launchUrl", subcategory: "subcategory", lobbyType: "lobbyType", gameContainer: "gameContainer", videoBoxContent: "videoBoxContent" }, decls: 2, vars: 2, consts: [["class", "gif", 3, "click", 4, "ngIf"], ["class", "svg", 3, "click", 4, "ngIf"], [1, "gif", 3, "click"], [3, "src", "lazyLoad"], [1, "svg", 3, "click"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(0, GifTagComponent_div_0_Template, 2, 2, "div", 0), _angular_core__WEBPACK_IMPORTED_MODULE_3__.YNc(1, GifTagComponent_div_1_Template, 2, 2, "div", 1)), 2 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", "gif" == e.type), _angular_core__WEBPACK_IMPORTED_MODULE_3__.xp6(1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Q6J("ngIf", "svg" == e.type)) }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_15__.O5, ng_lazyload_image__WEBPACK_IMPORTED_MODULE_24__.z1], encapsulation: 2 }), s })(), GifTagModule = (() => { class s { static forRoot() { return { ngModule: s, providers: [] } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i, ng_lazyload_image__WEBPACK_IMPORTED_MODULE_24__.mZ]] }), s })(), CoreModule = (() => { class s { static forRoot() { return { ngModule: s } } } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, _frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.b9i, GeolocationInstallerModule, GeolocationValidationErrorModule, ConfirmMessageModule, CashierIframeModule, EmbeddedGamePopupModule, EmbeddedGameViewModule, DirectivesModule, GameDetailModule, GameEmbedModule, HeaderBoxModule, ImageLoaderModule, SearchDesktopModule, LCTimerModule, PipesModule, GifTagModule, _frontend_vanilla_features_login_duration__WEBPACK_IMPORTED_MODULE_28__.LoginDurationModule], GeolocationInstallerModule, GeolocationValidationErrorModule, ConfirmMessageModule, CashierIframeModule, EmbeddedGamePopupModule, EmbeddedGameViewModule, DirectivesModule, GameDetailModule, GameEmbedModule, HeaderBoxModule, ImageLoaderModule, SearchDesktopModule, LCTimerModule, PipesModule, GifTagModule] }), s })(), SlotRacesTrackingService = (() => { class s { constructor(i) { this.trackingService = i } track(i, e, o, r) { this.trackingService.triggerEvent("Event.Tracking", { "component.CategoryEvent": "Slots", "component.LabelEvent": "Race Cards", "component.ActionEvent": i, "component.PositionEvent": e, "component.LocationEvent": o, "component.EventDetails": r, "component.URLClicked": "not applicable" }) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.e2C)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(); const LEADERBOARD_COLUMNS_DISPLAYED = ["rank", "prize", "prize-img", "player", "points"]; let OobeeIntimationToasterService = (() => { class s { constructor(i, e, o, r, c) { this._toasterService = i, this.geolocationActivator = e, this._userService = o, this._geolocationTrackingService = r, this.configProviderService = c } display() { let i = this.configProviderService.provideGeoLocationConfig(); this._userService.isAuthenticated && this.geolocationActivator.isActive && i.oobeeIntimation.isEnabled && i.oobeeIntimation.toasterId && (this._toasterService.add(i.oobeeIntimation.toasterId), this._geolocationTrackingService.track("GeoGaurdApp_Toaster", "Toaster_Loaded", "After Login")) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.RAA), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GeolocationActivatorService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.KDu), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(GeolocationTrackingService), _angular_core__WEBPACK_IMPORTED_MODULE_3__.LFG(ConfigProviderService)) }, s.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Yz7({ token: s, factory: s.\u0275fac, providedIn: "root" }), s })(), CarouselItemComponent = (() => { class s { } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-carousel-item"]], ngContentSelectors: _c14, decls: 1, vars: 0, template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.F$t(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Hsn(0)) }, encapsulation: 2 }), s })(); swiper__WEBPACK_IMPORTED_MODULE_2__.ZP.use([swiper__WEBPACK_IMPORTED_MODULE_2__.tl, swiper__WEBPACK_IMPORTED_MODULE_2__.W_, swiper__WEBPACK_IMPORTED_MODULE_2__.pt]); const PAGINATION_CONFIG = { el: ".swiper-pagination", clickable: !0, hideOnClick: !1 }, AUTOPLAY_CONFIG = { disableOnInteraction: !1 }, NOT_DUPLICATE_SLIDES_SELECTOR = ":not(.swiper-slide-duplicate)"; let CarouselComponent = (() => { class s { constructor(i, e) { this.deviceService = i, this.elementRef = e, this.interval = 0, this.cssClasses = "", this.slidesPerView = 0, this.slidesPerGroup = 0, this.spaceBetween = 0, this.identifierClass = "", this.indexChangedEvent = new rxjs__WEBPACK_IMPORTED_MODULE_9__.x, this.endReachedEvent = new rxjs__WEBPACK_IMPORTED_MODULE_9__.x, this.config = { speed: 1e3, navigation: !0, pagination: !1, autoplay: { delay: 3500, disableOnInteraction: !1, stopOnLastSlide: !0 }, watchSlidesProgress: !0, watchOverflow: !0, observer: !0, observeParents: !0 }, this.destroySubject = new rxjs__WEBPACK_IMPORTED_MODULE_9__.x } get swiperRef() { return this.checkIfSwiperCreated() } get class() { return `cc-carousel ${this.identifierClass || ""} ${this.cssClasses || ""}` } ngOnInit() { setTimeout(() => { this.checkIfSwiperCreated(), this.initialize() }) } ngAfterContentInit() { this.items.changes.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.R)(this.destroySubject)).subscribe(() => { setTimeout(() => { this.initialize() }) }) } ngOnChanges() { this.config && this.initialize() } ngOnDestroy() { this.destroySubject.next(!0), this.destroySubject.complete() } initialize() { this.arrows = this.arrows && !this.deviceService.isTouch, this.setConfig(), this.refreshCarousel() } mouseHover(i) { this.autoplay && this.pauseOnHover && (i ? this.swiperRef.autoplay.stop() : this.swiperRef.autoplay.start()) } indexChanged(i) { this.indexChangedEvent.next(i) } reachEnd() { this.endReachedEvent.next(!0) } slideChangeStart() { const i = this.swiperRef.slides, e = this.swiperRef.activeIndex, o = this.swiperRef.realIndex; i.length && i[e].classList.contains(this.swiperRef.params.slideDuplicateClass) && (i[e].innerHtml = i[o].innerHTML) } slideChangeEnd() { this.swiperRef.slides[this.swiperRef.activeIndex].classList.contains(this.swiperRef.params.slideDuplicateClass) && this.swiperRef.slideToLoop(this.swiperRef.realIndex, 0, !1) } refreshCarousel() { const i = this.getSlidesCount(); i && i <= this.slidesPerView ? (this.config.loop = !1, this.config.pagination = !1) : (this.config.loop = this.loop, this.config.pagination = !!this.dots && PAGINATION_CONFIG) } getSlidesCount() { return this.swiperRef.slides.length } setConfig() { let i = this; this.autoplay = null == this.autoplay || this.autoplay, this.stopAutoplayOnLastSlide = null == this.stopAutoplayOnLastSlide || this.stopAutoplayOnLastSlide, this.loop = null == this.loop || this.loop, this.arrows = null != this.arrows && this.arrows, this.dots = null != this.dots && this.dots, this.pauseOnHover = null == this.pauseOnHover || this.pauseOnHover, this.interval = this.interval || 3500, this.slidesPerView = this.slidesPerView || 1, this.slidesPerGroup = this.slidesPerGroup || 1, this.spaceBetween = this.spaceBetween || 0, this.freeMode = null != this.freeMode && this.freeMode, this.touchMove = null == this.touchMove || this.touchMove, this.config = { autoplay: !!this.autoplay && Object.assign({ delay: this.interval, stopOnLastSlide: this.stopAutoplayOnLastSlide }, AUTOPLAY_CONFIG), navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, pagination: !!this.dots && PAGINATION_CONFIG, loop: this.loop, slidesPerView: this.slidesPerView, slidesPerGroup: this.slidesPerGroup, spaceBetween: this.spaceBetween, freeMode: this.freeMode, allowTouchMove: this.touchMove, effect: this.effect, grabCursor: this.grabCursor, centeredSlides: this.centeredSlides, slideToClickedSlide: this.slideToClickedSlide, observer: !0, observeParents: !0, on: { slideChange: function (e) { i.indexChanged(null == e ? void 0 : e.activeIndex) }, reachEnd: function () { i.reachEnd() }, slideChangeTransitionStart: function () { i.slideChangeStart() }, slideChangeTransitionEnd: function () { i.slideChangeEnd() } } }, this.update() } update() { this.swiperRef.update() } checkIfSwiperCreated() { return this.instance ? this.instance : this.instance = new swiper__WEBPACK_IMPORTED_MODULE_2__.ZP(this.elementRef.nativeElement.children[0], this.config) } } return s.\u0275fac = function (i) { return new (i || s)(_angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_frontend_vanilla_core__WEBPACK_IMPORTED_MODULE_4__.U8N), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Y36(_angular_core__WEBPACK_IMPORTED_MODULE_3__.SBq)) }, s.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_3__.Xpm({ type: s, selectors: [["cc-carousel"]], contentQueries: function (i, e, o) { if (1 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.Suo(o, CarouselItemComponent, 4), 2 & i) { let r; _angular_core__WEBPACK_IMPORTED_MODULE_3__.iGM(r = _angular_core__WEBPACK_IMPORTED_MODULE_3__.CRH()) && (e.items = r) } }, viewQuery: function (i, e) { if (1 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.Gf(_c15, 5), 2 & i) { let o; _angular_core__WEBPACK_IMPORTED_MODULE_3__.iGM(o = _angular_core__WEBPACK_IMPORTED_MODULE_3__.CRH()) && (e.refSwiper = o.first) } }, hostVars: 1, hostBindings: function (i, e) { 2 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.uIk("class", e.class) }, inputs: { autoplay: "autoplay", interval: "interval", stopAutoplayOnLastSlide: "stopAutoplayOnLastSlide", loop: "loop", arrows: "arrows", dots: "dots", pauseOnHover: "pauseOnHover", cssClasses: "cssClasses", slidesPerView: "slidesPerView", slidesPerGroup: "slidesPerGroup", spaceBetween: "spaceBetween", freeMode: "freeMode", identifierClass: "identifierClass", touchMove: "touchMove", effect: "effect", grabCursor: "grabCursor", centeredSlides: "centeredSlides", slideToClickedSlide: "slideToClickedSlide" }, outputs: { indexChangedEvent: "indexChangedEvent", endReachedEvent: "endReachedEvent" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__.TTD], ngContentSelectors: _c14, decls: 7, vars: 2, consts: [[1, "swiper", 3, "mouseenter", "mouseleave"], ["refSwiper", ""], [1, "swiper-wrapper"], [1, "swiper-pagination"], [1, "swiper-button-prev"], [1, "swiper-button-next"]], template: function (i, e) { 1 & i && (_angular_core__WEBPACK_IMPORTED_MODULE_3__.F$t(), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(0, "div", 0, 1), _angular_core__WEBPACK_IMPORTED_MODULE_3__.NdJ("mouseenter", function () { return e.mouseHover(!0) })("mouseleave", function () { return e.mouseHover(!1) }), _angular_core__WEBPACK_IMPORTED_MODULE_3__.TgZ(2, "div", 2), _angular_core__WEBPACK_IMPORTED_MODULE_3__.Hsn(3), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA(), _angular_core__WEBPACK_IMPORTED_MODULE_3__._UZ(4, "div", 3)(5, "div", 4)(6, "div", 5), _angular_core__WEBPACK_IMPORTED_MODULE_3__.qZA()), 2 & i && _angular_core__WEBPACK_IMPORTED_MODULE_3__.ekj("swiperNoNavigation", !e.arrows) }, encapsulation: 2 }), s })(), CarouselModule = (() => { class s { } return s.\u0275fac = function (i) { return new (i || s) }, s.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_3__.oAB({ type: s }), s.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_3__.cJS({ providers: [], imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_15__.ez, swiper_angular__WEBPACK_IMPORTED_MODULE_33__.kz]] }), s })() }, 15311: (s, h, i) => { "use strict"; i.d(h, { _H: () => qt, su: () => Qe, T4: () => bt, I4: () => Pi }); var e = i(3184), o = i(36362), r = i(95758), c = i(43672), d = i(55600), f = i(23875), y = i(20639), M = i(34314), T = i(38805), P = i(50253), G = i(26562), x = i(68951), R = i(72028), J = i(28775), W = i(67603); const Q = function () { return { preserveAspectRatio: "xMinYMin slice" } }, Z = function (I, Y) { return { path: I, renderer: "canvas", renderSettings: Y } }; function N(I, Y) { if (1 & I && e._UZ(0, "img", 3), 2 & I) { const v = e.oxw(); e.Q6J("src", v.tiltingImageUrl, e.LSH) } } function ae(I, Y) { if (1 & I && e._UZ(0, "p", 4), 2 & I) { const v = e.oxw(); e.Q6J("textContent", v.tiltingMessage) } } const re = ["onboardingCarousel"]; function ce(I, Y) { if (1 & I && e._UZ(0, "img", 15), 2 & I) { const v = e.oxw(3); e.Q6J("src", v.onboardingInfo.actorImage.src + "?w=299&h=312", e.LSH)("alt", v.onboardingInfo.actorImage.alt) } } const _e = function (I) { return { "background-image": I } }; function le(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "div", 2), e.ALo(1, "sitecore_image_resize"), e.TgZ(2, "div", 3)(3, "div", 4), e.NdJ("click", function (D) { return e.CHM(v), e.oxw(2).onCloseModal(D) }), e.qZA(), e.TgZ(4, "div", 5), e._UZ(5, "span", 6), e.qZA()(), e.TgZ(6, "div", 7)(7, "div", 8)(8, "div", 9), e.YNc(9, ce, 1, 2, "img", 10), e.qZA(), e.TgZ(10, "div", 11), e._UZ(11, "span", 6), e.qZA()()(), e.TgZ(12, "div", 12)(13, "div", 13)(14, "div", 14), e.NdJ("click", function (D) { return e.CHM(v), e.oxw(2).onGetStarted(D) }), e.qZA()()()() } if (2 & I) { const v = e.oxw(2); e.Udp("color", (null == v.onboardingInfo.styles ? null : v.onboardingInfo.styles.textColor) || "")("background-color", (null == v.onboardingInfo.styles ? null : v.onboardingInfo.styles.backgroundColor) || ""), e.Q6J("ngStyle", e.VKq(17, _e, "url(" + (null != v.onboardingInfo && v.onboardingInfo.backgroundImage ? e.lcZ(1, 15, v.onboardingInfo.backgroundImage.src) : "") + ")")), e.xp6(3), e.Udp("background-color", (null == v.onboardingInfo.styles ? null : v.onboardingInfo.styles.backgroundColor) || ""), e.xp6(2), e.Udp("background-color", (null == v.onboardingInfo.styles ? null : v.onboardingInfo.styles.backgroundColor) || ""), e.Q6J("vnDynamicHtml", v.onboardingInfo.title), e.xp6(4), e.Q6J("ngIf", null == v.onboardingInfo.actorImage ? null : v.onboardingInfo.actorImage.src), e.xp6(2), e.Udp("background-color", (null == v.onboardingInfo.styles ? null : v.onboardingInfo.styles.backgroundColor) || ""), e.Q6J("vnDynamicHtml", v.onboardingInfo.subTitle), e.xp6(3), e.Q6J("textContent", v.onboardingInfo.ctaText) } } function be(I, Y) { if (1 & I && (e.ynx(0), e.YNc(1, le, 15, 19, "div", 1), e.BQk()), 2 & I) { const v = e.oxw(); e.xp6(1), e.Q6J("ngIf", v.onboardingInfo) } } function xe(I, Y) { if (1 & I && e._UZ(0, "img", 15), 2 & I) { const v = e.oxw(2).$implicit; e.Q6J("src", v.actorImage.src + "?w=299&h=312", e.LSH)("alt", v.actorImage.alt) } } function De(I, Y) { if (1 & I && (e.TgZ(0, "div", 8)(1, "div", 9), e.YNc(2, xe, 1, 2, "img", 10), e.qZA(), e.TgZ(3, "div", 11), e._UZ(4, "span", 6), e.qZA()()), 2 & I) { const v = e.oxw().$implicit, C = e.oxw(2); e.xp6(2), e.Q6J("ngIf", null == v.actorImage ? null : v.actorImage.src), e.xp6(2), e.Udp("background-color", (null == C.tourItem.styles ? null : C.tourItem.styles.backgroundColor) || ""), e.Q6J("vnDynamicHtml", v.subTitle) } } function Oe(I, Y) { 1 & I && e.YNc(0, De, 5, 4, "ng-template", 22) } function ge(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "div", 23), e.NdJ("click", function () { return e.CHM(v), e.oxw(2).onPrevious() }), e.qZA() } if (2 & I) { const v = e.oxw(2); e.Udp("color", (null == v.tourItem.styles ? null : v.tourItem.styles.textColor) || ""), e.Q6J("textContent", v.tourItem.secondaryCTAText) } } function Se(I, Y) { 1 & I && e._UZ(0, "span") } function Te(I, Y) { if (1 & I) { const v = e.EpF(); e.ynx(0), e.TgZ(1, "div", 2), e.ALo(2, "sitecore_image_resize"), e.TgZ(3, "div", 3)(4, "div", 4), e.NdJ("click", function (D) { return e.CHM(v), e.oxw().onCloseModal(D) }), e.qZA(), e.TgZ(5, "div", 5), e._UZ(6, "span", 6), e.qZA()(), e.TgZ(7, "div", 7)(8, "swiper", 16, 17), e.YNc(10, Oe, 1, 0, null, 18), e.qZA()(), e.TgZ(11, "div", 12), e._UZ(12, "cc-custom-carousel-pagination", 19), e.TgZ(13, "div", 13), e.YNc(14, ge, 1, 3, "div", 20), e.YNc(15, Se, 1, 0, "span", 0), e.TgZ(16, "div", 21), e.NdJ("click", function (D) { return e.CHM(v), e.oxw().onNext(D) }), e.qZA()()()(), e.BQk() } if (2 & I) { const v = e.oxw(); e.xp6(1), e.Udp("color", (null == v.tourItem.styles ? null : v.tourItem.styles.textColor) || "")("background-color", (null == v.tourItem.styles ? null : v.tourItem.styles.backgroundColor) || ""), e.Q6J("ngStyle", e.VKq(25, _e, "url(" + (v.tourItem.backgroundImage ? e.lcZ(2, 23, v.tourItem.backgroundImage.src) : "") + ")")), e.xp6(3), e.Udp("background-color", (null == v.onboardingInfo.styles ? null : v.onboardingInfo.styles.backgroundColor) || ""), e.xp6(2), e.Udp("background-color", (null == v.tourItem.styles ? null : v.tourItem.styles.backgroundColor) || ""), e.Q6J("vnDynamicHtml", v.tourItem.title), e.xp6(2), e.Q6J("allowTouchMove", !1)("loop", !1)("autoplay", !1), e.xp6(2), e.Q6J("ngForOf", v.onboardingInfo.tourItems), e.xp6(2), e.Q6J("noOfItems", v.wizard.totalItems)("currentIndex", v.wizard.currentIndex)("loop", !1)("disableClick", !0)("backgroundColor", null == v.tourItem.styles ? null : v.tourItem.styles.backgroundColor)("carousel", v.carouselRef), e.xp6(2), e.Q6J("ngIf", v.wizard.currentIndex), e.xp6(1), e.Q6J("ngIf", !v.wizard.currentIndex), e.xp6(1), e.Q6J("textContent", v.tourItem.primaryCTAText) } } function Le(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "img", 4), e.NdJ("load", function () { return e.CHM(v), e.oxw().onAnimatedLayerLoaded() }), e.qZA() } if (2 & I) { const v = e.oxw(); e.Q6J("src", v.map.layeredImage.src, e.LSH)("alt", v.map.layeredImage.alt) } } const Pe = function (I, Y) { return { path: I, renderer: Y } }; function V(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "ng-lottie", 5), e.NdJ("domLoaded", function () { return e.CHM(v), e.oxw().onAnimatedLayerLoaded() })("animationCreated", function (D) { return e.CHM(v), e.oxw().onAnimatedLayerCreated(D) }), e.qZA() } if (2 & I) { const v = e.oxw(); e.Q6J("options", e.WLB(1, Pe, v.map.lottieImage, v.renderer)) } } function ne(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "img", 2), e.NdJ("load", function () { return e.CHM(v), e.oxw().isLoading = !1 }), e.qZA() } if (2 & I) { const v = e.oxw(); e.Q6J("src", null == v.subMapItem.customLinkIcon ? null : v.subMapItem.customLinkIcon.src, e.LSH)("alt", null == v.subMapItem.customLinkIcon ? null : v.subMapItem.customLinkIcon.alt) } } function k(I, Y) { if (1 & I && e._UZ(0, "div", 10), 2 & I) { const v = e.oxw(2); e.Q6J("textContent", v.subMapItem.schedule) } } function $(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "div", 11)(1, "cc-lc-timer", 12), e.NdJ("onTimerEnd", function (D) { return e.CHM(v), e.oxw(2).onTimerEnd(D) }), e.qZA()() } if (2 & I) { const v = e.oxw(2); e.xp6(1), e.Q6J("startTime", v.subMapItem.schedule)("showDays", !0)("daysDisplayText", v.daysDisplayText) } } const ie = function (I) { return { color: I } }; function ve(I, Y) { if (1 & I && (e.TgZ(0, "div", 5), e._UZ(1, "div", 6), e.TgZ(2, "div", 7), e.YNc(3, k, 1, 1, "div", 8), e.YNc(4, $, 2, 3, "div", 9), e.qZA()()), 2 & I) { const v = e.oxw(); e.ekj("offline-timer-fallback-icon", v.subMapItem.isGameIconFallback)("offline-timer-square-icon", v.subMapItem.isSquareIcon), e.xp6(1), e.Q6J("ngStyle", e.VKq(8, ie, null == v.globalClrConfig ? null : v.globalClrConfig.offlineTableTextClr))("textContent", null == v.globalConfig ? null : v.globalConfig.offlineTableContent), e.xp6(2), e.Q6J("ngIf", !v.subMapItem.showTimer), e.xp6(1), e.Q6J("ngIf", v.subMapItem.showTimer) } } const Me = function (I) { return [I] }, de = function (I) { return { cursor: I } }, Ye = function (I) { return { "gshub-saturate": I } }, Ze = ["scrollerContainer"]; function F(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "div", 8), e.NdJ("click", function (D) { return e.CHM(v), e.oxw().onCloseModal(D) }), e.qZA() } if (2 & I) { const v = e.oxw(); e.Q6J("ngStyle", e.VKq(1, ie, null == v.selectedEntity || null == v.selectedEntity.constantMessages ? null : v.selectedEntity.constantMessages.CustomLinkDrawerHeaderClr)) } } function Pt(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "div", 9), e.NdJ("click", function (D) { return e.CHM(v), e.oxw().onCloseModal(D) }), e._uU(1, "Close"), e.qZA() } if (2 & I) { const v = e.oxw(); e.Q6J("ngStyle", e.VKq(1, ie, null == v.selectedEntity || null == v.selectedEntity.constantMessages ? null : v.selectedEntity.constantMessages.CustomLinkDrawerHeaderClr)) } } function It(I, Y) { 1 & I && (e.ynx(0), e.TgZ(1, "div", 10)(2, "div", 11), e._UZ(3, "div", 12), e.TgZ(4, "div", 13), e._UZ(5, "div", 14)(6, "div", 15), e.qZA()()(), e.TgZ(7, "div", 10)(8, "div", 11), e._UZ(9, "div", 12), e.TgZ(10, "div", 13), e._UZ(11, "div", 14)(12, "div", 15), e.qZA()()(), e.BQk()) } function oi(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "div", 23), e.NdJ("click", function (D) { e.CHM(v); const w = e.oxw(2).$implicit; return e.oxw(2).onOpenOnboarding(w, D) }), e.qZA() } if (2 & I) { const v = e.oxw(2).$implicit; e.Q6J("textContent", v.onboardingCTAText) } } function ni(I, Y) { if (1 & I && (e.TgZ(0, "div", 19)(1, "div", 20), e._UZ(2, "h1", 21), e.YNc(3, oi, 1, 1, "div", 22), e.qZA(), e._UZ(4, "p", 21), e.qZA()), 2 & I) { const v = e.oxw().$implicit, C = e.oxw(2); e.xp6(2), e.Q6J("vnDynamicHtml", v.title), e.xp6(1), e.Q6J("ngIf", C.showOnboardingCTA), e.xp6(1), e.Q6J("vnDynamicHtml", v.content) } } function Nt(I, Y) { if (1 & I && (e.TgZ(0, "div", 32), e._UZ(1, "span", 33), e.qZA()), 2 & I) { const v = e.oxw(3).$implicit; e.xp6(1), e.Q6J("textContent", v.terms) } } const Kt = function (I) { return { "gshub-nocta": I } }; function ai(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "div", 29)(1, "img", 30), e.NdJ("click", function (D) { e.CHM(v); const w = e.oxw(2).$implicit, H = e.oxw(2); return w.cta ? "" : w.boxLink ? H.onClick(w, w.boxLink, D) : "" }), e.qZA(), e.YNc(2, Nt, 2, 1, "div", 31), e.qZA() } if (2 & I) { const v = e.oxw(2).$implicit; e.xp6(1), e.Q6J("src", v.image.src + "?h=157", e.LSH)("alt", v.image.src)("ngClass", e.VKq(4, Kt, !(null != v.cta && v.cta.text))), e.xp6(1), e.Q6J("ngIf", v.terms) } } function Dt(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "div", 34), e.NdJ("click", function (D) { e.CHM(v); const w = e.oxw(2).$implicit; return e.oxw(2).onClick(w, w.cta, D) }), e.qZA() } if (2 & I) { const v = e.oxw(2).$implicit; e.Q6J("textContent", v.cta.text) } } function Jt(I, Y) { if (1 & I && (e.TgZ(0, "div", 24), e.YNc(1, ai, 3, 6, "div", 25), e.TgZ(2, "div", 26), e._UZ(3, "h1", 21)(4, "div", 27), e.YNc(5, Dt, 1, 1, "div", 28), e.qZA()()), 2 & I) { const v = e.oxw().$implicit; e.xp6(1), e.Q6J("ngIf", v.image), e.xp6(2), e.Q6J("vnDynamicHtml", v.title), e.xp6(1), e.Q6J("vnDynamicHtml", v.content), e.xp6(1), e.Q6J("ngIf", v.cta) } } function Yt(I, Y) { if (1 & I && (e.ynx(0), e.YNc(1, ni, 5, 3, "div", 17), e.YNc(2, Jt, 6, 4, "div", 18), e.BQk()), 2 & I) { const v = Y.$implicit; e.xp6(1), e.Q6J("ngIf", v.isOnboarding), e.xp6(1), e.Q6J("ngIf", !v.isOnboarding) } } function ft(I, Y) { if (1 & I && (e.ynx(0), e.YNc(1, Yt, 3, 2, "ng-container", 16), e.BQk()), 2 & I) { const v = e.oxw(); e.xp6(1), e.Q6J("ngForOf", v.content) } } const gt = function (I) { return { background: I } }; function si(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "img", 4), e.NdJ("load", function () { return e.CHM(v), e.oxw().isLoading = !1 }), e.qZA() } if (2 & I) { const v = e.oxw(); e.Q6J("src", null == v.subMapItem.customLinkIcon ? null : v.subMapItem.customLinkIcon.src, e.LSH)("alt", null == v.subMapItem.customLinkIcon ? null : v.subMapItem.customLinkIcon.alt) } } const He = ["gsHubSectorImage"]; function ri(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "img", 7), e.NdJ("load", function () { return e.CHM(v), e.oxw().onSectorLoaded() }), e.qZA() } if (2 & I) { const v = e.oxw(); e.Q6J("alt", v.mapItem.sectorImage.alt)("src", v.mapItem.sectorImage.src, e.LSH) } } function ci(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "object", 8), e.NdJ("load", function () { return e.CHM(v), e.oxw().onSectorLoaded() }), e.ALo(1, "safe"), e.qZA() } if (2 & I) { const v = e.oxw(); e.Q6J("data", e.xi3(1, 1, v.mapItem.sectorImage.src, "resourceUrl"), e.uOi) } } function li(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "ng-lottie", 9), e.NdJ("animationCreated", function (D) { return e.CHM(v), e.oxw().onSectorCreated(D) })("domLoaded", function () { return e.CHM(v), e.oxw().onSectorLoaded() }), e.qZA() } if (2 & I) { const v = e.oxw(); e.Q6J("options", e.WLB(1, Pe, v.mapItem.lottieImage, v.renderer)) } } function _i(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "cc-game-show-hub-icon-logo", 13), e.NdJ("click", function (D) { e.CHM(v); const w = e.oxw(3); return w.onSectorClick(w.mapItem, D) }), e.qZA() } if (2 & I) { const v = e.oxw().$implicit, C = e.oxw(2), D = e.MAs(1); e.Q6J("mapItem", C.mapItem)("subMapItem", v)("sectorImage", D) } } function Zt(I, Y) { if (1 & I && (e.ynx(0), e.YNc(1, _i, 1, 3, "cc-game-show-hub-icon-logo", 12), e.BQk()), 2 & I) { const v = Y.$implicit; e.xp6(1), e.Q6J("ngIf", v.isForZoomedOutSector) } } function gi(I, Y) { if (1 & I && (e.TgZ(0, "div", 10), e.YNc(1, Zt, 2, 1, "ng-container", 11), e.ALo(2, "async"), e.ALo(3, "dsl"), e.qZA()), 2 & I) { const v = e.oxw(); e.ekj("gshub-hidden", !v.isSectorLoaded), e.xp6(1), e.Q6J("ngForOf", e.lcZ(2, 3, e.lcZ(3, 5, v.mapItem.subMap.subMapItems))) } } function di(I, Y) { if (1 & I && e._UZ(0, "cc-game-show-hub-game-icon", 18), 2 & I) { const v = e.oxw(2), C = v.$implicit, D = v.index, w = e.oxw(2), H = e.MAs(1); e.Q6J("mapItem", w.mapItem)("subMapItem", C)("sectorImage", H)("index", D)("daysDisplayText", null == w.globalConfig ? null : w.globalConfig.noOfDays) } } function ui(I, Y) { if (1 & I && e._UZ(0, "cc-game-show-hub-custom-link", 20), 2 & I) { const v = e.oxw(3), C = v.$implicit, D = v.index, w = e.oxw(2), H = e.MAs(1); e.Q6J("mapItem", w.mapItem)("subMapItem", C)("sectorImage", H)("index", D) } } function St(I, Y) { if (1 & I && e.YNc(0, ui, 1, 4, "cc-game-show-hub-custom-link", 19), 2 & I) { const v = e.oxw(2).$implicit; e.Q6J("ngIf", !v.gameId) } } function vt(I, Y) { if (1 & I && (e.ynx(0), e.YNc(1, di, 1, 5, "cc-game-show-hub-game-icon", 16), e.YNc(2, St, 1, 1, "ng-template", null, 17, e.W1O), e.BQk()), 2 & I) { const v = e.MAs(3), C = e.oxw().$implicit; e.xp6(1), e.Q6J("ngIf", C.gameId)("ngIfElse", v) } } function yt(I, Y) { if (1 & I && (e.ynx(0), e.YNc(1, vt, 4, 2, "ng-container", 15), e.BQk()), 2 & I) { const v = Y.$implicit; e.xp6(1), e.Q6J("ngIf", !v.isDisabled) } } function Ht(I, Y) { if (1 & I && (e.TgZ(0, "div", 14), e.YNc(1, yt, 2, 1, "ng-container", 11), e.ALo(2, "async"), e.ALo(3, "dsl"), e.qZA()), 2 & I) { const v = e.oxw(); e.ekj("gshub-hidden", !v.isSectorLoaded), e.xp6(1), e.Q6J("ngForOf", e.lcZ(2, 3, e.lcZ(3, 5, v.mapItem.subMap.subMapItems))) } } const Qt = ["gsHubWrapper"], hi = ["gsHubGrabContainer"]; function mi(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "div", 8), e.NdJ("click", function (D) { return e.CHM(v), e.oxw(2).onCloseSector(D) }), e.qZA() } } function pi(I, Y) { if (1 & I) { const v = e.EpF(); e.TgZ(0, "cc-game-show-hub-sector", 9), e.NdJ("sectorClick", function (D) { return e.CHM(v), e.oxw(2).onSectorClick(D) }), e.qZA() } if (2 & I) { const v = Y.$implicit, C = Y.index; e.oxw(); const D = e.MAs(1), w = e.oxw(), H = e.MAs(1); e.ekj("sector-in-mobile", w.isMobile)("sector-selected", (null == w.selectedMapItem || null == w.selectedMapItem.subMap ? null : w.selectedMapItem.subMap.categoryIndex) === C), e.Q6J("id", v.sectorContainerId)("isMapSizesAdjusted", w.isMapSizesAdjusted)("wrapper", H)("gameShowConfig", w.gameShowConfig)("container", D)("mapItem", v)("isSelected", (null == w.selectedMapItem || null == w.selectedMapItem.subMap ? null : w.selectedMapItem.subMap.categoryIndex) === C) } } function fi(I, Y) { if (1 & I && (e.TgZ(0, "div", 3, 4), e.YNc(2, mi, 1, 0, "div", 5), e._UZ(3, "cc-game-show-hub-background", 6), e.YNc(4, pi, 1, 11, "cc-game-show-hub-sector", 7), e.qZA()), 2 & I) { const v = e.MAs(1), C = e.oxw(), D = e.MAs(1); e.Q6J("dragContainer", D)("dragTarget", v)("createDrag", C.isResized)("disableDrag", !(C.isMobile || !C.selectedMapItem))("dragLockAxis", C.isMobile ? "" : "x"), e.xp6(2), e.Q6J("ngIf", C.selectedMapItem), e.xp6(1), e.Q6J("map", C.map)("gameShowConfig", C.gameShowConfig), e.xp6(1), e.Q6J("ngForOf", C.map.mapItems) } } let Qe = (() => { class I { } return I.\u0275fac = function (v) { return new (v || I) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub-lottie-loading"]], inputs: { path: "path" }, decls: 1, vars: 5, consts: [["width", "100%", "height", "100%", 3, "options"]], template: function (v, C) { 1 & v && e._UZ(0, "ng-lottie", 0), 2 & v && e.Q6J("options", e.WLB(2, Z, C.path, e.DdM(1, Q))) }, directives: [f.e$], encapsulation: 2 }), I })(), bt = (() => { class I { static forRoot() { return { ngModule: I } } } return I.\u0275fac = function (v) { return new (v || I) }, I.\u0275mod = e.oAB({ type: I }), I.\u0275inj = e.cJS({ imports: [[o.ez, f.CT.forRoot({ player: () => i.e("node_modules_lottie-web_build_player_lottie_canvas_js").then(i.t.bind(i, 30693, 19)) }), f.eT.forRoot()]] }), I })(), vi = (() => { class I { constructor(v) { var C; this.configProviderService = v; const D = this.configProviderService.provideGameShowHubConfig(); this.tiltingImageUrl = D.tiltingPhoneMessageImageUrl, this.tiltingMessage = null === (C = null == D ? void 0 : D.tiltingMessage) || void 0 === C ? void 0 : C.tiltingMessage } } return I.\u0275fac = function (v) { return new (v || I)(e.Y36(T.iX)) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub-tilting-phone"]], decls: 3, vars: 2, consts: [[1, "casino-gshub-tiltmsg"], ["alt", "Titling Phone", 3, "src", 4, "ngIf"], [3, "textContent", 4, "ngIf"], ["alt", "Titling Phone", 3, "src"], [3, "textContent"]], template: function (v, C) { 1 & v && (e.TgZ(0, "div", 0), e.YNc(1, N, 1, 1, "img", 1), e.YNc(2, ae, 1, 1, "p", 2), e.qZA()), 2 & v && (e.xp6(1), e.Q6J("ngIf", C.tiltingImageUrl), e.xp6(1), e.Q6J("ngIf", C.tiltingMessage)) }, directives: [o.O5], encapsulation: 2 }), I })(); R.ZP.use([R.pt]); var $e = (() => { return (I = $e || ($e = {}))[I.GetStarted = 0] = "GetStarted", I[I.Wizard = 1] = "Wizard", $e; var I })(); let zt = (() => { class I { constructor(v, C) { this.gameShowHubService = v, this.dialogRef = C, this.onboardingType = $e } get tourItem() { return this.currentPosition = this.wizard.currentIndex + 1, this.onboardingInfo.tourItems[this.wizard.currentIndex] } ngOnInit() { var v; this.displayType = $e.GetStarted, this.onboardingInfo = this.gameShowHubService.getOnboardingData(); const C = this.getScreenName(null === (v = this.onboardingInfo) || void 0 === v ? void 0 : v.title); this.currentPosition = 0, this.gameShowHubService.trackEvent("contentView", "lobby", "game show", "load", "Default Screen", C, C, "not applicable") } onGetStarted(v) { var C, D, w, H; if (null === (D = null === (C = this.onboardingInfo) || void 0 === C ? void 0 : C.tourItems) || void 0 === D ? void 0 : D.length) { this.displayType = $e.Wizard, this.initWizard(); const j = this.getScreenName(null === (w = this.onboardingInfo) || void 0 === w ? void 0 : w.title); this.currentPosition = this.wizard.currentIndex, this.gameShowHubService.trackEvent("Event.Tracking", "lobby", "game show", "click", "Default Screen", j, (null === (H = this.onboardingInfo) || void 0 === H ? void 0 : H.ctaText) + " cta", "not applicable") } else this.onCloseModal(v) } onPrevious() { var v, C; const D = this.getScreenName(null === (v = this.tourItem) || void 0 === v ? void 0 : v.title); this.gameShowHubService.trackEvent("Event.Tracking", "lobby", "game show", "back", this.currentPosition.toString(), D, (null === (C = this.tourItem) || void 0 === C ? void 0 : C.secondaryCTAText) + " cta", "not applicable"), 0 === this.wizard.currentIndex ? this.displayType = $e.GetStarted : (this.carouselRef.swiperRef.slidePrev(), this.wizard.currentIndex = this.wizard.currentIndex - 1) } onNext(v) { var C, D; const w = null === (C = this.tourItem) || void 0 === C ? void 0 : C.primaryCTAText, H = this.getScreenName(null === (D = this.tourItem) || void 0 === D ? void 0 : D.title); this.gameShowHubService.trackEvent("Event.Tracking", "lobby", "game show", "click", this.currentPosition.toString(), H, w + " cta", "not applicable"), this.wizard.currentIndex === this.wizard.lastIndex ? this.onCloseModal(v) : (this.carouselRef.swiperRef.slideNext(), this.wizard.currentIndex = this.wizard.currentIndex + 1) } onCloseModal(v) { var C, D; if (v.stopPropagation(), v.stopImmediatePropagation(), this.dialogRef) { T.S5.removeClass("casino-gshub-scrollblock"), this.dialogRef.close(), this.dialogRef = void 0; const w = 0 === this.currentPosition ? null === (C = this.onboardingInfo) || void 0 === C ? void 0 : C.title : null === (D = this.tourItem) || void 0 === D ? void 0 : D.title, H = this.getScreenName(w), j = 0 === this.currentPosition ? "Default Screen" : this.currentPosition.toString(); this.gameShowHubService.trackEvent("Event.Tracking", "lobby", "game show", "close", j, H, H, "not applicable") } } initWizard() { this.wizard = new T.en(this.onboardingInfo.tourItems && this.onboardingInfo.tourItems.length ? this.onboardingInfo.tourItems.length : 0) } getScreenName(v) { var C = document.createElement("span"); return C.className = "removeHtmlTags", C.innerHTML = v, C.style.visibility = "hidden", C.style.opacity = "0", C.style.height = "0", C.innerHTML.split("<br>").join(" ") } } return I.\u0275fac = function (v) { return new (v || I)(e.Y36(T.GA), e.Y36(r.so)) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub-onboarding"]], viewQuery: function (v, C) { if (1 & v && e.Gf(re, 5), 2 & v) { let D; e.iGM(D = e.CRH()) && (C.carouselRef = D.first) } }, decls: 2, vars: 2, consts: [[4, "ngIf"], ["class", "casino-gshub-onboarding-container", 3, "color", "backgroundColor", "ngStyle", 4, "ngIf"], [1, "casino-gshub-onboarding-container", 3, "ngStyle"], [1, "casino-gshub-onboarding-header"], [1, "casino-gshub-onboarding-close", "theme-ex", 3, "click"], [1, "casino-gshub-onboarding-title"], [3, "vnDynamicHtml"], [1, "casino-gshub-onboarding-body"], [1, "casino-gshub-onboarding-content"], [1, "casino-gshub-onboarding-image-container"], [3, "src", "alt", 4, "ngIf"], [1, "casino-gshub-onboarding-subtitle"], [1, "casino-gshub-onboarding-footer"], [1, "casino-gshub-onboarding-actions"], [1, "casino-gshub-onboarding-get-started", "btn", "btn-lg", 3, "textContent", "click"], [3, "src", "alt"], [3, "allowTouchMove", "loop", "autoplay"], ["onboardingCarousel", ""], [4, "ngFor", "ngForOf"], [1, "casino-gshub-onboarding-pagination", 3, "noOfItems", "currentIndex", "loop", "disableClick", "backgroundColor", "carousel"], ["class", "casino-gshub-onboarding-btn-previous btn btn-md", 3, "color", "textContent", "click", 4, "ngIf"], [1, "casino-gshub-onboarding-btn-next", "btn", "btn-md", 3, "textContent", "click"], ["swiperSlide", ""], [1, "casino-gshub-onboarding-btn-previous", "btn", "btn-md", 3, "textContent", "click"]], template: function (v, C) { 1 & v && (e.YNc(0, be, 2, 1, "ng-container", 0), e.YNc(1, Te, 17, 27, "ng-container", 0)), 2 & v && (e.Q6J("ngIf", C.displayType === C.onboardingType.GetStarted), e.xp6(1), e.Q6J("ngIf", C.displayType === C.onboardingType.Wizard)) }, directives: [J.nF, T.xs, o.O5, o.PC, y.gHj, o.sg, J.YC], pipes: [T.F_], encapsulation: 2 }), I })(), yi = (() => { class I { constructor(v, C) { this.ngZone = v, this.gameShowHubService = C, this.destroy$ = new P.x } ngOnInit() { var v; this.renderer = this.gameShowConfig.defaultRenderer || "canvas", this.gameShowConfig.fallbackForIpad && (this.renderer = this.gameShowConfig.fallbackRenderer || this.renderer), (null === (v = this.map.layeredImage) || void 0 === v ? void 0 : v.src) || this.gameShowHubService.setAnimatedLayerStatus(!0) } onAnimatedLayerCreated(v) { this.animationItem = v, this.handleAnimations() } onImageLoad() { this.gameShowHubService.setBackgroundStatus(!0) } onAnimatedLayerLoaded() { this.gameShowHubService.setAnimatedLayerStatus(!0) } ngOnDestroy() { this.destroy$.next(), this.destroy$.complete() } handleAnimations() { (0, G.a)([this.gameShowHubService.loadingObservable, this.gameShowHubService.sectorOpenedObservable, this.gameShowHubService.lottieAnimationStatusObservable]).pipe((0, x.R)(this.destroy$)).subscribe(v => { const C = v[0], D = v[1], w = v[2]; this.ngZone.runOutsideAngular(() => { !C && D ? this.animationItem.pause() : this.animationItem.play(), w === T.Yb.Pause ? this.animationItem.pause() : w === T.Yb.Play && this.animationItem.isPaused && !D && this.animationItem.play() }) }) } } return I.\u0275fac = function (v) { return new (v || I)(e.Y36(e.R0b), e.Y36(T.GA)) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub-background"]], inputs: { map: "map", gameShowConfig: "gameShowConfig" }, decls: 4, vars: 4, consts: [[1, "background-container"], ["draggable", "false", 1, "background-image", 3, "src", "alt", "load"], ["class", "layered-image", "draggable", "false", 3, "src", "alt", "load", 4, "ngIf"], ["containerClass", "layered-image", 3, "options", "domLoaded", "animationCreated", 4, "ngIf"], ["draggable", "false", 1, "layered-image", 3, "src", "alt", "load"], ["containerClass", "layered-image", 3, "options", "domLoaded", "animationCreated"]], template: function (v, C) { 1 & v && (e.TgZ(0, "div", 0)(1, "img", 1), e.NdJ("load", function () { return C.onImageLoad() }), e.qZA(), e.YNc(2, Le, 1, 2, "img", 2), e.YNc(3, V, 1, 4, "ng-lottie", 3), e.qZA()), 2 & v && (e.xp6(1), e.Q6J("src", C.map.backgroundImage.src, e.LSH)("alt", C.map.backgroundImage.alt), e.xp6(1), e.Q6J("ngIf", !C.map.lottieImage && C.map.layeredImage && C.map.layeredImage.src), e.xp6(1), e.Q6J("ngIf", C.map.lottieImage)) }, directives: [f.e$, o.O5], encapsulation: 2 }), I })(), bi = (() => { class I { constructor(v) { this.gameShowHubService = v, this.destroy$ = new P.x } ngOnInit() { this.isLoading = !0, this.setDimension() } ngOnDestroy() { this.destroy$.next(), this.destroy$.complete() } setDimension() { this.subMapItem.dimension = new T.KK, this.gameShowHubService.loadingObservable.pipe((0, x.R)(this.destroy$)).subscribe(v => { if (!v && this.sectorImage) { const C = this.subMapItem.left / this.mapItem.width * this.sectorImage.clientWidth, D = this.subMapItem.top / this.mapItem.height * this.sectorImage.clientHeight, w = this.subMapItem.width / this.mapItem.width * this.sectorImage.clientWidth, H = this.subMapItem.height / this.mapItem.height * this.sectorImage.clientHeight, j = new T.KK; j.x = C ? C + "px" : "0px", j.y = D ? D + "px" : "0px", j.width = w ? w + "px" : "0px", j.height = H ? H + "px" : "0px", this.subMapItem.dimension = j } }) } } return I.\u0275fac = function (v) { return new (v || I)(e.Y36(T.GA)) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub-icon-logo"]], inputs: { mapItem: "mapItem", subMapItem: "subMapItem", sectorImage: "sectorImage" }, decls: 3, vars: 16, consts: [[1, "icon-logo-item"], ["class", "icon-logo", "draggable", "false", 3, "src", "alt", "load", 4, "ngIf"], ["draggable", "false", 1, "icon-logo", 3, "src", "alt", "load"]], template: function (v, C) { 1 & v && (e.TgZ(0, "div", 0), e.ALo(1, "safe"), e.YNc(2, ne, 1, 2, "img", 1), e.qZA()), 2 & v && (e.Akn(C.subMapItem.styles ? e.xi3(1, 13, C.subMapItem.styles, "style") : ""), e.Udp("--translateX", C.subMapItem.dimension.x)("--translateY", C.subMapItem.dimension.y)("--width", C.subMapItem.dimension.width)("--height", C.subMapItem.dimension.height), e.ekj("is-loading", C.isLoading), e.xp6(2), e.Q6J("ngIf", null == C.subMapItem.dimension ? null : C.subMapItem.dimension.width)) }, directives: [o.O5], pipes: [T.li], encapsulation: 2 }), I })(), et = (() => { class I { constructor(v, C, D, w, H, j) { this.deviceService = v, this.urlUtilityService = C, this.gameShowHubService = D, this.casinoLobbyService = w, this.configProviderService = H, this.casinoCoreGameLaunchService = j, this.destroy$ = new P.x } ngOnInit() { this.setDimension(), this.subscribeToScheduleGame(), this.defaultSrc = this.urlUtilityService.getCasinoBaseUrl() + "/pictures/grey.jpg", this.globalConfig = this.gameShowHubService.globalConfig, this.globalClrConfig = this.gameShowHubService.globalClrConfig } onTimerEnd(v) { v && (this.subMapItem.isOffline = !1, this.subMapItem.showTimer = !1, this.subMapItem.schedule = void 0) } onEntityClick(v) { v.stopPropagation(), v.stopImmediatePropagation(), this.subMapItem.isOffline || this.launchGame(this.subMapItem.gameId, this.index) } onImageStateChange(v) { "loading-failed" === v.reason && this.onGameIconFallback() } ngOnDestroy() { this.destroy$.next(), this.destroy$.complete() } subscribeToScheduleGame() { this.gameShowHubService.scheduleSubMapItemObservable.pipe((0, x.R)(this.destroy$)).subscribe(v => { v && this.subMapItem.gameId === v.gameId && (this.subMapItem = v) }) } setDimension() { this.subMapItem.dimension = new T.KK, this.gameShowHubService.loadingObservable.pipe((0, x.R)(this.destroy$)).subscribe(v => { if (!v && this.sectorImage) { const C = this.subMapItem.left / this.mapItem.width * this.sectorImage.clientWidth, D = this.subMapItem.top / this.mapItem.height * this.sectorImage.clientHeight, w = this.subMapItem.width / this.mapItem.width * this.sectorImage.clientWidth, H = this.subMapItem.height / this.mapItem.height * this.sectorImage.clientHeight, j = new T.KK; j.x = C ? C + "px" : "0px", j.y = D ? D + "px" : "0px", j.width = w ? w + "px" : "0px", j.height = H ? H + "px" : "0px", this.subMapItem.dimension = j } }) } getDefaultImageUrl(v) { const C = this.configProviderService.provideGameConfig(), D = C.iconConfigMap.find(w => "0" === w.id); return C.host + C.gameIconTemplate.replace("{0}", D.icon).replace("{1}", v) + "." + D.format } onGameIconFallback() { this.subMapItem.gameIconUrl = this.getDefaultImageUrl(this.subMapItem.gameId), this.subMapItem.isGameIconFallback = !0, this.subMapItem.isSquareIcon = !1 } launchGame(v, C) { var D, w, H, j, he, ue; let se = new T.Hq; se.isTouch = this.deviceService.isTouch, se.replaceRouteInHistory = !1, se.isDemoLaunch = !1, se.skipUnfinGame = !1, se.categoryType = null === (w = null === (D = this.mapItem) || void 0 === D ? void 0 : D.subMap) || void 0 === w ? void 0 : w.categoryId, se.game = this.casinoLobbyService.getGameInfo(v) || v, se.game.gameId = v, se.game.lobbyType = this.gameShowHubService.lobbyType, se.gameLaunchedFrom = null === (j = null === (H = this.mapItem) || void 0 === H ? void 0 : H.subMap) || void 0 === j ? void 0 : j.categoryId, se.gridPosition = Number((null === (ue = null === (he = this.mapItem) || void 0 === he ? void 0 : he.subMap) || void 0 === ue ? void 0 : ue.categoryIndex) + 1), se.gamePosition = C, se.from = "q", se.gameContainer = "", se.clickTimeStamp = this.casinoCoreGameLaunchService.currentTimeStamp(), this.casinoCoreGameLaunchService.launchGame(se) } } return I.\u0275fac = function (v) { return new (v || I)(e.Y36(y.U8N), e.Y36(T.Sl), e.Y36(T.GA), e.Y36(T.nA), e.Y36(T.iX), e.Y36(T.$l)) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub-game-icon"]], inputs: { mapItem: "mapItem", subMapItem: "subMapItem", sectorImage: "sectorImage", index: "index", daysDisplayText: "daysDisplayText" }, decls: 6, vars: 32, consts: [[3, "ngClass"], [1, "entity-item", 3, "ngStyle", "click"], [1, "offline-timer-wrapper"], ["class", "offline-timer-container", 3, "offline-timer-fallback-icon", "offline-timer-square-icon", 4, "ngIf"], ["draggable", "false", 1, "game-icon", 3, "lazyLoad", "defaultImage", "alt", "ngClass", "onStateChange"], [1, "offline-timer-container"], [1, "offline-timer-message", 3, "ngStyle", "textContent"], [1, "offline-timer-content"], ["class", "offline-timer", 3, "textContent", 4, "ngIf"], ["class", "offline-timer", 4, "ngIf"], [1, "offline-timer", 3, "textContent"], [1, "offline-timer"], [3, "startTime", "showDays", "daysDisplayText", "onTimerEnd"]], template: function (v, C) { 1 & v && (e.TgZ(0, "div", 0)(1, "div", 1), e.NdJ("click", function (w) { return C.onEntityClick(w) }), e.ALo(2, "safe"), e.TgZ(3, "div", 2), e.YNc(4, ve, 5, 10, "div", 3), e.TgZ(5, "img", 4), e.NdJ("onStateChange", function (w) { return C.onImageStateChange(w) }), e.qZA()()()()), 2 & v && (e.ekj("square-icon-glowing", C.subMapItem.isSquareIcon || C.subMapItem.isGameIconFallback), e.Q6J("ngClass", e.VKq(26, Me, C.subMapItem.glowingIconType ? "glowing-" + C.subMapItem.glowingIconType : "")), e.xp6(1), e.Akn(C.subMapItem.styles ? e.xi3(2, 23, C.subMapItem.styles, "style") : ""), e.Udp("--translateX", C.subMapItem.dimension.x)("--translateY", C.subMapItem.dimension.y)("--width", C.subMapItem.dimension.width)("--height", C.subMapItem.dimension.height), e.Q6J("ngStyle", e.VKq(28, de, C.subMapItem.isOffline ? "default" : "pointer")), e.xp6(3), e.Q6J("ngIf", C.subMapItem.isOffline && C.subMapItem.schedule), e.xp6(1), e.ekj("fallback-icon", C.subMapItem.isGameIconFallback)("square-icon", C.subMapItem.isSquareIcon), e.Q6J("lazyLoad", C.subMapItem.gameIconUrl)("defaultImage", C.defaultSrc)("alt", C.subMapItem.gameId)("ngClass", e.VKq(30, Ye, C.subMapItem.isOffline))) }, directives: [T.$V, o.mk, o.PC, o.O5, d.z1], pipes: [T.li], encapsulation: 2 }), I })(), jt = (() => { class I { constructor(v, C, D, w, H, j, he, ue, se) { this.gameShowHubService = v, this.navigation = C, this.deviceService = D, this.dialog = w, this.casinoLobbyService = H, this.configProviderService = j, this.gameLaunchService = he, this.dialogRef = ue, this.bottomSheetRef = se, this.destroy$ = new P.x, this.isContentLoading = !1, this.showOnboardingCTA = !1, this.content = new Array, this.closeModal = new e.vpe } onKeyDown(v) { const C = this.scrollerContainer.nativeElement.scrollTop; "ArrowUp" == v.code ? this.scrollerContainer.nativeElement.scroll({ behavior: "smooth", top: C - 100 }) : "ArrowDown" == v.code ? this.scrollerContainer.nativeElement.scroll({ behavior: "smooth", top: C + 100 }) : "Escape" == v.code && this.closeModal.emit(v) } ngOnInit() { var v, C, D; const w = this.configProviderService.provideGameShowHubConfig(); this.launchRealtiveUri = w.gameLaunchUri, T.S5.removeClass("casino-gameshowhub"), this.selectedEntity = null === (v = this.modalInfo) || void 0 === v ? void 0 : v.selectedEntity, this.fetchContent(), this.setOnboardingCTAStatus(), this.categoryInfo = this.gameShowHubService.getCategoryInfo(); const H = this.categoryInfo.categoryName ? this.categoryInfo.categoryName : this.categoryInfo.categoryId, j = this.getcategoryValue(H); this.gameShowHubService.trackEvent("contentView", "lobby", "game show", "load", ((null === (C = this.modalInfo) || void 0 === C ? void 0 : C.index) + 1).toString(), H + "-" + this.categoryInfo.categoryId, (null === (D = this.selectedEntity) || void 0 === D ? void 0 : D.customLinkDrawerTitle) + " " + j + " overlay", "not applicable") } onCloseModal(v) { var C, D, w, H; v.stopPropagation(), v.stopImmediatePropagation(); const j = this.categoryInfo.categoryName ? this.categoryInfo.categoryName : this.categoryInfo.categoryId, he = this.getcategoryValue(j); this.gameShowHubService.trackEvent("Event.Tracking", "lobby", "game show", "close", ((null === (C = this.modalInfo) || void 0 === C ? void 0 : C.index) + 1).toString(), j + "-" + this.categoryInfo.categoryId, (null === (D = this.selectedEntity) || void 0 === D ? void 0 : D.customLinkDrawerTitle) + " " + he + " overlay", "not applicable"), T.S5.addClass("casino-gameshowhub"), "casino-gshub-model" === (null === (w = this.modalInfo) || void 0 === w ? void 0 : w.panelClass) && this.dialogRef ? this.dialogRef.close() : "casino-gshub-drawer-wrapper" === (null === (H = this.modalInfo) || void 0 === H ? void 0 : H.panelClass) && this.bottomSheetRef && this.bottomSheetRef.dismiss() } onClick(v, C, D) { var w, H, j; D.stopPropagation(), D.stopImmediatePropagation(); const ue = this.getcategoryValue(this.categoryInfo.categoryName ? this.categoryInfo.categoryName : this.categoryInfo.categoryId); this.gameShowHubService.trackEvent("Event.Tracking", "lobby", "game show", "click", (null === (w = this.selectedEntity) || void 0 === w ? void 0 : w.customLinkDrawerTitle) + " " + ue + " overlay", v.title, C.text + " cta", "not applicable"); const se = C.attributes, Ge = C.url; let we = this.getGameIdFromLaunchUrl(Ge), Fe = this.casinoLobbyService.getGameInfo(we); if (this.isGameUrl(Ge) && Fe) { let Ee = new T.Hq; Ee.game = Fe || we, Ee.game.gameId = we, Ee.game.lobbyType = this.gameShowHubService.lobbyType, Ee.isTouch = this.deviceService.isTouch, Ee.gamePosition = null === (H = this.modalInfo) || void 0 === H ? void 0 : H.index, Ee.categoryType = this.categoryInfo.categoryId, Ee.from = "q", Ee.replaceRouteInHistory = !1, Ee.isDemoLaunch = !1, Ee.skipUnfinGame = !1, Ee.gameLaunchedFrom = this.categoryInfo.categoryId, Ee.gridPosition = (null === (j = this.modalInfo) || void 0 === j ? void 0 : j.index) + 1, Ee.gameSection = "GameShowHub", Ee.gameContainer = "", Ee.returnUrl = window.location.href, Ee.clickTimeStamp = this.gameLaunchService.currentTimeStamp(), this.gameLaunchService.launchGame(Ee) } else se && se.hasOwnProperty("target") ? window.open(Ge, se.target) : this.navigation.goTo(Ge) } onOpenOnboarding(v, C) { var D; if (C.stopPropagation(), C.stopImmediatePropagation(), this.gameShowHubService.trackEvent("contentView", "lobby", "game show", "click", null === (D = this.selectedEntity) || void 0 === D ? void 0 : D.customLinkDrawerTitle, v.title, v.onboardingCTAText + " cta", "not applicable"), this.onCloseModal(C), !this.onboardingDialogRef) { const w = this.deviceService.isMobilePhone; this.onboardingDialogRef = this.dialog.open(zt, { disableClose: !0, width: w ? "100%" : "375px", height: w ? "100%" : "", panelClass: w ? "casino-gshub-onboarding-overlay" : "casino-gshub-onboarding-modal" }), this.onboardingDialogRef.afterOpened().subscribe(() => { T.S5.addClass("casino-gshub-scrollblock") }) } } ngOnDestroy() { this.destroy$.next(), this.destroy$.complete() } fetchContent() { var v; const C = null === (v = this.selectedEntity) || void 0 === v ? void 0 : v.customLinkDrawerContent; C && C.length && (this.isContentLoading = !0, this.gameShowHubService.drawerContentMapAvailable.pipe((0, x.R)(this.destroy$)).subscribe(D => { D && (this.isContentLoading = !1, this.content = this.gameShowHubService.getDrawerContent(C)) })) } setOnboardingCTAStatus() { this.gameShowHubService.onboardingDataAvailable.pipe((0, x.R)(this.destroy$)).subscribe(v => { v && (this.showOnboardingCTA = !0) }) } getGameIdFromLaunchUrl(v) { if (this.isGameUrl(v)) return v.substr(v.indexOf(this.launchRealtiveUri) + this.launchRealtiveUri.length) } isGameUrl(v) { return 0 !== v.indexOf(this.launchRealtiveUri) } getcategoryValue(v) { let C; return -1 !== v.indexOf("-") ? (C = v.split("-"), C[1]) : v } } return I.\u0275fac = function (v) { return new (v || I)(e.Y36(T.GA), e.Y36(y.f5Y), e.Y36(y.U8N), e.Y36(r.uw), e.Y36(T.nA), e.Y36(T.iX), e.Y36(T.$l), e.Y36(r.so), e.Y36(c.oL)) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub-modal-info"]], viewQuery: function (v, C) { if (1 & v && e.Gf(Ze, 5), 2 & v) { let D; e.iGM(D = e.CRH()) && (C.scrollerContainer = D.first) } }, hostBindings: function (v, C) { 1 & v && e.NdJ("keydown", function (w) { return C.onKeyDown(w) }, !1, e.evT) }, inputs: { modalInfo: "modalInfo" }, outputs: { closeModal: "closeModal" }, decls: 10, vars: 13, consts: [[1, "casino-gshub-drawer", 3, "ngStyle"], [1, "gshub-title"], [3, "ngStyle", "textContent"], ["class", "theme-ex", 3, "ngStyle", "click", 4, "ngIf"], ["class", "casino-gshub-close", 3, "ngStyle", "click", 4, "ngIf"], [1, "casino-gshub-content"], ["scrollerContainer", ""], [4, "ngIf"], [1, "theme-ex", 3, "ngStyle", "click"], [1, "casino-gshub-close", 3, "ngStyle", "click"], [1, "casino-gshub-drawer-content-loading", "bg-home-skeleton"], [1, "sk-card"], [1, "sk-card-image"], [1, "sk-info-wrap"], [1, "sk-title"], [1, "sk-card-details"], [4, "ngFor", "ngForOf"], ["class", "gshub-textbox custom-link-box", 4, "ngIf"], ["class", "gshub-textboximg custom-link-box", 4, "ngIf"], [1, "gshub-textbox", "custom-link-box"], [1, "gshub-onboarding"], [3, "vnDynamicHtml"], ["class", "onboarding-click", 3, "textContent", "click", 4, "ngIf"], [1, "onboarding-click", 3, "textContent", "click"], [1, "gshub-textboximg", "custom-link-box"], ["class", "imgvidsection", 4, "ngIf"], [1, "imgtext-bottom"], [1, "imgtext-content", 3, "vnDynamicHtml"], ["class", "btn-lg btn-primary btn", 3, "textContent", "click", 4, "ngIf"], [1, "imgvidsection"], [3, "src", "alt", "ngClass", "click"], ["class", "text-terms", 4, "ngIf"], [1, "text-terms"], [3, "textContent"], [1, "btn-lg", "btn-primary", "btn", 3, "textContent", "click"]], template: function (v, C) { 1 & v && (e.TgZ(0, "div", 0), e.ALo(1, "sitecore_image_resize"), e.TgZ(2, "div", 1), e._UZ(3, "h1", 2), e.YNc(4, F, 1, 3, "div", 3), e.YNc(5, Pt, 2, 3, "div", 4), e.qZA(), e.TgZ(6, "div", 5, 6), e.YNc(8, It, 13, 0, "ng-container", 7), e.YNc(9, ft, 2, 1, "ng-container", 7), e.qZA()()), 2 & v && (e.Q6J("ngStyle", e.VKq(9, gt, C.selectedEntity.customLinkDrawerBackgroundImage ? "url(" + e.lcZ(1, 7, C.selectedEntity.customLinkDrawerBackgroundImage.src) + ")" : C.selectedEntity.constantMessages.CustomLinkDrawerBgClr || "")), e.xp6(3), e.Q6J("ngStyle", e.VKq(11, ie, null == C.selectedEntity || null == C.selectedEntity.constantMessages ? null : C.selectedEntity.constantMessages.CustomLinkDrawerHeaderClr))("textContent", C.selectedEntity.customLinkDrawerTitle), e.xp6(1), e.Q6J("ngIf", !C.modalInfo.isMobilePhone), e.xp6(1), e.Q6J("ngIf", C.modalInfo.isMobilePhone), e.xp6(3), e.Q6J("ngIf", C.isContentLoading), e.xp6(1), e.Q6J("ngIf", !C.isContentLoading && C.content && C.content.length)) }, directives: [o.PC, o.O5, o.sg, y.gHj, o.mk], pipes: [T.F_], encapsulation: 2 }), I })(), Ci = (() => { class I { constructor(v, C) { this.bottomSheetRef = v, this.data = C } ngOnInit() { this.modalInfo = this.data } onCloseModal(v) { v && (v.stopPropagation(), v.stopImmediatePropagation(), this.bottomSheetRef && this.bottomSheetRef.dismiss()) } } return I.\u0275fac = function (v) { return new (v || I)(e.Y36(c.oL), e.Y36(c.OG)) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub-drawer"]], decls: 1, vars: 1, consts: [[3, "modalInfo", "closeModal"]], template: function (v, C) { 1 & v && (e.TgZ(0, "cc-game-show-hub-modal-info", 0), e.NdJ("closeModal", function (w) { return C.onCloseModal(w) }), e.qZA()), 2 & v && e.Q6J("modalInfo", C.modalInfo) }, directives: [jt], encapsulation: 2 }), I })(), Mi = (() => { class I { constructor(v, C) { this.dialogRef = v, this.data = C } ngOnInit() { this.modalInfo = this.data } onCloseModal(v) { v && (v.stopPropagation(), v.stopImmediatePropagation(), this.dialogRef && this.dialogRef.close()) } } return I.\u0275fac = function (v) { return new (v || I)(e.Y36(r.so), e.Y36(r.WI)) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub-modal"]], decls: 1, vars: 1, consts: [[3, "modalInfo", "closeModal"]], template: function (v, C) { 1 & v && (e.TgZ(0, "cc-game-show-hub-modal-info", 0), e.NdJ("closeModal", function (w) { return C.onCloseModal(w) }), e.qZA()), 2 & v && e.Q6J("modalInfo", C.modalInfo) }, directives: [jt], encapsulation: 2 }), I })(), Ei = (() => { class I { constructor(v, C, D, w, H) { this.dialog = v, this.bottomSheet = C, this.navigation = D, this.gameShowHubService = w, this.configProviderService = H, this.destroy$ = new P.x } ngOnInit() { this.isLoading = !0, this.categoryInfo = this.gameShowHubService.getCategoryInfo(), this.globalClrConfig = this.gameShowHubService.globalClrConfig, this.gameShowConfig = this.configProviderService.provideGameShowHubConfig(), this.setDimension(), this.onOrientationChange() } onOrientationChange() { const v = this, C = "onorientationchange" in window ? "orientationchange" : "resize"; window.addEventListener(C, function () { v.gameShowConfig.enableSupportForLandscape && (v.dialogRef && (v.dialogRef.close(), v.dialogRef = void 0), v.bottomSheetRef && (v.bottomSheetRef.dismiss(), v.bottomSheetRef = void 0)) }, !0) } onEntityClick(v) { var C, D, w, H, j, he, ue, se, Ge, we; v.stopPropagation(), v.stopImmediatePropagation(); const Fe = this.categoryInfo.categoryName ? this.categoryInfo.categoryName : null === (D = null === (C = this.mapItem) || void 0 === C ? void 0 : C.subMap) || void 0 === D ? void 0 : D.categoryId; if ("Link" === (null === (w = this.subMapItem) || void 0 === w ? void 0 : w.customLinkType)) { const Re = null === (H = this.subMapItem.customLink) || void 0 === H ? void 0 : H.attributes, Ce = null === (j = this.subMapItem.customLink) || void 0 === j ? void 0 : j.url; return Re && Re.hasOwnProperty("target") ? window.open(Ce, Re.target) : this.navigation.goTo(Ce), void this.gameShowHubService.trackEvent("Event.Tracking", "lobby", "game show", "click", (this.index + 1).toString(), Fe + "-" + this.categoryInfo.categoryId, (null === (ue = null === (he = this.subMapItem) || void 0 === he ? void 0 : he.customLink) || void 0 === ue ? void 0 : ue.text) + " link", "not applicable") } const Ee = this.gameShowHubService.currentWidth < 580, ye = Ee ? "casino-gshub-drawer-wrapper" : "casino-gshub-model"; if ("Drawer" === (null === (se = this.subMapItem) || void 0 === se ? void 0 : se.customLinkType) && (null === (Ge = this.subMapItem) || void 0 === Ge ? void 0 : Ge.customLinkDrawerContent.length)) { this.gameShowHubService.trackEvent("Event.Tracking", "lobby", "game show", "click", (this.index + 1).toString(), Fe + "-" + this.categoryInfo.categoryId, (null === (we = this.subMapItem) || void 0 === we ? void 0 : we.customLinkDrawerTitle) + " element", "not applicable"); const Re = { selectedEntity: this.subMapItem, index: this.index, event: v, panelClass: ye, isMobilePhone: Ee }; Ee ? this.bottomSheetRef = this.bottomSheet.open(Ci, { disableClose: !0, data: Re, panelClass: ye }) : this.dialogRef = this.dialog.open(Mi, { disableClose: !0, width: "375px", data: Re, panelClass: ye }) } } ngOnDestroy() { this.closeOverlays(), this.destroy$.next(), this.destroy$.complete() } closeOverlays() { this.dialogRef && (this.dialogRef.close(), this.dialogRef = void 0), this.bottomSheetRef && (this.bottomSheetRef.dismiss(), this.bottomSheetRef = void 0) } setDimension() { this.subMapItem.dimension = new T.KK, this.gameShowHubService.loadingObservable.pipe((0, x.R)(this.destroy$)).subscribe(v => { if (!v && this.sectorImage) { const C = this.subMapItem.left / this.mapItem.width * this.sectorImage.clientWidth, D = this.subMapItem.top / this.mapItem.height * this.sectorImage.clientHeight, w = this.subMapItem.width / this.mapItem.width * this.sectorImage.clientWidth, H = this.subMapItem.height / this.mapItem.height * this.sectorImage.clientHeight, j = new T.KK; j.x = C ? C + "px" : "0px", j.y = D ? D + "px" : "0px", j.width = w ? w + "px" : "0px", j.height = H ? H + "px" : "0px", this.subMapItem.dimension = j } }) } } return I.\u0275fac = function (v) { return new (v || I)(e.Y36(r.uw), e.Y36(c.ch), e.Y36(y.f5Y), e.Y36(T.GA), e.Y36(T.iX)) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub-custom-link"]], inputs: { mapItem: "mapItem", subMapItem: "subMapItem", sectorImage: "sectorImage", index: "index" }, decls: 5, vars: 19, consts: [[1, "custom-link-container", 3, "ngClass"], [1, "entity-item", 3, "click"], [1, "offline-timer-wrapper"], ["class", "custom-link", "draggable", "false", 3, "src", "alt", "load", 4, "ngIf"], ["draggable", "false", 1, "custom-link", 3, "src", "alt", "load"]], template: function (v, C) { 1 & v && (e.TgZ(0, "div", 0)(1, "div", 1), e.NdJ("click", function (w) { return C.onEntityClick(w) }), e.ALo(2, "safe"), e.TgZ(3, "div", 2), e.YNc(4, si, 1, 2, "img", 3), e.qZA()()()), 2 & v && (e.Q6J("ngClass", e.VKq(17, Me, C.subMapItem.glowingIconType ? "glowing-" + C.subMapItem.glowingIconType : "")), e.xp6(1), e.Akn(C.subMapItem.styles ? e.xi3(2, 14, C.subMapItem.styles, "style") : ""), e.Udp("--translateX", C.subMapItem.dimension.x)("--translateY", C.subMapItem.dimension.y)("--width", C.subMapItem.dimension.width)("--height", C.subMapItem.dimension.height), e.ekj("is-loading", C.isLoading), e.xp6(3), e.Q6J("ngIf", null == C.subMapItem.dimension ? null : C.subMapItem.dimension.width)) }, directives: [o.mk, o.O5], pipes: [T.li], encapsulation: 2 }), I })(), Ti = (() => { class I { constructor(v, C, D, w, H, j, he) { this.ngZone = v, this.timerService = C, this.casinoManager = D, this.timeZoneService = w, this.liveCasinoService = H, this.gameShowHubService = j, this.configProviderService = he, this.sectorClick = new e.vpe, this.imageType = T.__, this.destroy$ = new P.x } ngOnChanges(v) { v && v.isMapSizesAdjusted && this.isMapSizesAdjusted && (this.isSectorLoaded = !1) } ngOnInit() { this.isSectorLoaded = !1, this.renderer = this.gameShowConfig.defaultRenderer || "canvas", this.gameShowConfig.fallbackForIpad && (this.renderer = this.gameShowConfig.fallbackRenderer || this.renderer), this.globalConfig = this.gameShowHubService.globalConfig, this.setSectorType(), this.setTimerFromCMS() } onSectorClick(v, C) { C.stopPropagation(), C.stopImmediatePropagation(); const D = this.sectorImage.nativeElement, w = D.parentElement, H = parseFloat(w.style.getPropertyValue("--scale") || "1.2"), j = T.S5.getTranslateValues(this.container); w.style.setProperty("--translateX", (this.wrapper.clientWidth - D.clientWidth * H) / 2 + -1 * j.x + "px"), w.style.setProperty("--translateY", (this.wrapper.clientHeight - D.clientHeight * H) / 2 + -1 * j.y + "px"), this.sectorClick.emit(v) } onSectorCreated(v) { this.animationItem = v, this.handleAnimations() } onSectorLoaded() { this.gameShowHubService.setSectorsLoadedCount(), this.isSectorLoaded = !0 } ngOnDestroy() { this.destroy$.next(), this.destroy$.complete() } setSectorType() { var v; if (this.mapItem.lottieImage) this.sectorType = T.__.Lottie; else if (null === (v = this.mapItem.sectorImage) || void 0 === v ? void 0 : v.src) { const C = this.mapItem.sectorImage.src.split("."), D = C[C.length - 1].toLowerCase(); this.sectorType = "svg" === D ? T.__.SVG : T.__.Image } } setTableOnline(v) { v.showTimer = !1, v.isOffline = !1, v.schedule = void 0 } setTimerFromLLSFeed(v, C = !1) { const D = this.gameShowConfig.scheduleGames; if (D && D.length) { const w = D.find(H => H.toLowerCase() === v.gameId.toLowerCase()); if (w) { let H; v.isOffline = !0, v.cmsTimer && (this.timerService.clearInterval(v.cmsTimer), v.cmsTimer = void 0); const j = this.configProviderService.provideLiveCasinoConfig(); this.casinoManager.IsFeatureEnabledforLobbytype(this.gameShowHubService.lobbyType, j.enableLobbyType) ? this.liveCasinoService.liveGamesFeedObservable.pipe((0, x.R)(this.destroy$)).subscribe(ue => { var se, Ge; if (null == ue ? void 0 : ue.size) { if (H = this.liveCasinoService.getLiveGameLookUpInfo(w.toLowerCase()), H) if ((null === (se = H.gameType) || void 0 === se ? void 0 : se.toLowerCase()) === this.gameShowConfig.triviaGameType.toLowerCase()) { if (H.tableStatus) if (H.countdown) if (H.countdown.type) if ("bounded" === (null === (Ge = H.countdown.type) || void 0 === Ge ? void 0 : Ge.toLowerCase())) { if (v.isOffline = !0, v.showTimer = !0, H.countdown.time) { const we = this.timeZoneService.getTimerStartInstance(H.countdown.time + ":00", "UTC"); we ? v.schedule = we : this.setTableOnline(v) } } else this.setTableOnline(v); else this.setTableOnline(v); else this.setTableOnline(v) } else this.setTableOnline(v); else this.setTableOnline(v); C && setTimeout(() => this.gameShowHubService.setScheduleSubMapItem(v), 0) } else this.setTableOnline(v) }) : this.setTableOnline(v) } } } setSechedule(v, C) { const D = Math.floor((new Date(C).getTime() - (new Date).getTime()) / 1e3); 864e5 * Math.floor(D / 86400) < 36e5 * this.gameShowConfig.noOfHours / 864e5 && this.setTimerFromLLSFeed(v, !0) } setTimerFromCMS() { var v; ((null === (v = this.mapItem.subMap) || void 0 === v ? void 0 : v.subMapItems.filter(D => (null == D ? void 0 : D.isGame) && (null == D ? void 0 : D.gameId) && !(null == D ? void 0 : D.isDisabled))) || []).forEach(D => { var w; if (D.isGame && D.gameId && this.mapItem.subMap.schedules) { let j = this.mapItem.subMap.schedules[D.gameId]; if (j) { const he = Math.floor((new Date(j).getTime() - (new Date).getTime()) / 1e3), ue = Math.floor(he / 86400); 864e5 * ue > 36e5 * this.gameShowConfig.noOfHours / 864e5 ? (D.isOffline = !0, D.showTimer = !1, D.schedule = ue + ((null === (w = this.globalConfig) || void 0 === w ? void 0 : w.noOfDays) ? "\xa0" + this.globalConfig.noOfDays : ""), 1 === ue && (D.cmsTimer = this.timerService.setInterval(() => { this.setSechedule(D, j) }, 6e4))) : this.setTimerFromLLSFeed(D) } } else this.setTimerFromLLSFeed(D) }) } handleAnimations() { (0, G.a)([this.gameShowHubService.loadingObservable, this.gameShowHubService.sectorOpenedObservable, this.gameShowHubService.lottieAnimationStatusObservable]).pipe((0, x.R)(this.destroy$)).subscribe(v => { const C = v[0], D = v[1], w = v[2]; this.ngZone.runOutsideAngular(() => { var H, j, he; !C && D && (null === (H = null == D ? void 0 : D.subMap) || void 0 === H ? void 0 : H.categoryId) !== (null === (he = null === (j = this.mapItem) || void 0 === j ? void 0 : j.subMap) || void 0 === he ? void 0 : he.categoryId) ? this.animationItem.pause() : this.animationItem.play(), w === T.Yb.Pause ? this.animationItem.pause() : w === T.Yb.Play && this.animationItem.isPaused && !D && this.animationItem.play() }) }) } } return I.\u0275fac = function (v) { return new (v || I)(e.Y36(e.R0b), e.Y36(y.fWh), e.Y36(T.M3), e.Y36(T.Fj), e.Y36(T.B0), e.Y36(T.GA), e.Y36(T.iX)) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub-sector"]], viewQuery: function (v, C) { if (1 & v && e.Gf(He, 5), 2 & v) { let D; e.iGM(D = e.CRH()) && (C.sectorImage = D.first) } }, inputs: { wrapper: "wrapper", container: "container", gameShowConfig: "gameShowConfig", mapItem: "mapItem", isMapSizesAdjusted: "isMapSizesAdjusted", isSelected: "isSelected" }, outputs: { sectorClick: "sectorClick" }, features: [e.TTD], decls: 9, vars: 13, consts: [[1, "sector-image", 3, "click"], ["gsHubSectorImage", ""], ["draggable", "false", "width", "100%", "height", "100%", 3, "alt", "src", "load", 4, "ngIf"], ["width", "100%", "height", "100%", "type", "image/svg+xml", "draggable", "false", 3, "data", "load", 4, "ngIf"], ["width", "100%", "height", "100%", 3, "options", "animationCreated", "domLoaded", 4, "ngIf"], ["class", "icon-logos-container", 3, "gshub-hidden", 4, "ngIf"], ["class", "entities-container", 3, "gshub-hidden", 4, "ngIf"], ["draggable", "false", "width", "100%", "height", "100%", 3, "alt", "src", "load"], ["width", "100%", "height", "100%", "type", "image/svg+xml", "draggable", "false", 3, "data", "load"], ["width", "100%", "height", "100%", 3, "options", "animationCreated", "domLoaded"], [1, "icon-logos-container"], [4, "ngFor", "ngForOf"], [3, "mapItem", "subMapItem", "sectorImage", "click", 4, "ngIf"], [3, "mapItem", "subMapItem", "sectorImage", "click"], [1, "entities-container"], [4, "ngIf"], [3, "mapItem", "subMapItem", "sectorImage", "index", "daysDisplayText", 4, "ngIf", "ngIfElse"], ["customLink", ""], [3, "mapItem", "subMapItem", "sectorImage", "index", "daysDisplayText"], [3, "mapItem", "subMapItem", "sectorImage", "index", 4, "ngIf"], [3, "mapItem", "subMapItem", "sectorImage", "index"]], template: function (v, C) { 1 & v && (e.TgZ(0, "div", 0, 1), e.NdJ("click", function (w) { return C.isSelected ? "" : C.onSectorClick(C.mapItem, w) }), e.ALo(2, "safe"), e.ALo(3, "safe"), e.YNc(4, ri, 1, 2, "img", 2), e.YNc(5, ci, 2, 4, "object", 3), e.YNc(6, li, 1, 4, "ng-lottie", 4), e.qZA(), e.YNc(7, gi, 4, 7, "div", 5), e.YNc(8, Ht, 4, 7, "div", 6)), 2 & v && (e.Akn(C.isSelected ? C.mapItem.cssStyles2 ? e.xi3(2, 7, C.mapItem.cssStyles2, "style") : "" : C.mapItem.cssStyles1 ? e.xi3(3, 10, C.mapItem.cssStyles1, "style") : ""), e.xp6(4), e.Q6J("ngIf", C.sectorType === C.imageType.Image), e.xp6(1), e.Q6J("ngIf", C.sectorType === C.imageType.SVG), e.xp6(1), e.Q6J("ngIf", C.sectorType === C.imageType.Lottie && C.isMapSizesAdjusted), e.xp6(1), e.Q6J("ngIf", !C.isSelected), e.xp6(1), e.Q6J("ngIf", C.isSelected)) }, directives: [f.e$, bi, et, Ei, o.O5, o.sg], pipes: [T.li, o.Ov, M.Ut], encapsulation: 2 }), I })(), qt = (() => { class I { constructor(v, C, D, w, H, j, he, ue, se) { this.page = v, this.dialog = C, this.renderer = D, this.deviceService = w, this.cookieService = H, this.activatedRoute = j, this.gameShowHubService = he, this.casinoLobbyService = ue, this.configProviderService = se, this.destroy$ = new P.x } popStateEventHandler(v) { var C; (null === (C = this.gsHubWrapper) || void 0 === C ? void 0 : C.nativeElement.classList.contains("sector-opened")) && this.onCloseSector(v) } ngOnInit() { this.gameConfig = this.configProviderService.provideGameConfig(), this.onOrientationChange(), this.initialize(), this.handleOrientation(), this.subscribeToHideLoading(), this.isMobile = this.gameShowHubService.isMobile } onSectorClick(v) { var C; const D = null == v ? void 0 : v.subMap; if (D && D.categoryId) { setTimeout(() => window.scroll({ top: 0 }), 0), this.selectedMapItem = v, null === (C = this.gsHubWrapper) || void 0 === C || C.nativeElement.classList.add("sector-opened"), this.gameShowHubService.setSectorOpened(this.selectedMapItem), -1 == window.location.href.indexOf(this.gameShowHubService.categoryRoutePrefix) && history.pushState({}, null, [window.location.origin, this.page.lang, this.routeCurrentProduct, "c", D.categoryId].join("/")), this.categoryInfo = this.gameShowHubService.getCategoryInfo(); const w = this.categoryInfo.categoryName ? this.categoryInfo.categoryName : null == D ? void 0 : D.categoryId; this.gameShowHubService.trackEvent("Event.Tracking", "lobby", "game show", "click", ((null == D ? void 0 : D.categoryIndex) + 1).toString(), "not applicable", w + "-" + this.categoryInfo.categoryId, "not applicable") } } onCloseSector(v) { var C; v.preventDefault(), this.selectedMapItem = void 0, this.categoryIdFromRoute = void 0, null === (C = this.gsHubWrapper) || void 0 === C || C.nativeElement.classList.remove("sector-opened"), this.gameShowHubService.setSectorOpened(null), "popstate" != v.type && window.history.replaceState(null, null, window.location.href.substr(0, window.location.href.indexOf(this.gameShowHubService.categoryRoutePrefix))) } onOrientationChange() { this.deviceService.isMobilePhone ? this.gameShowHubService.currentWidth < 768 && this.gameShowHubService.currentHeight < 768 && this.orientationChange() : this.orientationChange() } ngOnDestroy() { this.hideMobileLandscapeInfoDialog(), this.hideOnboarding(), this.destroy$.next(), this.destroy$.complete() } orientationChange() { const v = this, C = "onorientationchange" in window ? "orientationchange" : "resize"; window.addEventListener(C, () => { v.isResized = !1, v.initScroll(), this.gameShowHubService.mainElement.style.setProperty("--min-height", "100vh"), this.gameShowHubService.showLoading(), setTimeout(() => v.adjustSizes(), this.gameShowConfig.setMapAdjustedTimeout), console.info("GameShowHub Tilting Event : " + C), v.handleOrientation() }) } initScroll() { setTimeout(() => window.scroll({ top: 0 }), 250) } handleOrientation() { this.gameShowConfig.enableSupportForLandscape ? this.showOnboarding() : this.gameShowHubService.isMobileLandscape ? this.showMobileLandscapeInfoDialog() : (this.showOnboarding(), this.hideMobileLandscapeInfoDialog()) } subscribeToHideLoading() { this.gameShowHubService.getLoadingStatus().pipe((0, x.R)(this.destroy$)).subscribe(v => { this.initScroll(); const H = v[3]; v[0] && v[1] && v[2] && H && this.map.mapItems.length === H ? this.gameShowHubService.hideLoading() : this.gameShowHubService.showLoading() }) } getSectorDimenstion(v, C) { const D = this.map.mapWidth, w = this.map.mapHeight; return { width: v.width / D * C, height: v.height / w * C, x: v.left / D * C, y: v.top / w * C } } getMapDimension(v, C) { return this.isMobile ? { mapDimension: v > C ? v + 400 : C + 400, wrapperWidth: v, wrapperHeight: C } : { mapDimension: v, wrapperWidth: v, wrapperHeight: C } } adjustSizes(v) { var C, D, w, H; if (!this.map) return; this.isMapSizesAdjusted = !1, this.gameShowHubService.initSectors(), this.isMobile = this.gameShowHubService.isMobile; let { mapDimension: j, wrapperWidth: he, wrapperHeight: ue } = this.getMapDimension(this.gameShowHubService.currentWidth, this.gameShowHubService.currentHeight), se = 0, Ge = 0, we = 0; const Fe = document.querySelector(".bottom-nav.fixed-bottom"); if (Fe && (we = Fe.clientHeight), (null === (C = this.gsHubWrapper) || void 0 === C ? void 0 : C.nativeElement) && (null === (D = this.gsHubGrabContainer) || void 0 === D ? void 0 : D.nativeElement)) { const Ee = T.S5.getPosition(this.gsHubWrapper.nativeElement); ue = ue - Ee.top - we, this.gameShowHubService.mainElement.style.setProperty("--min-height", ue + "px"), this.gameShowHubService.mainElement.classList.add("casino-gshub-main"), this.renderer.setStyle(this.gsHubWrapper.nativeElement, "width", he + "px"), this.renderer.setStyle(this.gsHubWrapper.nativeElement, "height", ue + "px"), se = Math.abs(j - ue) / 2, this.isMobile && (Ge = Math.abs(j - he) / 2), this.renderer.setStyle(this.gsHubGrabContainer.nativeElement, "width", j + "px"), this.renderer.setStyle(this.gsHubGrabContainer.nativeElement, "height", j + "px"), this.renderer.setStyle(this.gsHubGrabContainer.nativeElement, "transform", `translate3d(${Ge ? -1 * Ge : 0}px, -${se}px, 0px)`), null === (H = null === (w = this.map) || void 0 === w ? void 0 : w.mapItems) || void 0 === H || H.forEach(ye => { var Re, Ce, dt, Ne; const ze = this.gsHubWrapper.nativeElement.querySelector("#" + ye.sectorContainerId); if (ze) { const ut = T.S5.getTranslateValues(this.gsHubGrabContainer.nativeElement), ht = this.isMobile ? null === (Re = null == ye ? void 0 : ye.subMap) || void 0 === Re ? void 0 : Re.zoomForMobile : null === (Ce = null == ye ? void 0 : ye.subMap) || void 0 === Ce ? void 0 : Ce.zoomForDesktop, { width: at, height: st, x: Ii, y: Di } = this.getSectorDimenstion(ye, j); ze.style.setProperty("--transform", `translate3d(${Ii}px, ${Di}px, 0px)`), ze.style.setProperty("--scale", (ht || 1.2).toString()), ze.style.setProperty("--translateX", (he - at * ht) / 2 + -1 * ut.x + "px"), ze.style.setProperty("--translateY", (ue - st * ht) / 2 + -1 * ut.y + "px"); const Lt = ze.querySelector(".sector-image"); if (Lt && (this.renderer.setStyle(Lt, "width", `${at}px`), this.renderer.setStyle(Lt, "height", `${st}px`)), null === (Ne = null === (dt = null == ye ? void 0 : ye.subMap) || void 0 === dt ? void 0 : dt.subMapItems) || void 0 === Ne ? void 0 : Ne.length) { const Vt = ze.querySelector(".icon-logos-container"); if (Vt) { const Ot = Vt.querySelectorAll(".icon-logo-item"), At = ye.subMap.subMapItems.filter(tt => tt.isForZoomedOutSector); Ot.forEach((tt, Gt) => { const je = tt, qe = At[Gt], xt = qe.top / ye.height * st, Rt = qe.width / ye.width * at, wt = qe.height / ye.height * st; je.style.setProperty("--translateX", `${qe.left / ye.width * at || 0}px`), je.style.setProperty("--translateY", `${xt || 0}px`), je.style.setProperty("--width", `${Rt || 0}px`), je.style.setProperty("--height", `${wt || 0}px`) }) } const Xt = ze.querySelector(".entities-container"); if (Xt) { const Ot = Xt.querySelectorAll(".entity-item"), At = ye.subMap.subMapItems.filter(tt => !tt.isForZoomedOutSector); Ot.forEach((tt, Gt) => { const je = tt, qe = At[Gt], xt = qe.top / ye.height * st, Rt = qe.width / ye.width * at, wt = qe.height / ye.height * st; je.style.setProperty("--translateX", `${qe.left / ye.width * at || 0}px`), je.style.setProperty("--translateY", `${xt || 0}px`), je.style.setProperty("--width", `${Rt || 0}px`), je.style.setProperty("--height", `${wt || 0}px`) }) } } } }) } v && this.onCategorySwitch(v), setTimeout(() => { this.isResized = !0, this.isMapSizesAdjusted = !0 }, 250) } getDefaultImageUrl(v) { const C = this.gameConfig.iconConfigMap.find(D => "0" === D.id); return this.gameConfig.host + this.gameConfig.gameIconTemplate.replace("{0}", C.icon).replace("{1}", v) + "." + C.format } showMobileLandscapeInfoDialog() { this.tiltineDialogRef || (this.tiltineDialogRef = this.dialog.open(vi, { disableClose: !0, width: "580px", panelClass: "casino-gshub-tilting-phone-modal" })) } hideMobileLandscapeInfoDialog() { this.tiltineDialogRef && (this.tiltineDialogRef.close(), this.tiltineDialogRef = void 0) } openOnboarding() { if (!this.onboardingDialogRef) { const v = this.deviceService.isMobilePhone; this.onboardingDialogRef = this.dialog.open(zt, { disableClose: !0, width: v ? "100%" : "375px", height: v ? "100%" : "", panelClass: v ? "casino-gshub-onboarding-overlay" : "casino-gshub-onboarding-modal" }), this.cookieService.setCookie(this.cookieName, "1", 7) } } showOnboarding() { const v = this.cookieService.getCookie(this.cookieName); v && "1" === v || this.gameShowHubService.onboardingDataAvailable.pipe((0, x.R)(this.destroy$)).subscribe(C => { C && this.openOnboarding() }) } hideOnboarding() { this.onboardingDialogRef && (this.onboardingDialogRef.close(), this.onboardingDialogRef = void 0) } initialize() { this.isMapDataAvailable = !1, this.map = void 0, this.activatedRoute.params.pipe((0, x.R)(this.destroy$)).subscribe(v => { let C = null == v ? void 0 : v.categoryType; const D = window.location.href; if (C) if (-1 === D.indexOf(this.gameShowHubService.categoryRoutePrefix)) C = void 0; else { const w = window.location.pathname.split("/"), H = w[w.length - 1]; H !== C && (C = H) } else if (D.indexOf(this.gameShowHubService.categoryRoutePrefix) > -1) { const w = D.substr(D.indexOf(this.gameShowHubService.categoryRoutePrefix)).replace(this.gameShowHubService.categoryRoutePrefix, ""); C = w.indexOf("?") ? w.split("?")[0] : w } this.categoryIdFromRoute = C }), this.gameShowHubService.mapObservable.pipe((0, x.R)(this.destroy$)).subscribe(v => { var C; if (v) { this.mapBgClr = null === (C = this.gameShowHubService.globalClrConfig) || void 0 === C ? void 0 : C.mapBgClr; const D = this.casinoLobbyService.getLobbyInfo(this.gameShowHubService.lobbyType), w = this.gameShowHubService.map; if (w && D) { let H; null == w || w.mapItems.forEach((j, he) => { var ue, se, Ge; const we = j.subMap.categoryId; this.categoryIdFromRoute && we === this.categoryIdFromRoute && (H = j), j.sectorContainerId = this.gameShowHubService.sectorIdPrefix + j.subMap.categoryId, j.subMap.categoryIndex = he; let Fe = ""; j.styles && (Fe = T.S5.endsWith(j.styles, ";") ? j.styles : j.styles + ";"), j.cssStyles1 = Fe + (j.clipPath || ""), j.cssStyles2 = Fe + ((null === (ue = null == j ? void 0 : j.subMap) || void 0 === ue ? void 0 : ue.clipPath) || ""); const Ee = D.categoriesMap.get(we); Ee && ((null === (se = j.subMap) || void 0 === se ? void 0 : se.subMapItems.filter(Ce => null == Ce ? void 0 : Ce.isGame)) || []).forEach((Ce, dt) => { const Ne = Ee.gamelist[dt], ze = this.casinoLobbyService.getDisabledGames(); if (Ne) if (ze.indexOf(Ne.game) > -1) Ce.isDisabled = !0; else if (Ce.gameId = Ne.game, Ne.icon) { const ut = this.gameConfig.iconConfigMap.find(ht => ht.id === Ne.icon); Ce.icon = parseInt(Ne.icon), Ce.gameIconUrl = this.gameConfig.host + this.gameConfig.gameIconTemplate.replace("{0}", ut.icon).replace("{1}", Ne.game) + "." + ut.format, Ce.isSquareIcon = 1 === Ce.icon } else Ce.icon = 1, Ce.gameIconUrl = this.getDefaultImageUrl(Ce.gameId), Ce.isSquareIcon = !0; else Ce.isDisabled = !0 }), ((null === (Ge = j.subMap) || void 0 === Ge ? void 0 : Ge.subMapItems.filter(Re => { var Ce; return null === (Ce = null == Re ? void 0 : Re.constantMessages) || void 0 === Ce ? void 0 : Ce.isForZoomedOutSector })) || []).forEach(Re => { Re.isForZoomedOutSector = !0, Re.isDisabled = !0 }) }), this.map = w, this.isMapDataAvailable = !0, setTimeout(() => this.adjustSizes(H), 0) } } }) } onCategorySwitch(v) { var C; this.selectedMapItem = v; const D = document.getElementById(this.selectedMapItem.sectorContainerId); if (D) { const w = D.querySelector(".sector-image"), H = parseFloat(D.style.getPropertyValue("--scale") || "1.2"), j = T.S5.getTranslateValues(this.gsHubGrabContainer.nativeElement); D.style.setProperty("--translateX", (this.gsHubWrapper.nativeElement.clientWidth - w.clientWidth * H) / 2 + -1 * j.x + "px"), D.style.setProperty("--translateY", (this.gsHubWrapper.nativeElement.clientHeight - w.clientHeight * H) / 2 + -1 * j.y + "px") } null === (C = this.gsHubWrapper) || void 0 === C || C.nativeElement.classList.add("sector-opened"), this.gameShowHubService.setSectorOpened(this.selectedMapItem) } } return I.\u0275fac = function (v) { return new (v || I)(e.Y36(y.T3C), e.Y36(r.uw), e.Y36(e.Qsj), e.Y36(y.U8N), e.Y36(T.N_), e.Y36(W.gz), e.Y36(T.GA), e.Y36(T.nA), e.Y36(T.iX)) }, I.\u0275cmp = e.Xpm({ type: I, selectors: [["cc-game-show-hub"]], viewQuery: function (v, C) { if (1 & v && (e.Gf(Qt, 5), e.Gf(hi, 5)), 2 & v) { let D; e.iGM(D = e.CRH()) && (C.gsHubWrapper = D.first), e.iGM(D = e.CRH()) && (C.gsHubGrabContainer = D.first) } }, hostBindings: function (v, C) { 1 & v && e.NdJ("popstate", function (w) { return C.popStateEventHandler(w) }, !1, e.Jf7) }, inputs: { mapPath: "mapPath", routeCurrentProduct: "routeCurrentProduct", cookieName: "cookieName", gameShowConfig: "gameShowConfig" }, decls: 3, vars: 4, consts: [["ccBrowserState", "", 1, "casino-gshub-wrapper", 3, "idleTimeoutIn"], ["gsHubWrapper", ""], ["class", "gshub-container", "ccDraggable", "", 3, "dragContainer", "dragTarget", "createDrag", "disableDrag", "dragLockAxis", 4, "ngIf"], ["ccDraggable", "", 1, "gshub-container", 3, "dragContainer", "dragTarget", "createDrag", "disableDrag", "dragLockAxis"], ["gsHubGrabContainer", ""], ["class", "close-overlay", 3, "click", 4, "ngIf"], [3, "map", "gameShowConfig"], ["class", "sector-container", 3, "id", "isMapSizesAdjusted", "sector-in-mobile", "sector-selected", "wrapper", "gameShowConfig", "container", "mapItem", "isSelected", "sectorClick", 4, "ngFor", "ngForOf"], [1, "close-overlay", 3, "click"], [1, "sector-container", 3, "id", "isMapSizesAdjusted", "wrapper", "gameShowConfig", "container", "mapItem", "isSelected", "sectorClick"]], template: function (v, C) { 1 & v && (e.TgZ(0, "div", 0, 1), e.YNc(2, fi, 5, 9, "div", 2), e.qZA()), 2 & v && (e.Udp("background-color", C.mapBgClr ? C.mapBgClr + " !important" : "inherit"), e.Q6J("idleTimeoutIn", C.gameShowConfig.idleTimeout), e.xp6(2), e.Q6J("ngIf", C.isMapDataAvailable)) }, directives: [yi, Ti, T.Pw, o.O5, T.pD, o.sg], encapsulation: 2 }), I })(), Pi = (() => { class I { static forRoot() { return { ngModule: I } } } return I.rootComponent = qt, I.\u0275fac = function (v) { return new (v || I) }, I.\u0275mod = e.oAB({ type: I }), I.\u0275inj = e.cJS({ providers: [{ provide: r.WI, useValue: {} }, { provide: r.so, useValue: {} }, { provide: c.oL, useValue: {} }, { provide: c.OG, useValue: {} }], imports: [[o.ez, y.b9i, d.mZ, T.IR, M.I8, J.kz, c._r, r.Is, f.CT.forRoot({ player: () => i.e("node_modules_lottie-web_build_player_lottie_js").then(i.t.bind(i, 89023, 19)) }), f.eT.forRoot(), bt]] }), I })() }, 27475: (s, h, i) => { "use strict"; i.d(h, { TK: () => wn, gs: () => pd, H_: () => fd, Bo: () => qg, ux: () => hd, eh: () => ld, bG: () => Xn, ud: () => Cd, zA: () => Zg, dQ: () => Oa, nE: () => fo, nd: () => rd, KK: () => md, Ps: () => La, Z5: () => Aa, yG: () => Ua, D0: () => gd, Nz: () => vd, zK: () => dd }); var e = i(3184), o = i(36362), r = i(20639), c = i(38805), d = i(95758), f = i(68072), y = i(50253), M = i(76317), T = i(78947); function P(n, _) { if (1 & n && (e.TgZ(0, "div", 18)(1, "div", 19)(2, "div", 20), e._UZ(3, "img", 6), e.qZA(), e.TgZ(4, "div", 21), e._uU(5), e.ALo(6, "vnCurrency"), e.qZA()()()), 2 & n) { const t = e.oxw(); e.xp6(3), e.Q6J("src", t.hotIcon, e.LSH), e.xp6(2), e.Oqu(e.lcZ(6, 2, t.data.jackpotData)) } } let G = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K) { this.dialogRef = t, this.user = a, this.windowRef = l, this.bingoGameLaunchService = g, this.bingoFavouriteService = p, this.loginDialog = b, this.favouriteService = E, this.data = L, this.configProviderService = O, this.cozyBingoDataService = U, this.casinoWidgetService = K, this.hotIcon = "https://casinogames.galaspins.com/htmllobby/images/newlmticons/square/hotjackpot.png", this.favouriteStyle = "theme-favorite-i", this.unFavouriteStyle = "theme-favorite", this.isFavourite = !1, this.unsubscribe = new y.x, this.setWidth() } ngOnInit() { this.data.fromCozybingo && (this.cozyRoomData = this.cozyBingoDataService.getRoomdatabyId(this.data.room.roomId.replace(/[^A-Z0-9]/gi, "").toLocaleLowerCase()), this.cozyRoomData && (this.setCozyBingoRoomInfo(this.cozyRoomData), this.data.room.isFavourite = this.cozyBingoDataService.checkForFavouriteGame({ fromCasino: !1, gameId: this.data.room.roomId }))); let t = this.configProviderService.provideGlobalConfig(); ("true" === t.lobbyConfigurations.FavouriteHeart || "True" === t.lobbyConfigurations.FavouriteHeart || "TRUE" === t.lobbyConfigurations.FavouriteHeart) && (this.favouriteStyle = "theme-heart-solid", this.unFavouriteStyle = "theme-heart-outline"), this.gameContainer = this.data.gameContainer, this.data.isLaunchedFromUrl || this.appendQuickInfoQueryParameterToUrl(), document.querySelector(".casino-qi-noverlay") && (document.querySelector(".casino-qi-noverlay").style.cssText = t.messages.quickInfoStyles) } setCozyBingoRoomInfo(t) { this.data.roomTitle = t.name, this.data.roomDescription = t.sitecoreInfo.description, this.data.src = t.sitecoreInfo.desktopImage.src, this.data.jackpotData = t.jackpot } onResize() { this.setWidth() } setWidth() { this.width = this.windowRef.nativeWindow.screen.availWidth > 480 ? 333 : this.windowRef.nativeWindow.screen.availWidth < this.windowRef.nativeWindow.screen.availHeight ? this.windowRef.nativeWindow.screen.availWidth : this.windowRef.nativeWindow.screen.availHeight, this.boxWidth = this.width, this.boxWidthInt = this.boxWidth - 176 } closeModel() { document.getElementsByTagName("html")[0].classList.remove("casino-quickinfo-open"), document.getElementsByTagName("html")[0].classList.remove("cdk-global-scrollblock"), this.removeQuickInfoQueryParameterFromUrl(), this.dialogRef.close(), document.querySelector(".cdk-overlay-container") && (document.querySelector(".cdk-overlay-container").innerHTML = "") } launchGame() { this.closeModel(), this.data.fromCozybingo && this.bingoGameLaunchService.initiateGameLaunch(this.cozyRoomData.name, "BINGO", this.cozyRoomData.bingo_type, "room", this.cozyRoomData.sitecoreInfo.desktopImage.src, this.cozyRoomData.id, !0, void 0, { position: this.data.position, section: this.data.section, widgetFrameClr: this.data.widgetFrameClr, gameContainerLocation: this.data.gameContainerLocation }) } toggleFavourite(t) { let a = this.cozyRoomData.id; this.user.isAuthenticated ? t.isFavourite ? (this.data.room.isFavourite = !1, this.bingoFavouriteService.removeFavourite(a, this.user.id).subscribe(l => { l.result && (this.casinoWidgetService.postMessageToParent("favupdated", { categoryid: "rcp-widget", roomid: a, isFavourite: !1 }), this.favouriteService.publishingFavObervable(!1, a), this.cozyBingoDataService.getBingoData(!1, !1)) }, l => { })) : (this.data.room.isFavourite = !0, this.bingoFavouriteService.addFavourite(a, this.user.id).subscribe(l => { l.result && (this.favouriteService.publishingFavObervable(!0, a), this.casinoWidgetService.postMessageToParent("favupdated", { categoryid: "rcp-widget", roomid: a, isFavourite: !0 }), this.cozyBingoDataService.getBingoData(!1, !1)) }, l => { })) : (this.closeModel(), this.loginDialog.open({ loginMessageKey: "Favourite" })) } appendQuickInfoQueryParameterToUrl() { } removeQuickInfoQueryParameterFromUrl() { } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(d.so), e.Y36(r.KDu), e.Y36(r.X9E), e.Y36(c.BW), e.Y36(c.W), e.Y36(c.P1), e.Y36(c.io), e.Y36(d.WI), e.Y36(c.iX), e.Y36(c.Kh), e.Y36(c.hY)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-bingo-quick-info-model"]], hostBindings: function (t, a) { 1 & t && e.NdJ("resize", function () { return a.onResize() }, !1, e.Jf7) }, decls: 22, vars: 12, consts: [[1, "casino-lobby-container-main"], [1, "casino-qi-noverlay", 3, "click"], [1, "casino-qi-nrectangle", "casino-qi-popup"], [1, "casino-total-data"], [1, "casino-qi-nrectangle-int"], [1, "casino-qi-nimage", "casino-qi-desktop-nimage", "bingo-quick-info"], [3, "src"], ["class", "casino-qi-stickers", 4, "ngIf"], [1, "casino-qi-ngradient"], [1, "casino-qi-nfavourite", 3, "ngClass", "click"], [1, "casino-qi-nrectangle-right", "bingo-qi-nrectangle-right"], [1, "close", "theme-close", "qi-close", "casino-qi-desktop-close", 3, "click"], [2, "clear", "both"], [1, "gamedata"], [1, "casino-qi-ngame"], [1, "gameData-body", 3, "innerHTML"], [1, "casino-qi-ncta", "forbingo", 3, "click"], [1, "casino-qi-nplay-now", "btn"], [1, "casino-qi-stickers"], [1, "casino-qi-Jackpotcta"], [1, "casino-qi-hot-icon"], [1, "qi-jp-value"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0)(1, "div", 1), e.NdJ("click", function () { return a.closeModel() }), e.qZA(), e.TgZ(2, "div", 2)(3, "div", 3)(4, "div", 4)(5, "div", 5), e._UZ(6, "img", 6), e.YNc(7, P, 7, 4, "div", 7), e.TgZ(8, "div"), e._UZ(9, "div", 8), e.TgZ(10, "div", 9), e.NdJ("click", function () { return a.toggleFavourite(a.data.room) }), e.qZA()()(), e.TgZ(11, "div", 10)(12, "div", 11), e.NdJ("click", function () { return a.closeModel() }), e.qZA()(), e._UZ(13, "div", 12), e.qZA(), e.TgZ(14, "div", 13)(15, "div", 14), e._uU(16), e.qZA(), e._UZ(17, "span", 15), e.qZA(), e.TgZ(18, "div", 16), e.NdJ("click", function () { return a.launchGame() }), e.TgZ(19, "button", 17), e._uU(20), e.ALo(21, "uppercase"), e.qZA()()()()()), 2 & t && (e.xp6(6), e.s9C("src", a.data.src, e.LSH), e.xp6(1), e.Q6J("ngIf", a.data.jackpotData), e.xp6(3), e.Q6J("ngClass", a.data.room.isFavourite ? a.favouriteStyle : a.unFavouriteStyle), e.xp6(1), e.Udp("width", a.boxWidthInt, "px"), e.xp6(5), e.Oqu(a.data.roomTitle), e.xp6(1), e.Q6J("innerHTML", a.data.roomDescription, e.oJD), e.xp6(1), e.Udp("width", a.boxWidthInt, "px"), e.xp6(2), e.Oqu(e.lcZ(21, 10, a.data.cta))) }, directives: [o.O5, o.mk], pipes: [r.H9L, o.gd], encapsulation: 2 }), n })(), x = (() => { class n { static forRoot() { return { ngModule: n } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ providers: [{ provide: d.WI, useValue: {} }, { provide: d.so, useValue: {} }], imports: [[o.ez, r.b9i, d.Is, c.IR]] }), n })(); var R = i(67603), J = i(34314), W = i(34929), Q = i(16941), Z = i(63346), N = i(38163), ae = i(50318), re = i(90587), ce = i(35564), _e = i(60116), le = i(72028), be = i(28775), xe = i(20815); function De(n, _) { if (1 & n && (e.TgZ(0, "span", 4), e._uU(1), e.TgZ(2, "span", 5), e._uU(3), e.qZA()()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.hij("", t.category.sitecoreData.signPostingBadge, " "), e.xp6(2), e.Oqu(t.signPostingGamesCount > 99 ? 99 : t.signPostingGamesCount) } } function Oe(n, _) { if (1 & n && (e.TgZ(0, "span", 6), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Oqu(t.signPostingGamesCount > 99 ? 99 : t.signPostingGamesCount) } } function ge(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "span", 1), e.NdJ("resize", function () { return e.CHM(t), e.oxw().onResize() }, !1, e.Jf7), e.YNc(1, De, 4, 2, "span", 2), e.YNc(2, Oe, 2, 1, "span", 3), e.qZA() } if (2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("ngIf", (t.isDisplayBadge || !t.isMobileWidth) && t.category && t.category.sitecoreData.signPostingBadge), e.xp6(1), e.Q6J("ngIf", !t.isDisplayBadge && t.isMobileWidth) } } function Se(n, _) { if (1 & n && (e.TgZ(0, "ul", 2), e._UZ(1, "li", 6), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngClass", t.subCategoryData.sitecoreData.attributes.icon) } } function Te(n, _) { if (1 & n && e._UZ(0, "cc-sign-posting", 7), 2 & n) { const t = e.oxw(2); e.Q6J("category", t.subCategory) } } const Le = function (n, _, t) { return { color: n, "font-size": _, "font-family": t } }; function Pe(n, _) { if (1 & n && (e.TgZ(0, "p", 8), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2); e.Q6J("ngStyle", e.kEZ(2, Le, t.subCategoryTextColor, t.subCategorySubTitleFontSize, t.lobbyTileFontFamily)), e.xp6(1), e.Oqu(t.subCategoryData.subTitle) } } function V(n, _) { if (1 & n && (e.TgZ(0, "ul", 2), e._UZ(1, "li", 9), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngClass", t.subCategoryData.sitecoreData.attributes.icon) } } function ne(n, _) { if (1 & n && (e.TgZ(0, "span"), e.YNc(1, Se, 2, 1, "ul", 1), e.TgZ(2, "ul", 2)(3, "li")(4, "h2", 3), e._uU(5), e.qZA(), e.YNc(6, Te, 1, 1, "cc-sign-posting", 4), e.YNc(7, Pe, 2, 6, "p", 5), e.qZA()(), e.YNc(8, V, 2, 1, "ul", 1), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("ngIf", t.subCategoryData.sitecoreData.displayCategoryIcon && t.subCategoryData.sitecoreData.attributes.icon && !t.alignIconRight), e.xp6(3), e.Q6J("ngStyle", e.kEZ(6, Le, t.subCategoryTextColor, t.subCategoryTitleFontSize, t.lobbyTileFontFamily)), e.xp6(1), e.hij(" ", t.subCategoryData.categoryname, ""), e.xp6(1), e.Q6J("ngIf", t.isSignPosting), e.xp6(1), e.Q6J("ngIf", t.subCategoryData && t.subCategoryData.subTitle && "NotRecentAndGyml" === t.recentAndGyml), e.xp6(1), e.Q6J("ngIf", t.subCategoryData.sitecoreData.displayCategoryIcon && t.subCategoryData.sitecoreData.attributes.icon && t.alignIconRight) } } const k = function (n, _, t) { return { nonTouch: n, "promo-text-badge-0": _, "promo-text-badge-1": t } }; function $(n, _) { if (1 & n && (e.TgZ(0, "b", 6), e._uU(1), e.qZA()), 2 & n) { const t = _.$implicit, a = _.index, l = e.oxw(3); e.Q6J("ngClass", e.kEZ(2, k, !l.isTouch, a % 2 == 0, a % 2 != 0)), e.xp6(1), e.Oqu(t) } } const ie = function (n) { return { "stickers-uk": n } }; function ve(n, _) { if (1 & n && (e.TgZ(0, "div", 4), e.YNc(1, $, 2, 6, "b", 5), e.qZA()), 2 & n) { const t = e.oxw(2); e.Q6J("hidden", !t.showstickersinoverlay)("ngClass", e.VKq(3, ie, t.isStickersForUk)), e.xp6(1), e.Q6J("ngForOf", t.stickers) } } function Me(n, _) { if (1 & n && (e.TgZ(0, "div", 10), e._UZ(1, "img", 11), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.Q6J("src", t.hotIcon, e.LSH) } } const de = function (n) { return { background: n } }, Ye = function (n) { return { "casino-qi-Jackpotcta-pos": n } }, Ze = function (n) { return { color: n } }; function F(n, _) { if (1 & n && (e.TgZ(0, "div", 7), e.YNc(1, Me, 2, 1, "div", 8), e.TgZ(2, "div", 9), e._uU(3), e.qZA()()), 2 & n) { const t = e.oxw(2); e.Q6J("ngStyle", e.VKq(5, de, t.jpBgColor))("ngClass", e.VKq(7, Ye, t.demoEnabled)), e.xp6(1), e.Q6J("ngIf", t.isHotJackpotGroup && t.enableHotIcon), e.xp6(1), e.Q6J("ngStyle", e.VKq(9, Ze, t.jpTextCOlor)), e.xp6(1), e.Oqu(t.jackpotValue.amount) } } const Pt = function (n) { return { "casino-qi-stickers-pos": n } }; function It(n, _) { if (1 & n && (e.TgZ(0, "div", 1), e.YNc(1, ve, 2, 5, "div", 2), e.YNc(2, F, 4, 11, "div", 3), e.qZA()), 2 & n) { const t = e.oxw(); e.Q6J("ngClass", e.VKq(3, Pt, t.demoEnabled)), e.xp6(1), e.Q6J("ngIf", t.stickers && t.stickers.length > 0), e.xp6(1), e.Q6J("ngIf", t.showjackpotvalueinoverlay && t.jackpotValue) } } function oi(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 1), e.NdJ("click", function (l) { const p = e.CHM(t).index; return e.oxw().moreBoxInfoClick(l, p + 1) }), e.TgZ(1, "div", 2)(2, "div", 3), e._UZ(3, "circle-progress", 4), e.qZA(), e.TgZ(4, "div", 5)(5, "div", 6), e._uU(6), e.qZA(), e.TgZ(7, "div", 7)(8, "span", 8), e._uU(9), e.ALo(10, "currency"), e.ALo(11, "currency"), e.qZA(), e._uU(12), e.qZA()(), e.TgZ(13, "div", 9)(14, "a", 10), e.NdJ("click", function (l) { const p = e.CHM(t).index; return e.oxw().moreInfoClick(l, p + 1) }), e._uU(15), e.qZA(), e._UZ(16, "span", 11), e.qZA()(), e.TgZ(17, "div", 12), e._UZ(18, "span", 13), e.TgZ(19, "span"), e._uU(20), e.ALo(21, "timezoneformat"), e.qZA()()() } if (2 & n) { const t = _.$implicit, a = e.oxw(); e.Udp("font-family", a.freeSpinsFont)("color", a.fontColor), e.xp6(1), e.Udp("background-color", a.freeSpinsBoxColor), e.xp6(2), e.Q6J("percent", a.calculateRewardPercent(t))("radius", 20)("titleColor", a.freeSpinsCountCircleColor)("outerStrokeColor", a.freeSpinsCountCircleColor)("innerStrokeColor", "#808080")("animation", !1)("clockwise", !1)("title", t.availableCount), e.xp6(3), e.lnq("", a.ofText, " ", t.totalCount, " ", a.freeSpinsRemainingText, ""), e.xp6(2), e.Udp("color", a.freeSpinsCountCircleColor), e.xp6(1), e.Oqu(null == t.winAmountSoFar ? e.xi3(10, 30, 0, t.currency) : e.xi3(11, 33, t.winAmountSoFar / 100, t.currency)), e.xp6(3), e.hij(" ", a.totalAmountText, ""), e.xp6(2), e.Udp("color", a.fontColor), e.xp6(1), e.Oqu(a.moreInfoText), e.xp6(2), e.Udp("background-color", a.expiryDetailsBoxColor), e.xp6(1), e.Udp("color", a.expiryDetailsBoxColor), e.xp6(2), e.AsE("", a.expiryDateText, ":", e.lcZ(21, 36, t.expiryDate), " ") } } function ni(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div"), e._UZ(1, "div", 23), e.TgZ(2, "div", 24), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw(); return g.toggleFavourite(g.game, l) }), e.qZA()() } if (2 & n) { const t = e.oxw(); e.xp6(2), e.Q6J("ngClass", t.isFavourite ? t.favouriteStyle : t.unFavouriteStyle) } } function Nt(n, _) { if (1 & n && (e.TgZ(0, "div", 25), e._UZ(1, "img", 6), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.s9C("src", t.vendorLogo, e.LSH) } } function Kt(n, _) { if (1 & n && (e.TgZ(0, "div", 25), e._uU(1), e.ALo(2, "uppercase"), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Oqu(e.lcZ(2, 1, t.provider)) } } function ai(n, _) { if (1 & n && (e.TgZ(0, "div", 33), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.hij(" ", t.reelsTitle, " ") } } function Dt(n, _) { if (1 & n && (e.TgZ(0, "div", 30)(1, "div", 31), e._uU(2), e.qZA(), e.YNc(3, ai, 2, 1, "div", 32), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(2), e.Oqu(t.reels), e.xp6(1), e.Q6J("ngIf", t.reels) } } function Jt(n, _) { if (1 & n && (e.TgZ(0, "div", 36), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.hij(" ", t.payLinesTitle, " ") } } function Yt(n, _) { if (1 & n && (e.TgZ(0, "div", 34)(1, "div", 31), e._uU(2), e.qZA(), e.YNc(3, Jt, 2, 1, "div", 35), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(2), e.Oqu(t.payLines), e.xp6(1), e.Q6J("ngIf", t.payLines) } } function ft(n, _) { if (1 & n && (e.TgZ(0, "div", 40), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.hij(" ", t.returnToPlayerTitle, " ") } } function gt(n, _) { if (1 & n && (e.TgZ(0, "div", 37)(1, "div", 38), e._uU(2), e.qZA(), e.YNc(3, ft, 2, 1, "div", 39), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(2), e.hij(" ", t.returnToPlayer, ""), e.xp6(1), e.Q6J("ngIf", t.returnToPlayer) } } function si(n, _) { if (1 & n && (e.TgZ(0, "div", 26), e.YNc(1, Dt, 4, 2, "div", 27), e.YNc(2, Yt, 4, 2, "div", 28), e.YNc(3, gt, 4, 2, "div", 29), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("ngIf", t.reels), e.xp6(1), e.Q6J("ngIf", t.payLines), e.xp6(1), e.Q6J("ngIf", t.returnToPlayer) } } const He = function (n) { return { color: n } }; function ri(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 41), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(); return l.launchGame(l.game, !0) }), e.TgZ(1, "a", 42), e._uU(2), e.ALo(3, "uppercase"), e.qZA()() } if (2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("ngStyle", e.VKq(4, He, t.demoLinkTextColor)), e.xp6(1), e.Oqu(e.lcZ(3, 2, t.demoLinkText)) } } function ci(n, _) { if (1 & n && e._UZ(0, "cc-freespin-quick-info", 43), 2 & n) { const t = e.oxw(); e.Q6J("rewardDetails", t.rewardDetails) } } function li(n, _) { if (1 & n && (e.TgZ(0, "span", 6)(1, "b", 7), e._uU(2), e.qZA(), e._uU(3), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(2), e.Oqu(t.freespinAvailableCount), e.xp6(1), e.hij("/", t.freespinTotalCount, " ") } } function _i(n, _) { if (1 & n && (e.TgZ(0, "span", 6)(1, "div")(2, "b", 7), e._uU(3), e.qZA()(), e._UZ(4, "div", 8), e.TgZ(5, "div"), e._uU(6), e.qZA()()), 2 & n) { const t = e.oxw(2); e.xp6(3), e.Oqu(t.freespinAvailableCount), e.xp6(3), e.Oqu(t.freespinTotalCount) } } const Zt = function (n) { return { "fsp-gt-count": n } }; function gi(n, _) { if (1 & n && (e.TgZ(0, "div", 3)(1, "span", 4), e._uU(2, "Free"), e._UZ(3, "br"), e._uU(4, "Spins"), e.qZA(), e.YNc(5, li, 4, 2, "span", 5), e.YNc(6, _i, 7, 2, "span", 5), e.qZA()), 2 & n) { const t = e.oxw(); e.Udp("background-color", t.freespinscountbg), e.Q6J("ngClass", e.VKq(5, Zt, t.isThreeDigit)), e.xp6(5), e.Q6J("ngIf", !t.isThreeDigit), e.xp6(1), e.Q6J("ngIf", t.isThreeDigit) } } function di(n, _) { if (1 & n && (e.TgZ(0, "span", 6), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.AsE("", t.freespinAvailableCount, "/", t.freespinTotalCount, "") } } function ui(n, _) { if (1 & n && (e.TgZ(0, "span", 6)(1, "div"), e._uU(2), e.qZA(), e._UZ(3, "div", 8), e.TgZ(4, "div"), e._uU(5), e.qZA()()), 2 & n) { const t = e.oxw(2); e.xp6(2), e.Oqu(t.freespinAvailableCount), e.xp6(3), e.Oqu(t.freespinTotalCount) } } function St(n, _) { if (1 & n && (e.TgZ(0, "div", 9)(1, "span", 4), e._uU(2, "Free"), e._UZ(3, "br"), e._uU(4, "Spins"), e.qZA(), e.YNc(5, di, 2, 2, "span", 5), e.YNc(6, ui, 6, 2, "span", 5), e.qZA()), 2 & n) { const t = e.oxw(); e.Udp("background-color", t.freespinscountbg), e.Q6J("ngClass", e.VKq(5, Zt, t.isThreeDigit)), e.xp6(5), e.Q6J("ngIf", 0 != t.freespinAvailableCount && 0 != t.freespinTotalCount && !t.isThreeDigit), e.xp6(1), e.Q6J("ngIf", 0 != t.freespinAvailableCount && 0 != t.freespinTotalCount && t.isThreeDigit) } } function vt(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div"), e._UZ(1, "div", 15), e.TgZ(2, "div", 16), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw(2); return g.toggleFavourite(g.game, l) }), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.xp6(2), e.Q6J("ngClass", t.isFavouriteGame(t.game) ? t.favouriteStyle : t.unFavouriteStyle) } } function yt(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div")(1, "div", 3), e.NdJ("click", function (l) { return e.CHM(t), e.oxw().hideInfo(l) }), e.qZA(), e.TgZ(2, "div", 4)(3, "div", 5), e._uU(4), e.qZA(), e.TgZ(5, "div", 6)(6, "div", 7), e._UZ(7, "img", 8), e.YNc(8, vt, 3, 1, "div", 1), e.qZA(), e.TgZ(9, "div", 9)(10, "div", 10), e._uU(11), e.qZA(), e.TgZ(12, "div", 11), e._uU(13), e.ALo(14, "uppercase"), e.qZA(), e.TgZ(15, "div", 12)(16, "button", 13), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(); return l.launchGame(l.game, !1) }), e._uU(17), e.ALo(18, "uppercase"), e.qZA()()(), e._UZ(19, "div", 14), e.qZA()()() } if (2 & n) { const t = e.oxw(); e.xp6(2), e.Udp("width", t.boxWidth, "px"), e.xp6(2), e.Oqu(t.gameTitle), e.xp6(3), e.s9C("src", t.mobileQuickInfoSrc, e.LSH), e.xp6(1), e.Q6J("ngIf", t.useFavouriteGames), e.xp6(1), e.Udp("width", t.boxWidthInt, "px"), e.xp6(2), e.Oqu(t.gameProvider), e.xp6(2), e.Oqu(e.lcZ(14, 12, t.provider)), e.xp6(2), e.Udp("width", t.boxWidthInt, "px"), e.xp6(2), e.Oqu(e.lcZ(18, 14, t.cta)) } } function Ht(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div"), e._UZ(1, "div", 35), e.TgZ(2, "div", 36), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw(2); return g.toggleFavourite(g.game, l) }), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.xp6(2), e.Q6J("ngClass", t.isFavourite ? t.favouriteStyle : t.unFavouriteStyle) } } function Qt(n, _) { if (1 & n && (e.TgZ(0, "div", 37), e._UZ(1, "img", 8), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.s9C("src", t.vendorLogo, e.LSH) } } function hi(n, _) { if (1 & n && (e.TgZ(0, "div", 37), e._uU(1), e.ALo(2, "uppercase"), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Oqu(e.lcZ(2, 1, t.provider)) } } function mi(n, _) { if (1 & n && (e.TgZ(0, "div", 45), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(4); e.xp6(1), e.hij(" ", t.reelsTitle, " ") } } function pi(n, _) { if (1 & n && (e.TgZ(0, "div", 42)(1, "div", 43), e._uU(2), e.qZA(), e.YNc(3, mi, 2, 1, "div", 44), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(2), e.Oqu(t.reels), e.xp6(1), e.Q6J("ngIf", t.reels) } } function fi(n, _) { if (1 & n && (e.TgZ(0, "div", 48), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(4); e.xp6(1), e.hij(" ", t.payLinesTitle, " ") } } function Qe(n, _) { if (1 & n && (e.TgZ(0, "div", 46)(1, "div", 43), e._uU(2), e.qZA(), e.YNc(3, fi, 2, 1, "div", 47), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(2), e.Oqu(t.payLines), e.xp6(1), e.Q6J("ngIf", t.payLines) } } function bt(n, _) { if (1 & n && (e.TgZ(0, "div", 52), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(4); e.xp6(1), e.hij(" ", t.returnToPlayerTitle, " ") } } function vi(n, _) { if (1 & n && (e.TgZ(0, "div", 49)(1, "div", 50), e._uU(2), e.qZA(), e.YNc(3, bt, 2, 1, "div", 51), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(2), e.hij(" ", t.returnToPlayer, ""), e.xp6(1), e.Q6J("ngIf", t.returnToPlayer) } } function $e(n, _) { if (1 & n && (e.TgZ(0, "div", 38), e.YNc(1, pi, 4, 2, "div", 39), e.YNc(2, Qe, 4, 2, "div", 40), e.YNc(3, vi, 4, 2, "div", 41), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngIf", t.reels), e.xp6(1), e.Q6J("ngIf", t.payLines), e.xp6(1), e.Q6J("ngIf", t.returnToPlayer) } } function zt(n, _) { if (1 & n && (e.TgZ(0, "span"), e._UZ(1, "span", 53), e.ALo(2, "trustAsHtml"), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("innerHTML", e.lcZ(2, 1, t.gameDescription), e.oJD) } } function yi(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 54), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(2); return l.launchGame(l.game, !0) }), e.TgZ(1, "a", 55), e._uU(2), e.ALo(3, "uppercase"), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngStyle", e.VKq(4, He, t.demoLinkTextColor)), e.xp6(1), e.Oqu(e.lcZ(3, 2, t.demoLinkText)) } } function bi(n, _) { if (1 & n && e._UZ(0, "cc-freespin-quick-info", 56), 2 & n) { const t = e.oxw(2); e.Q6J("rewardDetails", t.rewardDetails) } } function et(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div")(1, "div", 17), e.NdJ("click", function (l) { return e.CHM(t), e.oxw().hideInfo(l) }), e.qZA(), e.TgZ(2, "div", 18)(3, "div", 19)(4, "div", 20)(5, "div", 21), e._UZ(6, "img", 8), e.TgZ(7, "div", 22), e._UZ(8, "cc-stickers-jackpot", 23), e.qZA(), e.YNc(9, Ht, 3, 1, "div", 1), e.qZA(), e.TgZ(10, "div", 24)(11, "div", 25), e._uU(12), e.ALo(13, "uppercase"), e.qZA(), e.TgZ(14, "div", 26), e.NdJ("click", function (l) { return e.CHM(t), e.oxw().hideInfo(l) }), e.qZA(), e.YNc(15, Qt, 2, 1, "div", 27), e.YNc(16, hi, 3, 3, "div", 27), e.YNc(17, $e, 4, 3, "div", 28), e.qZA(), e._UZ(18, "div", 14), e.qZA(), e.TgZ(19, "div", 29), e._UZ(20, "div", 30), e.YNc(21, zt, 3, 3, "span", 1), e.qZA()(), e.TgZ(22, "div", 31), e.YNc(23, yi, 4, 6, "div", 32), e.TgZ(24, "button", 33), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(); return l.launchGame(l.game, !1) }), e._uU(25), e.ALo(26, "uppercase"), e.qZA()(), e.YNc(27, bi, 1, 1, "cc-freespin-quick-info", 34), e.qZA()() } if (2 & n) { const t = e.oxw(); e.xp6(2), e.Udp("width", t.boxWidth, "px"), e.xp6(4), e.s9C("src", t.mobileQuickInfoSrc, e.LSH), e.xp6(2), e.Q6J("demoEnabled", t.demoEnabled)("stickers", t.stickers)("isTouch", t.isTouch)("jackpotValue", t.jackpotValue)("isHotJackpotGroup", t.isHotJackpotGroup)("isStickersForUk", t.isStickersForUk)("lobbyType", t.lobbyType), e.xp6(1), e.Q6J("ngIf", t.useFavouriteGames), e.xp6(1), e.Udp("width", t.boxWidthInt, "px"), e.xp6(2), e.Oqu(e.lcZ(13, 22, t.gameProvider)), e.xp6(3), e.Q6J("ngIf", t.vendorLogo), e.xp6(1), e.Q6J("ngIf", !t.vendorLogo), e.xp6(1), e.Q6J("ngIf", t.enableQuickInfoReels), e.xp6(3), e.Q6J("innerHTML", t.gameTitle, e.oJD), e.xp6(1), e.Q6J("ngIf", t.gameDescription), e.xp6(2), e.Q6J("ngIf", t.demoEnabled && t.demoEnabledForProvider), e.xp6(2), e.Oqu(e.lcZ(26, 24, t.cta)), e.xp6(2), e.Q6J("ngIf", t.showFreeSpinCount && t.enableFreeSpinsOnQuickInfo) } } function jt(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "cc-freespin-summary", 66), e.NdJ("freespinsInfo", function (l) { return e.CHM(t), e.oxw(3).openDialog(l) }), e.qZA() } if (2 & n) { const t = e.oxw(3); e.Q6J("freespinAvailableCount", t.availableCount)("freespinTotalCount", t.totalCount)("isOptedIn", t.optedIn) } } function Ci(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 67), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw(3); return g.toggleFavourite(g.game, l) }), e.qZA() } if (2 & n) { const t = e.oxw(3); e.Q6J("ngClass", t.isFavouriteGame(t.game) ? t.favouriteStyle : t.unFavouriteStyle) } } function Mi(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 68), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw(3); return g.toggleFavourite(g.game, l) }), e.qZA() } if (2 & n) { const t = e.oxw(3); e.Q6J("ngClass", t.isFavouriteGame(t.game) ? t.favouriteStyle : t.unFavouriteStyle) } } function Ei(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 69), e.NdJ("click", function (l) { return e.CHM(t), e.oxw(3).openDialog(l) }), e._uU(1), e.qZA() } if (2 & n) { const t = e.oxw(3); e.xp6(1), e.hij(" ", t.moreInfo, " ") } } function Ti(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 59), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(2); return l.launchGame(l.game, !1) }), e.YNc(1, jt, 1, 3, "cc-freespin-summary", 60), e.YNc(2, Ci, 1, 1, "div", 61), e.YNc(3, Mi, 1, 1, "div", 62), e.TgZ(4, "div", 63)(5, "button", 64), e._uU(6), e.ALo(7, "uppercase"), e.qZA(), e.YNc(8, Ei, 2, 1, "div", 65), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngIf", t.showFreeSpinCount), e.xp6(1), e.Q6J("ngIf", t.useFavouriteGames && t.displayFavouritesOnPreLogin && !(t.useQuickInfo && t.newQuickInfoStyle) && "recentgames" !== t.categoryType && t.categoryType !== t.gymlCategoryType), e.xp6(1), e.Q6J("ngIf", t.useFavouriteGames && !(t.useQuickInfo && t.newQuickInfoStyle) && ("recentgames" === t.categoryType || t.categoryType === t.gymlCategoryType)), e.xp6(2), e.ekj("casino-playbtn-hover-effect", t.playNowHoverEffect), e.xp6(1), e.hij(" ", e.lcZ(7, 7, t.playNow), " "), e.xp6(2), e.Q6J("ngIf", t.useQuickInfo && t.newQuickInfoStyle) } } function qt(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 67), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw(3); return g.toggleFavourite(g.game, l) }), e.qZA() } if (2 & n) { const t = e.oxw(3); e.Q6J("ngClass", t.isFavouriteGame(t.game) ? t.favouriteStyle : t.unFavouriteStyle) } } function Pi(n, _) { if (1 & n && e._UZ(0, "div", 74), 2 & n) { const t = e.oxw(3); e.Q6J("innerHTML", t.gameTitle, e.oJD) } } const I = function (n) { return { "border-radius": n } }; function Y(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 59), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(2); return l.launchGame(l.game, !1) }), e.TgZ(1, "div", 70), e._UZ(2, "img", 71), e.qZA(), e.YNc(3, qt, 1, 1, "div", 61), e.TgZ(4, "div", 72), e.YNc(5, Pi, 1, 1, "div", 73), e.qZA(), e.TgZ(6, "div", 63)(7, "button", 64), e._uU(8), e.ALo(9, "uppercase"), e.qZA()()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngStyle", e.VKq(11, I, null == t.game ? null : t.game.gameTileBorderRadius)), e.xp6(1), e.s9C("src", t.src, e.LSH), e.xp6(1), e.Q6J("ngIf", t.useFavouriteGames && t.displayFavouritesOnPreLogin), e.xp6(2), e.Q6J("ngIf", t.enableTitleOnGame), e.xp6(2), e.Udp("width", t.playNowBtnWidth, "%"), e.ekj("casino-playbtn-hover-effect", t.playNowHoverEffect), e.xp6(1), e.hij("", e.lcZ(9, 9, t.cta), " ") } } function v(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 68), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw(3); return g.toggleFavourite(g.game, l) }), e.qZA() } if (2 & n) { const t = e.oxw(3); e.Q6J("ngClass", t.isFavouriteGame(t.game) ? t.favouriteStyle : t.unFavouriteStyle) } } function C(n, _) { if (1 & n && e._UZ(0, "div", 80), 2 & n) { const t = e.oxw(3); e.Q6J("innerHTML", t.gameTitle, e.oJD) } } function D(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 75), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(2); return l.launchGame(l.game, !1) }), e.TgZ(1, "div", 76), e._UZ(2, "img", 77), e.TgZ(3, "div", 63)(4, "button", 64), e._uU(5), e.ALo(6, "uppercase"), e.qZA()()(), e.YNc(7, v, 1, 1, "div", 62), e.TgZ(8, "div", 78), e.YNc(9, C, 1, 1, "div", 79), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.xp6(2), e.s9C("src", t.src, e.LSH), e.xp6(2), e.ekj("casino-playbtn-hover-effect", t.playNowHoverEffect), e.xp6(1), e.hij(" ", e.lcZ(6, 6, t.cta), " "), e.xp6(2), e.Q6J("ngIf", t.useFavouriteGames && t.displayFavouritesOnPreLogin), e.xp6(2), e.Q6J("ngIf", t.enableTitleOnGame) } } function w(n, _) { if (1 & n && (e.TgZ(0, "div"), e.YNc(1, Ti, 9, 9, "div", 57), e.YNc(2, Y, 10, 13, "div", 57), e.YNc(3, D, 10, 8, "div", 58), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("ngIf", t.enableUkMouseOverStyle), e.xp6(1), e.Q6J("ngIf", "recentgames" !== t.categoryType && t.categoryType !== t.gymlCategoryType && !t.enableUkMouseOverStyle), e.xp6(1), e.Q6J("ngIf", ("recentgames" === t.categoryType || t.categoryType === t.gymlCategoryType) && !t.enableUkMouseOverStyle) } } function H(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 67), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw(2); return g.toggleFavourite(g.game, l) }), e.qZA() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngClass", t.isFavouriteGame(t.game) ? t.favouriteStyle : t.unFavouriteStyle) } } function j(n, _) { if (1 & n && e._UZ(0, "div", 74), 2 & n) { const t = e.oxw(2); e.Q6J("innerHTML", t.gameTitle, e.oJD) } } function he(n, _) { if (1 & n && (e.TgZ(0, "button", 64), e._uU(1), e.ALo(2, "uppercase"), e.qZA()), 2 & n) { const t = e.oxw(2); e.Udp("width", t.playNowBtnWidth, "%"), e.xp6(1), e.Oqu(e.lcZ(2, 3, t.playNow)) } } function ue(n, _) { if (1 & n && (e.TgZ(0, "button", 64), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2); e.Udp("width", t.playNowBtnWidth, "%"), e.xp6(1), e.Oqu(t.playBehindButtonTitle) } } function se(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 69), e.NdJ("click", function (l) { return e.CHM(t), e.oxw(2).openDialog(l) }), e._uU(1), e.qZA() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.hij(" ", t.moreInfo, " ") } } const Ge = function (n, _, t) { return { "des-fav-lcapi-active": n, "uk-mouse-hover-active": _, "more-info-hide": t } }, we = function (n) { return { "ukmouseoverstyle-playnow": n } }; function Fe(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 81)(1, "div", 59), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(); return l.launchGame(l.game, !1) }), e.YNc(2, H, 1, 1, "div", 61), e.TgZ(3, "div", 72), e.YNc(4, j, 1, 1, "div", 73), e.qZA(), e.TgZ(5, "div", 82), e.YNc(6, he, 3, 5, "button", 83), e.YNc(7, ue, 2, 3, "button", 83), e.YNc(8, se, 2, 1, "div", 65), e.qZA()()() } if (2 & n) { const t = e.oxw(); e.Q6J("ngClass", e.kEZ(7, Ge, t.enableFavouriteGamesforLiveCasinoApi, t.enableUkMouseOverStyle, t.hideMoreInfoLinkForLiveCasinoApi)), e.xp6(2), e.Q6J("ngIf", t.useFavouriteGames && t.displayFavouritesOnPreLogin), e.xp6(2), e.Q6J("ngIf", t.enableTitleOnGame), e.xp6(1), e.Q6J("ngClass", e.VKq(11, we, !t.enableUkMouseOverStyle)), e.xp6(1), e.Q6J("ngIf", 7 != t.liveGameInfo.seatsTaken.length), e.xp6(1), e.Q6J("ngIf", 7 == t.liveGameInfo.seatsTaken.length), e.xp6(1), e.Q6J("ngIf", t.useQuickInfo && t.newQuickInfoStyle) } } const Ee = ["casinoCoreLazyTemplate"]; function ye(n, _) { } const Re = ["gameref"]; function Ce(n, _) { if (1 & n && e._UZ(0, "div", 10), 2 & n) { const t = e.oxw(); e.Q6J("ngStyle", e.VKq(1, I, null == t.game ? null : t.game.gameTileBorderRadius)) } } function dt(n, _) { 1 & n && e._UZ(0, "div", 11) } function Ne(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "cc-freespin-summary", 12), e.NdJ("freespinsInfo", function (l) { return e.CHM(t), e.oxw().displayQuickInfo(l) }), e.qZA() } if (2 & n) { const t = e.oxw(); e.Q6J("freespinAvailableCount", t.availableCount)("freespinTotalCount", t.totalCount)("isOptedIn", t.optedIn) } } function ze(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "cc-game-quick-info", 13), e.NdJ("hide", function () { return e.CHM(t), e.oxw().hideQuickInfo() }), e.qZA() } if (2 & n) { const t = e.oxw(); e.Q6J("game", t.game)("gamePosition", t.gamePosition)("categoryType", t.category.categoryid)("icon", t.quickInfoIcon)("quickInfoScrollY", t.quickInfoScrollY)("gameLaunchedFrom", t.gameLaunchedFrom)("widgetFrameClr", t.widgetFrameClr)("gridPosition", t.category.categoryIndex)("gameModel", t.gameModel)("isLiveGame", t.isLiveGame)("gameContainerLocation", t.gameContainerLocation)("liveGameInfo", t.liveGameInfo)("product", t.product)("stickersArray", t.stickers)("lobbyType", t.currentLobbyType) } } const ut = function (n, _, t, a, l, g, p) { return { game: n, QuickInfoVisible: _, isLiveGame: t, stickers: a, gameIndex: l, icon: g, category: p } }; function ht(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 27), 2 & n) { const t = e.oxw(2); e.Q6J("inputData", e.Hh0(2, ut, t.game, t.QuickInfoVisible, t.isLiveGame, t.stickers, t.gameIndex, t.icon, t.category))("componentName", "NewGridGameMetaDataComponent") } } function at(n, _) { if (1 & n && e._UZ(0, "cc-image-loader", 28), 2 & n) { const t = e.oxw(2); e.Q6J("icon", t.icon)("iconType", t.game.iconType)("gameInfo", t.game.gameId)("format", t.game.format)("forcevisible", "true")("alt", t.game.icon.alt) } } const st = function (n) { return { eventName: "onTimerElapsed", callback: n } }, Ii = function (n) { return [n] }, Di = function (n, _, t) { return { game: n, liveGameInfo: _, category: t } }; function Lt(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 29), 2 & n) { const t = e.oxw(2); e.Q6J("outputEvents", e.VKq(5, Ii, e.VKq(3, st, t.onLiveCasinoTableTimerEnd)))("inputData", e.kEZ(7, Di, t.game, t.liveGameInfo, t.category))("componentName", "LiveCasinoComponent") } } function Vt(n, _) { if (1 & n && e._UZ(0, "a", 30), 2 & n) { const t = e.oxw(2); e.MGl("href", "/game-info/", t.game.gameId, "", e.LSH) } } function Xt(n, _) { if (1 & n && (e.TgZ(0, "span", 34), e._UZ(1, "img", 35), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.Q6J("src", t.hotIcon, e.LSH) } } const Ot = function (n, _) { return { background: n, color: _ } }, At = function (n, _, t) { return { "casino-new-jp-styles": n, "rcnt-new-jp-styles": _, "rp-jackpot": t } }; function tt(n, _) { if (1 & n && (e.TgZ(0, "div", 31), e.YNc(1, Xt, 2, 1, "span", 32), e.TgZ(2, "span", 33), e._uU(3), e.qZA()()), 2 & n) { const t = e.oxw(2); e.Q6J("ngStyle", e.WLB(5, Ot, null == t.game ? null : t.game.jpBgColor, null == t.game ? null : t.game.jpTextCOlor))("ngClass", e.kEZ(8, At, t.newJackpotRibbonStyling, t.game.isFastLoadingGame, (t.game.isGYML || t.game.isPromoted) && t.game.isFastLoadingGame))("hidden", t.QuickInfoVisible), e.xp6(1), e.Q6J("ngIf", t.game.isHotJackpotGroup && t.enableHotIcon), e.xp6(2), e.Oqu(t.game.jackpotValue) } } const Gt = function (n, _, t, a) { return { "rcntly-gyml-bage-available": n, "qi-lcapi-active": _, "rp-i-fav-icon-with-jpk-fld": t, "rp-i-fav-icon-with-fast-loading": a } }; function je(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 36), e.NdJ("click", function (l) { return e.CHM(t), e.oxw(2).displayQuickInfo(l) }), e._uU(1), e.qZA() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngClass", e.l5B(2, Gt, t.isUnfinishedGame, t.enableQuickInfoforLiveCasinoApi && t.isLiveGame, t.game.isFastLoadingGame && t.game.jackpotValue, t.game.isFastLoadingGame)), e.xp6(1), e.hij(" ", t.moreInfo, " ") } } const qe = function (n, _) { return { "rp-fast-loading": n, "casino-nojackpot-value": _ } }; function kt(n, _) { if (1 & n && (e.TgZ(0, "div", 37), e._UZ(1, "img", 38), e.qZA()), 2 & n) { const t = e.oxw(2); e.Q6J("hidden", t.QuickInfoVisible)("ngClass", e.WLB(2, qe, t.game.isGYML || t.game.isPromoted, !t.game.jackpotValue)) } } function xt(n, _) { if (1 & n && (e.TgZ(0, "div", 39)(1, "span"), e._uU(2), e.qZA()()), 2 & n) { const t = e.oxw(2); e.Q6J("ngClass", t.assignRecommendedWidgetColors()), e.xp6(2), e.Oqu(t.widgetRecommended) } } function Rt(n, _) { if (1 & n && (e.TgZ(0, "div", 39)(1, "span"), e._uU(2), e.qZA()()), 2 & n) { const t = e.oxw(2); e.Udp("background-color", t.promotedGameBackgroundColor)("color", t.promotedGameTextColor), e.Q6J("ngClass", t.assignRecommendedWidgetColors()), e.xp6(2), e.Oqu(t.promotedGameText) } } function wt(n, _) { if (1 & n && (e.TgZ(0, "div", 40), e._UZ(1, "cc-global-translate", 41), e.qZA()), 2 & n) { const t = e.oxw(2); e.Q6J("hidden", t.QuickInfoVisible), e.xp6(1), e.Q6J("key", "UNFINISHED") } } function Do(n, _) { if (1 & n && (e.TgZ(0, "b", 44), e._uU(1), e.qZA()), 2 & n) { const t = _.$implicit, a = _.index, l = e.oxw(3); e.Akn(l.getStickerColor(a)), e.Q6J("ngClass", e.kEZ(4, k, !l.isTouch, a % 2 == 0, a % 2 != 0)), e.xp6(1), e.Oqu(t) } } function So(n, _) { if (1 & n && (e.TgZ(0, "div", 42), e.YNc(1, Do, 2, 8, "b", 43), e.qZA()), 2 & n) { const t = e.oxw(2); e.Q6J("hidden", t.QuickInfoVisible)("ngClass", e.VKq(3, ie, t.isStickersForUk)), e.xp6(1), e.Q6J("ngForOf", t.stickers) } } const Lo = function (n, _) { return { background: n, "border-radius": _ } }; function Oo(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "a", 14), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(); return l.action(l.game, "p") }), e.YNc(1, ht, 1, 10, "cc-casino-core-lazy-placeholder", 15), e.YNc(2, at, 1, 6, "cc-image-loader", 16), e.YNc(3, Lt, 1, 11, "cc-casino-core-lazy-placeholder", 17), e.TgZ(4, "div", 18), e.YNc(5, Vt, 1, 1, "a", 19), e.YNc(6, tt, 4, 12, "div", 20), e.YNc(7, je, 2, 7, "div", 21), e.qZA(), e.YNc(8, kt, 2, 5, "div", 22), e.YNc(9, xt, 3, 2, "div", 23), e.YNc(10, Rt, 3, 6, "div", 24), e.YNc(11, wt, 2, 2, "div", 25), e.YNc(12, So, 2, 5, "div", 26), e.qZA() } if (2 & n) { const t = e.oxw(), a = e.MAs(9); e.Q6J("ngStyle", e.WLB(15, Lo, t.unfinishedBG, null == t.game ? null : t.game.gameTileBorderRadius)), e.xp6(1), e.Q6J("ngIf", "6" == t.game.iconType || "-6" == t.game.iconType || "7" == t.game.iconType || "-7" == t.game.iconType), e.xp6(1), e.Q6J("ngIf", "6" != t.game.iconType && "-6" != t.game.iconType && "7" != t.game.iconType && "-7" != t.game.iconType), e.xp6(1), e.Q6J("ngIf", t.isLiveGame), e.xp6(1), e.ekj("is-fast-loading-game", t.game.isFastLoadingGame), e.xp6(1), e.Q6J("ngIf", t.isAnchorTagVisible), e.xp6(1), e.Q6J("ngIf", t.showJackpotOnGameTiles && t.game.jackpotValue), e.xp6(1), e.Q6J("ngIf", t.isTouch && t.useQuickInfo)("ngIfElse", a), e.xp6(1), e.Q6J("ngIf", t.game.isFastLoadingGame), e.xp6(1), e.Q6J("ngIf", t.game.isGYML), e.xp6(1), e.Q6J("ngIf", t.game.isPromoted), e.xp6(1), e.Q6J("ngIf", t.game.isUnfinished && !t.isLiveGame), e.xp6(1), e.Q6J("ngIf", t.stickers && t.stickers.length > 0 && !t.isLiveGame && "6" != t.game.iconType && "-6" != t.game.iconType && "7" != t.game.iconType && "-7" != t.game.iconType) } } function Ao(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 46), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw(2); return g.toggleFavourite(g.game, l) }), e.qZA() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngClass", t.isFavouriteGame(t.game) ? t.favouriteStyle : t.unFavouriteStyle) } } function Ke(n, _) { if (1 & n && e.YNc(0, Ao, 1, 1, "div", 45), 2 & n) { const t = e.oxw(); e.Q6J("ngIf", t.useFavouriteGames && t.isTouch) } } function Go(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "span")(1, "a", 50), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(2); return l.action(l.game, "i") }), e.qZA()() } } function Xi(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 47)(1, "a", 48), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(); return l.action(l.game, "l") }), e._uU(2), e.qZA(), e.YNc(3, Go, 2, 0, "span", 49), e.qZA() } if (2 & n) { const t = e.oxw(); e.xp6(2), e.Oqu(t.gameTitle), e.xp6(1), e.Q6J("ngIf", t.game.enableDetailPage && !t.game.forceDetailPage) } } const ko = function (n, _, t, a, l, g, p, b, E, L) { return { "recnt-gyml-non-jpk-banner": n, "casino-new-styling-overlay": _, "casino-quick-info-active": t, "casino-livecasino-api-enabled": a, "casino-livecasino-overlay": l, "casino-live-game": g, "fav-lcapi-active": p, "casino-table-offline": b, "casino-new-grid-icon-6": E, "casino-new-grid-icon-7": L } }, xo = function (n) { return { filter: n } }, Je = ["desktopGamesCarousel"], Ro = ["mobileGamesCarousel"]; function mt(n, _) { if (1 & n && (e.TgZ(0, "mat-grid-tile", 5)(1, "div", 6), e._UZ(2, "cc-game-lobby", 7), e.qZA()()), 2 & n) { const t = _.$implicit, a = _.index, l = e.oxw(2); e.Q6J("colspan", t.colSpan)("rowspan", t.rowSpan)("ngStyle", e.VKq(14, I, null == t ? null : t.gameTileBorderRadius)), e.xp6(1), e.hYB("id", "heightFix-", l.subcategory.categoryid, "-", t.gameId, ""), e.Q6J("ngClass", l.getClassByicon(t)), e.xp6(1), e.hYB("id", "gameIdentifier_", l.subcategory.categoryid, "_", t.gameId, ""), e.Q6J("ngClass", null == t ? null : t.infoIconClass)("game", t)("gamePosition", a)("category", l.subcategory)("gameLaunchedFrom", l.gameLaunchedFrom)("gameIndex", a + 1) } } const wo = function (n, _) { return { "casino-newgridtypesicon6": n, "casino-newgridtypes": _ } }; function Uo(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "mat-grid-list", 3), e.NdJ("resize", function () { return e.CHM(t), e.oxw().onResize() }, !1, e.Jf7), e.YNc(1, mt, 3, 16, "mat-grid-tile", 4), e.ALo(2, "slice"), e.qZA() } if (2 & n) { const t = e.oxw(); e.Udp("width", t.width)("height", t.height), e.MGl("id", "rowCount-", t.subcategory.rowCount, ""), e.Q6J("cols", t.breakpoint)("rowHeight", t.rowHeight)("gutterSize", t.gutterSize)("ngClass", e.WLB(14, wo, t.subcategory.isIconSixCategory, t.subcategory.isIconSevenCategory)), e.xp6(1), e.Q6J("ngForOf", e.Dn7(2, 10, t.newFeatureGridArr, 0, t.currentIndex)) } } function $i(n, _) { if (1 & n && (e.TgZ(0, "mat-grid-tile", 5)(1, "div", 14), e._UZ(2, "cc-game-lobby", 7), e.qZA()()), 2 & n) { const t = _.$implicit, a = e.oxw(), l = a.$implicit, g = a.index, p = e.oxw(2); e.Q6J("colspan", l.maxColSpan)("rowspan", l.maxRowSpan)("ngStyle", e.VKq(12, I, null == t ? null : t.gameTileBorderRadius)), e.xp6(1), e.Q6J("ngClass", p.getClassByicon(t)), e.xp6(1), e.hYB("id", "gameIdentifier_", p.subcategory.categoryid, "_", t.gameId, ""), e.Q6J("ngClass", null == t ? null : t.infoIconClass)("game", t)("gamePosition", g)("category", p.subcategory)("gameLaunchedFrom", p.gameLaunchedFrom)("gameIndex", t.gameIndex + 1) } } function eo(n, _) { if (1 & n && (e.TgZ(0, "ngu-item")(1, "mat-grid-list", 13), e.YNc(2, $i, 3, 14, "mat-grid-tile", 4), e.qZA()()), 2 & n) { const t = _.$implicit, a = e.oxw(2); e.xp6(1), e.Q6J("cols", t.maxColSpan)("rowHeight", a.rowHeight)("gutterSize", a.gutterSize), e.xp6(1), e.Q6J("ngForOf", t.games) } } const it = function (n) { return { "hidden-cls": n } }; function Si(n, _) { if (1 & n && e._UZ(0, "button", 15), 2 & n) { const t = e.oxw(2); e.Q6J("ngClass", e.VKq(1, it, t.isPreButtonVisible)) } } function Be(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "button", 16), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).loadNextGamesSet() }), e.qZA() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngClass", e.VKq(1, it, t.isNextButtonVisible)) } } const Fo = function (n, _, t, a, l) { return { "jackpot-justify-center-icon-7-xs": n, "jackpot-justify-center-icon-7-sm": _, "casino-newgridtypesicon6": t, "casino-newgridtypes": a, "ngu-touch-scrollable-games": l } }; function Bo(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "ngu-carousel", 8, 9), e.NdJ("onMove", function (l) { return e.CHM(t), e.oxw().onmoveFn(l) })("resize", function () { return e.CHM(t), e.oxw().onResize() }, !1, e.Jf7), e.YNc(2, eo, 3, 4, "ngu-item", 10), e.YNc(3, Si, 1, 3, "button", 11), e.YNc(4, Be, 1, 3, "button", 12), e.qZA() } if (2 & n) { const t = e.oxw(); e.Q6J("inputs", t.carouselConfigNonTouch)("dataSource", t.newFeatureGridArr)("ngClass", e.qbA(5, Fo, t.jackpot_justify_center_icon_7_xs, t.jackpot_justify_center_icon_7_sm, t.subcategory.isIconSixCategory, t.subcategory.isIconSevenCategory, t.isTouch)), e.xp6(3), e.Q6J("ngIf", !t.isTouch && !t.changeCarouselView), e.xp6(1), e.Q6J("ngIf", !t.isTouch && !t.changeCarouselView) } } const Wo = function (n) { return { "gyml-frame": n } }; function No(n, _) { if (1 & n && (e.TgZ(0, "div", 14)(1, "div", 19)(2, "mat-grid-list", 20)(3, "mat-grid-tile", 5), e._UZ(4, "cc-game-lobby", 7), e.qZA()()()()), 2 & n) { const t = _.$implicit, a = _.index, l = e.oxw(2); e.Q6J("ngClass", l.getClassByicon(t)), e.xp6(1), e.Q6J("ngClass", e.VKq(14, Wo, t.isGYML)), e.xp6(1), e.Q6J("cols", t.colSpan), e.xp6(1), e.Q6J("colspan", t.colSpan)("rowspan", t.rowSpan)("ngStyle", e.VKq(16, I, null == t ? null : t.gameTileBorderRadius)), e.xp6(1), e.hYB("id", "gameIdentifier_", l.subcategory.categoryid, "_", t.gameId, ""), e.Q6J("ngClass", t.infoIconClass)("game", t)("gamePosition", a)("category", l.subcategory)("gameLaunchedFrom", l.gameLaunchedFrom)("gameIndex", a + 1) } } const to = function (n) { return { "jackpot-games-display": n } }; function Ko(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 17), e.NdJ("resize", function () { return e.CHM(t), e.oxw().onResize() }, !1, e.Jf7), e.YNc(1, No, 5, 18, "div", 18), e.qZA() } if (2 & n) { const t = e.oxw(); e.Q6J("ngClass", e.VKq(2, to, t.games.length < 6 && t.gameLaunchedFrom == "JackpotWidget_" + t.subcategory.engCategoryName)), e.xp6(1), e.Q6J("ngForOf", t.games) } } const io = ["recentGYMLCarousel"]; function Jo(n, _) { if (1 & n && (e.TgZ(0, "span"), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(5); e.xp6(1), e.Oqu(t.recentTitle) } } function Yo(n, _) { if (1 & n && e._UZ(0, "cc-categoryicon-subtitle", 16), 2 & n) { const t = e.oxw(5); e.Q6J("title", t.recentTitle)("subCategory", t.recentCategory)("recentAndGyml", "RecentAndGyml")("alignIconRight", t.alignIconRight)("lobbyType", t.lobbyType) } } const Ct = function (n) { return { "casino-uk-header": n } }; function Zo(n, _) { if (1 & n && (e.TgZ(0, "h2", 14), e.YNc(1, Jo, 2, 1, "span", 5), e.YNc(2, Yo, 1, 5, "cc-categoryicon-subtitle", 15), e.qZA()), 2 & n) { const t = e.oxw(4); e.ekj("non-touch-casino-lobby-header", !t.isTouch), e.s9C("lang", t.lang), e.Q6J("ngClass", e.VKq(6, Ct, t.isUkHeading)), e.xp6(1), e.Q6J("ngIf", !t.isUkHeading), e.xp6(1), e.Q6J("ngIf", t.isUkHeading) } } function Ho(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 19), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(4); e.ekj("casino-recentlyPromo", a.isRecentlyPlayed), e.MGl("id", "gameIdentifier_rpGYMLSection_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("game", a)("gamePosition", l)("category", g.recentCategory.categoryInfo)("gameLaunchedFrom", g.recentCategory.categoryInfo.categoryid) } } function Qo(n, _) { if (1 & n && (e.TgZ(0, "div", 17), e.YNc(1, Ho, 1, 8, "cc-game-lobby", 18), e.qZA()), 2 & n) { const t = _.$implicit, a = e.oxw(4); e.Q6J("hidden", !t.isRecentlyPlayed), e.xp6(1), e.Q6J("ngIf", !t.isDataNotAvailable && a.recentCategory) } } function zo(n, _) { if (1 & n && (e.TgZ(0, "div", 11), e.YNc(1, Zo, 3, 8, "h2", 12), e.TgZ(2, "div"), e.YNc(3, Qo, 2, 2, "div", 13), e.qZA()()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.Q6J("ngIf", t.recentGamesCount > t.recentStartIndex), e.xp6(2), e.Q6J("ngForOf", t.unfinishedRPANDGYMLGames) } } function jo(n, _) { if (1 & n && e._UZ(0, "cc-sign-posting", 24), 2 & n) { const t = e.oxw(6); e.Q6J("category", t.gymlCategory.categoryInfo) } } function qo(n, _) { if (1 & n && (e.TgZ(0, "span"), e._uU(1), e.YNc(2, jo, 1, 1, "cc-sign-posting", 23), e.qZA()), 2 & n) { const t = e.oxw(5); e.xp6(1), e.hij("", t.youMightLikeMessage, " "), e.xp6(1), e.Q6J("ngIf", t.isSignPosting) } } function Vo(n, _) { if (1 & n && e._UZ(0, "cc-categoryicon-subtitle", 16), 2 & n) { const t = e.oxw(5); e.Q6J("title", t.youMightLikeMessage)("subCategory", t.gymlCategory.categoryInfo)("recentAndGyml", "RecentAndGyml")("alignIconRight", t.alignIconRight)("lobbyType", t.lobbyType) } } const Xo = function (n, _) { return { "subcategoryheader-static": n, "casino-uk-header": _ } }, Li = function (n) { return { top: n } }; function $o(n, _) { if (1 & n && (e.TgZ(0, "h2", 22), e.YNc(1, qo, 3, 2, "span", 5), e.YNc(2, Vo, 1, 5, "cc-categoryicon-subtitle", 15), e.qZA()), 2 & n) { const t = e.oxw(4); e.ekj("non-touch-casino-lobby-header", !t.isTouch), e.s9C("lang", t.lang), e.Q6J("ngClass", e.WLB(7, Xo, t.staticGYML, t.isUkHeading))("ngStyle", e.VKq(10, Li, t.topValueForGYML)), e.xp6(1), e.Q6J("ngIf", !t.isUkHeading), e.xp6(1), e.Q6J("ngIf", t.isUkHeading) } } function en(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 19), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(4); e.ekj("casino-recentlyPromo", a.isRecentlyPlayed), e.MGl("id", "gameIdentifier_rpGYMLSection_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("game", a)("gamePosition", l)("category", g.gymlCategory.categoryInfo)("gameLaunchedFrom", g.gymlCategory.categoryInfo.categoryid) } } function ea(n, _) { if (1 & n && (e.TgZ(0, "div", 17), e.YNc(1, en, 1, 8, "cc-game-lobby", 25), e.qZA()), 2 & n) { const t = _.$implicit, a = e.oxw(4); e.Q6J("hidden", t.isRecentlyPlayed), e.xp6(1), e.Q6J("ngIf", !t.isDataNotAvailable && a.gymlCategory) } } function tn(n, _) { if (1 & n && (e.TgZ(0, "div", 20), e.YNc(1, $o, 3, 12, "h2", 21), e.TgZ(2, "div"), e.YNc(3, ea, 2, 2, "div", 13), e.qZA()()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.Q6J("ngIf", t.gymlCategory && t.gymlCategory.categoryInfo && t.gymlCategory.categoryInfo.gamelist && t.gymlCategory.categoryInfo.gamelist.length > 0), e.xp6(2), e.Q6J("ngForOf", t.unfinishedRPANDGYMLGames) } } const oo = function (n) { return { "header-static-div": n } }; function on(n, _) { if (1 & n && (e.TgZ(0, "div", 6)(1, "div", 7)(2, "div", 8), e.YNc(3, zo, 4, 2, "div", 9), e.YNc(4, tn, 4, 2, "div", 10), e.qZA()()()), 2 & n) { const t = e.oxw(2); e.Q6J("ngClass", e.VKq(5, oo, t.staticGYML)), e.xp6(1), e.ekj("casino-base-category-nontouch", !t.isTouch), e.xp6(2), e.Q6J("ngIf", t.recentCategory), e.xp6(1), e.Q6J("ngIf", t.recentCategory && t.gymlCategory && t.recentCategory.categoryInfo && t.gymlCategory.categoryInfo && t.recentCategory.categoryInfo.categoryid && t.gymlCategory.categoryInfo.categoryid) } } function no(n, _) { if (1 & n && (e.TgZ(0, "span"), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(4); e.xp6(1), e.Oqu(t.recentTitle) } } function ao(n, _) { if (1 & n && e._UZ(0, "cc-categoryicon-subtitle", 16), 2 & n) { const t = e.oxw(4); e.Q6J("title", t.recentTitle)("subCategory", t.recentCategory)("recentAndGyml", "RecentAndGyml")("alignIconRight", t.alignIconRight)("lobbyType", t.lobbyType) } } function so(n, _) { if (1 & n && (e.TgZ(0, "h2", 28), e.YNc(1, no, 2, 1, "span", 5), e.YNc(2, ao, 1, 5, "cc-categoryicon-subtitle", 15), e.qZA()), 2 & n) { const t = e.oxw(3); e.ekj("non-touch-casino-lobby-header", !t.isTouch), e.s9C("lang", t.lang), e.Q6J("ngClass", e.VKq(6, Ct, t.isUkHeading)), e.xp6(1), e.Q6J("ngIf", !t.isUkHeading), e.xp6(1), e.Q6J("ngIf", t.isUkHeading) } } function nn(n, _) { if (1 & n && e._UZ(0, "cc-sign-posting", 24), 2 & n) { const t = e.oxw(5); e.Q6J("category", t.gymlCategory.categoryInfo) } } function an(n, _) { if (1 & n && (e.TgZ(0, "span"), e._uU(1), e.YNc(2, nn, 1, 1, "cc-sign-posting", 23), e.qZA()), 2 & n) { const t = e.oxw(4); e.xp6(1), e.hij("", t.youMightLikeMessage, " "), e.xp6(1), e.Q6J("ngIf", t.isSignPosting) } } function sn(n, _) { if (1 & n && e._UZ(0, "cc-categoryicon-subtitle", 16), 2 & n) { const t = e.oxw(4); e.Q6J("title", t.youMightLikeMessage)("subCategory", t.gymlCategory.categoryInfo)("recentAndGyml", "RecentAndGyml")("alignIconRight", t.alignIconRight)("lobbyType", t.lobbyType) } } function rn(n, _) { if (1 & n && (e.TgZ(0, "h2", 28), e.YNc(1, an, 3, 2, "span", 5), e.YNc(2, sn, 1, 5, "cc-categoryicon-subtitle", 15), e.qZA()), 2 & n) { const t = e.oxw(3); e.ekj("non-touch-casino-lobby-header", !t.isTouch), e.s9C("lang", t.lang), e.Q6J("ngClass", e.VKq(6, Ct, t.isUkHeading)), e.xp6(1), e.Q6J("ngIf", !t.isUkHeading), e.xp6(1), e.Q6J("ngIf", t.isUkHeading) } } function cn(n, _) { if (1 & n && e._UZ(0, "cc-sign-posting", 24), 2 & n) { const t = e.oxw(7); e.Q6J("category", t.gymlCategory.categoryInfo) } } function ln(n, _) { if (1 & n && (e.TgZ(0, "span"), e._uU(1), e.YNc(2, cn, 1, 1, "cc-sign-posting", 23), e.qZA()), 2 & n) { const t = e.oxw(6); e.xp6(1), e.hij("", t.youMightLikeMessage, " "), e.xp6(1), e.Q6J("ngIf", t.isSignPosting && !(t.recentGamesCount < t.recentStartIndex)) } } function _n(n, _) { if (1 & n && e._UZ(0, "cc-categoryicon-subtitle", 16), 2 & n) { const t = e.oxw(6); e.Q6J("title", t.youMightLikeMessage)("subCategory", t.gymlCategory.categoryInfo)("recentAndGyml", "RecentAndGyml")("alignIconRight", t.alignIconRight)("lobbyType", t.lobbyType) } } const ro = function (n, _) { return { "casino-uk-header": n, "casino-uk-header-gymltext": _ } }; function gn(n, _) { if (1 & n && (e.TgZ(0, "h2", 36), e.YNc(1, ln, 3, 2, "span", 5), e.YNc(2, _n, 1, 5, "cc-categoryicon-subtitle", 15), e.qZA()), 2 & n) { const t = e.oxw(5); e.ekj("non-touch-casino-lobby-header", !t.isTouch), e.s9C("lang", t.lang), e.Q6J("ngClass", e.WLB(6, ro, t.isUkHeading, t.isUkHeading)), e.xp6(1), e.Q6J("ngIf", !t.isUkHeading), e.xp6(1), e.Q6J("ngIf", t.isUkHeading && !(t.recentGamesCount < t.recentStartIndex)) } } function dn(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 19), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(4); e.ekj("casino-recentlyPromo", a.isRecentlyPlayed), e.MGl("id", "gameIdentifier_rpGYMLSection_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("game", a)("gamePosition", l)("category", g.recentCategory.categoryInfo)("gameLaunchedFrom", g.recentCategory.categoryInfo.categoryid) } } function ta(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 19), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(4); e.ekj("casino-recentlyPromo", a.isRecentlyPlayed), e.MGl("id", "gameIdentifier_rpGYMLSection_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("game", a)("gamePosition", l)("category", g.gymlCategory.categoryInfo)("gameLaunchedFrom", g.gymlCategory.categoryInfo.categoryid) } } function un(n, _) { if (1 & n && (e.TgZ(0, "ngu-item", 34), e.YNc(1, gn, 3, 9, "h2", 35), e.TgZ(2, "div", 34), e.YNc(3, dn, 1, 8, "cc-game-lobby", 18), e.YNc(4, ta, 1, 8, "cc-game-lobby", 25), e.qZA()()), 2 & n) { const t = _.$implicit, a = _.index, l = e.oxw(4); e.xp6(1), e.Q6J("ngIf", l.gymlCategory && l.gymlCategory.categoryInfo && l.gymlCategory.categoryInfo.gamelist && l.gymlCategory.categoryInfo.gamelist.length > 0 && a == l.recentGamesCount), e.xp6(2), e.Q6J("ngIf", !t.isDataNotAvailable && t.isRecentlyPlayed), e.xp6(1), e.Q6J("ngIf", !t.isDataNotAvailable && !t.isRecentlyPlayed) } } function hn(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "ngu-carousel", 29, 30), e.NdJ("onMove", function (l) { return e.CHM(t), e.oxw(3).onmoveFn(l) }), e.YNc(2, un, 5, 3, "ngu-item", 31), e._UZ(3, "button", 32)(4, "button", 33), e.qZA() } if (2 & n) { const t = e.oxw(3); e.Q6J("inputs", t.carouselConfig)("dataSource", t.unfinishedRPANDGYMLGames), e.xp6(3), e.Q6J("ngClass", e.VKq(4, it, t.isPreButtonVisible)), e.xp6(1), e.Q6J("ngClass", e.VKq(6, it, t.isNextButtonVisible)) } } function ia(n, _) { if (1 & n && (e.TgZ(0, "div")(1, "div", 7), e.YNc(2, so, 3, 8, "h2", 26), e.YNc(3, rn, 3, 8, "h2", 26), e.YNc(4, hn, 5, 8, "ngu-carousel", 27), e.qZA()()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.ekj("casino-base-category-nontouch", !t.isTouch), e.xp6(1), e.Q6J("ngIf", t.recentGamesCount > t.recentStartIndex), e.xp6(1), e.Q6J("ngIf", t.gymlCategory && t.gymlCategory.categoryInfo && t.gymlCategory.categoryInfo.gamelist && t.gymlCategory.categoryInfo.gamelist.length > 0 && t.recentGamesCount < t.recentStartIndex), e.xp6(1), e.Q6J("ngIf", "unscrollable-games" == t.setSubCategoryStyle()) } } const co = function (n) { return { "casino-ios-bottom-nav-bar": n } }; function mn(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 2)(1, "div", 3), e.NdJ("scroll", function () { return e.CHM(t), e.oxw().scrollGYML() }), e.YNc(2, on, 5, 7, "div", 4), e.YNc(3, ia, 5, 5, "div", 5), e.qZA()() } if (2 & n) { const t = e.oxw(); e.Gre("gametracking ", t.trackingClass, ""), e.Q6J("ngClass", e.VKq(12, co, t.isCrossSaleIOS)), e.xp6(1), e.Udp("overflow-x", 0 == t.isTouch ? "hidden" : "scroll"), e.ekj("non-touch-scrollable-games", !t.isTouch && "scrollable-games" == t.setSubCategoryStyle()), e.Q6J("ngClass", t.setSubCategoryStyle()), e.xp6(1), e.Q6J("ngIf", t.isTouch && t.unfinishedRPANDGYMLGames && t.unfinishedRPANDGYMLGames.length > 0), e.xp6(1), e.Q6J("ngIf", !t.isTouch && t.unfinishedRPANDGYMLGames && t.unfinishedRPANDGYMLGames.length > 0 && t.recentCategory) } } function u(n, _) { if (1 & n && e._UZ(0, "cc-sign-posting", 24), 2 & n) { const t = e.oxw(3); e.Q6J("category", t.subcategory.categoryInfo) } } function A(n, _) { if (1 & n && (e.TgZ(0, "span"), e._uU(1), e.YNc(2, u, 1, 1, "cc-sign-posting", 23), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.hij("", t.subcategory.categoryInfo.categoryname, " "), e.xp6(1), e.Q6J("ngIf", t.isSignPosting) } } function m(n, _) { if (1 & n && e._UZ(0, "cc-categoryicon-subtitle", 16), 2 & n) { const t = e.oxw(2); e.Q6J("title", t.subcategory.categoryInfo.categoryname)("subCategory", t.subcategory.categoryInfo)("recentAndGyml", "NotRecentAndGyml")("alignIconRight", t.alignIconRight)("lobbyType", t.lobbyType) } } function S(n, _) { if (1 & n && e._UZ(0, "cc-feature-grid", 41), 2 & n) { const t = e.oxw(2); e.Q6J("games", t.Games)("subcategory", t.categoryObj)("isTouch", t.isTouch)("Type", "scrollable-games")("gameLaunchedFrom", t.subcategory.categoryInfo.categoryid)("lobbyType", t.lobbyType)("newFeatureGridArr", t.newFeatureGridArr) } } function B(n, _) { if (1 & n && (e.TgZ(0, "div", 37)(1, "h2", 38), e.YNc(2, A, 3, 2, "span", 5), e.YNc(3, m, 1, 5, "cc-categoryicon-subtitle", 15), e.qZA(), e.TgZ(4, "div", 39), e.YNc(5, S, 1, 7, "cc-feature-grid", 40), e.qZA()()), 2 & n) { const t = e.oxw(); e.Gre("gametracking ", t.trackingClass, ""), e.Q6J("ngClass", e.VKq(12, co, t.isCrossSaleIOS)), e.xp6(1), e.Q6J("ngClass", e.VKq(14, Ct, t.isUkHeading)), e.xp6(1), e.Q6J("ngIf", !t.isUkHeading), e.xp6(1), e.Q6J("ngIf", t.isUkHeading), e.xp6(1), e.Udp("overflow-x", t.isTouch ? "scroll" : "hidden"), e.ekj("non-touch-scrollable-games", !t.isTouch), e.xp6(1), e.Q6J("ngIf", t.subcategory.categoryInfo && t.subcategory.categoryInfo.gamelist && t.subcategory.categoryInfo.gamelist.length > 0 && t.subcategory.categoryInfo.sitecoreData) } } const oe = function (n, _, t, a, l, g, p) { return { jackpotName: n, jackpotValue: _, showBackgroundImage: t, jackpotWidgetBackgroundImage: a, jackpotWidgetImage: l, className: g, jackpotType: p } }; function me(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 8), 2 & n) { const t = e.oxw(2); e.Q6J("inputData", e.Hh0(2, oe, t.jackpotName, t.jackpotValue, t.showBackgroundImage, t.jackpotWidgetBackgroundImage, t.jackpotWidgetImage, t.className, t.jackpotType))("componentName", "JackpotwidgetComponent") } } const pe = function (n, _, t, a, l, g, p, b) { return { jackpotName: n, jackpotValue: _, showBackgroundImage: t, jackpotWidgetBackgroundImage: a, jackpotWidgetImage: l, className: g, jackpotType: p, jackpotNameFromSitecore: b } }; function ke(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 8), 2 & n) { const t = e.oxw(2); e.Q6J("inputData", e.qlk(2, pe, t.jackpotName, t.jackpotValue, t.showBackgroundImage, t.jackpotWidgetBackgroundImage, t.jackpotWidgetImage, t.className, t.jackpotType, t.jackpotNameFromSitecore))("componentName", "JackpotWidgetRedesignComponent") } } function We(n, _) { if (1 & n && e._UZ(0, "cc-feature-grid", 9), 2 & n) { const t = e.oxw(2); e.Q6J("games", t.games)("EnableFutureGrid", !1)("subcategory", t.categoryObj)("isTouch", t.isTouch)("Type", "scrollable-games")("gameLaunchedFrom", "JackpotWidget_" + t.category.engCategoryName)("newFeatureGridArr", t.newFeatureGridArr) } } function Ae(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 10)(1, "div", 11), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(2); return l.GotoJackpots(l.cta.url) }), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("innerHTML", t.cta.linkText || t.moreInfoMessage, e.oJD) } } const te = function (n) { return { "background-color": n } }, Ve = function (n, _, t, a) { return { "casino-ios-bottom-nav-bar": n, "casino-jackpot-widget-container": _, "casino-mode2": t, "casino-mode3": a } }, Mt = function (n) { return { "jackpot-margin": n } }; function Oi(n, _) { if (1 & n && (e.TgZ(0, "div", 1), e.YNc(1, me, 1, 10, "cc-casino-core-lazy-placeholder", 2), e.YNc(2, ke, 1, 11, "cc-casino-core-lazy-placeholder", 2), e.TgZ(3, "div", 3)(4, "div", 4), e.YNc(5, We, 1, 7, "cc-feature-grid", 5), e.qZA()(), e.TgZ(6, "div", 6), e.YNc(7, Ae, 2, 1, "div", 7), e.qZA()()), 2 & n) { const t = e.oxw(); e.Udp("background-image", null != t.jackpotWidgetBackgroundImage && t.jackpotWidgetBackgroundImage.src ? "url(" + t.jackpotWidgetBackgroundImage.src + ")" : ""), e.Q6J("ngStyle", e.VKq(12, te, t.singleJackpotBgClr))("ngClass", e.l5B(14, Ve, t.isCrossSaleIOS, "v1" === t.mode, "v2" === t.mode, "v3" === t.mode)), e.xp6(1), e.Q6J("ngIf", "v1" === t.mode), e.xp6(1), e.Q6J("ngIf", "v2" === t.mode || "v3" === t.mode), e.xp6(1), e.ekj("non-touch-scrollable-games", !t.isTouch), e.xp6(1), e.Q6J("ngClass", e.VKq(19, Mt, t.isTouch)), e.xp6(1), e.Q6J("ngIf", t.games && t.games.length > 0), e.xp6(2), e.Q6J("ngIf", t.cta && t.cta.linkText) } } const Ai = ["corousel3dcontainer"], Gi = ["carousel3D"]; function ki(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 10)(1, "div", 11), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(); return l.options && "ltr" === l.options.dir ? l.goNext() : l.goPrev() }), e.qZA(), e.TgZ(2, "div", 12), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(); return l.options && "ltr" === l.options.dir ? l.goPrev() : l.goNext() }), e.qZA()() } } const $t = ["*"], xi = ["slide-3d"], Ri = ["featuredGrid"], wi = ["carousel"], Ui = ["myCarousel"]; function pn(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 23), 2 & n) { const t = e.oxw().$implicit, a = e.oxw(4); e.Q6J("inputData", e.Hh0(2, oe, t.jackpotName, t.jackpotValue, t.showBackgroundImage, t.jackpotWidgetBackgroundImage, t.jackpotWidgetImage, a.classNameTop, a.jackpotType))("componentName", "JackpotwidgetComponent") } } const lo = function (n, _, t, a, l, g, p, b) { return { jackpotName: n, jackpotValue: _, showBackgroundImage: t, jackpotWidgetBackgroundImage: a, jackpotWidgetImage: l, className: g, jackpotType: p, jackpotNameFromSitecore: b, fromMulti: !0 } }; function fn(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 23), 2 & n) { const t = e.oxw().$implicit, a = e.oxw(4); e.Q6J("inputData", e.qlk(2, lo, t.jackpotName, t.jackpotValue, t.showBackgroundImage, t.jackpotWidgetBackgroundImage, t.jackpotWidgetImage, a.classNameTop, a.jackpotType, t.jackpotDisplayName))("componentName", "JackpotWidgetRedesignComponent") } } function vn(n, _) { if (1 & n && (e.TgZ(0, "ngu-item"), e.YNc(1, pn, 1, 10, "cc-casino-core-lazy-placeholder", 22), e.YNc(2, fn, 1, 11, "cc-casino-core-lazy-placeholder", 22), e.qZA()), 2 & n) { const t = e.oxw(4); e.xp6(1), e.Q6J("ngIf", "v1" === t.mode), e.xp6(1), e.Q6J("ngIf", "v2" === t.mode || "v3" === t.mode) } } function yn(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 24), e.NdJ("click", function () { const g = e.CHM(t).index; return e.oxw(), e.MAs(1).moveTo(g) }), e.qZA() } if (2 & n) { const t = _.index; e.oxw(); const a = e.MAs(1); e.ekj("active", t == a.activePoint) } } const ei = function (n, _) { return { "background-color": n, opacity: _ } }; function bn(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "ngu-carousel", 15, 16), e.NdJ("onMove", function (l) { return e.CHM(t), e.oxw(3).onmoveFn(l) }), e.YNc(2, vn, 3, 2, "ngu-item", 17), e._UZ(3, "button", 18)(4, "button", 19), e.TgZ(5, "ul", 20), e.YNc(6, yn, 1, 2, "li", 21), e.qZA()() } if (2 & n) { const t = e.MAs(1), a = e.oxw(3); e.Q6J("inputs", a.carouselConfig)("dataSource", a.widgets), e.xp6(3), e.Q6J("ngStyle", e.WLB(7, ei, a.multiJackpotLeftArrowBgClr, a.multiJackpotArrowOpacity))("ngClass", e.VKq(10, it, a.isPreButtonVisible)), e.xp6(1), e.Q6J("ngStyle", e.WLB(12, ei, a.multiJackpotRightArrowBgClr, a.multiJackpotArrowOpacity))("ngClass", e.VKq(15, it, a.isNextButtonVisible)), e.xp6(2), e.Q6J("ngForOf", t.pointNumbers) } } function Cn(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 23), 2 & n) { const t = e.oxw().$implicit, a = e.oxw(3); e.Q6J("inputData", e.Hh0(2, oe, t.jackpotName, t.jackpotValue, t.showBackgroundImage, t.jackpotWidgetBackgroundImage, t.jackpotWidgetImage, a.classNameTop, a.jackpotType))("componentName", "JackpotwidgetComponent") } } function Ie(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 23), 2 & n) { const t = e.oxw().$implicit, a = e.oxw(3); e.Q6J("inputData", e.qlk(2, lo, t.jackpotName, t.jackpotValue, t.showBackgroundImage, t.jackpotWidgetBackgroundImage, t.jackpotWidgetImage, a.classNameTop, a.jackpotType, t.jackpotDisplayName))("componentName", "JackpotWidgetRedesignComponent") } } const Ut = function (n) { return { slide: n } }; function Qa(n, _) { if (1 & n && (e.TgZ(0, "cc-ngx-carousel-3d-slide", 25), e.YNc(1, Cn, 1, 10, "cc-casino-core-lazy-placeholder", 22), e.YNc(2, Ie, 1, 11, "cc-casino-core-lazy-placeholder", 22), e.qZA()), 2 & n) { const t = _.$implicit, a = e.oxw(3); e.Q6J("ngClass", e.VKq(3, Ut, !t.isActive)), e.xp6(1), e.Q6J("ngIf", "v1" === a.mode), e.xp6(1), e.Q6J("ngIf", "v2" === a.mode || "v3" === a.mode) } } const za = function (n) { return { "swiper-pagination-bullet-active": n } }; function ja(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "span", 28), e.NdJ("click", function () { const g = e.CHM(t).index; return e.oxw(4).pointClicked(g) }), e.qZA() } if (2 & n) { const t = _.$implicit, a = e.oxw(4); e.Q6J("ngStyle", e.VKq(2, te, t.isActive ? a.mJPaginationActiveClr : a.mJPaginationInactiveClr))("ngClass", e.VKq(4, za, t.isActive)) } } function qa(n, _) { if (1 & n && (e.TgZ(0, "div", 26), e.YNc(1, ja, 1, 6, "span", 27), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.Q6J("ngForOf", t.widgets) } } function Va(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 7), e.NdJ("resize", function () { return e.CHM(t), e.oxw(2).onResize() }, !1, e.Jf7), e.YNc(1, bn, 7, 17, "ngu-carousel", 8), e.TgZ(2, "cc-ngx-carousel-3d", 9, 10), e.YNc(4, Qa, 3, 5, "cc-ngx-carousel-3d-slide", 11), e.TgZ(5, "button", 12), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).slideClicked(!1) }), e.qZA(), e.TgZ(6, "button", 13), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).slideClicked(!0) }), e.qZA()(), e.YNc(7, qa, 2, 1, "div", 14), e.qZA() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngIf", !t.isCarousal), e.xp6(1), e.s9C("id", t.category.categoryid), e.Q6J("slides", t.widgets)("options", t.options)("category", t.category.categoryid)("hidden", !t.isCarousal), e.xp6(2), e.Q6J("ngForOf", t.widgets), e.xp6(1), e.Q6J("ngStyle", e.WLB(10, ei, t.multiJackpotLeftArrowBgClr, t.multiJackpotArrowOpacity)), e.xp6(1), e.Q6J("ngStyle", e.WLB(13, ei, t.multiJackpotRightArrowBgClr, t.multiJackpotArrowOpacity)), e.xp6(1), e.Q6J("ngIf", t.isCarousal) } } const Xa = function (n, _) { return { "jackpot-games-display": n, "casino-jackpot-justifycenter": _ } }; function $a(n, _) { if (1 & n && e._UZ(0, "cc-feature-grid", 32, 33), 2 & n) { const t = e.oxw(3); e.Q6J("games", t.games)("subcategory", t.categoryObj)("EnableFutureGrid", !1)("isTouch", t.isTouch)("Type", "scrollable-games")("ngClass", e.WLB(8, Xa, t.games.length < 6, t.games.length < 3))("gameLaunchedFrom", "JackpotWidget_" + t.category.engCategoryName)("newFeatureGridArr", t.newFeatureGridArr) } } function es(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 29), e.NdJ("resize", function () { return e.CHM(t), e.oxw(2).onResize() }, !1, e.Jf7), e.TgZ(1, "div", 30), e.YNc(2, $a, 2, 11, "cc-feature-grid", 31), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngClass", e.VKq(7, Mt, t.isTouch)), e.xp6(1), e.Udp("overflow-x", 0 == t.isTouch ? "hidden" : "scroll"), e.ekj("non-touch-scrollable-games", !t.isTouch), e.Q6J("ngClass", e.VKq(9, to, t.games.length < 6)), e.xp6(1), e.Q6J("ngIf", t.games && t.games.length > 0) } } function ts(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 34)(1, "div", 35), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(2); return l.GotoJackpots(l.cta.url) }), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("innerHTML", t.cta.text || t.moreInfoMessage, e.oJD) } } const is = function (n, _, t, a, l) { return { "casino-ios-bottom-nav-bar": n, "casino-jackpot-widget-container": _, "casino-style2": t, "casino-style3": a, "multi-jckt-gamealigned": l } }, os = function (n) { return { "no-Cta": n } }; function ns(n, _) { if (1 & n && (e.TgZ(0, "div", 1), e.YNc(1, Va, 8, 16, "div", 2), e.TgZ(2, "div", 3), e.YNc(3, es, 3, 11, "div", 4), e.qZA(), e.TgZ(4, "div", 5), e.YNc(5, ts, 2, 1, "div", 6), e.qZA()()), 2 & n) { const t = e.oxw(); e.Q6J("ngClass", e.qbA(6, is, t.isIOS, "v1" === t.mode, "v2" === t.mode, "v3" === t.mode, t.games && t.games.length < 6))("ngStyle", e.VKq(12, te, t.multiJackpotBgClr)), e.xp6(1), e.Q6J("ngIf", t.widgets.length > 0), e.xp6(1), e.Q6J("ngClass", e.VKq(14, os, !(t.cta && t.cta.text))), e.xp6(1), e.Q6J("ngIf", t.games.length > 0), e.xp6(2), e.Q6J("ngIf", t.cta && t.cta.text) } } function as(n, _) { if (1 & n && (e.TgZ(0, "div", 11), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw().$implicit; e.xp6(1), e.Oqu(t.value) } } const Mn = function (n, _, t) { return { flipAmber: n, flipRed: _, flipPurple: t } }; function ss(n, _) { if (1 & n && (e.TgZ(0, "div", 13), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2).$implicit, a = e.oxw(2); e.Q6J("ngClass", e.kEZ(2, Mn, a.tickerValue < a.eightyPercentValue && a.tickerValue >= a.sixtyPercentValue, a.tickerValue >= a.eightyPercentValue, a.tickerValue < a.sixtyPercentValue)), e.xp6(1), e.Oqu(t.value) } } function rs(n, _) { if (1 & n && (e.TgZ(0, "div", 16), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2).$implicit, a = e.oxw(2); e.Q6J("ngClass", e.kEZ(2, Mn, a.tickerValue < a.eightyPercentValue && a.tickerValue >= a.sixtyPercentValue, a.tickerValue >= a.eightyPercentValue, a.tickerValue < a.sixtyPercentValue)), e.xp6(1), e.Oqu(t.value) } } const cs = function (n, _, t, a) { return { "flip--top": n, flipAmber: _, flipRed: t, flipPurple: a } }; function ls(n, _) { if (1 & n && (e.TgZ(0, "div", 5), e.YNc(1, ss, 2, 6, "div", 12), e.TgZ(2, "div", 13), e._uU(3), e.qZA(), e.YNc(4, rs, 2, 6, "div", 14), e.TgZ(5, "div", 15), e._uU(6), e.qZA()()), 2 & n) { const t = e.oxw().$implicit, a = e.oxw(2); e.xp6(1), e.Q6J("ngIf", t.isFlipVisible), e.xp6(1), e.Q6J("ngClass", e.l5B(6, cs, t.isFlipVisible, a.tickerValue < a.eightyPercentValue && a.tickerValue >= a.sixtyPercentValue, a.tickerValue >= a.eightyPercentValue, a.tickerValue < a.sixtyPercentValue)), e.xp6(1), e.Oqu(t.value), e.xp6(1), e.Q6J("ngIf", t.isFlipVisible), e.xp6(1), e.Q6J("ngClass", e.kEZ(11, Mn, a.tickerValue < a.eightyPercentValue && a.tickerValue >= a.sixtyPercentValue, a.tickerValue >= a.eightyPercentValue, a.tickerValue < a.sixtyPercentValue)), e.xp6(1), e.Oqu(t.value) } } const _s = function (n) { return { Comma: n } }; function gs(n, _) { if (1 & n && (e.TgZ(0, "div", 8), e.YNc(1, as, 2, 1, "div", 9), e.YNc(2, ls, 7, 15, "div", 10), e.qZA()), 2 & n) { const t = _.$implicit; e.Q6J("ngClass", e.VKq(3, _s, "," == t.value)), e.xp6(1), e.Q6J("ngIf", "," === t.value), e.xp6(1), e.Q6J("ngIf", "," !== t.value) } } const En = function (n) { return { "margin-left": n } }; function ds(n, _) { if (1 & n && (e.TgZ(0, "div", 3)(1, "div", 4)(2, "div", 5)(3, "div", 6), e._uU(4), e.qZA()()(), e.YNc(5, gs, 3, 5, "div", 7), e.qZA()), 2 & n) { const t = e.oxw(); e.Q6J("ngStyle", e.VKq(3, En, t.paddingValue(t.tickerValueLength))), e.xp6(4), e.Oqu(t.currency), e.xp6(1), e.Q6J("ngForOf", t.majorItems) } } function us(n, _) { if (1 & n && (e.TgZ(0, "div", 25), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw().$implicit; e.xp6(1), e.Oqu(t.value) } } const Tn = function (n, _, t) { return { flipAmberMega: n, flipRedMega: _, flipPurpleMega: t } }; function hs(n, _) { if (1 & n && (e.TgZ(0, "div", 27), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2).$implicit, a = e.oxw(2); e.Q6J("ngClass", e.kEZ(2, Tn, a.tickerValue < a.eightyPercentValue && a.tickerValue >= a.sixtyPercentValue, a.tickerValue >= a.eightyPercentValue, a.tickerValue < a.sixtyPercentValue)), e.xp6(1), e.Oqu(t.value) } } function ms(n, _) { if (1 & n && (e.TgZ(0, "div", 30), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2).$implicit, a = e.oxw(2); e.Q6J("ngClass", e.kEZ(2, Tn, a.tickerValue < a.eightyPercentValue && a.tickerValue >= a.sixtyPercentValue, a.tickerValue >= a.eightyPercentValue, a.tickerValue < a.sixtyPercentValue)), e.xp6(1), e.Oqu(t.value) } } const ps = function (n, _, t, a) { return { "flip--top--mega": n, flipAmberMega: _, flipRedMega: t, flipPurpleMega: a } }; function fs(n, _) { if (1 & n && (e.TgZ(0, "div", 19), e.YNc(1, hs, 2, 6, "div", 26), e.TgZ(2, "div", 27), e._uU(3), e.qZA(), e.YNc(4, ms, 2, 6, "div", 28), e.TgZ(5, "div", 29), e._uU(6), e.qZA()()), 2 & n) { const t = e.oxw().$implicit, a = e.oxw(2); e.xp6(1), e.Q6J("ngIf", t.isFlipVisible), e.xp6(1), e.Q6J("ngClass", e.l5B(6, ps, t.isFlipVisible, a.tickerValue < a.eightyPercentValue && a.tickerValue >= a.sixtyPercentValue, a.tickerValue >= a.eightyPercentValue, a.tickerValue < a.sixtyPercentValue)), e.xp6(1), e.Oqu(t.value), e.xp6(1), e.Q6J("ngIf", t.isFlipVisible), e.xp6(1), e.Q6J("ngClass", e.kEZ(11, Tn, a.tickerValue < a.eightyPercentValue && a.tickerValue >= a.sixtyPercentValue, a.tickerValue >= a.eightyPercentValue, a.tickerValue < a.sixtyPercentValue)), e.xp6(1), e.Oqu(t.value) } } const vs = function (n) { return { "comma-mega": n } }; function ys(n, _) { if (1 & n && (e.TgZ(0, "div", 22), e.YNc(1, us, 2, 1, "div", 23), e.YNc(2, fs, 7, 15, "div", 24), e.qZA()), 2 & n) { const t = _.$implicit; e.Q6J("ngClass", e.VKq(3, vs, "," == t.value)), e.xp6(1), e.Q6J("ngIf", "," === t.value), e.xp6(1), e.Q6J("ngIf", "," !== t.value) } } function bs(n, _) { if (1 & n && (e.TgZ(0, "div", 17)(1, "div", 18)(2, "div", 19)(3, "div", 20), e._uU(4), e.qZA()()(), e.YNc(5, ys, 3, 5, "div", 21), e.qZA()), 2 & n) { const t = e.oxw(); e.Q6J("ngStyle", e.VKq(3, En, t.paddingValueMega(t.tickerValueLength))), e.xp6(4), e.Oqu(t.currency), e.xp6(1), e.Q6J("ngForOf", t.majorItems) } } const Cs = function (n) { return { display: n } }; function Ms(n, _) { if (1 & n && (e.TgZ(0, "div", 32), e._UZ(1, "span", 33), e.TgZ(2, "span", 34), e._uU(3), e.qZA()()), 2 & n) { const t = e.oxw(4); e.Q6J("ngStyle", e.VKq(2, Cs, !0 === t.isClockVisible ? "block" : "none")), e.xp6(3), e.Oqu(t.releaseTime) } } const rt = function (n) { return { "border-right-color": n } }, ct = function (n) { return { "border-left-color": n } }; function Es(n, _) { if (1 & n && (e.TgZ(0, "ngu-tile")(1, "div", 17)(2, "div", 18)(3, "div", 19), e._UZ(4, "div", 20)(5, "div", 21), e.qZA(), e._UZ(6, "div", 22), e.TgZ(7, "div", 23), e._uU(8), e.qZA(), e._UZ(9, "div", 24), e.TgZ(10, "div", 25), e._UZ(11, "div", 26)(12, "div", 27), e.qZA()(), e._UZ(13, "span"), e.TgZ(14, "div", 28), e._UZ(15, "cc-flipclock", 29), e.qZA()(), e._UZ(16, "div", 30), e.YNc(17, Ms, 4, 4, "div", 31), e.qZA()), 2 & n) { const t = _.$implicit, a = e.oxw(3); e.xp6(3), e.Q6J("ngStyle", e.VKq(15, te, a.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(17, rt, a.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(19, rt, a.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(21, de, a.ribbontrianglecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(23, te, a.ribboncolor)), e.xp6(1), e.hij(" ", t.ribbonName, " "), e.xp6(1), e.Q6J("ngStyle", e.VKq(25, de, a.ribbontrianglecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(27, te, a.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(29, ct, a.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(31, ct, a.ribbonsidecolor)), e.xp6(3), e.Q6J("isMega", "false")("currency", a.currency)("amount", t.subJackpotValue)("releaseamount", t.releaseAmount), e.xp6(2), e.Q6J("ngIf", a.MustGoProperties.dailyjackpotname == t.subJackpotName) } } const Ts = function (n) { return { "mustGo-ls": n } }, Ps = function (n) { return { "top-log-ls": n } }, Is = function (n) { return { "mustGo-carousel-ls": n } }; function Ds(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 8)(1, "div", 9)(2, "div", 10), e._UZ(3, "img", 11), e.qZA(), e.TgZ(4, "div", 12)(5, "ngu-carousel", 13), e.NdJ("onMove", function (l) { return e.CHM(t), e.oxw(2).onmoveFn(l) }), e.YNc(6, Es, 18, 33, "ngu-tile", 14), e._UZ(7, "button", 15)(8, "button", 16), e.qZA()()()() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngClass", e.VKq(8, Ts, t.windowWidth >= 480 && t.windowWidth < 768)), e.xp6(2), e.Q6J("ngClass", e.VKq(10, Ps, t.windowWidth >= 480 && t.windowWidth < 768)), e.xp6(1), e.s9C("src", t.MustGoSitecoreObject.mustGoLogo.src, e.LSH), e.xp6(1), e.Q6J("ngClass", e.VKq(12, Is, t.windowWidth >= 480 && t.windowWidth < 768)), e.xp6(1), e.Q6J("inputs", t.mobileCarouselTile)("dataSource", t.MustGoSubJackpotsList), e.xp6(2), e.Q6J("ngClass", e.VKq(14, it, t.isPreButtonVisible)), e.xp6(1), e.Q6J("ngClass", e.VKq(16, it, t.isNextButtonVisible)) } } function Ss(n, _) { if (1 & n && (e.TgZ(0, "div", 23), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.Q6J("ngStyle", e.VKq(2, te, t.ribboncolor)), e.xp6(1), e.hij(" ", t.MustGoProperties.primaryjackpotname, " ") } } function Ls(n, _) { if (1 & n && (e.TgZ(0, "div", 23), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.Q6J("ngStyle", e.VKq(2, te, t.ribboncolor)), e.xp6(1), e.hij(" ", t.primaryJackpotDisplayname, " ") } } function Os(n, _) { if (1 & n && (e.TgZ(0, "div", 23), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.Q6J("ngStyle", e.VKq(2, te, t.ribboncolor)), e.xp6(1), e.hij(" ", t.MustGoProperties.subjackpot1name, " ") } } function As(n, _) { if (1 & n && (e.TgZ(0, "div", 23), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.Q6J("ngStyle", e.VKq(2, te, t.ribboncolor)), e.xp6(1), e.hij(" ", t.subJackpot1DisplayName, " ") } } function Gs(n, _) { if (1 & n && (e.TgZ(0, "div", 45), e._UZ(1, "span", 33), e.TgZ(2, "span", 34), e._uU(3), e.qZA()()), 2 & n) { const t = e.oxw(3); e.xp6(3), e.Oqu(t.releaseTime) } } function ks(n, _) { if (1 & n && (e.TgZ(0, "div", 23), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.Q6J("ngStyle", e.VKq(2, te, t.ribboncolor)), e.xp6(1), e.hij(" ", t.MustGoProperties.subjackpot2name, " ") } } function xs(n, _) { if (1 & n && (e.TgZ(0, "div", 23), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.Q6J("ngStyle", e.VKq(2, te, t.ribboncolor)), e.xp6(1), e.hij(" ", t.subJackpot2DisplayName, " ") } } function Rs(n, _) { if (1 & n && (e.TgZ(0, "div", 45), e._UZ(1, "span", 33), e.TgZ(2, "span", 34), e._uU(3), e.qZA()()), 2 & n) { const t = e.oxw(3); e.xp6(3), e.Oqu(t.releaseTime) } } function ws(n, _) { if (1 & n && (e.TgZ(0, "div", 23), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.Q6J("ngStyle", e.VKq(2, te, t.ribboncolor)), e.xp6(1), e.hij(" ", t.MustGoProperties.subjackpot3name, " ") } } function Us(n, _) { if (1 & n && (e.TgZ(0, "div", 23), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.Q6J("ngStyle", e.VKq(2, te, t.ribboncolor)), e.xp6(1), e.hij(" ", t.subJackpot3DisplayName, " ") } } function Fs(n, _) { if (1 & n && (e.TgZ(0, "div", 45), e._UZ(1, "span", 33), e.TgZ(2, "span", 34), e._uU(3), e.qZA()()), 2 & n) { const t = e.oxw(3); e.xp6(3), e.Oqu(t.releaseTime) } } function Bs(n, _) { if (1 & n && (e.TgZ(0, "div", 4)(1, "div", 9)(2, "div", 35), e._UZ(3, "img", 11), e.qZA(), e.TgZ(4, "div", 36)(5, "div", 18)(6, "div", 19), e._UZ(7, "div", 20)(8, "div", 27), e.qZA(), e._UZ(9, "div", 22), e.YNc(10, Ss, 2, 4, "div", 37), e.YNc(11, Ls, 2, 4, "div", 37), e._UZ(12, "div", 24), e.TgZ(13, "div", 25), e._UZ(14, "div", 20)(15, "div", 27), e.qZA()(), e.TgZ(16, "div", 38), e._UZ(17, "cc-flipclock", 39), e.qZA()(), e.TgZ(18, "div", 40)(19, "div", 41)(20, "div", 18)(21, "div", 19), e._UZ(22, "div", 20)(23, "div", 27), e.qZA(), e._UZ(24, "div", 22), e.YNc(25, Os, 2, 4, "div", 37), e.YNc(26, As, 2, 4, "div", 37), e._UZ(27, "div", 24), e.TgZ(28, "div", 25), e._UZ(29, "div", 20)(30, "div", 27), e.qZA()(), e._UZ(31, "span"), e.TgZ(32, "div", 28), e._UZ(33, "cc-flipclock", 29), e.qZA(), e.YNc(34, Gs, 4, 1, "div", 42), e.qZA(), e.TgZ(35, "div", 43)(36, "div", 18)(37, "div", 19), e._UZ(38, "div", 20)(39, "div", 27), e.qZA(), e._UZ(40, "div", 22), e.YNc(41, ks, 2, 4, "div", 37), e.YNc(42, xs, 2, 4, "div", 37), e._UZ(43, "div", 24), e.TgZ(44, "div", 25), e._UZ(45, "div", 20)(46, "div", 27), e.qZA()(), e._UZ(47, "span"), e.TgZ(48, "div", 28), e._UZ(49, "cc-flipclock", 29), e.qZA(), e.YNc(50, Rs, 4, 1, "div", 42), e.qZA(), e.TgZ(51, "div", 43)(52, "div", 18)(53, "div", 19), e._UZ(54, "div", 20)(55, "div", 27), e.qZA(), e._UZ(56, "div", 22), e.YNc(57, ws, 2, 4, "div", 37), e.YNc(58, Us, 2, 4, "div", 37), e._UZ(59, "div", 24), e.TgZ(60, "div", 25), e._UZ(61, "div", 20)(62, "div", 27), e.qZA()(), e._UZ(63, "span"), e.TgZ(64, "div", 28), e._UZ(65, "cc-flipclock", 29), e.qZA(), e.YNc(66, Fs, 4, 1, "div", 42), e.qZA()(), e._UZ(67, "div", 44), e.qZA()()), 2 & n) { const t = e.oxw(2); e.xp6(3), e.s9C("src", t.MustGoSitecoreObject.mustGoLogo.src, e.LSH), e.xp6(3), e.Q6J("ngStyle", e.VKq(60, te, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(62, rt, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(64, rt, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(66, de, t.ribbontrianglecolor)), e.xp6(1), e.Q6J("ngIf", "" == t.primaryJackpotDisplayname), e.xp6(1), e.Q6J("ngIf", "" != t.primaryJackpotDisplayname), e.xp6(1), e.Q6J("ngStyle", e.VKq(68, de, t.ribbontrianglecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(70, te, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(72, ct, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(74, ct, t.ribbonsidecolor)), e.xp6(2), e.Q6J("isMega", "true")("currency", t.currency)("amount", t.MustGoSubJackpotsList[0].subJackpotValue)("releaseamount", t.MustGoSitecoreObject.attributes.primaryjackpotreleaseamount), e.xp6(4), e.Q6J("ngStyle", e.VKq(76, te, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(78, rt, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(80, rt, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(82, de, t.ribbontrianglecolor)), e.xp6(1), e.Q6J("ngIf", "" == t.subJackpot1DisplayName), e.xp6(1), e.Q6J("ngIf", "" != t.subJackpot1DisplayName), e.xp6(1), e.Q6J("ngStyle", e.VKq(84, de, t.ribbontrianglecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(86, te, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(88, ct, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(90, ct, t.ribbonsidecolor)), e.xp6(3), e.Q6J("isMega", "false")("currency", t.currency)("amount", t.MustGoSubJackpotsList[1].subJackpotValue)("releaseamount", t.MustGoSitecoreObject.attributes.subjackpot1releaseamount), e.xp6(1), e.Q6J("ngIf", t.MustGoProperties.dailyjackpotname == t.MustGoSubJackpotsList[1].subJackpotName), e.xp6(3), e.Q6J("ngStyle", e.VKq(92, te, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(94, rt, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(96, rt, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(98, de, t.ribbontrianglecolor)), e.xp6(1), e.Q6J("ngIf", "" == t.subJackpot2DisplayName), e.xp6(1), e.Q6J("ngIf", "" != t.subJackpot2DisplayName), e.xp6(1), e.Q6J("ngStyle", e.VKq(100, de, t.ribbontrianglecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(102, te, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(104, ct, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(106, ct, t.ribbonsidecolor)), e.xp6(3), e.Q6J("isMega", "false")("currency", t.currency)("amount", t.MustGoSubJackpotsList[2].subJackpotValue)("releaseamount", t.MustGoSitecoreObject.attributes.subjackpot2releaseamount), e.xp6(1), e.Q6J("ngIf", t.MustGoProperties.dailyjackpotname == t.MustGoSubJackpotsList[2].subJackpotName), e.xp6(3), e.Q6J("ngStyle", e.VKq(108, te, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(110, rt, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(112, rt, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(114, de, t.ribbontrianglecolor)), e.xp6(1), e.Q6J("ngIf", "" == t.subJackpot3DisplayName), e.xp6(1), e.Q6J("ngIf", "" != t.subJackpot3DisplayName), e.xp6(1), e.Q6J("ngStyle", e.VKq(116, de, t.ribbontrianglecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(118, te, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(120, ct, t.ribbonsidecolor)), e.xp6(1), e.Q6J("ngStyle", e.VKq(122, ct, t.ribbonsidecolor)), e.xp6(3), e.Q6J("isMega", "false")("currency", t.currency)("amount", t.MustGoSubJackpotsList[3].subJackpotValue)("releaseamount", t.MustGoSitecoreObject.attributes.subjackpot3releaseamount), e.xp6(1), e.Q6J("ngIf", t.MustGoProperties.dailyjackpotname == t.MustGoSubJackpotsList[3].subJackpotName) } } const Ws = function (n, _, t, a, l, g) { return { MustGoSitecoreObject: n, MustGoSubJackpotsList: _, MustGoFeedObject: t, games: a, isTouch: l, currency: g } }; function Ns(n, _) { if (1 & n && (e.TgZ(0, "div", 4), e._UZ(1, "cc-casino-core-lazy-placeholder", 46), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.HTZ(2, Ws, t.MustGoSitecoreObject, t.MustGoSubJackpotsList, t.MustGoFeedObject, t.games, t.isTouch, t.currency))("componentName", "MustGoJackpotRedesignComponent") } } function Ks(n, _) { if (1 & n && e._UZ(0, "cc-feature-grid", 47), 2 & n) { const t = e.oxw(2); e.Q6J("games", t.games)("subcategory", t.categoryObj)("EnableFutureGrid", !1)("isTouch", t.isTouch)("Type", "scrollable-games")("gameLaunchedFrom", "MustGoJackpot_" + t.category.categoryid)("newFeatureGridArr", t.newFeatureGridArr) } } const Js = function (n, _, t) { return { "casino-ios-bottom-nav-bar": n, "casino-mustgo-one": _, "casino-mustgo-two": t } }; function Ys(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 1), e.NdJ("resize", function () { return e.CHM(t), e.oxw().onResize() }, !1, e.Jf7), e.YNc(1, Ds, 9, 18, "div", 2), e.YNc(2, Bs, 68, 124, "div", 3), e.YNc(3, Ns, 2, 9, "div", 3), e.TgZ(4, "div", 4)(5, "div", 5)(6, "div", 6), e.YNc(7, Ks, 1, 7, "cc-feature-grid", 7), e.qZA()()()() } if (2 & n) { const t = e.oxw(); e.Q6J("ngStyle", e.VKq(12, te, t.bcolor))("ngClass", e.kEZ(14, Js, t.isCrossSaleIOS, 2 == t.MustGoSubJackpotsList.length, 3 == t.MustGoSubJackpotsList.length)), e.xp6(1), e.Q6J("ngIf", t.windowWidth < 768 && t.showMustGo), e.xp6(1), e.Q6J("ngIf", t.windowWidth >= 768 && t.showMustGo), e.xp6(1), e.Q6J("ngIf", t.isMustgoRedesign), e.xp6(3), e.Udp("overflow-x", t.isTouch ? "scroll" : "hidden"), e.ekj("non-touch-scrollable-games", !t.isTouch), e.Q6J("ngStyle", e.VKq(18, te, t.bcolor)), e.xp6(1), e.Q6J("ngIf", t.games && t.games.length > 0) } } const Zs = ["featureGrid"], Pn = function (n) { return { subCategory: n } }; function Hs(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 17), 2 & n) { const t = e.oxw(2); e.Q6J("inputData", e.VKq(2, Pn, t.subCategoryInfo))("componentName", "ParallaxAnimationComponent") } } const oa = function (n) { return { "pointer-events": n } }; function Qs(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "span", 18)(1, "span", 19), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).onPrevClick() }), e.qZA(), e.TgZ(2, "span", 20), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).onNextClick() }), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngClass", t.themeArrowLeft)("ngStyle", e.VKq(4, oa, null != t.carouselData && t.carouselData.disablePrev ? "none" : "auto")), e.xp6(1), e.Q6J("ngClass", t.themeArrowRight)("ngStyle", e.VKq(6, oa, null != t.carouselData && t.carouselData.disableNext ? "none" : "auto")) } } function zs(n, _) { if (1 & n && e._UZ(0, "cc-sign-posting", 23), 2 & n) { const t = e.oxw(3); e.Q6J("category", t.subCategoryInfo) } } const js = function (n) { return { "font-size": n } }; function qs(n, _) { if (1 & n && (e.TgZ(0, "span", 21), e._uU(1), e.YNc(2, zs, 1, 1, "cc-sign-posting", 22), e.qZA()), 2 & n) { const t = e.oxw(2); e.Q6J("ngStyle", e.VKq(3, js, t.subCategoryTitleFontSize)), e.xp6(1), e.hij("", t.subCategoryInfo.categoryname, " "), e.xp6(1), e.Q6J("ngIf", t.isSignPosting) } } function Vs(n, _) { if (1 & n && e._UZ(0, "cc-categoryicon-subtitle", 24), 2 & n) { const t = e.oxw(2); e.Q6J("lobbyType", t.lobbyType)("subCategory", t.subCategoryInfo)("recentAndGyml", "NotRecentAndGyml")("alignIconRight", t.alignIconRight) } } function Xs(n, _) { 1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-global-translate", 26), e.qZA()), 2 & n && (e.xp6(1), e.Q6J("key", "SeeAll")) } function $s(n, _) { if (1 & n && (e.TgZ(0, "span", 29), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(4); e.xp6(1), e.hij("(", t.seeAllGamesCount, ")") } } function er(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-global-translate", 26), e.YNc(2, $s, 2, 1, "span", 27), e._UZ(3, "span", 28), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.Q6J("key", "SeeAll"), e.xp6(1), e.Q6J("ngIf", t.showSeeAllGamesCount && "Overlay" !== t.gameContainer) } } const tr = function (n, _) { return { color: n, "font-size": _ } }; function ir(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "span", 25), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).seeAll() }), e.YNc(1, Xs, 2, 1, "div", 4), e.YNc(2, er, 4, 2, "div", 4), e.qZA() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngStyle", e.WLB(3, tr, t.subCategoryTextColor, t.subCategorySubTitleFontSize)), e.xp6(1), e.Q6J("ngIf", t.changeCarouselView), e.xp6(1), e.Q6J("ngIf", !t.changeCarouselView) } } function or(n, _) { if (1 & n && (e.TgZ(0, "div")(1, "li"), e._uU(2), e.qZA()()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.Udp("font-size", t.subCategorySubTitleFontSize), e.xp6(1), e.hij(" ", t.seeAllText, " ") } } function nr(n, _) { if (1 & n && (e.TgZ(0, "li", 29), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(4); e.Udp("font-size", t.subCategorySubTitleFontSize), e.xp6(1), e.hij(" (", t.seeAllGamesCount, ")") } } function ar(n, _) { if (1 & n && (e.TgZ(0, "div")(1, "li"), e._uU(2), e.qZA(), e.YNc(3, nr, 2, 3, "li", 31), e._UZ(4, "li", 28), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.Udp("font-size", t.subCategorySubTitleFontSize), e.xp6(1), e.hij(" ", t.seeAllText, " "), e.xp6(1), e.Q6J("ngIf", t.showSeeAllGamesCount && "Overlay" !== t.gameContainer), e.xp6(1), e.Udp("font-size", t.subCategorySubTitleFontSize) } } const sr = function (n) { return { "noicon-seeall": n } }; function rr(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "ul", 30), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).seeAll() }), e.YNc(1, or, 3, 3, "div", 4), e.YNc(2, ar, 5, 6, "div", 4), e.qZA() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngClass", e.VKq(4, sr, t.subCategoryInfo.sitecoreData.displayCategoryIcon && t.subCategoryInfo.sitecoreData.attributes.icon || t.subCategoryInfo.sitecoreData.headerTitle))("ngStyle", e.VKq(6, Ze, t.subCategoryTextColor)), e.xp6(1), e.Q6J("ngIf", t.changeCarouselView), e.xp6(1), e.Q6J("ngIf", !t.changeCarouselView) } } const _o = function (n, _, t, a, l, g, p) { return { teaserLocation: n, teaserCategory: _, teasersSource: t, optTeasersSource: a, identifierClass: l, mode: "teaser", lobbyType: g, gameContainer: p } }; function cr(n, _) { if (1 & n && (e.TgZ(0, "div", 32), e._UZ(1, "cc-casino-core-lazy-placeholder", 17), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.Hh0(2, _o, t.SubCategoryTeaser, t.subcategory.categoryInfo.categoryid, t.headerTeasers, t.optimizedEmbeddedAboveTeasers, t.subcategoryId + "_EmbeddedAbove", t.lobbyType, t.gameContainer))("componentName", "TeasersWrapperComponent") } } const na = function (n, _) { return { subCategory: n, widgetLocation: _ } }; function lr(n, _) { if (1 & n && (e.TgZ(0, "div", 33), e._UZ(1, "cc-casino-core-lazy-placeholder", 17), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.WLB(2, na, t.subCategoryInfo, t.SubCategoryTeaser))("componentName", "CasinoGameSelectorComponent") } } const go = function (n, _) { return { position: n, category: _ } }; function _r(n, _) { if (1 & n && (e.TgZ(0, "div", 34), e._UZ(1, "cc-casino-core-lazy-placeholder", 17), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.WLB(2, go, t.promoEDSWidgetPosition, t.subcategoryId))("componentName", "PromoEdsWidgetComponent") } } function gr(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "cc-feature-grid", 35, 36), e.NdJ("loadNextGames", function () { return e.CHM(t), e.oxw(2).loadNextGamesSet() })("carouselDataEvent", function (l) { return e.CHM(t), e.oxw(2).getCarouselData(l) }), e.qZA() } if (2 & n) { const t = e.oxw(2); e.Q6J("games", t.Games)("subcategory", t.subCategoryInfo)("isTouch", t.isTouch)("Type", t.subCategoryStyle)("changeCarouselView", t.changeCarouselView)("gameLaunchedFrom", t.subCategoryInfo.categoryid)("lobbyType", t.lobbyType)("newFeatureGridArr", t.newFeatureGridArr) } } function dr(n, _) { if (1 & n && (e.TgZ(0, "div", 33), e._UZ(1, "cc-casino-core-lazy-placeholder", 17), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.WLB(2, na, t.subCategoryInfo, t.SubCategoryTeaser))("componentName", "CasinoGameSelectorComponent") } } function ur(n, _) { if (1 & n && (e.TgZ(0, "div", 34), e._UZ(1, "cc-casino-core-lazy-placeholder", 17), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.WLB(2, go, t.promoEDSWidgetPosition, t.subcategoryId))("componentName", "PromoEdsWidgetComponent") } } const aa = function (n, _) { return { component: "carousel", lobbyType: n, category: _ } }; function hr(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-casino-core-lazy-placeholder", 17), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.WLB(2, aa, t.lobbyType, t.subcategory))("componentName", "SlotRacesComponent") } } function mr(n, _) { if (1 & n && (e.TgZ(0, "div", 32), e._UZ(1, "cc-casino-core-lazy-placeholder", 17), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.Hh0(2, _o, t.SubCategoryTeaser, t.subcategory.categoryInfo.categoryid, t.headerTeasers, t.optimizedEmbeddedBelowTeasers, t.subcategoryId + "_EmbeddedBelow", t.lobbyType, t.gameContainer))("componentName", "TeasersWrapperComponent") } } const In = function (n, _, t) { return { "casino-backgroungImage-layer": n, "casino-backgroungImage-parallax": _, categoryBgFull: t } }, pr = function (n) { return { "seeall-configs": n } }, sa = function (n, _) { return { color: n, "font-family": _ } }; function fr(n, _) { if (1 & n && (e.TgZ(0, "div", 5), e.YNc(1, Hs, 1, 4, "cc-casino-core-lazy-placeholder", 2), e.TgZ(2, "div", 6)(3, "h2", 7), e.YNc(4, Qs, 3, 8, "span", 8), e.YNc(5, qs, 3, 5, "span", 9), e.YNc(6, Vs, 1, 4, "cc-categoryicon-subtitle", 10), e.YNc(7, ir, 3, 6, "span", 11), e.YNc(8, rr, 3, 8, "ul", 12), e.qZA(), e.YNc(9, cr, 2, 10, "div", 13), e.YNc(10, lr, 2, 5, "div", 14), e.YNc(11, _r, 2, 5, "div", 15), e.TgZ(12, "div", 5), e.YNc(13, gr, 2, 8, "cc-feature-grid", 16), e.qZA(), e.YNc(14, dr, 2, 5, "div", 14), e.YNc(15, ur, 2, 5, "div", 15), e.YNc(16, hr, 2, 5, "div", 4), e.YNc(17, mr, 2, 10, "div", 13), e.qZA()()), 2 & n) { const t = e.oxw(); e.Q6J("ngClass", e.kEZ(23, In, t.subCategoryInfo.sitecoreData.backgroundImageLayer1, t.subCategoryInfo.sitecoreData.backgroundImageLayer2 || t.subCategoryInfo.sitecoreData.backgroundImageLayer3, t.categoryBackgroundFull)), e.xp6(1), e.Q6J("ngIf", t.subCategoryInfo.sitecoreData.backgroundImageLayer1 || t.subCategoryInfo.sitecoreData.backgroundImageLayer2 || t.subCategoryInfo.sitecoreData.backgroundImageLayer3), e.xp6(1), e.Q6J("ngClass", e.VKq(27, pr, t.changeCarouselView)), e.xp6(1), e.Q6J("ngClass", e.VKq(29, Ct, t.isUkHeading))("ngStyle", e.WLB(31, sa, t.subCategoryTextColor, t.lobbyTileFontFamily)), e.xp6(1), e.Q6J("ngIf", t.changeCarouselView && !t.isTouch && (null == t.carouselData ? null : t.carouselData.showArrows)), e.xp6(1), e.Q6J("ngIf", !t.isUkHeading), e.xp6(1), e.Q6J("ngIf", t.isUkHeading), e.xp6(1), e.Q6J("ngIf", t.seeAllGamesCount && !t.isLastNavigationLevel && !t.isUkHeading), e.xp6(1), e.Q6J("ngIf", t.seeAllGamesCount && !t.isLastNavigationLevel && t.isUkHeading), e.xp6(1), e.Q6J("ngIf", (t.showTeasers || t.isShowEmbeddedAbove) && (!t.isEnableOptimizedTeasers && t.showTeasersAboveGames || t.isEnableOptimizedTeasers)), e.xp6(1), e.Q6J("ngIf", t.isEnabledGameSelector && "BeforeGames" === t.gameSelectorWidgetPosition), e.xp6(1), e.Q6J("ngIf", t.displayPromoEDSWidget && "BeforeGames" === t.promoEDSWidgetPosition), e.xp6(1), e.Udp("overflow-x", 0 == t.isTouch ? "hidden" : "scroll"), e.ekj("non-touch-scrollable-games", !t.isTouch && "scrollable-games" == t.subCategoryStyle), e.Q6J("ngClass", t.subCategoryStyle), e.xp6(1), e.Q6J("ngIf", t.Games && t.Games.length > 0 && !t.isSlotRacesCategory), e.xp6(1), e.Q6J("ngIf", t.isEnabledGameSelector && "AfterGames" === t.gameSelectorWidgetPosition), e.xp6(1), e.Q6J("ngIf", t.displayPromoEDSWidget && "AfterGames" === t.promoEDSWidgetPosition), e.xp6(1), e.Q6J("ngIf", t.isSlotRacesCategory), e.xp6(1), e.Q6J("ngIf", (t.showTeasers || t.isShowEmbeddedBelow) && !t.showTeasersAboveGames) } } function vr(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 17), 2 & n) { const t = e.oxw(); e.Q6J("inputData", e.VKq(2, Pn, t.parallaxInput))("componentName", "ParallaxAnimationComponent") } } function yr(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-single-jackpot-widget", 38), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.MGl("id", "SingleJackpotCategoryIdentifier_", t.subCategoryInfo.categoryid, ""), e.Q6J("category", t.subCategoryInfo)("isTouch", t.isTouch)("lobbyType", t.lobbyType)("gameContainer", t.gameContainer) } } function br(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-multi-jackpot-widget", 38), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.MGl("id", "MultiJackpotCategoryIdentifier_", t.subCategoryInfo.categoryid, ""), e.Q6J("category", t.subCategoryInfo)("isTouch", t.isTouch)("lobbyType", t.lobbyType)("gameContainer", t.gameContainer) } } function Cr(n, _) { if (1 & n && (e.TgZ(0, "div", 37), e.YNc(1, yr, 2, 5, "div", 4), e.YNc(2, br, 2, 5, "div", 4), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("ngIf", 1 == t.subCategoryInfo.sitecoreData.jackpotWidgetIds.length), e.xp6(1), e.Q6J("ngIf", t.subCategoryInfo.sitecoreData.jackpotWidgetIds.length > 1) } } function Mr(n, _) { if (1 & n && (e.TgZ(0, "div", 37), e._UZ(1, "cc-must-go", 38), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.MGl("id", "MustGoCategoryIdentifier_", t.subCategoryInfo.categoryid, ""), e.Q6J("category", t.subCategoryInfo)("isTouch", t.isTouch)("lobbyType", t.lobbyType)("gameContainer", t.gameContainer) } } const ra = function (n, _, t, a, l, g, p, b, E, L) { return { subcategory: n, type: _, url: t, launchUrl: a, imageThumbnail: l, videoName: g, lobbyType: p, videoBoxContent: b, gameContainer: E, displayVideoinLoop: L } }; function Er(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-casino-core-lazy-placeholder", 17), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("inputData", e.rFY(2, ra, [t.subCategoryInfo, t.videoType, t.videoUrl, t.launchUrl, t.imageThumbnail, t.videoName, t.lobbyType, t.videoBoxContent, t.gameContainer, t.displayVideoinLoop]))("componentName", "CasinoGameVideosComponent") } } function Tr(n, _) { if (1 & n && e._UZ(0, "cc-rp-gyml", 7), 2 & n) { const t = e.oxw(2); e.Q6J("lobbyType", t.lobbyType)("gameContainer", t.gameContainer)("categoryId", t.subcategoryid) } } function Pr(n, _) { if (1 & n && (e.TgZ(0, "div"), e.YNc(1, Tr, 1, 3, "cc-rp-gyml", 6), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("ngIf", !t.hideRpGyml) } } const Ir = function (n) { return { categoryId: n } }; function Dr(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 8), 2 & n) { const t = e.oxw(); e.Q6J("inputData", e.VKq(2, Ir, t.subcategoryid))("componentName", "CozyBingoWidgetComponent") } } function Sr(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 8), 2 & n) { const t = e.oxw(); e.Q6J("inputData", e.WLB(2, aa, t.lobbyType, t.subcategory))("componentName", "SlotRacesComponent") } } const Lr = function (n) { return { products: n } }; function Or(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 8), 2 & n) { const t = e.oxw(2); e.Q6J("inputData", e.VKq(2, Lr, t.promoProducts))("componentName", "PromoOfferWidgetComponent") } } function Ar(n, _) { if (1 & n && (e.ynx(0), e.YNc(1, Or, 1, 4, "cc-casino-core-lazy-placeholder", 2), e.BQk()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("ngSwitchCase", t.promoOfferWidgetKey) } } function Gr(n, _) { if (1 & n && e._UZ(0, "cc-lmt-sub-category-lobby", 9), 2 & n) { const t = e.oxw(); e.Q6J("trackingIndex", t.trackingIndex)("subcategoryId", t.subcategoryid)("isTouch", t.isTouch)("subcategory", t.subcategory)("lobbyType", t.lobbyType)("gameContainer", t.gameContainer)("seeAllProductLinkOverride", t.seeAllProductLinkOverride) } } function kr(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div"), e._UZ(1, "div", 14), e.TgZ(2, "div", 15), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw(2); return g.toggleFavourite(g.game, l) }), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.xp6(2), e.Q6J("ngClass", t.isFavouriteGame(t.game) ? t.favouriteStyle : t.unFavouriteStyle) } } function xr(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div")(1, "div", 2), e.NdJ("click", function () { return e.CHM(t), e.oxw().hideInfo() }), e.qZA(), e.TgZ(2, "div", 3)(3, "div", 4), e._uU(4), e.qZA(), e.TgZ(5, "div", 5)(6, "div", 6), e._UZ(7, "img", 7), e.YNc(8, kr, 3, 1, "div", 1), e.qZA(), e.TgZ(9, "div", 8)(10, "div", 9), e._uU(11), e.qZA(), e.TgZ(12, "div", 10), e._uU(13), e.ALo(14, "uppercase"), e.qZA(), e.TgZ(15, "div", 11), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(); return l.launchGame(l.game, !1) }), e.TgZ(16, "button", 12), e._uU(17), e.ALo(18, "uppercase"), e.qZA()()(), e._UZ(19, "div", 13), e.qZA()()() } if (2 & n) { const t = e.oxw(); e.xp6(2), e.Udp("width", t.boxWidth, "px"), e.xp6(2), e.Oqu(t.gameTitle), e.xp6(3), e.s9C("src", t.src, e.LSH), e.xp6(1), e.Q6J("ngIf", t.useFavouriteGames), e.xp6(1), e.Udp("width", t.boxWidthInt, "px"), e.xp6(2), e.Oqu(t.gameProvider), e.xp6(2), e.Oqu(e.lcZ(14, 12, t.game.launchType)), e.xp6(2), e.Udp("width", t.boxWidthInt, "px"), e.xp6(2), e.Oqu(e.lcZ(18, 14, t.cta)) } } function Rr(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div"), e._UZ(1, "div", 34), e.TgZ(2, "div", 35), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw(2); return g.toggleFavourite(g.game, l) }), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.xp6(2), e.Q6J("ngClass", t.isFavourite ? t.favouriteStyle : t.unFavouriteStyle) } } function wr(n, _) { if (1 & n && (e.TgZ(0, "div", 36), e._UZ(1, "img", 7), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.s9C("src", t.vendorLogo, e.LSH) } } function Ur(n, _) { if (1 & n && (e.TgZ(0, "div", 36), e._uU(1), e.ALo(2, "uppercase"), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Oqu(e.lcZ(2, 1, t.game.launchType)) } } function Fr(n, _) { if (1 & n && (e.TgZ(0, "div", 44), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(4); e.xp6(1), e.hij(" ", t.reelsTitle, " ") } } function Br(n, _) { if (1 & n && (e.TgZ(0, "div", 41)(1, "div", 42), e._uU(2), e.qZA(), e.YNc(3, Fr, 2, 1, "div", 43), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(2), e.Oqu(t.reels), e.xp6(1), e.Q6J("ngIf", t.reels) } } function Wr(n, _) { if (1 & n && (e.TgZ(0, "div", 47), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(4); e.xp6(1), e.hij(" ", t.payLinesTitle, " ") } } function Nr(n, _) { if (1 & n && (e.TgZ(0, "div", 45)(1, "div", 42), e._uU(2), e.qZA(), e.YNc(3, Wr, 2, 1, "div", 46), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(2), e.Oqu(t.payLines), e.xp6(1), e.Q6J("ngIf", t.payLines) } } function Kr(n, _) { if (1 & n && (e.TgZ(0, "div", 51), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(4); e.xp6(1), e.hij(" ", t.returnToPlayerTitle, " ") } } function Jr(n, _) { if (1 & n && (e.TgZ(0, "div", 48)(1, "div", 49), e._uU(2), e.qZA(), e.YNc(3, Kr, 2, 1, "div", 50), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(2), e.hij(" ", t.returnToPlayer, ""), e.xp6(1), e.Q6J("ngIf", t.returnToPlayer) } } function Yr(n, _) { if (1 & n && (e.TgZ(0, "div", 37), e.YNc(1, Br, 4, 2, "div", 38), e.YNc(2, Nr, 4, 2, "div", 39), e.YNc(3, Jr, 4, 2, "div", 40), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngIf", t.reels), e.xp6(1), e.Q6J("ngIf", t.payLines), e.xp6(1), e.Q6J("ngIf", t.returnToPlayer) } } function Zr(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 52), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(2); return l.launchGame(l.game, !0) }), e.TgZ(1, "a", 53), e._uU(2), e.ALo(3, "uppercase"), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngStyle", e.VKq(4, He, t.demoLinkTextColor)), e.xp6(1), e.Oqu(e.lcZ(3, 2, t.demoLinkText)) } } function Hr(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div")(1, "div", 16), e.NdJ("click", function () { return e.CHM(t), e.oxw().hideInfo() }), e.qZA(), e.TgZ(2, "div", 17)(3, "div", 18)(4, "div", 19)(5, "div", 20), e._UZ(6, "img", 7), e.TgZ(7, "div", 21), e._UZ(8, "cc-stickers-jackpot", 22), e.qZA(), e.YNc(9, Rr, 3, 1, "div", 1), e.qZA(), e.TgZ(10, "div", 23)(11, "div", 24), e._uU(12), e.ALo(13, "uppercase"), e.qZA(), e.TgZ(14, "div", 25), e.NdJ("click", function () { return e.CHM(t), e.oxw().hideInfo() }), e.qZA(), e.YNc(15, wr, 2, 1, "div", 26), e.YNc(16, Ur, 3, 3, "div", 26), e.YNc(17, Yr, 4, 3, "div", 27), e.qZA(), e._UZ(18, "div", 13), e.qZA(), e.TgZ(19, "div", 28)(20, "div", 29), e._uU(21), e.qZA(), e._UZ(22, "span", 30), e.ALo(23, "trustAsHtml"), e.qZA(), e.TgZ(24, "div", 31), e.YNc(25, Zr, 4, 6, "div", 32), e.TgZ(26, "button", 33), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(); return l.launchGame(l.game, !1) }), e._uU(27), e.ALo(28, "uppercase"), e.qZA()()()()() } if (2 & n) { const t = e.oxw(); e.xp6(2), e.Udp("width", t.boxWidth, "px"), e.xp6(4), e.s9C("src", t.src, e.LSH), e.xp6(2), e.Q6J("demoEnabled", t.demoEnabled)("stickers", t.stickers)("isTouch", t.isTouch)("jackpotValue", t.jackpotValue)("isHotJackpotGroup", t.isHotJackpotGroup)("isStickersForUk", t.isStickersForUk)("lobbyType", t.lobbyType), e.xp6(1), e.Q6J("ngIf", t.useFavouriteGames), e.xp6(1), e.Udp("width", t.boxWidthInt, "px"), e.xp6(2), e.Oqu(e.lcZ(13, 21, t.gameProvider)), e.xp6(3), e.Q6J("ngIf", t.vendorLogo), e.xp6(1), e.Q6J("ngIf", !t.vendorLogo), e.xp6(1), e.Q6J("ngIf", t.enableQuickInfoReels), e.xp6(4), e.Oqu(t.gameTitle), e.xp6(1), e.Q6J("innerHTML", e.lcZ(23, 23, t.gameDescription), e.oJD), e.xp6(3), e.Q6J("ngIf", t.demoEnabled && t.demoEnabledForProvider), e.xp6(2), e.Oqu(e.lcZ(28, 25, t.cta)) } } function Qr(n, _) { if (1 & n && (e.TgZ(0, "h2", 10), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2); e.Gre("game-tile-heading casino-lobby-header displayCategoryHeader-", t.displayCatHeader, ""), e.Q6J("ngStyle", e.WLB(5, sa, t.subCategoryTextColor, t.lobbyTileFontFamily)), e.xp6(1), e.hij(" ", t.categoryInfo.categoryname, " ") } } function zr(n, _) { if (1 & n && (e.TgZ(0, "div", 11), e._UZ(1, "cc-casino-core-lazy-placeholder", 12), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.Hh0(2, _o, t.EmbeddedTeaser, t.teaserCategoryVal, t.headerTeasers, t.optimizedEmbeddedAboveTeasers, t.categoryId + "_EmbeddedAbove", t.lobbyType, t.gameContainer))("componentName", "TeasersWrapperComponent") } } function jr(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 12), 2 & n) { const t = e.oxw(2); e.Q6J("inputData", e.VKq(2, Pn, t.parallaxInput))("componentName", "ParallaxAnimationComponent") } } function qr(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-single-jackpot-widget", 13), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.MGl("id", "SingleJackpotCategoryIdentifier_", t.categoryInfo.categoryid, ""), e.Q6J("category", t.categoryInfo)("isTouch", t.isTouch)("lobbyType", t.lobbyType)("gameContainer", t.gameContainer) } } function Vr(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-multi-jackpot-widget", 13), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.MGl("id", "MultiJackpotCategoryIdentifier_", t.categoryInfo.categoryid, ""), e.Q6J("category", t.categoryInfo)("isTouch", t.isTouch)("lobbyType", t.lobbyType)("gameContainer", t.gameContainer) } } function Xr(n, _) { if (1 & n && (e.TgZ(0, "div"), e.YNc(1, qr, 2, 5, "div", 6), e.YNc(2, Vr, 2, 5, "div", 6), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngIf", 1 == t.categoryInfo.sitecoreData.jackpotWidget.length), e.xp6(1), e.Q6J("ngIf", t.categoryInfo.sitecoreData.jackpotWidget.length > 1) } } function $r(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-must-go", 13), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.MGl("id", "MustGoCategoryIdentifier_", t.categoryInfo.categoryid, ""), e.Q6J("category", t.categoryInfo)("isTouch", t.isTouch)("lobbyType", t.lobbyType)("gameContainer", t.gameContainer) } } const ca = function (n) { return { subCategory: n, widgetLocation: "Embedded" } }; function ec(n, _) { if (1 & n && (e.TgZ(0, "div", 14), e._UZ(1, "cc-casino-core-lazy-placeholder", 12), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.VKq(2, ca, t.category.categoryInfo))("componentName", "CasinoGameSelectorComponent") } } function tc(n, _) { if (1 & n && (e.TgZ(0, "div", 15), e._UZ(1, "cc-casino-core-lazy-placeholder", 12), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.WLB(2, go, t.promoEDSWidgetPosition, t.categoryId))("componentName", "PromoEdsWidgetComponent") } } function ic(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "cc-feature-grid", 19), e.NdJ("loadNextGames", function () { return e.CHM(t), e.oxw(3).loadNextGamesSet() }), e.qZA() } if (2 & n) { const t = e.oxw(3); e.Q6J("games", t.Games)("subcategory", t.categoryInfo)("isTouch", t.isTouch)("Type", t.categoryStyle)("gameLaunchedFrom", t.categoryId)("lobbyType", t.lobbyType)("newFeatureGridArr", t.newFeatureGridArr) } } function oc(n, _) { if (1 & n && (e.TgZ(0, "div", 16, 17), e.YNc(2, ic, 1, 7, "cc-feature-grid", 18), e.qZA()), 2 & n) { const t = e.oxw(2); e.Udp("overflow-x", t.isTouch ? "scroll" : "hidden"), e.ekj("non-touch-scrollable-games", !t.isTouch && "scrollable-games" == t.categoryStyle), e.Q6J("ngClass", t.categoryStyle), e.xp6(2), e.Q6J("ngIf", t.Games && t.Games.length > 0) } } function nc(n, _) { if (1 & n && (e.TgZ(0, "div", 14), e._UZ(1, "cc-casino-core-lazy-placeholder", 12), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.VKq(2, ca, t.category.categoryInfo))("componentName", "CasinoGameSelectorComponent") } } function ac(n, _) { if (1 & n && (e.TgZ(0, "div", 15), e._UZ(1, "cc-casino-core-lazy-placeholder", 12), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.WLB(2, go, t.promoEDSWidgetPosition, t.categoryId))("componentName", "PromoEdsWidgetComponent") } } function sc(n, _) { if (1 & n && (e.TgZ(0, "div", 11), e._UZ(1, "cc-casino-core-lazy-placeholder", 12), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.Hh0(2, _o, t.EmbeddedTeaser, t.teaserCategoryVal, t.headerTeasers, t.optimizedEmbeddedBelowTeasers, t.categoryId + "_EmbeddedBelow", t.lobbyType, t.gameContainer))("componentName", "TeasersWrapperComponent") } } function rc(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-casino-core-lazy-placeholder", 12), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("inputData", e.rFY(2, ra, [t.categoryInfo, t.videoType, t.videoUrl, t.launchUrl, t.imageThumbnail, t.videoName, t.lobbyType, t.videoBoxContent, t.gameContainer, t.displayVideoinLoop]))("componentName", "CasinoGameVideosComponent") } } function cc(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 1), e.NdJ("resize", function () { return e.CHM(t), e.oxw().onResize() }, !1, e.Jf7), e.YNc(1, Qr, 2, 8, "h2", 2), e.YNc(2, zr, 2, 10, "div", 3), e.TgZ(3, "div", 4), e.YNc(4, jr, 1, 4, "cc-casino-core-lazy-placeholder", 5), e.YNc(5, Xr, 3, 2, "div", 6), e.YNc(6, $r, 2, 5, "div", 6), e.qZA(), e.YNc(7, ec, 2, 4, "div", 7), e.YNc(8, tc, 2, 5, "div", 8), e.YNc(9, oc, 3, 7, "div", 9), e.YNc(10, nc, 2, 4, "div", 7), e.YNc(11, ac, 2, 5, "div", 8), e.YNc(12, sc, 2, 10, "div", 3), e.YNc(13, rc, 2, 13, "div", 6), e.qZA() } if (2 & n) { const t = e.oxw(); e.Gre("casino-game-tile-wrapper gametracking ", t.trackingClass, ""), e.xp6(1), e.Q6J("ngIf", t.isMobileWidth && t.enableFixedMobileNavigation && t.displayCatHeader), e.xp6(1), e.Q6J("ngIf", (t.showTeasers || t.isShowEmbeddedAbove) && (!t.isEnableOptimizedTeasers && t.showTeasersAboveGames || t.isEnableOptimizedTeasers)), e.xp6(1), e.Udp("overflow", t.isTouch ? "unset" : "hidden"), e.Q6J("ngClass", e.kEZ(19, In, t.parallaxInput && t.parallaxInput.sitecoreData.backgroundImageLayer1, t.parallaxInput && t.parallaxInput.sitecoreData.backgroundImageLayer2 || t.parallaxInput && t.parallaxInput.sitecoreData.backgroundImageLayer3, t.categoryBackgroundFull)), e.xp6(1), e.Q6J("ngIf", t.parallaxInput && (t.parallaxInput.sitecoreData.backgroundImageLayer1 || t.parallaxInput.sitecoreData.backgroundImageLayer2 || t.parallaxInput.sitecoreData.backgroundImageLayer3)), e.xp6(1), e.Q6J("ngIf", null == t.categoryInfo || null == t.categoryInfo.sitecoreData ? null : t.categoryInfo.sitecoreData.showJackpotWidget), e.xp6(1), e.Q6J("ngIf", t.categoryInfo.sitecoreData && t.categoryInfo.sitecoreData.showMustGo), e.xp6(1), e.Q6J("ngIf", t.isEnabledGameSelector && "BeforeGames" === t.gameSelectorWidgetPosition), e.xp6(1), e.Q6J("ngIf", t.displayPromoEDSWidget && "BeforeGames" === t.promoEDSWidgetPosition), e.xp6(1), e.Q6J("ngIf", t.Games.length > 0), e.xp6(1), e.Q6J("ngIf", t.isEnabledGameSelector && "AfterGames" === t.gameSelectorWidgetPosition), e.xp6(1), e.Q6J("ngIf", t.displayPromoEDSWidget && "AfterGames" === t.promoEDSWidgetPosition), e.xp6(1), e.Q6J("ngIf", (t.showTeasers || t.isShowEmbeddedBelow) && !t.showTeasersAboveGames), e.xp6(1), e.Q6J("ngIf", t.categoryInfo && t.categoryInfo.sitecoreData && t.videoUrl && (t.categoryInfo.sitecoreData.videoType || t.categoryInfo.sitecoreData.casinoVideo && t.categoryInfo.sitecoreData.casinoVideo.videoType)) } } const lc = function (n, _) { return { component: "page", lobbyType: n, category: _ } }; function _c(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 3), 2 & n) { const t = e.oxw(); e.Q6J("inputData", e.WLB(2, lc, t.lobbyType, t.category))("componentName", "SlotRacesComponent") } } const gc = function (n, _) { return { categoryId: n, lobbyType: _ } }; function dc(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 3), 2 & n) { const t = e.oxw(); e.Q6J("inputData", e.WLB(2, gc, t.categoryId, t.lobbyType))("componentName", "DiscoverFeedComponent") } } const uc = function (n, _, t) { return { liveGamesCategory: n, liveGameInfo: _, lobbyType: t } }; function hc(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 3), 2 & n) { const t = e.oxw(); e.Q6J("inputData", e.kEZ(2, uc, t.liveGamesCategory, t.liveGameInfo, t.lobbyType))("componentName", "LiveGamesIframeComponent") } } function mc(n, _) { if (1 & n && e._UZ(0, "cc-lmt-category-lobby", 4), 2 & n) { const t = e.oxw(); e.Q6J("categoryId", t.categoryId)("category", t.category)("isTouch", t.isTouch)("lobbyType", t.lobbyType)("gameContainer", t.gameContainer) } } function pc(n, _) { if (1 & n && (e.TgZ(0, "div", 2), e._UZ(1, "cc-lmt-category-wrapper", 3), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.MGl("id", "categoryIdentifier_", t.currentCategoryInfo.categoryInfo.categoryid, ""), e.Q6J("categoryId", t.currentCategoryInfo.categoryInfo.categoryid)("category", t.currentCategoryInfo)("isTouch", t.isTouch)("lobbyType", t.lobbyType)("gameContainer", t.gameContainer) } } function fc(n, _) { if (1 & n && e._UZ(0, "cc-lmt-sub-category-wrapper", 6), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(2); e.MGl("id", "categoryIdentifier_", a.categoryInfo.categoryid, ""), e.Q6J("trackingIndex", g.gamesInCategory ? l + 1 : l)("subcategory", a)("isTouch", g.isTouch)("lobbyType", g.lobbyType)("gameContainer", g.gameContainer)("seeAllProductLinkOverride", g.seeAllProductLinkOverride) } } function vc(n, _) { if (1 & n && (e.TgZ(0, "div"), e.YNc(1, fc, 1, 7, "cc-lmt-sub-category-wrapper", 5), e.qZA()), 2 & n) { const t = _.index, a = e.oxw(2); e.xp6(1), e.Q6J("ngIf", t < a.subCategoryLoadCount) } } function yc(n, _) { if (1 & n && (e.TgZ(0, "div", 2), e.YNc(1, vc, 2, 1, "div", 4), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("ngForOf", t.lmtSubCategories) } } const bc = function (n) { return { "lobby-no-seo": n } }; function Cc(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-lmt-sub-category-lobby", 1), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("trackingIndex", t.trackingIndex)("subcategoryId", t.subCategoryRoute)("isTouch", t.isTouch)("subcategory", t.subCategory)("lobbyType", t.lobbyType)("gameContainer", t.gameContainer) } } function Mc(n, _) { if (1 & n && e._UZ(0, "cc-casino-page-container", 1), 2 & n) { const t = e.oxw(); e.Q6J("lobbyType", t.lobbyType)("categoryRoute", t.categoryRoute)("gameContainer", t.gameContainer)("seeAllProductLinkOverride", t.seeAllProductLinkOverride) } } function Ec(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 4), e.NdJ("click", function () { return e.CHM(t), e.oxw().closeSportsOverlay() }), e.qZA() } } const la = ["searchInput"]; function Tc(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "span", 12), e.NdJ("click", function () { return e.CHM(t), e.oxw().closeSearchIcon() }), e.qZA() } } function Pc(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 13), e.NdJ("click", function () { const l = e.CHM(t), g = l.$implicit, p = l.index; return e.oxw().launchGame(g, p) }), e._UZ(1, "img", 14)(2, "span", 15), e.ALo(3, "highlightsearch"), e.qZA() } if (2 & n) { const t = _.$implicit, a = e.oxw(); e.xp6(1), e.s9C("src", t.icon.src, e.LSH), e.xp6(1), e.Q6J("innerHTML", e.xi3(3, 2, t.title, a.model.query), e.oJD) } } function Ic(n, _) { 1 & n && e._UZ(0, "div", 16) } function Dc(n, _) { if (1 & n && (e.TgZ(0, "span"), e._UZ(1, "div", 10)(2, "div", 11), e.qZA()), 2 & n) { const t = e.oxw().$implicit; e.xp6(1), e.Q6J("ngClass", t.sitecoreData.attributes.icon), e.xp6(1), e.Q6J("innerHtml", t.categoryname, e.oJD) } } function Sc(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 7)(1, "a", 8), e.NdJ("click", function (l) { const g = e.CHM(t), p = g.index, b = g.$implicit; return e.oxw().navItemClick(l, p, b.route, b.url) }), e.YNc(2, Dc, 3, 2, "span", 9), e.qZA()() } if (2 & n) { const t = _.$implicit; e.Q6J("hidden", !t.isNavigationCategory), e.xp6(2), e.Q6J("ngIf", t.isNavigationCategory) } } function Lc(n, _) { if (1 & n && e._UZ(0, "cc-overlay-header", 4), 2 & n) { const t = e.oxw(); e.Q6J("hideCloseButton", t.hideCloseButton) } } function Oc(n, _) { if (1 & n && e._UZ(0, "cc-overlay-search", 5), 2 & n) { const t = e.oxw(); e.Q6J("lobbyType", t.overlayLobbyType) } } function Ac(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-rp-gyml", 13), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("lobbyType", t.overlayLobbyType)("gameContainer", "Overlay")("categoryId", t.overlayCategoryRoute) } } function Gc(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-bottom-navbar", 5), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("lobbyType", t.overlayLobbyType) } } function kc(n, _) { 1 & n && e._UZ(0, "div", 14) } function xc(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 6), e.NdJ("resize", function () { return e.CHM(t), e.oxw().onResize() }, !1, e.Jf7), e._UZ(1, "vn-message-panel", 7), e.YNc(2, Ac, 2, 3, "div", 8), e._UZ(3, "cc-casino-grid-on-lobby-type", 9), e.YNc(4, Gc, 2, 1, "div", 10), e.YNc(5, kc, 1, 0, "ng-template", null, 11, e.W1O), e.TgZ(7, "button", 12), e.NdJ("click", function () { return e.CHM(t), e.oxw().goToCasinoHome() }), e._uU(8), e.qZA()() } if (2 & n) { const t = e.MAs(6), a = e.oxw(); e.xp6(1), e.Q6J("scope", "casinocorelobby"), e.xp6(1), e.Q6J("ngIf", !a.rpPositionLmtKey), e.xp6(1), e.Q6J("lobbyType", a.overlayLobbyType)("categoryRoute", a.overlayCategoryRoute)("gameContainer", "Overlay"), e.xp6(1), e.Q6J("ngIf", !a.hideBottomNav)("ngIfElse", t), e.xp6(4), e.hij(" ", a.gamingHomeBtnText, " ") } } function Rc(n, _) { 1 & n && e._UZ(0, "div", 10) } const pt = function () { return {} }, wc = function () { return [] }; function Uc(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "cc-game-quick-info", 11), e.NdJ("hide", function () { return e.CHM(t), e.oxw().hideQuickInfo() }), e.qZA() } if (2 & n) { const t = e.oxw(); e.Q6J("game", t.bingoItem)("gamePosition", t.gamePosition)("icon", t.quickInfoIcon)("quickInfoScrollY", t.quickInfoScrollY)("gameLaunchedFrom", t.gameLaunchedFrom)("gridPosition", 1)("gameModel", t.bingoItem)("isLiveGame", !1)("widgetFrameClr", t.widgetFrameClr)("gameContainerLocation", t.gameContainerLocation)("liveGameInfo", e.DdM(15, pt))("product", t.product)("stickersArray", e.DdM(16, wc))("thumbImageSrc", t.thumbImageSrc)("lobbyType", t.lobbyType) } } function Fc(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 12), e.NdJ("click", function (l) { return e.CHM(t), e.oxw().displayQuickInfo(l) }), e._uU(1), e.qZA() } if (2 & n) { const t = e.oxw(); e.xp6(1), e.hij(" ", t.moreInfo, " ") } } const Bc = function (n, _) { return { "casino-new-styling-overlay": n, "casino-quick-info-active": _ } }, Wc = function (n) { return { "game-name-safari": n } }; function Nc(n, _) { if (1 & n && e._UZ(0, "cc-cozybingo-game-info", 2), 2 & n) { const t = e.oxw(); e.Q6J("bingoItem", t.roomInfo)("featureConfigs", t.featureConfigs)("globalMessages", t.globalMessages)("categoryList", t.categoryList)("gamePosition", t.gamePosition)("gameLaunchedFrom", t.gameLaunchedFrom)("product", t.product)("lobbyType", t.lobbyType)("widgetFrameClr", t.widgetFrameClr) } } const uo = function (n) { return { "casino-no-games-box-touch-1350": n } }, ho = function (n, _, t) { return { "margin-top": n, "border-color": _, color: t } }; function Kc(n, _) { if (1 & n && (e.TgZ(0, "div", 12)(1, "span"), e._uU(2), e.qZA()()), 2 & n) { const t = e.oxw(3); e.Q6J("ngClass", e.VKq(3, uo, t.isTouch))("ngStyle", e.kEZ(5, ho, t.isTouch ? "0" : "20px", t.WidgetFrameClr, t.WidgetDefaultMsgTxtColor)), e.xp6(2), e.hij(" ", t.noRecentGamesIcon, " ") } } function Jc(n, _) { if (1 & n && e._UZ(0, "cc-cozy-bingo-game", 16), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(3); e.Q6J("roomInfo", a)("gamePosition", l)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetRP")("lobbyType", g.lobbyType)("widgetFrameClr", g.WidgetBackgroundClr) } } function Yc(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 17), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(3); e.ekj("casino-recentlyPromo", a.isRecentlyPlayed), e.MGl("id", "gameIdentifier_rpfavWidget_rcp_gyml_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("game", a)("gamePosition", l)("category", g.recentCategory)("widgetFrameClr", g.WidgetBackgroundClr)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetRP") } } function Zc(n, _) { if (1 & n && (e.TgZ(0, "div", 13), e.YNc(1, Jc, 1, 6, "cc-cozy-bingo-game", 14), e.YNc(2, Yc, 1, 10, "cc-game-lobby", 15), e.qZA()), 2 & n) { const t = _.$implicit, a = e.oxw(3); e.Q6J("hidden", !t.isRecentlyPlayed), e.xp6(1), e.Q6J("ngIf", t.fromCozybingo), e.xp6(1), e.Q6J("ngIf", !t.fromCozybingo && !t.isDataNotAvailable && a.recentCategory) } } function Hc(n, _) { if (1 & n && (e.TgZ(0, "div", 9)(1, "div"), e.YNc(2, Kc, 3, 9, "div", 10), e.YNc(3, Zc, 3, 3, "div", 11), e.qZA()()), 2 & n) { const t = e.oxw(2); e.xp6(2), e.Q6J("ngIf", t.zeroRecentGames), e.xp6(1), e.Q6J("ngForOf", t.unfinishedRPANDGYMLGames)("ngForTrackBy", t.trackGame) } } function Qc(n, _) { if (1 & n && (e.TgZ(0, "div", 12)(1, "span"), e._uU(2), e.qZA()()), 2 & n) { const t = e.oxw(3); e.Q6J("ngClass", e.VKq(3, uo, t.isTouch))("ngStyle", e.kEZ(5, ho, t.isTouch ? "0" : "20px", t.WidgetFrameClr, t.WidgetDefaultMsgTxtColor)), e.xp6(2), e.hij(" ", t.noRecentGamesIcon, " ") } } function zc(n, _) { if (1 & n && e._UZ(0, "cc-cozy-bingo-game", 16), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(3); e.Q6J("roomInfo", a)("gamePosition", l)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetRP")("lobbyType", g.lobbyType)("widgetFrameClr", g.WidgetBackgroundClr) } } function jc(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 17), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(3); e.ekj("casino-recentlyPromo", a.isRecentlyPlayed), e.MGl("id", "gameIdentifier_rpfavWidget_rcp_gyml_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("game", a)("gamePosition", l)("category", g.gymlCategory)("widgetFrameClr", g.WidgetBackgroundClr)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetRP") } } const Dn = function (n) { return { bottom: n } }; function qc(n, _) { if (1 & n && (e.TgZ(0, "div", 20)(1, "div", 21), e.YNc(2, zc, 1, 6, "cc-cozy-bingo-game", 14), e.YNc(3, jc, 1, 10, "cc-game-lobby", 22), e.qZA()()), 2 & n) { const t = _.$implicit, a = e.oxw(3); e.xp6(1), e.Q6J("ngClass", a.assignRecommendedWidgetColors(t))("ngStyle", e.VKq(4, Dn, a.isTouch ? "2" : "0")), e.xp6(1), e.Q6J("ngIf", t.fromCozybingo), e.xp6(1), e.Q6J("ngIf", !t.fromCozybingo && !t.isDataNotAvailable && a.gymlCategory) } } function Vc(n, _) { if (1 & n && (e.TgZ(0, "div", 18)(1, "div"), e.YNc(2, Qc, 3, 9, "div", 10), e.YNc(3, qc, 4, 6, "div", 19), e.qZA()()), 2 & n) { const t = e.oxw(2); e.xp6(2), e.Q6J("ngIf", t.zeroRecentGames), e.xp6(1), e.Q6J("ngForOf", t.unfinishedRPANDGYMLGames)("ngForTrackBy", t.trackGame) } } function Xc(n, _) { if (1 & n && (e.TgZ(0, "div", 4)(1, "div", 5)(2, "div", 6), e.YNc(3, Hc, 4, 3, "div", 7), e.YNc(4, Vc, 4, 3, "div", 8), e.qZA()()()), 2 & n) { const t = e.oxw(); e.Q6J("ngClass", e.VKq(5, oo, t.staticGYML)), e.xp6(1), e.ekj("casino-base-category-nontouch", !t.isTouch), e.xp6(2), e.Q6J("ngIf", t.recentCategory && !t.gymlCategory), e.xp6(1), e.Q6J("ngIf", t.recentCategory && t.gymlCategory) } } const _a = function (n, _) { return { "border-color": n, color: _ } }; function $c(n, _) { if (1 & n && (e.TgZ(0, "div", 29)(1, "span"), e._uU(2), e.qZA()()), 2 & n) { const t = e.oxw(2); e.Q6J("ngStyle", e.WLB(2, _a, t.WidgetFrameClr, t.WidgetDefaultMsgTxtColor)), e.xp6(2), e.hij(" ", t.noRecentGamesIcon, " ") } } function el(n, _) { if (1 & n && e._UZ(0, "cc-cozy-bingo-game", 16), 2 & n) { const t = e.oxw(2), a = t.$implicit, l = t.index, g = e.oxw(2); e.Q6J("roomInfo", a)("gamePosition", l)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetRP")("lobbyType", g.lobbyType)("widgetFrameClr", g.WidgetBackgroundClr) } } function tl(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 33), 2 & n) { const t = e.oxw(2), a = t.$implicit, l = t.index, g = e.oxw(2); e.ekj("casino-recentlyPromo", a.isRecentlyPlayed), e.MGl("id", "gameIdentifier_rpfavWidget_rcp_gyml_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("game", a)("gamePosition", l)("widgetFrameClr", g.WidgetBackgroundClr)("category", g.recentCategory)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetRP") } } function il(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 17), 2 & n) { const t = e.oxw(2), a = t.$implicit, l = t.index, g = e.oxw(2); e.ekj("casino-recentlyPromo", a.isRecentlyPlayed), e.MGl("id", "gameIdentifier_rpfavWidget_rcp_gyml_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("game", a)("gamePosition", l)("category", g.gymlCategory)("widgetFrameClr", g.WidgetBackgroundClr)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetRP") } } function ol(n, _) { if (1 & n && (e.TgZ(0, "div", 31)(1, "div", 4), e.YNc(2, el, 1, 6, "cc-cozy-bingo-game", 14), e.YNc(3, tl, 1, 10, "cc-game-lobby", 32), e.YNc(4, il, 1, 10, "cc-game-lobby", 22), e.qZA()()), 2 & n) { const t = e.oxw().$implicit, a = e.oxw(2); e.xp6(1), e.Q6J("ngClass", a.assignRecommendedWidgetColors(t)), e.xp6(1), e.Q6J("ngIf", t.fromCozybingo), e.xp6(1), e.Q6J("ngIf", !t.fromCozybingo && !t.isDataNotAvailable && t.isRecentlyPlayed), e.xp6(1), e.Q6J("ngIf", !t.fromCozybingo && !t.isDataNotAvailable && !t.isRecentlyPlayed) } } function nl(n, _) { 1 & n && e.YNc(0, ol, 5, 4, "ng-template", 30) } const al = function (n) { return { "rp-gyml-zeroRecentGames": n } }; function sl(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div")(1, "div", 5), e.YNc(2, $c, 3, 5, "div", 23), e.TgZ(3, "div", 4)(4, "swiper", 24, 25), e.NdJ("slideChange", function (l) { return e.CHM(t), e.oxw().onIndexChanged(l) }), e.YNc(6, nl, 1, 0, null, 26), e.qZA()(), e.TgZ(7, "button", 27), e.NdJ("click", function () { return e.CHM(t), e.oxw().goToPrevSlide() }), e.qZA(), e.TgZ(8, "button", 28), e.NdJ("click", function () { return e.CHM(t), e.oxw().goToNextSlide() }), e.qZA()()() } if (2 & n) { const t = e.oxw(); e.xp6(1), e.ekj("casino-base-category-nontouch", !t.isTouch), e.xp6(1), e.Q6J("ngIf", t.zeroRecentGames), e.xp6(1), e.Q6J("ngClass", e.VKq(11, al, t.zeroRecentGames)), e.xp6(1), e.Q6J("loop", !1)("autoplay", !1)("slidesPerView", t.elms)("slidesPerGroup", 6), e.xp6(2), e.Q6J("ngForOf", t.unfinishedRPANDGYMLGames), e.xp6(1), e.Q6J("hidden", t.hidePreButton), e.xp6(1), e.Q6J("hidden", t.hideNextButton) } } const rl = ["favouriteGYMLCarousel"]; function cl(n, _) { if (1 & n && (e.TgZ(0, "div", 12)(1, "span"), e._uU(2), e.qZA()()), 2 & n) { const t = e.oxw(3); e.Q6J("ngClass", e.VKq(3, uo, t.isTouch))("ngStyle", e.kEZ(5, ho, t.isTouch ? "0" : "20px", t.WidgetFrameClr, t.WidgetDefaultMsgTxtColor)), e.xp6(2), e.hij(" ", t.noFavouritesIcon, " ") } } function ll(n, _) { if (1 & n && e._UZ(0, "cc-cozy-bingo-game", 17), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(3); e.Q6J("roomInfo", a)("gamePosition", l)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetFAV")("lobbyType", g.lobbyType)("widgetFrameClr", g.WidgetBackgroundClr) } } function _l(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 18), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(3); e.ekj("casino-recentlyPromo", a.isFavourite), e.MGl("id", "gameIdentifier_rpfavWidget_fav_gyml_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("game", a)("gamePosition", l)("category", g.favouriteCategory)("widgetFrameClr", g.WidgetBackgroundClr)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetFAV") } } function gl(n, _) { if (1 & n && (e.TgZ(0, "div", 13)(1, "div", 14), e.YNc(2, ll, 1, 6, "cc-cozy-bingo-game", 15), e.YNc(3, _l, 1, 10, "cc-game-lobby", 16), e.qZA()()), 2 & n) { const t = _.$implicit, a = e.oxw(3); e.Q6J("hidden", !t.isFavourite), e.xp6(1), e.Q6J("ngClass", a.assignRecommendedWidgetColors(t))("ngStyle", e.VKq(5, Dn, a.isTouch ? "2" : "0")), e.xp6(1), e.Q6J("ngIf", t.fromCozybingo), e.xp6(1), e.Q6J("ngIf", !t.fromCozybingo && !t.isDataNotAvailable && a.favouriteCategory) } } function dl(n, _) { if (1 & n && (e.TgZ(0, "div", 9)(1, "div"), e.YNc(2, cl, 3, 9, "div", 10), e.YNc(3, gl, 4, 7, "div", 11), e.qZA()()), 2 & n) { const t = e.oxw(2); e.xp6(2), e.Q6J("ngIf", t.zeroFavourite), e.xp6(1), e.Q6J("ngForOf", t.unfinishedFavANDGYMLGames) } } function ul(n, _) { if (1 & n && (e.TgZ(0, "div", 12)(1, "span"), e._uU(2), e.qZA()()), 2 & n) { const t = e.oxw(3); e.Q6J("ngClass", e.VKq(3, uo, t.isTouch))("ngStyle", e.kEZ(5, ho, t.isTouch ? "0" : "20px", t.WidgetFrameClr, t.WidgetDefaultMsgTxtColor)), e.xp6(2), e.hij(" ", t.noFavouritesIcon, " ") } } function hl(n, _) { if (1 & n && e._UZ(0, "cc-cozy-bingo-game", 17), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(3); e.Q6J("roomInfo", a)("gamePosition", l)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetFAV")("lobbyType", g.lobbyType)("widgetFrameClr", g.WidgetBackgroundClr) } } function ml(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 23), 2 & n) { const t = e.oxw(), a = t.$implicit, l = t.index, g = e.oxw(3); e.ekj("casino-recentlyPromo", a.isFavourite), e.MGl("id", "gameIdentifier_rpfavWidget_fav_gyml_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("widgetFrameClr", g.WidgetBackgroundClr)("game", a)("gamePosition", l)("category", g.gymlCategory)("gameLaunchedFrom", g.gameLaunchedFromLoc) } } function pl(n, _) { if (1 & n && (e.TgZ(0, "div", 21)(1, "div", 14), e.YNc(2, hl, 1, 6, "cc-cozy-bingo-game", 15), e.YNc(3, ml, 1, 9, "cc-game-lobby", 22), e.qZA()()), 2 & n) { const t = _.$implicit, a = e.oxw(3); e.xp6(1), e.Q6J("ngClass", a.assignRecommendedWidgetColors(t))("ngStyle", e.VKq(4, Dn, a.isTouch ? "2" : "0")), e.xp6(1), e.Q6J("ngIf", t.fromCozybingo), e.xp6(1), e.Q6J("ngIf", !t.fromCozybingo && !t.isDataNotAvailable && a.gymlCategory) } } function fl(n, _) { if (1 & n && (e.TgZ(0, "div", 19)(1, "div"), e.YNc(2, ul, 3, 9, "div", 10), e.YNc(3, pl, 4, 6, "div", 20), e.qZA()()), 2 & n) { const t = e.oxw(2); e.xp6(2), e.Q6J("ngIf", t.zeroFavourite), e.xp6(1), e.Q6J("ngForOf", t.unfinishedFavANDGYMLGames) } } function vl(n, _) { if (1 & n && (e.TgZ(0, "div", 4)(1, "div", 5)(2, "div", 6), e.YNc(3, dl, 4, 2, "div", 7), e.YNc(4, fl, 4, 2, "div", 8), e.qZA()()()), 2 & n) { const t = e.oxw(); e.Q6J("ngClass", e.VKq(5, oo, t.staticGYML)), e.xp6(1), e.ekj("casino-base-category-nontouch", !t.isTouch), e.xp6(2), e.Q6J("ngIf", t.favouriteCategory && !t.gymlCategory), e.xp6(1), e.Q6J("ngIf", t.favouriteCategory && t.gymlCategory) } } function yl(n, _) { if (1 & n && (e.TgZ(0, "div", 31)(1, "span"), e._uU(2), e.qZA()()), 2 & n) { const t = e.oxw(2); e.Q6J("ngStyle", e.WLB(2, _a, t.WidgetFrameClr, t.WidgetDefaultMsgTxtColor)), e.xp6(2), e.hij(" ", t.noFavouritesIcon, " ") } } function bl(n, _) { if (1 & n && e._UZ(0, "cc-cozy-bingo-game", 17), 2 & n) { const t = e.oxw(2), a = t.$implicit, l = t.index, g = e.oxw(2); e.Q6J("roomInfo", a)("gamePosition", l)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetFAV")("lobbyType", g.lobbyType)("widgetFrameClr", g.WidgetBackgroundClr) } } function Cl(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 36), 2 & n) { const t = e.oxw(2), a = t.$implicit, l = t.index, g = e.oxw(2); e.ekj("casino-recentlyPromo", a.isFavourite), e.MGl("id", "gameIdentifier_rpfavWidget_fav_gyml_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("widgetFrameClr", g.WidgetBackgroundClr)("game", a)("gamePosition", l)("category", g.favouriteCategory)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetFAV") } } function Ml(n, _) { if (1 & n && e._UZ(0, "cc-game-lobby", 18), 2 & n) { const t = e.oxw(2), a = t.$implicit, l = t.index, g = e.oxw(2); e.ekj("casino-recentlyPromo", a.isFavourite), e.MGl("id", "gameIdentifier_rpfavWidget_fav_gyml_", a.gameId, ""), e.Q6J("ngClass", a.infoIconClass)("game", a)("gamePosition", l)("category", g.gymlCategory)("widgetFrameClr", g.WidgetBackgroundClr)("gameLaunchedFrom", g.gameLaunchedFromLoc)("product", "rpWidgetFAV") } } function El(n, _) { if (1 & n && (e.TgZ(0, "div", 33)(1, "div", 4), e.YNc(2, bl, 1, 6, "cc-cozy-bingo-game", 15), e.YNc(3, Cl, 1, 10, "cc-game-lobby", 34), e.YNc(4, Ml, 1, 10, "cc-game-lobby", 35), e.qZA()()), 2 & n) { const t = e.oxw().$implicit, a = e.oxw(2); e.xp6(1), e.Q6J("ngClass", a.assignRecommendedWidgetColors(t)), e.xp6(1), e.Q6J("ngIf", t.fromCozybingo), e.xp6(1), e.Q6J("ngIf", !t.fromCozybingo && !t.isDataNotAvailable && t.isFavourite), e.xp6(1), e.Q6J("ngIf", !t.fromCozybingo && !t.isDataNotAvailable && !t.isFavourite) } } function Tl(n, _) { 1 & n && e.YNc(0, El, 5, 4, "ng-template", 32) } const Pl = function (n) { return { "fav-gyml-zeroFavourite": n } }; function Il(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div")(1, "div", 5), e.YNc(2, yl, 3, 5, "div", 24), e.TgZ(3, "div", 25)(4, "swiper", 26, 27), e.NdJ("slideChange", function (l) { return e.CHM(t), e.oxw().onIndexChanged(l) }), e.YNc(6, Tl, 1, 0, null, 28), e.qZA(), e.TgZ(7, "button", 29), e.NdJ("click", function () { return e.CHM(t), e.oxw().goToPrevSlide() }), e.qZA(), e.TgZ(8, "button", 30), e.NdJ("click", function () { return e.CHM(t), e.oxw().goToNextSlide() }), e.qZA()()()() } if (2 & n) { const t = e.oxw(); e.xp6(1), e.ekj("casino-base-category-nontouch", !t.isTouch), e.xp6(1), e.Q6J("ngIf", t.zeroFavourite), e.xp6(1), e.Q6J("ngClass", e.VKq(11, Pl, t.zeroFavourite)), e.xp6(1), e.Q6J("loop", !1)("autoplay", !1)("slidesPerView", t.elms)("slidesPerGroup", 6), e.xp6(2), e.Q6J("ngForOf", t.unfinishedFavANDGYMLGames), e.xp6(1), e.Q6J("hidden", t.hidePreButton), e.xp6(1), e.Q6J("hidden", t.hideNextButton) } } const Dl = ["favGYMLWidget"], ga = function (n, _) { return { activebtn: n, inactive: _ } }, ot = function (n, _) { return { "background-color": n, color: _ } }, da = function (n) { return { "theme-arrow-up": n } }; function Sl(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "button", 16), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).widgetToggleHandler("rcp") }), e._UZ(1, "div", 17), e.TgZ(2, "span"), e._uU(3), e.qZA(), e._UZ(4, "i", 18), e.qZA() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngClass", e.WLB(5, ga, t.rcpToggle, !t.rcpToggle))("ngStyle", e.WLB(8, ot, t.rcpToggle ? t.rpWidgetActiveBtBackground : t.rpWidgetInactiveBtBackground, t.rcpToggle ? t.rpWidgetActiveTxtcolor : t.rpWidgetInactiveTxtcolor)), e.xp6(1), e.Q6J("ngClass", t.rcpWidgeticon), e.xp6(2), e.Oqu(t.widgetRecentlyPlayed), e.xp6(1), e.Q6J("ngClass", e.VKq(11, da, !t.rcpToggle)) } } function Ll(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "button", 19), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).widgetToggleHandler("fav") }), e._UZ(1, "div", 17), e.TgZ(2, "span"), e._uU(3), e.qZA(), e._UZ(4, "i", 18), e.qZA() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngClass", e.WLB(5, ga, t.favToggle, !t.favToggle))("ngStyle", e.WLB(8, ot, t.favToggle ? t.rpWidgetActiveBtBackground : t.rpWidgetInactiveBtBackground, t.favToggle ? t.rpWidgetActiveTxtcolor : t.rpWidgetInactiveTxtcolor)), e.xp6(1), e.Q6J("ngClass", t.rcpFavWidgeticon), e.xp6(2), e.Oqu(t.widgetFavourites), e.xp6(1), e.Q6J("ngClass", e.VKq(11, da, !t.favToggle)) } } function Ol(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div")(1, "button", 20), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).getContactusUrl() }), e.TgZ(2, "div", 21), e._UZ(3, "img", 22), e.qZA(), e.TgZ(4, "span"), e._uU(5), e.qZA()(), e.TgZ(6, "button", 23), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).getHelpUrl() }), e.TgZ(7, "div", 21), e._UZ(8, "img", 22), e.qZA(), e.TgZ(9, "span"), e._uU(10), e.qZA()()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngStyle", e.WLB(6, ot, t.widgetContactUsBG, t.widgetContactUsClr)), e.xp6(2), e.s9C("src", t.rcpContactUsicon, e.LSH), e.xp6(2), e.Oqu(t.WidgetContactusButton), e.xp6(1), e.Q6J("ngStyle", e.WLB(9, ot, t.widgetHelpBG, t.widgetHelpClr)), e.xp6(2), e.s9C("src", t.rcpHelpicon, e.LSH), e.xp6(2), e.Oqu(t.WidgetHelpButton) } } const Al = function (n, _) { return { bottom: n, "z-index": _ } }, Gl = function (n, _) { return { "rcp-btns": n, sticky: _ } }, kl = function (n, _) { return { display: n, color: _ } }, ua = function (n, _) { return { display: n, "background-color": _ } }; function xl(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 1)(1, "div", 2)(2, "div", 3, 4)(4, "div", 5), e.YNc(5, Sl, 5, 13, "button", 6), e.YNc(6, Ll, 5, 13, "button", 7), e.qZA(), e.TgZ(7, "div", 8), e.YNc(8, Ol, 11, 12, "div", 9), e.TgZ(9, "span", 10), e.NdJ("click", function () { return e.CHM(t), e.oxw().close() }), e.qZA()()(), e.TgZ(10, "div", 11), e._UZ(11, "cc-rcp-gyml-widget", 12), e.qZA(), e.TgZ(12, "div", 13), e._UZ(13, "cc-fav-gyml-widget", 14, 15), e.qZA()()() } if (2 & n) { const t = e.oxw(); e.Q6J("ngStyle", e.WLB(17, Al, 0 == t.isTouch ? "0" : "54px", 1 == t.favToggle || 1 == t.rcpToggle ? "101" : "5")), e.xp6(1), e.Q6J("ngStyle", e.VKq(20, de, t.favToggle || t.rcpToggle ? t.rcpWidgetBackground : t.rcpWidgetBackgroundTrans)), e.xp6(1), e.Q6J("ngClass", e.WLB(22, Gl, t.rcpToggle || t.favToggle, t.IsFloatingEnabledForWidget))("ngStyle", e.VKq(25, te, t.favToggle || t.rcpToggle ? t.rcpWidgetBackground : t.rcpWidgetBackgroundTrans)), e.xp6(3), e.Q6J("ngIf", t.isAuthenticated), e.xp6(1), e.Q6J("ngIf", t.isAuthenticated && t.displayFavInRPFavWidget), e.xp6(2), e.Q6J("ngIf", t.showRcpHelpContactUs), e.xp6(1), e.Q6J("ngStyle", e.WLB(27, kl, 1 == t.favToggle || 1 == t.rcpToggle ? "inline-block" : "none", t.rpWidgetActiveBtBackground)), e.xp6(1), e.Q6J("ngStyle", e.WLB(30, ua, t.rcpToggle ? "block" : "none", t.rcpWidgetBackground)), e.xp6(1), e.Q6J("isTouch", t.isTouch)("lobbyType", t.lobbyType)("gameContainer", t.gameContainer), e.xp6(1), e.Q6J("ngStyle", e.WLB(33, ua, t.favToggle ? "block" : "none", t.rcpWidgetBackground)), e.xp6(1), e.Q6J("isTouch", t.isTouch)("lobbyType", t.lobbyType)("isGymlInFavourite", t.IsGymlInFavourites)("gameContainer", t.gameContainer) } } const Rl = function (n) { return { "rcp-btns": n } }; function wl(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 1)(1, "div", 2)(2, "div", 3, 4)(4, "div", 5)(5, "button", 6), e.NdJ("click", function () { return e.CHM(t), e.oxw().getContactusUrl() }), e.TgZ(6, "div", 7), e._UZ(7, "img", 8), e.qZA(), e.TgZ(8, "span"), e._uU(9), e.qZA()(), e.TgZ(10, "button", 9), e.NdJ("click", function () { return e.CHM(t), e.oxw().getHelpUrl() }), e.TgZ(11, "div", 7), e._UZ(12, "img", 8), e.qZA(), e.TgZ(13, "span"), e._uU(14), e.qZA()()()()()() } if (2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("ngStyle", e.VKq(9, te, t.rcpWidgetBackground)), e.xp6(1), e.Q6J("ngClass", e.VKq(11, Rl, t.rcpToggle))("ngStyle", e.VKq(13, de, 1 == t.rcpToggle ? t.rcpWidgetBackground : "none")), e.xp6(3), e.Q6J("ngStyle", e.WLB(15, ot, t.widgetContactUsBG, t.widgetContactUsClr)), e.xp6(2), e.s9C("src", t.rcpContactUsicon, e.LSH), e.xp6(2), e.Oqu(t.WidgetContactusButton), e.xp6(1), e.Q6J("ngStyle", e.WLB(18, ot, t.widgetHelpBG, t.widgetHelpClr)), e.xp6(2), e.s9C("src", t.rcpHelpicon, e.LSH), e.xp6(2), e.Oqu(t.WidgetHelpButton) } } function Ul(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-rp-fav-widget", 1)(2, "cc-rcp-fav-logout-widget", 2), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("lobbyType", t.lobbyType)("gameContainer", "Widget"), e.xp6(1), e.Q6J("lobbyType", t.lobbyType) } } function Fl(n, _) { if (1 & n && (e.TgZ(0, "div"), e._UZ(1, "cc-rp-gyml", 1), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("lobbyType", t.lobbyType)("gameContainer", t.gameContainer) } } function Bl(n, _) { if (1 & n && (e.TgZ(0, "div", 12), e._UZ(1, "img", 13), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.s9C("src", t.data.src, e.LSH) } } function Wl(n, _) { if (1 & n && (e.TgZ(0, "div", 14), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Oqu(t.data.title) } } function Nl(n, _) { if (1 & n && (e.TgZ(0, "div", 15), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Oqu(t.data.subTitle) } } const Ft = function (n, _) { return { color: n, background: _ } }; function Kl(n, _) { if (1 & n && (e.TgZ(0, "div", 18), e._uU(1), e.qZA()), 2 & n) { const t = _.$implicit, a = e.oxw(3); e.Q6J("ngStyle", e.WLB(2, Ft, a.config.VIPStickerColor, a.config.VIPStickerBackgroundColor)), e.xp6(1), e.hij(" ", t, " ") } } function Jl(n, _) { if (1 & n && (e.TgZ(0, "div", 16), e.YNc(1, Kl, 2, 5, "div", 17), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngForOf", null == t.data.sticker ? null : t.data.sticker.split(",")) } } function Yl(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 1)(1, "div", 2), e.NdJ("click", function () { e.CHM(t); const l = e.oxw(); return l.action(l.game) }), e.YNc(2, Bl, 2, 1, "div", 3), e.TgZ(3, "div", 4), e.YNc(4, Wl, 2, 1, "div", 5), e.YNc(5, Nl, 2, 1, "div", 6), e.YNc(6, Jl, 2, 1, "div", 7), e.qZA(), e.TgZ(7, "div", 8), e._uU(8), e.qZA(), e._UZ(9, "div", 9), e.qZA(), e.TgZ(10, "div", 10)(11, "div", 11), e.NdJ("click", function () { return e.CHM(t), e.oxw().hideThumbnail() }), e.qZA(), e._UZ(12, "div", 9), e.qZA()() } if (2 & n) { const t = e.oxw(); e.Udp("background", t.thumbnailBgColor), e.xp6(2), e.Q6J("ngIf", t.data.src), e.xp6(1), e.Udp("color", t.fontColor), e.xp6(1), e.Q6J("ngIf", t.data.title), e.xp6(1), e.Q6J("ngIf", t.data.subTitle), e.xp6(1), e.Q6J("ngIf", t.data.isVipThumbnail && "" != t.data.sticker), e.xp6(1), e.Udp("color", t.fontColor), e.xp6(1), e.Oqu(t.buttonText), e.xp6(2), e.Udp("color", t.fontColor) } } const Zl = ["deskNav"], Hl = ["mobilenavItems"], Ql = ["fixedtabdev"], zl = ["cssearchcomponent"], jl = ["csSearchDesktop"], ha = function (n) { return { lobbyType: n } }; function ql(n, _) { if (1 & n && (e.TgZ(0, "div", 4), e._UZ(1, "cc-casino-core-lazy-placeholder", 5), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("inputData", e.VKq(2, ha, t.lobbyType))("componentName", "NewsFeedComponent") } } const Vl = function (n) { return { data: n } }; function Xl(n, _) { if (1 & n && (e.TgZ(0, "div", 4), e._UZ(1, "cc-casino-core-lazy-placeholder", 5), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("inputData", e.VKq(2, Vl, t.instaStoriesDataObj))("componentName", "InstagramWrapperComponent") } } function $l(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 25), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).showSearch() }), e.TgZ(1, "a"), e._UZ(2, "div", 26), e.TgZ(3, "div", 27), e._uU(4), e.qZA()()() } if (2 & n) { const t = e.oxw(2); e.xp6(4), e.Oqu(t.searchText) } } function e_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 25), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).goToDefaultPage("showHomeFixedNavigation") }), e.TgZ(1, "a", 28), e._UZ(2, "div", 29), e.TgZ(3, "div", 27), e._uU(4), e.qZA()()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("href", t.mcPageDefaultHomePageUrl, e.LSH), e.xp6(3), e.Oqu(t.defaultPageText) } } function t_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 30), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).goToDefaultPage("fixednavEnabled") }), e.TgZ(1, "a", 28), e._UZ(2, "div", 29), e.TgZ(3, "div", 27), e._uU(4), e.qZA()()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("href", t.mcPageDefaultHomePageUrl, e.LSH), e.xp6(3), e.Oqu(t.defaultPageText) } } function i_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 30), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).goToPromotionPage() }), e.TgZ(1, "a", 28), e._UZ(2, "div", 29), e.TgZ(3, "div", 27), e._uU(4), e.qZA()()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.s9C("href", t.promotionLinkUrl, e.LSH), e.xp6(3), e.Oqu(t.promotionLinkText) } } const ma = function (n) { return { active: n } }; function o_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 34), e.NdJ("click", function () { const g = e.CHM(t).$implicit; return e.oxw(4).goToUrl(g.url) }), e.TgZ(1, "div", 35), e._UZ(2, "div", 36), e.TgZ(3, "div", 27), e._uU(4), e.qZA()()() } if (2 & n) { const t = _.$implicit, a = e.oxw(4); e.Q6J("ngClass", e.VKq(4, ma, a.currentUrl == t.url))("ngStyle", a.enableSubNavigationBgColor ? e.WLB(6, ot, t.iconBackgroundColor, t.iconTextColor) : e.DdM(9, pt)), e.xp6(2), e.Q6J("ngClass", t.cssClass), e.xp6(2), e.Oqu(t.title) } } function n_(n, _) { if (1 & n && (e.ynx(0), e.YNc(1, o_, 5, 10, "li", 33), e.ALo(2, "async"), e.ALo(3, "dsl"), e.BQk()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.Q6J("ngForOf", e.lcZ(2, 1, e.lcZ(3, 3, t.extendTopMenu))) } } function a_(n, _) { if (1 & n && (e.TgZ(0, "span", 46), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3).$implicit; e.xp6(1), e.Oqu(t.signPostingCount > 99 ? 99 : t.signPostingCount) } } function s_(n, _) { if (1 & n && (e.TgZ(0, "span", 47), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(6); e.Q6J("ngStyle", e.WLB(2, Ft, t.badgeColor, t.badgeTextColor)), e.xp6(1), e.Oqu(t.categoryStickerName) } } function r_(n, _) { if (1 & n && e._UZ(0, "span", 48), 2 & n) { const t = e.oxw(6); e.Gre("badge badge-circle badge-offset badge-t-r badge-danger casino-navigation-badge badge-icon ", t.badgeIcon, ""), e.Q6J("ngStyle", e.WLB(4, Ft, t.badgeColor, t.badgeTextColor)) } } const c_ = function (n) { return { thumbnailActive: n } }; function l_(n, _) { if (1 & n && (e.TgZ(0, "span")(1, "div", 41), e.YNc(2, a_, 2, 1, "span", 42), e.YNc(3, s_, 2, 5, "span", 43), e.YNc(4, r_, 1, 7, "span", 44), e.qZA(), e.TgZ(5, "div", 45), e._uU(6), e.qZA()()), 2 & n) { const t = e.oxw(2).$implicit, a = e.oxw(3); e.xp6(1), e.Q6J("ngClass", t.sitecoreData.attributes.icon)("ngStyle", a.enableSubNavigationBgColor ? e.VKq(7, Ze, null == t || null == t.sitecoreData || null == t.sitecoreData.attributes ? null : t.sitecoreData.attributes.icontextcolor) : e.DdM(9, pt)), e.xp6(1), e.Q6J("ngIf", t.signPostingCount > 0 && a.isSignPosting), e.xp6(1), e.Q6J("ngIf", a.discoverFeedLmtkey == t.categoryid && a.displayDiscoverSticker && a.isBadgeTypeText), e.xp6(1), e.Q6J("ngIf", a.discoverFeedLmtkey == t.categoryid && a.displayDiscoverSticker && a.isBadgeTypeIcon), e.xp6(1), e.Q6J("ngClass", e.VKq(10, c_, t.sitecoreData.gameThumbnail)), e.xp6(1), e.hij(" ", t.categoryname, " ") } } function __(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "a", 40), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw().$implicit, p = e.oxw(3); return p.setActiveMobile(g.categoryid), p.categoryTracking(l, g.index, g.categoryid) }), e.YNc(1, l_, 7, 12, "span", 3), e.qZA() } if (2 & n) { const t = e.oxw().$implicit; e.s9C("href", t.url, e.LSH), e.xp6(1), e.Q6J("ngIf", t.isNavigationCategory) } } function g_(n, _) { if (1 & n && (e.TgZ(0, "a", 28)(1, "span", 49), e._UZ(2, "div", 36)(3, "div", 50), e.qZA()()), 2 & n) { const t = e.oxw().$implicit; e.s9C("href", t.url, e.LSH), e.xp6(1), e.s9C("id", t.sitecoreData.categoryId), e.xp6(1), e.Q6J("ngClass", t.sitecoreData.attributes.icon), e.xp6(1), e.Q6J("innerHtml", t.categoryname, e.oJD) } } const d_ = function (n, _, t) { return { active: n, "casino-active-thumnail": _, "from-extended-menu-right": t } }; function u_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 37), e.NdJ("click", function () { const g = e.CHM(t).$implicit; return e.oxw(3).categoryType = g.categoryid }), e.YNc(1, __, 2, 2, "a", 38), e.YNc(2, g_, 4, 4, "a", 39), e.qZA() } if (2 & n) { const t = _.$implicit, a = e.oxw(3); e.s9C("id", t.categoryid), e.Q6J("hidden", a.defaultCategoryType && a.defaultCategoryType.categoryid === t.categoryid && a.hideHomeInSubNav || !t.isNavigationCategory)("ngClass", e.kEZ(6, d_, a.categoryType === t.categoryid || a.currentUrl == t.url && t.fromExtendedMenuRight, t.displayThumbnail && a.displayThumbnailMobile && (a.isDefaultCategory || a.categorySelected.displayThumbnail), t.fromExtendedMenuRight))("ngStyle", a.enableSubNavigationBgColor ? e.WLB(10, ot, null == t || null == t.sitecoreData || null == t.sitecoreData.attributes ? null : t.sitecoreData.attributes.iconbackgroundcolor, null == t || null == t.sitecoreData || null == t.sitecoreData.attributes ? null : t.sitecoreData.attributes.icontextcolor) : e.DdM(13, pt)), e.xp6(1), e.Q6J("ngIf", !t.isExtendedTopMenuItem), e.xp6(1), e.Q6J("ngIf", t.isExtendedTopMenuItem) } } const h_ = function (n) { return { fixedMobileNav: n } }; function m_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "ul", 31), e.NdJ("scroll", function (l) { return e.CHM(t), e.oxw(2).thumbnailScroll(l) }), e.YNc(1, n_, 4, 5, "ng-container", 3), e.YNc(2, u_, 3, 14, "li", 32), e.qZA() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngClass", e.VKq(3, h_, t.enableFixedMobileNavigation)), e.xp6(1), e.Q6J("ngIf", t.extendTopMenuState && !t.extendedTopMenuToRight), e.xp6(1), e.Q6J("ngForOf", t.navItems) } } function p_(n, _) { 1 & n && e._UZ(0, "span", 29) } function f_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 56), e.NdJ("click", function () { return e.CHM(t), e.oxw(3).goToDefaultPage("showHomeFixedNavigation") }), e.TgZ(1, "a", 28), e.YNc(2, p_, 1, 0, "span", 57), e.TgZ(3, "div", 27), e._uU(4), e.qZA()()() } if (2 & n) { const t = e.oxw(3); e.xp6(1), e.Q6J("href", t.mcPageDefaultHomePageUrl, e.LSH), e.xp6(1), e.Q6J("ngIf", t.subNavConfigEnableDesktopIcon), e.xp6(2), e.Oqu(t.defaultPageText) } } function v_(n, _) { 1 & n && e._UZ(0, "span", 29) } function y_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 58), e.NdJ("click", function () { return e.CHM(t), e.oxw(3).goToDefaultPage("fixednavEnabled") }), e.TgZ(1, "a", 28), e.YNc(2, v_, 1, 0, "span", 57), e.TgZ(3, "div", 27), e._uU(4), e.qZA()()() } if (2 & n) { const t = e.oxw(3); e.xp6(1), e.Q6J("href", t.mcPageDefaultHomePageUrl, e.LSH), e.xp6(1), e.Q6J("ngIf", t.subNavConfigEnableDesktopIcon), e.xp6(2), e.Oqu(t.defaultPageText) } } function b_(n, _) { 1 & n && e._UZ(0, "span", 29) } function C_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 58), e.NdJ("click", function () { return e.CHM(t), e.oxw(3).goToPromotionPage() }), e.TgZ(1, "a", 28), e.YNc(2, b_, 1, 0, "span", 57), e.TgZ(3, "div", 27), e._uU(4), e.qZA()()() } if (2 & n) { const t = e.oxw(3); e.xp6(1), e.s9C("href", t.promotionLinkUrl, e.LSH), e.xp6(1), e.Q6J("ngIf", t.subNavConfigEnableDesktopIcon), e.xp6(2), e.Oqu(t.promotionLinkText) } } function M_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 60), e.NdJ("click", function () { const g = e.CHM(t).$implicit; return e.oxw(4).goToUrl(g.url) }), e.TgZ(1, "a", 28), e._UZ(2, "div", 36), e.TgZ(3, "div", 27), e._uU(4), e.qZA()()() } if (2 & n) { const t = _.$implicit, a = e.oxw(4); e.Q6J("ngClass", e.VKq(5, ma, a.currentUrl == t.url))("ngStyle", a.enableSubNavigationBgColor ? e.WLB(7, ot, t.iconBackgroundColor, t.iconTextColor) : e.DdM(10, pt)), e.xp6(1), e.s9C("href", t.url, e.LSH), e.xp6(1), e.Q6J("ngClass", t.cssClass), e.xp6(2), e.Oqu(t.title) } } function E_(n, _) { if (1 & n && (e.ynx(0), e.YNc(1, M_, 5, 11, "li", 59), e.ALo(2, "async"), e.ALo(3, "dsl"), e.BQk()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.Q6J("ngForOf", e.lcZ(2, 1, e.lcZ(3, 3, t.extendTopMenu))) } } function T_(n, _) { if (1 & n && (e.TgZ(0, "div", 51, 52)(2, "ul", 53), e.YNc(3, f_, 5, 3, "li", 54), e.YNc(4, y_, 5, 3, "li", 55), e.YNc(5, C_, 5, 3, "li", 55), e.YNc(6, E_, 4, 5, "ng-container", 3), e.qZA()()), 2 & n) { const t = e.oxw(2); e.xp6(3), e.Q6J("ngIf", t.showHomeFixedNavigation), e.xp6(1), e.Q6J("ngIf", t.fixednavEnabled && t.showHomeInTopNavigation), e.xp6(1), e.Q6J("ngIf", t.isPromotionPagesEnabled), e.xp6(1), e.Q6J("ngIf", t.extendTopMenuState && !t.extendedTopMenuToRight) } } function P_(n, _) { if (1 & n && (e.TgZ(0, "span", 46), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw().$implicit; e.xp6(1), e.Oqu(t.signPostingCount > 99 ? 99 : t.signPostingCount) } } function I_(n, _) { if (1 & n && (e.TgZ(0, "span", 47), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(3); e.Q6J("ngStyle", e.WLB(2, Ft, t.badgeColor, t.badgeTextColor)), e.xp6(1), e.Oqu(t.categoryStickerName) } } function D_(n, _) { if (1 & n && e._UZ(0, "span", 48), 2 & n) { const t = e.oxw(3); e.Gre("badge badge-circle badge-offset badge-t-r badge-danger casino-navigation-badge badge-icon ", t.badgeIcon, ""), e.Q6J("ngStyle", e.WLB(4, Ft, t.badgeColor, t.badgeTextColor)) } } function S_(n, _) { if (1 & n && e._UZ(0, "span", 41), 2 & n) { const t = e.oxw(2).$implicit, a = e.oxw(2); e.Q6J("ngClass", t.sitecoreData.attributes.icon)("ngStyle", a.enableSubNavigationBgColor ? e.VKq(2, Ze, null == t || null == t.sitecoreData || null == t.sitecoreData.attributes ? null : t.sitecoreData.attributes.icontextcolor) : e.DdM(4, pt)) } } function L_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "a", 40), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw().$implicit; return e.oxw(2).categoryTracking(l, g.index, g.sitecoreData.categoryId) }), e.TgZ(1, "span"), e.YNc(2, S_, 1, 5, "span", 63), e.TgZ(3, "div", 27), e._uU(4), e.qZA()()() } if (2 & n) { const t = e.oxw().$implicit, a = e.oxw(2); e.s9C("href", t.url, e.LSH), e.xp6(2), e.Q6J("ngIf", a.subNavConfigEnableDesktopIcon), e.xp6(2), e.hij(" ", t.categoryname, " ") } } function O_(n, _) { if (1 & n && e._UZ(0, "span", 41), 2 & n) { const t = e.oxw(2).$implicit, a = e.oxw(2); e.Q6J("ngClass", t.sitecoreData.attributes.icon)("ngStyle", a.enableSubNavigationBgColor ? e.VKq(2, Ze, null == t || null == t.sitecoreData || null == t.sitecoreData.attributes ? null : t.sitecoreData.attributes.icontextcolor) : e.DdM(4, pt)) } } function A_(n, _) { if (1 & n && (e.TgZ(0, "a", 28)(1, "span"), e.YNc(2, O_, 1, 5, "span", 63), e._UZ(3, "div", 50), e.qZA()()), 2 & n) { const t = e.oxw().$implicit, a = e.oxw(2); e.s9C("href", t.url, e.LSH), e.xp6(2), e.Q6J("ngIf", a.subNavConfigEnableDesktopIcon), e.xp6(1), e.Q6J("innerHtml", t.categoryname, e.oJD) } } function G_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 64), e._UZ(1, "div", 65), e.TgZ(2, "cc-thumbnail-newgame", 66), e.NdJ("closeThumbnail", function (l) { return e.CHM(t), e.oxw(3).closeThumbnailBox(l) }), e.qZA()() } if (2 & n) { const t = e.oxw().$implicit, a = e.oxw(2); e.xp6(1), e.Q6J("ngStyle", a.thumbnailArrowColor(t)), e.xp6(1), e.Q6J("category", t)("place", "Sub Navigation")("lobbyType", a.lobbyType)("isTouch", a.isTouch) } } const k_ = function (n, _, t) { return { "casino-active-thumbnail-desktop": n, "from-extended-menu-right": _, active: t } }; function x_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 61), e.NdJ("click", function () { const g = e.CHM(t).$implicit; return e.oxw(2).categoryType = g.categoryid })("mouseenter", function () { return e.CHM(t), e.oxw(2).moreHover(!0) }), e.YNc(1, P_, 2, 1, "span", 42), e.YNc(2, I_, 2, 5, "span", 43), e.YNc(3, D_, 1, 7, "span", 44), e.YNc(4, L_, 5, 3, "a", 38), e.YNc(5, A_, 4, 3, "a", 39), e.YNc(6, G_, 3, 5, "div", 62), e.qZA() } if (2 & n) { const t = _.$implicit, a = e.oxw(2); e.s9C("id", t.categoryid), e.Q6J("hidden", !t.isNavigationCategory)("ngClass", e.kEZ(10, k_, t.displayThumbnail && a.displayThumbnailDesktop, t.fromExtendedMenuRight, a.currentUrl == t.url && t.fromExtendedMenuRight))("ngStyle", a.enableSubNavigationBgColor ? e.WLB(14, ot, null == t || null == t.sitecoreData || null == t.sitecoreData.attributes ? null : t.sitecoreData.attributes.iconbackgroundcolor, null == t || null == t.sitecoreData || null == t.sitecoreData.attributes ? null : t.sitecoreData.attributes.icontextcolor) : e.DdM(17, pt)), e.xp6(1), e.Q6J("ngIf", t.signPostingCount > 0 && a.isSignPosting), e.xp6(1), e.Q6J("ngIf", a.discoverFeedLmtkey == t.categoryid && a.displayDiscoverSticker && a.isBadgeTypeText), e.xp6(1), e.Q6J("ngIf", a.discoverFeedLmtkey == t.categoryid && a.displayDiscoverSticker && a.isBadgeTypeIcon), e.xp6(1), e.Q6J("ngIf", t && t.sitecoreData && !t.isExtendedTopMenuItem), e.xp6(1), e.Q6J("ngIf", t.isExtendedTopMenuItem), e.xp6(1), e.Q6J("ngIf", t.displayThumbnail && a.displayThumbnailDesktop) } } function R_(n, _) { if (1 & n && e._UZ(0, "span", 70), 2 & n) { const t = e.oxw(3); e.Q6J("ngClass", t.moreIcon) } } const w_ = function (n, _, t) { return { "active-more": n, "more-border-remove": _, "subnav-more-shadow": t } }; function U_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 67), e.NdJ("mouseenter", function () { return e.CHM(t), e.oxw(2).moreHover(!1) })("click", function (l) { return e.CHM(t), e.oxw(2).moreClick(l) })("mouseleave", function () { return e.CHM(t), e.oxw(2).moreMouseLeave() }), e.TgZ(1, "span"), e.YNc(2, R_, 1, 1, "span", 68), e._UZ(3, "cc-global-translate", 69), e.qZA()() } if (2 & n) { const t = e.oxw(2); e.Q6J("ngClass", e.kEZ(3, w_, t.isMoreActive, t.hideMore, t.enableSubNavigationBgColor)), e.xp6(2), e.Q6J("ngIf", t.subNavConfigEnableDesktopIcon), e.xp6(1), e.Q6J("key", "More") } } function F_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 73), e._UZ(1, "div", 65), e.TgZ(2, "cc-thumbnail-newgame", 74), e.NdJ("closeThumbnail", function (l) { return e.CHM(t), e.oxw(4).closeThumbnailBox(l) }), e.qZA()() } if (2 & n) { const t = e.oxw().$implicit, a = e.oxw(3); e.xp6(1), e.Q6J("ngStyle", a.thumbnailArrowColor(t)), e.xp6(1), e.Q6J("category", t)("lobbyType", a.lobbyType)("isTouch", a.isTouch)("place", "Sub Navigation") } } function B_(n, _) { if (1 & n && (e.TgZ(0, "div"), e.YNc(1, F_, 3, 5, "div", 72), e.qZA()), 2 & n) { const t = _.$implicit, a = e.oxw(3); e.xp6(1), e.Q6J("ngIf", t.displayThumbnail && a.displayThumbnailDesktop) } } function W_(n, _) { if (1 & n && (e.ynx(0), e.YNc(1, B_, 2, 1, "div", 71), e.BQk()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngForOf", t.moreCategories) } } function N_(n, _) { if (1 & n && (e.TgZ(0, "span", 46), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(2).$implicit; e.xp6(1), e.Oqu(t.signPostingCount > 99 ? 99 : t.signPostingCount) } } function K_(n, _) { if (1 & n && (e.TgZ(0, "span", 47), e._uU(1), e.qZA()), 2 & n) { const t = e.oxw(4); e.Q6J("ngStyle", e.WLB(2, Ft, t.badgeColor, t.badgeTextColor)), e.xp6(1), e.Oqu(t.categoryStickerName) } } function J_(n, _) { if (1 & n && e._UZ(0, "span", 48), 2 & n) { const t = e.oxw(4); e.Gre("badge badge-circle badge-offset badge-t-r badge-danger casino-navigation-badge badge-icon ", t.badgeIcon, ""), e.Q6J("ngStyle", e.WLB(4, Ft, t.badgeColor, t.badgeTextColor)) } } function Y_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "a", 40), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw().$implicit; return e.oxw(2).categoryTracking(l, g.index, g.categoryid, !0) }), e.TgZ(1, "div"), e._uU(2), e.YNc(3, N_, 2, 1, "span", 42), e.YNc(4, K_, 2, 5, "span", 43), e.YNc(5, J_, 1, 7, "span", 44), e.qZA()() } if (2 & n) { const t = e.oxw().$implicit, a = e.oxw(2); e.s9C("href", t.url, e.LSH), e.xp6(2), e.hij(" ", t.categoryname, " "), e.xp6(1), e.Q6J("ngIf", t.signPostingCount > 0 && a.isSignPosting), e.xp6(1), e.Q6J("ngIf", a.discoverFeedLmtkey == t.categoryid && a.displayDiscoverSticker && a.isBadgeTypeText), e.xp6(1), e.Q6J("ngIf", a.discoverFeedLmtkey == t.categoryid && a.displayDiscoverSticker && a.isBadgeTypeIcon) } } function Z_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "a", 40), e.NdJ("click", function (l) { e.CHM(t); const g = e.oxw().$implicit; return e.oxw(2).categoryTracking(l, g.index, g.categoryid, !0) }), e.TgZ(1, "div"), e._uU(2), e.qZA()() } if (2 & n) { const t = e.oxw().$implicit; e.s9C("href", t.url, e.LSH), e.xp6(2), e.hij(" ", t.categoryname, " ") } } function H_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 75), e.NdJ("click", function () { const g = e.CHM(t).$implicit; return e.oxw(2).categoryType = g.categoryid }), e.YNc(1, Y_, 6, 5, "a", 38), e.YNc(2, Z_, 3, 2, "a", 38), e.qZA() } if (2 & n) { const t = _.$implicit, a = _.index, l = e.oxw(2); e.s9C("id", t.categoryid), e.Q6J("value", a)("ngStyle", l.enableSubNavigationBgColor ? e.WLB(5, ot, null == t || null == t.sitecoreData || null == t.sitecoreData.attributes ? null : t.sitecoreData.attributes.iconbackgroundcolor, null == t || null == t.sitecoreData || null == t.sitecoreData.attributes ? null : t.sitecoreData.attributes.icontextcolor) : e.DdM(8, pt)), e.xp6(1), e.Q6J("ngIf", !t.isExtendedTopMenuItem), e.xp6(1), e.Q6J("ngIf", t.isExtendedTopMenuItem) } } function Q_(n, _) { if (1 & n && (e.TgZ(0, "div", 76, 77), e._UZ(2, "cc-search-desktop", 78, 79), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(2), e.Q6J("isTouch", t.isTouch)("placeholder", "navigation")("lobbyType", t.lobbyType)("categoryRoute", t.categoryRoute) } } const z_ = function (n, _, t) { return { sbopen: n, sbclose: _, "enabled-desktop-icons": t } }; function j_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "nav", 6), e.NdJ("resize", function () { return e.CHM(t), e.oxw().onResize() }, !1, e.Jf7), e.TgZ(1, "div", 7)(2, "div", 8)(3, "div", 9)(4, "ul", 10), e.YNc(5, $l, 5, 1, "li", 11), e.YNc(6, e_, 5, 2, "li", 11), e.YNc(7, t_, 5, 2, "li", 12), e.YNc(8, i_, 5, 2, "li", 12), e.qZA()(), e.TgZ(9, "div", null, 13), e.YNc(11, m_, 3, 5, "ul", 14), e.qZA()()(), e.TgZ(12, "div", 15)(13, "div", 8), e.YNc(14, T_, 7, 4, "div", 16), e.TgZ(15, "div", 17, 18)(17, "ul", 19), e.ynx(18), e.YNc(19, x_, 7, 18, "li", 20), e.YNc(20, U_, 4, 7, "li", 21), e.BQk(), e.YNc(21, W_, 2, 1, "ng-container", 3), e.qZA(), e.TgZ(22, "ul", 22), e.NdJ("mouseleave", function () { return e.CHM(t), e.oxw().moreHover(!0) })("mouseenter", function () { return e.CHM(t), e.oxw().overlayMouseEnter() }), e.YNc(23, H_, 3, 9, "li", 23), e.qZA()(), e.YNc(24, Q_, 4, 4, "div", 24), e.qZA()()() } if (2 & n) { const t = e.oxw(); e.Q6J("ngClass", e.kEZ(14, z_, t.smartBannerOpened, !t.smartBannerOpened || !t.smartBannersExists, t.subNavConfigEnableDesktopIcon)), e.xp6(5), e.Q6J("ngIf", t.showSearchInTopNavigation), e.xp6(1), e.Q6J("ngIf", t.showHomeFixedNavigation), e.xp6(1), e.Q6J("ngIf", t.fixednavEnabled && t.showHomeInTopNavigation), e.xp6(1), e.Q6J("ngIf", t.isPromotionPagesEnabled), e.xp6(3), e.Q6J("ngIf", t.defaultCategoryType || t.ForceMobileNav), e.xp6(3), e.Q6J("ngIf", t.showHomeFixedNavigation || t.fixednavEnabled && t.showHomeInTopNavigation || t.isPromotionPagesEnabled || t.extendTopMenuState && !t.extendedTopMenuToRight), e.xp6(1), e.Q6J("ngClass", t.moreclassVariable), e.xp6(4), e.Q6J("ngForOf", t.myNavCategories), e.xp6(1), e.Q6J("ngIf", t.moreCategories.length > 0), e.xp6(1), e.Q6J("ngIf", t.moreCategories), e.xp6(1), e.Q6J("hidden", t.hideMore || !(t.moreCategories.length > 0)), e.xp6(1), e.Q6J("ngForOf", t.moreCategories), e.xp6(1), e.Q6J("ngIf", !t.isTouch) } } function q_(n, _) { if (1 & n && e._UZ(0, "cc-casino-core-lazy-placeholder", 5), 2 & n) { const t = e.oxw(); e.Q6J("inputData", e.VKq(2, ha, t.lobbyType))("componentName", "NewsFeedComponent") } } function V_(n, _) { if (1 & n && e._UZ(0, "div", 84), 2 & n) { const t = e.oxw(4); e.Udp("left", t.arrowPosition, "px") } } function X_(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div")(1, "div", 82), e.YNc(2, V_, 1, 2, "div", 83), e.TgZ(3, "cc-thumbnail-newgame", 66), e.NdJ("closeThumbnail", function (l) { return e.CHM(t), e.oxw(3).closeThumbnailBox(l) }), e.qZA()()() } if (2 & n) { const t = e.oxw().$implicit, a = e.oxw(2); e.xp6(1), e.ekj("thumbnailAnimate", a.thumbnailVisible), e.xp6(1), e.Q6J("ngIf", a.displayThumbnailMobile), e.xp6(1), e.Q6J("category", t)("place", "Sub Navigation")("lobbyType", a.lobbyType)("isTouch", a.isTouch) } } function $_(n, _) { if (1 & n && (e.TgZ(0, "div", 81), e.YNc(1, X_, 4, 7, "div", 3), e.qZA()), 2 & n) { const t = _.$implicit, a = e.oxw(2); e.xp6(1), e.Q6J("ngIf", t.displayThumbnail && a.displayThumbnailMobile && (a.isDefaultCategory || a.categorySelected.displayThumbnail)) } } function eg(n, _) { if (1 & n && (e.TgZ(0, "div"), e.YNc(1, $_, 2, 1, "div", 80), e.qZA()), 2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("ngForOf", t.navItems) } } function tg(n, _) { if (1 & n && (e.TgZ(0, "cc-navigation-bar", 1), e._uU(1, "< /cc-navigation-bar>"), e.qZA()), 2 & n) { const t = e.oxw(); e.Q6J("lobbyType", t.lobbyType)("categoryRoute", t.categoryRoute)("lobbyProduct", t.lobbyProduct)("productOverride", t.productOverride)("stickyInputQueryElement", t.stickyInputQueryElement) } } function ig(n, _) { if (1 & n && e._UZ(0, "cc-sign-posting", 13), 2 & n) { const t = e.oxw(5); e.Q6J("category", t.selectedCategory)("isDisplayBadge", !1) } } const og = function (n, _, t) { return { "font-size": n, color: _, "font-family": t } }; function ng(n, _) { if (1 & n && (e.TgZ(0, "span", 11), e._uU(1), e.YNc(2, ig, 1, 2, "cc-sign-posting", 12), e.qZA()), 2 & n) { const t = e.oxw(4); e.Q6J("ngStyle", e.kEZ(3, og, t.subCategoryTitleFontSize, t.subCategoryTextColor, t.lobbyTileFontFamily)), e.xp6(1), e.hij("", t.displayTitle, " "), e.xp6(1), e.Q6J("ngIf", t.isSignPosting) } } function ag(n, _) { if (1 & n && e._UZ(0, "cc-categoryicon-subtitle", 14), 2 & n) { const t = e.oxw(4); e.Q6J("title", t.title)("displayHeading", t.displayHeader)("subCategory", t.selectedCategory)("recentAndGyml", "NotRecentAndGyml")("alignIconRight", t.alignIconRight)("lobbyType", t.lobbyType) } } function sg(n, _) { 1 & n && e._UZ(0, "span", 15) } const rg = function (n) { return { "casino-signposting-id": n } }; function cg(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 7), e.NdJ("click", function (l) { return e.CHM(t), e.oxw(3).subNavigationMenuInteraction(l) }), e.YNc(1, ng, 3, 7, "span", 8), e.YNc(2, ag, 1, 6, "cc-categoryicon-subtitle", 9), e.YNc(3, sg, 1, 0, "span", 10), e.qZA() } if (2 & n) { const t = e.oxw(3); e.Q6J("ngClass", e.VKq(4, rg, t.isSignPosting)), e.xp6(1), e.Q6J("ngIf", t.displayHeader && (t.isMobileWidth || !t.isMobileWidth && !t.isUkHeading)), e.xp6(1), e.Q6J("ngIf", !t.isMobileWidth && t.isUkHeading && !t.isDiscoverCategory), e.xp6(1), e.Q6J("ngIf", t.prevLobbyCategories.length > 0) } } const lg = function (n) { return { "active-li-subnav": n } }, _g = function (n, _) { return [n, _] }, gg = function (n) { return { "active-subnav": n } }; function dg(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 18), e.NdJ("click", function () { const g = e.CHM(t).$implicit, p = e.oxw(4); return p.categoryType = g.categoryid, p.categoryTracking(g.categoryid) }), e.TgZ(1, "a", 19), e._UZ(2, "span", 20)(3, "span", 21), e._uU(4), e.qZA()() } if (2 & n) { const t = _.$implicit, a = _.index, l = e.oxw(4); e.Q6J("value", a)("ngClass", e.VKq(5, lg, t.categoryid === l.selectedCategory.categoryid || t.dropdownhref === l.selectedCategory.categoryid)), e.xp6(1), e.Q6J("routerLink", e.WLB(7, _g, l.categoryRelativeUrlTemplate, t.dropdownhref)), e.xp6(1), e.Q6J("ngClass", e.VKq(10, gg, t.categoryid === l.selectedCategory.categoryid || t.dropdownhref === l.selectedCategory.categoryid)), e.xp6(2), e.hij(" ", t.categoryname, " ") } } function ug(n, _) { if (1 & n && (e.TgZ(0, "ul", 16), e.YNc(1, dg, 5, 12, "li", 17), e.qZA()), 2 & n) { const t = e.oxw(3); e.xp6(1), e.Q6J("ngForOf", t.prevLobbyCategories) } } function hg(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div")(1, "h2", 3), e.YNc(2, cg, 4, 6, "div", 4), e.YNc(3, ug, 2, 1, "ul", 5), e.TgZ(4, "span", 6), e.NdJ("click", function () { return e.CHM(t), e.oxw(2).goBack() }), e.qZA()()() } if (2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngClass", e.VKq(3, Ct, !t.isMobileWidth && t.isUkHeading)), e.xp6(1), e.Q6J("ngIf", t.displayHeader && (t.isMobileWidth || t.selectedCategory && t.selectedCategory.gamelist && t.selectedCategory.gamelist.length > 0)), e.xp6(1), e.Q6J("ngIf", t.showLastLevelCategoryDropdown && t.prevLobbyCategories.length > 0) } } function mg(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 1), e.NdJ("resize", function (l) { return e.CHM(t), e.oxw().onResize(l) }, !1, e.Jf7), e.YNc(1, hg, 5, 5, "div", 2), e.qZA() } if (2 & n) { const t = e.oxw(); e.Udp("background-color", t.subNavBackGroundColor), e.xp6(1), e.Q6J("ngIf", t.displayHeader && (t.isMobileWidth || t.selectedCategory && t.selectedCategory.gamelist && t.selectedCategory.gamelist.length > 0) || t.showLastLevelCategoryDropdown && t.prevLobbyCategories.length > 0) } } const pg = function (n, _) { return { "casino-with-out-subnavigation thumbnail-newgame": n, "casino-mobile-thumbnail-wrapper with casino-thumbnail-mobile thumbnailAnimate": _ } }; function fg(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 1)(1, "div", 2)(2, "cc-thumbnail-newgame", 3), e.NdJ("closeThumbnail", function (l) { return e.CHM(t), e.oxw().closeThumbnailBox(l) }), e.qZA()()() } if (2 & n) { const t = e.oxw(); e.Q6J("ngClass", e.WLB(6, pg, !t.isTouch || t.desktopbreakpointforMobile, t.isTouch && t.isMobileWidth)), e.xp6(1), e.Q6J("ngStyle", e.VKq(9, Li, t.isTouch ? t.thumnailHeaderHeight + "px" : "0px")), e.xp6(1), e.Q6J("lobbyType", t.lobbyType)("place", "Product Switcher")("category", t.category)("isTouch", t.isTouch) } } function vg(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "a", 14), e.NdJ("click", function () { return e.CHM(t), e.oxw().hideSearch() }), e._UZ(1, "span", 15), e.qZA() } } function yg(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "span", 16), e.NdJ("click", function () { return e.CHM(t), e.oxw().closeSearchIcon() }), e.qZA() } } function bg(n, _) { if (1 & n && (e.TgZ(0, "div", 22), e._UZ(1, "cc-game-lobby", 23), e.qZA()), 2 & n) { const t = _.$implicit, a = _.index, l = e.oxw(3); e.xp6(1), e.Q6J("game", t)("gamePosition", a)("category", l.gymlCategory)("gameLaunchedFrom", "Search_GYML") } } function Cg(n, _) { if (1 & n && (e.TgZ(0, "div", 20), e.YNc(1, bg, 2, 4, "div", 21), e.qZA()), 2 & n) { const t = e.oxw(2); e.xp6(1), e.Q6J("ngForOf", t.GYMLGames) } } const Mg = function (n) { return { "casino-gyml-touch": n } }; function Eg(n, _) { if (1 & n && (e.TgZ(0, "div", 17)(1, "span", 18), e._uU(2), e.qZA(), e.YNc(3, Cg, 2, 1, "div", 19), e.qZA()), 2 & n) { const t = e.oxw(); e.Q6J("ngClass", e.VKq(3, Mg, t.isTouch)), e.xp6(2), e.hij(" ", t.gymlText, " "), e.xp6(1), e.Q6J("ngIf", t.gymlCategory && t.gymlCategory.categoryInfo && "LMC_GYML" === t.gymlCategory.categoryInfo.categoryid) } } function Tg(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "li", 24), e.NdJ("click", function () { const l = e.CHM(t), g = l.$implicit, p = l.index; return e.oxw().launchGame(g, p) }), e._UZ(1, "img", 25)(2, "span", 26), e.ALo(3, "highlightsearch"), e.qZA() } if (2 & n) { const t = _.$implicit, a = e.oxw(); e.xp6(1), e.s9C("src", t.icon.src, e.LSH), e.xp6(1), e.Q6J("innerHTML", e.xi3(3, 2, t.title, a.model.query), e.oJD) } } function Pg(n, _) { if (1 & n && e._UZ(0, "cc-search", 1), 2 & n) { const t = e.oxw(); e.Q6J("lobbyType", t.lobbyType) } } const Ig = function (n, _, t) { return { isDefaultCategory: "", identifierClass: "", noslide: "", teaserLocation: n, teaserCategory: "", teasersSource: _, mode: "teaser", fromNative: !0, isLand: t } }; function Dg(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 3)(1, "div", 4)(2, "cc-thumbnail-newgame", 5), e.NdJ("closeThumbnail", function (l) { return e.CHM(t), e.oxw().closeThumbnailBox(l) }), e.qZA()()() } if (2 & n) { const t = e.oxw(); e.xp6(2), e.Q6J("category", t.currentCategory)("lobbyType", t.lobbyType)("place", "Product Switcher")("isTouch", t.isTouch) } } function Sg(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 6)(1, "cc-thumbnail-newgame", 7), e.NdJ("closeThumbnail", function (l) { return e.CHM(t), e.oxw().closeThumbnailBox(l) }), e.qZA()() } if (2 & n) { const t = e.oxw(); e.xp6(1), e.Q6J("category", t.currentCategory)("isTouch", t.isTouch)("lobbyType", t.lobbyType)("place", "Product Switcher") } } const Lg = function () { return { overflow: "hidden", position: "relative" } }; function Og(n, _) { if (1 & n) { const t = e.EpF(); e.TgZ(0, "div", 2), e.NdJ("resize", function () { return e.CHM(t), e.oxw().onResize() }, !1, e.Jf7), e.TgZ(1, "div", 3)(2, "div", 4, 5)(4, "iframe", 6), e._uU(5, " Preview not available"), e.qZA()()()() } if (2 & n) { const t = e.oxw(); e.Q6J("ngStyle", e.DdM(6, Lg)), e.xp6(4), e.Udp("height", t.heightIframe + "vw")("width", t.widthIframe + "px"), e.Q6J("src", t.iframeUrl, e.uOi) } } function Ag(n, _) { if (1 & n && e._UZ(0, "cc-game-iframe-launcher", 1), 2 & n) { const t = e.oxw(); e.Q6J("gameId", t.thunderbiteGameId)("thunderBiteIframeHeight", t.thunderBiteIframeHeight) } } let Gg = (() => { class n { constructor() { } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275prov = e.Yz7({ token: n, factory: n.\u0275fac, providedIn: "root" }), n })(), mo = (() => { class n { constructor(t, a, l, g) { this.recentGameService = t, this.signPostingService = a, this.configProviderService = l, this.user = g, this.isDisplayBadge = !0, this.signPostingGamesCount = 0, this.recentlyPlayedgames = [] } ngOnInit() { this.casinoConfig = this.configProviderService.provideCasinoConfig(), this.isMobileWidth = window.innerWidth < 768 || document.body.offsetWidth < 768, this.recentObs = this.recentGameService.recentGamesFeedObservable.subscribe(t => { if (t && this.category && this.category.gamelist && this.category.gamelist.length > 0) { let a = this.category.gamelist; a = this.gymlAndrpCount(a, t), this.signPostingGamesCount = this.signPostingService.getSignPostingCount(a, t) } }) } onResize() { this.isMobileWidth = window.innerWidth < 768 || document.body.offsetWidth < 768 } ngOnChanges() { if (this.category && this.category.gamelist && this.category.gamelist.length > 0) { let t = this.recentGameService.getrecentGames(), a = this.category.gamelist; a = this.gymlAndrpCount(a, t), this.signPostingGamesCount = this.signPostingService.getSignPostingCount(a, t) } } gymlAndrpCount(t, a) { if (this.casinoConfig = this.configProviderService.provideCasinoConfig(), "LMC_GYML" === this.category.categoryid) { let l; if (a && a.length > 0 && (l += a.length), l >= this.casinoConfig.recentGamesCountLimit && (t = []), t.length > 0) { let g = []; t.forEach(p => { a && a.length > 0 && -1 == a.indexOf(p.game) && g.push(p) }), g && 0 == g.length && (g = t), this.category.gamelist.length > this.casinoConfig.gymlLimit && this.user.isAuthenticated ? t = g.slice(0, this.casinoConfig.gymlLimit) : this.category.gamelist.length + l > this.casinoConfig.gymlLimit && !this.user.isAuthenticated && l < this.casinoConfig.gymlLimit && (t = g.slice(0, this.casinoConfig.gymlLimit - l)) } } return t } ngOnDestroy() { this.recentObs && this.recentObs.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.vD), e.Y36(c.Q8), e.Y36(c.iX), e.Y36(r.KDu)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-sign-posting"]], inputs: { category: "category", isDisplayBadge: "isDisplayBadge" }, features: [e.TTD], decls: 1, vars: 1, consts: [["class", "casino-sign-posting", 3, "resize", 4, "ngIf"], [1, "casino-sign-posting", 3, "resize"], ["class", "label arrowed", 4, "ngIf"], ["class", "badge badge-circle badge-offset badge-t-r badge-danger mob-subnav-badge", 4, "ngIf"], [1, "label", "arrowed"], [1, "title-badge"], [1, "badge", "badge-circle", "badge-offset", "badge-t-r", "badge-danger", "mob-subnav-badge"]], template: function (t, a) { 1 & t && e.YNc(0, ge, 3, 2, "span", 0), 2 & t && e.Q6J("ngIf", a.signPostingGamesCount && a.signPostingGamesCount > 0) }, directives: [o.O5], encapsulation: 2 }), n })(), Sn = (() => { class n { constructor(t, a, l) { this.configProviderService = t, this.casinoManager = a, this.casinoLobbyService = l, this.displayHeading = !0 } ngOnInit() { this.assignSubCategory() } assignSubCategory() { this.configProviderService.provideGlobalConfig(), this.subCategory && this.subCategory.sitecoreData ? this.subCategoryData = this.subCategory : this.subCategory && this.subCategory.categoryInfo && this.subCategory.categoryInfo.sitecoreData && (this.subCategoryData = this.subCategory.categoryInfo), this.title && this.subCategoryData && null == this.subCategoryData.categoryname && (this.subCategoryData.categoryname = this.title), this.features = this.configProviderService.provideFeaturesConfig(), this.subCategoryTitleFontSize = this.casinoLobbyService.getsubCategoryTitleFontSize(this.subCategory), this.subCategorySubTitleFontSize = this.casinoLobbyService.getsubCategorySubTitleFontSize(this.subCategory), this.isSignPosting = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.features.enableSignpostingSticker), this.subCategoryTextColor = this.casinoLobbyService.getsubCategoryTextColor(this.subCategory), this.lobbyTileFontFamily = this.casinoLobbyService.getLTileFontFamily(this.subCategory) } ngOnChanges() { this.assignSubCategory() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.iX), e.Y36(c.M3), e.Y36(c.nA)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-categoryicon-subtitle"]], inputs: { lobbyType: "lobbyType", subCategory: "subCategory", recentAndGyml: "recentAndGyml", alignIconRight: "alignIconRight", displayHeading: "displayHeading", title: "title" }, features: [e.TTD], decls: 1, vars: 1, consts: [[4, "ngIf"], ["class", "ul-icon", 4, "ngIf"], [1, "ul-icon"], [1, "title-uk", 3, "ngStyle"], [3, "category", 4, "ngIf"], ["class", "subtitle-uk ", 3, "ngStyle", 4, "ngIf"], [1, "uk-icon", "right-align", 3, "ngClass"], [3, "category"], [1, "subtitle-uk", 3, "ngStyle"], [1, "uk-icon", "left-align", 3, "ngClass"]], template: function (t, a) { 1 & t && e.YNc(0, ne, 9, 10, "span", 0), 2 & t && e.Q6J("ngIf", a.displayHeading) }, directives: [mo, o.O5, o.mk, o.PC], encapsulation: 2 }), n })(), Et = (() => { class n { constructor() { } setQuickInfoService(t) { this.quickInfoService = t } getQuickInfoService() { return this.quickInfoService } setsportsOverLayService(t) { this.sportsOverLayService = t } getsportsOverLayService() { return this.sportsOverLayService } setCasinoBootstrapService(t) { this.bootstrapService = t } getCasinoBootstrapService() { return this.bootstrapService } setDialogRef(t) { this.dialogRef = t } getDialogRef() { return this.dialogRef } closeDialogRef(t) { t.close() } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275prov = e.Yz7({ token: n, factory: n.\u0275fac, providedIn: "root" }), n })(), Ln = (() => { class n { constructor(t, a) { this.casinoManager = t, this.configProviderService = a, this.showstickersinoverlay = !0, this.showjackpotvalueinoverlay = !0, this.demoEnabled = !1, this.stickers = [], this.isStickersForUk = !1, this.jackpotValue = null, this.isHotJackpotGroup = !1, this.lobbyType = "", this.enableHotIcon = !1 } ngOnInit() { let t = this.configProviderService.provideFeaturesConfig(), a = this.configProviderService.provideGameConfig(); this.showstickersinoverlay = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.showStickersInOverlay), this.showjackpotvalueinoverlay = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.showJackpotvalueInOverlay), this.enableHotIcon = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableHotIcon), this.hotIcon = a.host + "/htmllobby/images/newlmticons/square/hotjackpot.png", this.jackpotValue && this.setJackpotValue() } setJackpotValue() { var t, a, l, g, p, b, E, L; this.configProviderService.provideJackpotConfig().enableRibbonConfig && (this.jpBgColor = null === (a = null === (t = this.jackpotValue) || void 0 === t ? void 0 : t.jackpotAttributes) || void 0 === a ? void 0 : a.JackpotRibbonBgColor, this.jpTextCOlor = null === (g = null === (l = this.jackpotValue) || void 0 === l ? void 0 : l.jackpotAttributes) || void 0 === g ? void 0 : g.JackpotRibbonTextColor, this.jackpotValue.globalJackpotAttributes && (this.jpBgColor = null === (b = null === (p = this.jackpotValue) || void 0 === p ? void 0 : p.globalJackpotAttributes) || void 0 === b ? void 0 : b.JackpotRibbonBgColor, this.jpTextCOlor = null === (L = null === (E = this.jackpotValue) || void 0 === E ? void 0 : E.globalJackpotAttributes) || void 0 === L ? void 0 : L.JackpotRibbonTextColor)) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.M3), e.Y36(c.iX)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-stickers-jackpot"]], inputs: { demoEnabled: "demoEnabled", stickers: "stickers", isStickersForUk: "isStickersForUk", isTouch: "isTouch", jackpotValue: "jackpotValue", isHotJackpotGroup: "isHotJackpotGroup", lobbyType: "lobbyType" }, decls: 1, vars: 1, consts: [[3, "ngClass", 4, "ngIf"], [3, "ngClass"], ["class", "casino-qi-game-badge", 3, "hidden", "ngClass", 4, "ngIf"], ["class", "casino-qi-Jackpotcta", 3, "ngStyle", "ngClass", 4, "ngIf"], [1, "casino-qi-game-badge", 3, "hidden", "ngClass"], ["class", "casino-qi-promoStickers", 3, "ngClass", 4, "ngFor", "ngForOf"], [1, "casino-qi-promoStickers", 3, "ngClass"], [1, "casino-qi-Jackpotcta", 3, "ngStyle", "ngClass"], ["class", "casino-qi-hot-icon", 4, "ngIf"], [1, "qi-jp-value", 3, "ngStyle"], [1, "casino-qi-hot-icon"], [3, "src"]], template: function (t, a) { 1 & t && e.YNc(0, It, 3, 5, "div", 0), 2 & t && e.Q6J("ngIf", a.showstickersinoverlay || a.showjackpotvalueinoverlay) }, directives: [o.O5, o.mk, o.sg, o.PC], encapsulation: 2 }), n })(), kg = (() => { class n { constructor(t, a) { this.freespinSummaryService = t, this.timeZoneService = a } transform(t) { if (t) { let a = this.freespinSummaryService.getTimeZoneInfo(), l = 0; a && (l = this.timeZoneService.getSecondsFromTimeString(a.BaseUtcOffset)); let g = 1e3 * l; if (a && a.AdjustmentRules && a.AdjustmentRules.length > 0 && a.AdjustmentRules[0].DaylightDelta) { let O = this.timeZoneService.getSecondsFromTimeString(a.AdjustmentRules[0].DaylightDelta); O > 0 && (g += 1e3 * O) } this.freespinSummaryService.getTimeZoneInfo(); let b = 1e3 * t + g + 60 * (new Date).getTimezoneOffset() * 1e3, E = new Date(b); return this.timeZoneService.getDateFormat(new Date(E)) } } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.t$, 16), e.Y36(c.Fj, 16)) }, n.\u0275pipe = e.Yjl({ name: "timezoneformat", type: n, pure: !0 }), n })(), pa = (() => { class n { constructor(t, a, l, g, p, b) { this.configProviderService = t, this.tracking = a, this.claims = l, this.freespinSummaryService = g, this.navigation = p, this.libMockService = b } ngOnInit() { this.quickInfoService = this.libMockService.getQuickInfoService(), this.rewardDetails && (this.timeZoneData = this.freespinSummaryService.getTimeZoneInfo()), this.freespinscountbg = this.configProviderService.provideGlobalConfig().freespinsCountBackgroundColor, this.enableFreeSpinSummary = this.configProviderService.providefreeSpinsClientConfig().isFreeSpinSummaryEnabled, this.freespinscountbg = this.configProviderService.provideGlobalConfig().lobbyConfigurations.freespinsCountBackgroundColor, this.freeSpinsRemainingText = this.configProviderService.providefreeSpinsClientConfig().freeSpinsConfigurations.freeSpinsRemainingText, this.totalAmountText = this.configProviderService.providefreeSpinsClientConfig().freeSpinsConfigurations.totalAmountText, this.ofText = this.configProviderService.providefreeSpinsClientConfig().freeSpinsConfigurations.ofText, this.expiryDateText = this.configProviderService.providefreeSpinsClientConfig().freeSpinsConfigurations.expiryDateText, this.freeSpinsBoxColor = this.configProviderService.providefreeSpinsClientConfig().freeSpinsConfigurations.freeSpinsBoxColor, this.expiryDetailsBoxColor = this.configProviderService.providefreeSpinsClientConfig().freeSpinsConfigurations.expiryDetailsBoxColor, this.freeSpinsCountCircleColor = this.configProviderService.providefreeSpinsClientConfig().freeSpinsConfigurations.freeSpinsCountCircleColor, this.freeSpinsFont = this.configProviderService.providefreeSpinsClientConfig().freeSpinsConfigurations.freeSpinsFont, this.moreInfoText = this.configProviderService.providefreeSpinsClientConfig().freeSpinsConfigurations.moreInfoText, this.fontColor = this.configProviderService.providefreeSpinsClientConfig().freeSpinsConfigurations.fontColor } moreBoxInfoClick(t, a) { this.onMoreInfoclick(t, a, "promotion area") } onMoreInfoclick(t, a, l) { let g = this.rewardDetails[a - 1]; t.stopPropagation(), this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "teasers", "component.LabelEvent": "casino game promotions", "component.ActionEvent": "click", "component.PositionEvent": "FreeSpins" + a, "component.LocationEvent": this.quickInfoService.getQuickInfoGameTitle(), "component.EventDetails": l, "component.URLClicked": g.moreinfoUrl }), this.navigationAndDialogClose(), this.navigation.goTo(g.moreinfoUrl) } moreInfoClick(t, a) { this.onMoreInfoclick(t, a, "moreInfoClick") } navigationAndDialogClose() { this.quickInfoService.closeQuickInfoDialog({ noNavigation: !0 }), this.freespinSummaryService.freespinMoreinfoClick() } calculateRewardPercent(t) { return this.rewardPercent = t.availableCount / t.totalCount * 100, this.rewardPercent } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.iX), e.Y36(r.e2C), e.Y36(r.UDe), e.Y36(c.t$), e.Y36(r.f5Y), e.Y36(Et)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-freespin-quick-info"]], inputs: { rewardDetails: "rewardDetails" }, decls: 1, vars: 1, consts: [["class", "casino-qi-freespins-sec cBoth", 3, "font-family", "color", "click", 4, "ngFor", "ngForOf"], [1, "casino-qi-freespins-sec", "cBoth", 3, "click"], [1, "freespins-info", "fLeft"], [1, "newspin-count-sec", "fLeft"], [3, "percent", "radius", "titleColor", "outerStrokeColor", "innerStrokeColor", "animation", "clockwise", "title"], [1, "content-sec", "fLeft"], [1, "spins-left"], [1, "amount"], [1, "amt-color"], [1, "link-sec", "fRight"], [3, "click"], [1, "theme-right"], [1, "tooltip-sec", "cBoth"], [1, "theme-arrow-down"]], template: function (t, a) { 1 & t && e.YNc(0, oi, 22, 38, "div", 0), 2 & t && e.Q6J("ngForOf", a.rewardDetails) }, directives: [f.nu, o.sg], pipes: [o.H9, kg], encapsulation: 2 }), n })(), xg = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z, q, X, ee, fe, Ue, Xe, nt) { this.dialogRef = t, this.data = a, this.user = l, this.configProviderService = g, this.favouriteService = p, this.cookie = b, this.loginDialog = E, this.gameLaunchService = L, this.tracking = O, this.casinoManager = U, this.gameDataManager = K, this.jackpotservice = z, this.elementRef = q, this.deviceService = X, this.freespinSummaryService = ee, this.casinoLobbyService = fe, this.casinoNpmParamsService = Ue, this.quickInfoService = Xe, this.libMockService = nt, this.isLaunchedFromUrl = !1, this.useFavouriteGames = !1, this.gameDescription = null, this.reelsTitle = "", this.payLinesTitle = "", this.returnToPlayerTitle = "", this.reels = null, this.payLines = null, this.returnToPlayer = null, this.jackpotValue = null, this.favouriteStyle = "theme-favorite-i", this.unFavouriteStyle = "theme-favorite", this.isFavourite = !1, this.stickers = [], this.product = "", this.isHotJackpotGroup = !1, this.jackpotData = null, this.vendorLogo = null, this.isStickersForUk = !1, this.demoEnabledForProvider = !0, this.enableQuicInfoReelskDiv = !1, this.rewardIds = [], this.displayFavouritesOnPreLogin = !0, this.libMockService.setQuickInfoService(this.quickInfoService) } ngOnInit() { this.setLocalData(), this.assignConfig(), this.data && "" != this.data.product && this.trackWidgetGames(), this.gameDataManager.getGameDescription(this.game.gameId, this.game.provider).subscribe(t => { t && (this.gameDescription = t.gameDescription, this.reels = t.reels, this.payLines = t.payLines, this.returnToPlayer = t.returnToPlayer), this.checkForAdjustment() }), this.isTouch = this.casinoManager.isTouch(), this.isMobile = this.deviceService.isMobilePhone, this.favObs = this.favouriteService.favouriteGamesFeedObservable.subscribe(t => { t && (this.isFavourite = this.favouriteService.checkForFavouriteGame(this.game)) }), "RecentlyPlayed_widget_RecentlyPlayed" != this.gameLaunchedFrom && "RecentlyPlayed_widget_Favourites" != this.gameLaunchedFrom && this.data.moreInfoText && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "games", "component.LabelEvent": "game interactions", "component.ActionEvent": "load", "component.PositionEvent": this.gamePosition, "component.LocationEvent": "bacon", "component.EventDetails": "moreinfo overlay", "component.URLClicked": "not applicable" }), this.isLaunchedFromUrl || this.appendQuickInfoQueryParameterToUrl(), this.assignFeatures() } assignFeatures() { let t = this.configProviderService.provideFeaturesConfig(), a = this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, this.configProviderService.provideGameConfig().vendorsWithOnlyRealModeLobbyType), l = this.configProviderService.provideGameConfig().demoModeExcludedGamesRegex; (a && a.indexOf(this.provider) > -1 || l && "" != l && new RegExp(l, "g").test(this.game.gameId)) && (this.demoEnabledForProvider = !1), this.isStickersForUk = this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, t.stickersForUk), t.hideFavouritesOnPreLogin && !this.user.isAuthenticated && (this.displayFavouritesOnPreLogin = !1) } assignConfig() { var t; let a = this.configProviderService.provideGlobalConfig(), l = this.configProviderService.provideGameConfig(), g = this.configProviderService.providefreeSpinsClientConfig(); this.reelsTitle = a.messages.Reels, this.payLinesTitle = a.messages.PayLines, this.returnToPlayerTitle = a.messages.ReturnToPlayer, document.querySelector(".casino-qi-noverlay") && (document.querySelector(".casino-qi-noverlay").style.cssText = a.messages.quickInfoStyles), ("true" === a.lobbyConfigurations.FavouriteHeart || "True" === a.lobbyConfigurations.FavouriteHeart || "TRUE" === a.lobbyConfigurations.FavouriteHeart) && (this.favouriteStyle = "theme-heart-solid", this.unFavouriteStyle = "theme-heart-outline"); let p = null === (t = l.gameOwnerIdMap) || void 0 === t ? void 0 : t.find(b => b.gameId == this.game.gameId); this.vendorLogo = l.host + l.gameIconTemplate.replace("{0}", "vendorlogos").replace("{1}", p ? null == p ? void 0 : p.ownerId : this.game.ownerId) + ".jpg", this.demoEnabled = l.enableDemoMode, this.enableQuickInfoReels = l.enableQuickInfoReels, this.demoLinkText = a.messages.DemoLinkText, this.demoLinkTextColor = a.messages.DemoLinkTextColor, this.enableFreeSpinSummary = g.isFreeSpinSummaryEnabled, this.enableFreeSpinsOnQuickInfo = g.isEnableFreeSpinsOnQuickInfo, this.enableFreeSpinSummary && this.enableFreeSpinsOnQuickInfo && (this.freespinObservable = this.freespinSummaryService.freeSpinsGameDetailsObser.subscribe(b => { b && this.bindFreeSpinInfo() })) } bindFreeSpinInfo() { this.setfreeSpinsCount(this.freespinSummaryService.getFreespinCountInfoForGame(this.game.gameId)) } setfreeSpinsCount(t) { this.freespinCountGame = t, null != this.freespinCountGame ? (this.showFreeSpinCount = !0, this.rewardIds = this.freespinCountGame.rewardIds, this.rewardDetails = this.freespinSummaryService.getFreeSpinRewardDetails(this.rewardIds)) : this.showFreeSpinCount = !1 } ngAfterViewInit() { this.isStickersForUk ? this.gameStickerStyleForUk() : this.gameStickerStyle(), this.checkForAdjustment() } trackWidgetGames() { this.data && this.data.gameLaunchedFrom && "RecentlyPlayed_widget_Favourites" == this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo_Overlay", "component.ActionEvent": "Load", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.data.lobbyType }), this.data && this.data.gameLaunchedFrom && "RecentlyPlayed_widget_RecentlyPlayed" === this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_QuickInfo_Overlay", "component.ActionEvent": "Load", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.data.lobbyType }) } checkForAdjustment() { if (this.isTouch && window.innerHeight <= 480 && this.gameDescription) { let t = this.elementRef.nativeElement.querySelectorAll(".casino-qi-desktop-nrectangle"); t.length > 0 && (t[0].style.top = "10%") } } setLocalData() { this.gameTitle = this.data.gameTitle, this.src = this.data.src, this.gameProvider = this.data.gameProvider, this.provider = this.data.provider, this.game = this.data.game, this.useFavouriteGames = this.data.useFavouriteGames, this.cta = this.data.cta, this.gamePosition = this.data.gamePosition, this.gameLaunchedFrom = this.data.gameLaunchedFrom, this.categoryType = this.data.categoryType, this.isLaunchedFromUrl = this.data.isLaunchedFromUrl, this.stickers = this.data.stickers, this.gridPosition = this.data.gridPosition, this.product = this.data.product, this.gameContainer = this.game.gameContainer, this.lobbyType = this.data.lobbyType, this.gameHomeUrl = this.data.gameHomeUrl, this.jackpotservice.jackpotFeedObservable.subscribe(a => { if (a) { let l = a.get(this.game.gameId); l && (this.jackpotData = l, this.jackpotValue = this.jackpotData.amount, this.isHotJackpotGroup = this.jackpotData.isHotJackpotGroup) } }), this.configProviderService.provideFeaturesConfig().enableGameIconTheming && (this.src = this.casinoLobbyService.appendTheme(this.src, this.game.gameId)) } GameJackpotValue(t) { return this.jackpotservice.getGameJackpotValue(t.gameId) } closeModal(t = null) { t ? (this.data && this.data.gameLaunchedFrom && "RecentlyPlayed_widget_RecentlyPlayed" === this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_QuickInfo_Overlay", "component.ActionEvent": "Close Overlay - Gradient Click", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.data.lobbyType }), this.data && "RecentlyPlayed_widget_Favourites" == this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo_Overlay", "component.ActionEvent": "Close Overlay - Gradient Click", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.data.lobbyType })) : this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "games", "component.LabelEvent": "game interactions", "component.ActionEvent": "close", "component.PositionEvent": this.gamePosition, "component.LocationEvent": "bacon", "component.EventDetails": "moreinfo overlay", "component.URLClicked": "not applicable" }), document.getElementsByTagName("html")[0].classList.remove("casino-quickinfo-open"), t && t.stopImmediatePropagation(), this.isTouch && this.removeQuickInfoQueryParameterFromUrl(), this.dialogRef.close() } isFavouriteGame(t) { return this.favouriteService.checkForFavouriteGame(t) } toggleFavourite(t, a) { a.stopImmediatePropagation(), this.user.isAuthenticated ? (this.data && this.data.gameLaunchedFrom && ("RecentlyPlayed_widget_RecentlyPlayed" == this.data.gameLaunchedFrom || "RecentlyPlayed_widget_Favourites" == this.data.gameLaunchedFrom) ? this.trackFavfromRpWidget(t) : this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "games", "component.LabelEvent": "games interaction", "component.ActionEvent": "click", "component.PositionEvent": t.gameId, "component.LocationEvent": "more info overlay", "component.EventDetails": this.isFavouriteGame(t) ? "UnFavourited" : "Favourited", "component.URLClicked": "not applicable" }), this.favouriteService.toggleGameFavourite(t), this.isFavourite = !this.isFavourite) : (this.cookie.putObject("favouriteGame", t), this.closeModal(), this.loginDialog.open({ loginMessageKey: "Favourite" })) } trackFavfromRpWidget(t) { this.data && "RecentlyPlayed_widget_RecentlyPlayed" == this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_QuickInfo_Overlay", "component.ActionEvent": this.isFavouriteGame(t) ? "UnFavourited" : "Favourited", "component.PositionEvent": t.gameId + "_" + this.gamePosition, "component.LocationEvent": this.data.lobbyType }), this.data && "RecentlyPlayed_widget_Favourites" == this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo_Overlay", "component.ActionEvent": this.isFavouriteGame(t) ? "UnFavourited" : "Favourited", "component.PositionEvent": t.gameId + "_" + this.gamePosition, "component.LocationEvent": this.data.lobbyType }) } gameStickerStyle() { let t = this.configProviderService.provideGlobalConfig().messages.GameStickerStyle, a = this.elementRef.nativeElement.querySelectorAll(".promo-text-badge-0"); for (let l = 0; l < a.length; l++)a[l].style.cssText = t } gameStickerStyleForUk() { let t = this.configProviderService.provideGlobalConfig().messages.UkStickerStyle1, a = this.elementRef.nativeElement.querySelectorAll(".promo-text-badge-0"); for (let p = 0; p < a.length; p++)a[p].style.cssText = t; let l = this.configProviderService.provideGlobalConfig().messages.UkStickerStyle2, g = this.elementRef.nativeElement.querySelectorAll(".promo-text-badge-1"); for (let p = 0; p < g.length; p++)g[p].style.cssText = l } launchGame(t, a) { this.data && "RecentlyPlayed_widget_RecentlyPlayed" == this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_QuickInfo_Overlay", "component.ActionEvent": "CTA_Click", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.data.lobbyType }), this.data && "RecentlyPlayed_widget_Favourites" == this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo_Overlay", "component.ActionEvent": "CTA_Click", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.data.lobbyType }), this.closeModal(), window; let g = new c.Hq; g.game = t, g.isTouch = this.isTouch, g.gamePosition = this.gamePosition, g.categoryType = this.categoryType, g.from = "q", g.replaceRouteInHistory = !1, g.isDemoLaunch = !1, g.skipUnfinGame = !1, g.gameLaunchedFrom = this.gameLaunchedFrom, g.gridPosition = this.gridPosition, g.returnUrl = this.gameHomeUrl, g.appendRUrlToLoginDialogWindow = !0, g.clickTimeStamp = this.gameLaunchService.currentTimeStamp(), this.gameLaunchService.launchGame(g) } appendQuickInfoQueryParameterToUrl() { let t = this.casinoNpmParamsService.getcasinoCoreNpmParams(); if (t && t.isDll && "Overlay" != this.gameContainer && "Widget" != this.gameContainer) { let l = window.location.href.substring(window.location.href.lastIndexOf("/")).length > 1 ? "/game-info/" : "game-info/"; window.history.pushState(location.href, "", location.href + l + this.game.gameId) } } removeQuickInfoQueryParameterFromUrl() { let t = this.casinoNpmParamsService.getcasinoCoreNpmParams(); t && t.isDll && "Overlay" != this.gameContainer && "Widget" != this.gameContainer && window.history.pushState(location.href, "", location.href.substr(0, location.href.indexOf("game-info") - 1)) } ngOnDestroy() { this.favObs && this.favObs.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(d.so), e.Y36(d.WI), e.Y36(r.KDu), e.Y36(c.iX), e.Y36(c.io), e.Y36(r.N_8), e.Y36(c.P1), e.Y36(c.$l), e.Y36(r.e2C), e.Y36(c.M3), e.Y36(c.cM), e.Y36(c.Gn), e.Y36(e.SBq), e.Y36(r.U8N), e.Y36(c.t$), e.Y36(c.nA), e.Y36(c.dk), e.Y36(On), e.Y36(Et)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-quick-info-modal"]], decls: 28, vars: 29, consts: [[1, "casino-lobby-container-main"], [1, "casino-qi-noverlay", 3, "click"], [1, "casino-qi-nrectangle", "casino-qi-desktop-nrectangle", 3, "ngClass"], [1, "casino-total-data"], [1, "casino-qi-nrectangle-int"], [1, "casino-qi-nimage", "casino-qi-desktop-nimage", "reel-quickinfo"], [3, "src"], [1, "casino-relativ-div-quickinfo"], [3, "demoEnabled", "stickers", "isTouch", "jackpotValue", "isHotJackpotGroup", "isStickersForUk", "lobbyType"], [4, "ngIf"], [1, "casino-qi-nrectangle-right"], [1, "casino-qi-ngame-provider"], [1, "close", "theme-close", "qi-close", "casino-qi-desktop-close", 3, "click"], ["class", "casino-qi-nlogo", 4, "ngIf"], ["class", "casino-quickInfoReelsTop", 4, "ngIf"], [2, "clear", "both"], [1, "gamedata"], [1, "casino-qi-ngame", 3, "vnDynamicHtml"], [1, "gameData-body", 3, "vnDynamicHtml"], [1, "casino-qi-btn-container"], ["class", "qi-margin-top casino-qi-demo-link", 3, "click", 4, "ngIf"], [1, "casino-qi-nplay-now", "btn", "btn-primary", 3, "click"], [3, "rewardDetails", 4, "ngIf"], [1, "casino-qi-ngradient"], [1, "casino-qi-nfavourite", 3, "ngClass", "click"], [1, "casino-qi-nlogo"], [1, "casino-quickInfoReelsTop"], ["class", "reels-dv casino-quickInfoReelsWidth", 4, "ngIf"], ["class", "paylines casino-quickInfoReelsWidth", 4, "ngIf"], ["class", "returntoplayer casino-quickInfoReelsWidth", 4, "ngIf"], [1, "reels-dv", "casino-quickInfoReelsWidth"], [1, "reelsValue"], ["class", "Reels", 4, "ngIf"], [1, "Reels"], [1, "paylines", "casino-quickInfoReelsWidth"], ["class", "Paylines", 4, "ngIf"], [1, "Paylines"], [1, "returntoplayer", "casino-quickInfoReelsWidth"], [1, "returnToPlayerValue"], ["class", "Return-to-Player", 4, "ngIf"], [1, "Return-to-Player"], [1, "qi-margin-top", "casino-qi-demo-link", 3, "click"], [3, "ngStyle"], [3, "rewardDetails"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0)(1, "div", 1), e.NdJ("click", function (g) { return a.closeModal(g) }), e.qZA(), e.TgZ(2, "div", 2)(3, "div", 3)(4, "div", 4)(5, "div", 5), e._UZ(6, "img", 6), e.TgZ(7, "div", 7), e._UZ(8, "cc-stickers-jackpot", 8), e.qZA(), e.YNc(9, ni, 3, 1, "div", 9), e.qZA(), e.TgZ(10, "div", 10)(11, "div", 11), e._uU(12), e.ALo(13, "uppercase"), e.qZA(), e.TgZ(14, "div", 12), e.NdJ("click", function () { return a.closeModal() }), e.qZA(), e.YNc(15, Nt, 2, 1, "div", 13), e.YNc(16, Kt, 3, 3, "div", 13), e.YNc(17, si, 4, 3, "div", 14), e.qZA(), e._UZ(18, "div", 15), e.qZA(), e.TgZ(19, "div", 16), e._UZ(20, "div", 17)(21, "span", 18), e.qZA(), e.TgZ(22, "div", 19), e.YNc(23, ri, 4, 6, "div", 20), e.TgZ(24, "button", 21), e.NdJ("click", function () { return a.launchGame(a.game, !1) }), e._uU(25), e.ALo(26, "uppercase"), e.qZA()()(), e.YNc(27, ci, 1, 1, "cc-freespin-quick-info", 22), e.qZA()()), 2 & t && (e.xp6(2), e.Udp("top", a.rewardDetails && a.rewardDetails.length >= 1 ? "14%" : "30%"), e.ekj("casino-qi-desktop-nrectangle", !a.isMobile), e.Q6J("ngClass", a.rewardDetails && a.rewardDetails.length >= 1 ? "casino-height600" : "casino-height450"), e.xp6(3), e.ekj("casino-qi-desktop-nimage", !a.isMobile), e.xp6(1), e.s9C("src", a.src, e.LSH), e.xp6(2), e.Q6J("demoEnabled", a.demoEnabled)("stickers", a.stickers)("isTouch", a.isTouch)("jackpotValue", a.jackpotData)("isHotJackpotGroup", a.isHotJackpotGroup)("isStickersForUk", a.isStickersForUk)("lobbyType", a.lobbyType), e.xp6(1), e.Q6J("ngIf", a.useFavouriteGames && a.displayFavouritesOnPreLogin), e.xp6(3), e.Oqu(e.lcZ(13, 25, a.gameProvider)), e.xp6(3), e.Q6J("ngIf", a.vendorLogo), e.xp6(1), e.Q6J("ngIf", !a.vendorLogo), e.xp6(1), e.Q6J("ngIf", a.enableQuickInfoReels), e.xp6(3), e.Q6J("vnDynamicHtml", a.gameTitle), e.xp6(1), e.Q6J("vnDynamicHtml", a.gameDescription), e.xp6(2), e.Q6J("ngIf", a.demoEnabled && a.demoEnabledForProvider && a.isTouch), e.xp6(2), e.Oqu(e.lcZ(26, 27, a.cta)), e.xp6(2), e.Q6J("ngIf", a.showFreeSpinCount && a.enableFreeSpinsOnQuickInfo)) }, directives: [Ln, pa, o.mk, o.O5, r.gHj, o.PC], pipes: [o.gd], encapsulation: 2 }), n })(), fa = (() => { class n { constructor(t) { this.configProviderService = t, this.freespinsInfo = new e.vpe } ngOnInit() { this.enableFreeSpinSummary = this.configProviderService.providefreeSpinsClientConfig().isFreeSpinSummaryEnabled, this.freespinscountbg = this.configProviderService.provideGlobalConfig().freespinsCountBackgroundColor, this.isThreeDigit = this.freespinAvailableCount > 99 || this.freespinTotalCount > 99 } onFreeSpinClick(t) { this.freespinsInfo.emit(t) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.iX)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-freespin-summary"]], inputs: { freespinAvailableCount: "freespinAvailableCount", freespinTotalCount: "freespinTotalCount", isOptedIn: "isOptedIn" }, outputs: { freespinsInfo: "freespinsInfo" }, decls: 3, vars: 2, consts: [[3, "click"], ["class", "casino-freespins-alignment theme-refresh active", 3, "background-color", "ngClass", 4, "ngIf"], ["class", "casino-freespins-alignment theme-refresh", 3, "background-color", "ngClass", 4, "ngIf"], [1, "casino-freespins-alignment", "theme-refresh", "active", 3, "ngClass"], [1, "fsp-text-info"], ["class", "fsp-count-info", 4, "ngIf"], [1, "fsp-count-info"], [1, "active"], [1, "fsp-count-border"], [1, "casino-freespins-alignment", "theme-refresh", 3, "ngClass"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0), e.NdJ("click", function (g) { return a.onFreeSpinClick(g) }), e.YNc(1, gi, 7, 7, "div", 1), e.YNc(2, St, 7, 7, "div", 2), e.qZA()), 2 & t && (e.xp6(1), e.Q6J("ngIf", a.isOptedIn), e.xp6(1), e.Q6J("ngIf", !a.isOptedIn)) }, directives: [o.O5, o.mk], encapsulation: 2 }), n })(), po = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z, q, X, ee, fe, Ue, Xe, nt, Wt, Zi, Hi, Qi, zi, ji, qi, Vi, Md, Ed, Td) { this.data = t, this.configProviderService = a, this.navigation = l, this.injector = g, this.windowRef = p, this.bingoQuickInfo = b, this.user = E, this.loginDialog = L, this.favouriteService = O, this.cookie = U, this.gameDataManager = K, this.jackpotservice = z, this.casinoManager = q, this.elementRef = X, this.dialog = ee, this.route = fe, this.liveCasinoService = Ue, this.tracking = Xe, this.casinoWidgetService = nt, this.deviceService = Wt, this.casinoLobbyService = Zi, this.casinoCoreGameLaunchService = Hi, this.bingoGameLaunchService = Qi, this.api = zi, this.freespinSummaryService = ji, this.productHomepagesConfig = qi, this.productService = Vi, this.page = Md, this.casinoNpmParamsService = Ed, this.libMockService = Td, this.gymlCategoryType = "lmc_gyml", this.displayFavouritesOnPreLogin = !0, this.quickInfoScrollY = 0, this.product = "", this.lobbyType = "", this.vendorLogo = null, this.favouriteStyle = "theme-favorite-i", this.unFavouriteStyle = "theme-favorite", this.newJackpotRibbonStyling = !1, this.newQuickInfoStyle = !1, this.stickers = [], this.isFavourite = !1, this.jackpotValue = null, this.isHotJackpotGroup = !1, this.gameDescription = null, this.playNowHoverEffect = !1, this.loadQuickInfo = !1, this.bingoGames = [], this.bingoRooms = [], this.demoEnabledForProvider = !0, this.reelsTitle = "", this.payLinesTitle = "", this.returnToPlayerTitle = "", this.reels = null, this.payLines = null, this.returnToPlayer = null, this.enableQuicInfoReelskDiv = !1, this.unsubscribe = new y.x, this.rewardIds = [], this.availableCount = 0, this.totalCount = 0, this.quickInfoService = this.libMockService.getQuickInfoService(), this.isTouch = this.casinoManager.isTouch(), this.setWidth() } ngOnInit() { this.data && this.data.game && (this.game = this.data.game), this.setGameTitleAndProvider(), this.data && this.data.lobbyType && (this.lobbyType = this.data.lobbyType); let t = this.configProviderService.provideQuickInfoConfig(); t && (this.gameProvider = t.quickInfo.gameProviderHeader, this.cta = t.quickInfo.cta), this.data && "" != this.data.product && this.trackWidgetGames(), this.assignFeatures(), this.isTouch && this.data && this.setLocalData(), this.setImageIcon(), this.isFavourite = this.favouriteService.checkForFavouriteGame(this.game), this.setPlayNowBtnWidth(this.gameModel), this.windowRef.nativeWindow.screen.availWidth < 768 && this.isTouch && this.gameDataManager.getGameDescription(this.game.gameId, this.game.provider).subscribe(l => { l && (this.gameDescription = l.gameDescription, this.reels = l.reels, this.payLines = l.payLines, this.returnToPlayer = l.returnToPlayer) }), this.game.fromCozybingo && this.deviceService.isTouch && this.openDialog(null), this.stickers = this.stickersArray || this.data.stickers, this.game.sticker && !this.stickers && (this.isStickersForUk && -1 !== this.game.sticker.indexOf(",") ? this.stickers = this.game.sticker.split(",") : -1 !== this.game.sticker.indexOf(",") ? this.stickers.push(this.game.sticker.split(",")[0]) : this.stickers.push(this.game.sticker)), this.enableFreeSpinSummary = this.configProviderService.providefreeSpinsClientConfig().isFreeSpinSummaryEnabled, this.enableFreeSpinsOnQuickInfo = this.configProviderService.providefreeSpinsClientConfig().isEnableFreeSpinsOnQuickInfo, this.enableFreeSpinSummary && this.enableFreeSpinsOnQuickInfo && (this.freespinObservable = this.freespinSummaryService.freeSpinsGameDetailsObser.subscribe(l => { l && this.bindFreeSpinInfo() })), (!(null != this.game.fromCasino && !this.game.fromCasino) || !this.game.fromCozybingo) && this.newQuickInfoStyle && this.isTouch && (this.windowRef.nativeWindow.screen.availWidth >= 768 || window.innerWidth >= 768 || document.body.offsetWidth >= 768 ? setTimeout(() => { this.openDialog(null) }, 100) : this.loadQuickInfo = !0), this.jackpotValue = this.GameJackpotValue(this.game), this.jackpotValue && (this.isHotJackpotGroup = this.jackpotValue.isHotJackpotGroup), this.liveCasinoApiSitecoreInfo = this.liveCasinoService.getLiveCasinoApiSitecoreInfo(), this.liveCasinoApiSitecoreInfo && this.liveCasinoApiSitecoreInfo.messages && (this.playBehindButtonTitle = this.liveCasinoApiSitecoreInfo.messages.PlayBehind, this.isTableOnline = this.liveCasinoService.isTableOnline(this.game.gameId)), "RecentlyPlayed_widget_Favourites" != this.gameLaunchedFrom && "RecentlyPlayed_widget_RecentlyPlayed" != this.gameLaunchedFrom && this.data.moreInfoText && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "games", "component.LabelEvent": "game interactions", "component.ActionEvent": "load", "component.PositionEvent": this.data.gamePosition, "component.LocationEvent": "bacon", "component.EventDetails": "more info overlay", "component.URLClicked": "not applicable" }) } assignFeatures() { var t; let a = this.configProviderService.provideFeaturesConfig(), l = this.configProviderService.provideGlobalConfig(), g = this.configProviderService.provideQuickInfoConfig(), p = this.configProviderService.provideLiveCasinoConfig(); this.useFavouriteGames = this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, a.favouriteGamesLobbyType), this.playNow = l.messages.UKPlayNow, !this.user.isAuthenticated && this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, a.preLoginPlayNowText) && g && (this.cta = g.quickInfo.preLogincta, this.playNow = l.messages.UKPreLoginPlayNow), this.moreInfo = l.messages.UKMoreInfo, this.newJackpotRibbonStyling = this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, a.newJackpotRibbonStyling), this.newQuickInfoStyle = this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, a.newQuickInfoStyle), this.isStickersForUk = this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, a.stickersForUk), this.enableUkMouseOverStyle = this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, a.enableUkMouseOverStyle), this.useQuickInfo = this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, a.enableQuickInfoLobbyType), this.playNowHoverEffect = this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, a.playNowHoverEffect), this.enableTitleOnGame = this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, a.enableTitleOnGameTile), this.enableQuickInfoforLiveCasinoApi = p.enableQuickInfo, this.enableFavouriteGamesforLiveCasinoApi = p.enableFavouriteGames, this.hideMoreInfoLinkForLiveCasinoApi = p.hideMoreInfoLink, ("true" === l.lobbyConfigurations.FavouriteHeart || "True" === l.lobbyConfigurations.FavouriteHeart || "TRUE" === l.lobbyConfigurations.FavouriteHeart) && (this.favouriteStyle = "theme-heart-solid", this.unFavouriteStyle = "theme-heart-outline"), a.hideFavouritesOnPreLogin && !this.user.isAuthenticated && (this.displayFavouritesOnPreLogin = !1), this.quickInfoStyle = l.messages.quickInfoStyles, this.demoLinkText = l.messages.DemoLinkText, this.demoLinkTextColor = l.messages.DemoLinkTextColor, this.GameStickerStyle = l.messages.GameStickerStyle, this.UkStickerStyle1 = l.messages.UkStickerStyle1, this.UkStickerStyle2 = l.messages.UkStickerStyle2, this.UKPlayNow = l.messages.UKPlayNow, this.reelsTitle = l.messages.Reels, this.payLinesTitle = l.messages.PayLines, this.returnToPlayerTitle = l.messages.ReturnToPlayer; let b = this.configProviderService.provideGameConfig(), E = null === (t = b.gameOwnerIdMap) || void 0 === t ? void 0 : t.find(O => O.gameId == this.game.gameId); this.vendorLogo = b.host + b.gameIconTemplate.replace("{0}", "vendorlogos").replace("{1}", E ? null == E ? void 0 : E.ownerId : this.game.ownerId) + ".jpg", this.demoEnabled = b.enableDemoMode, (this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, b.vendorsWithOnlyRealModeLobbyType).indexOf(this.provider) > -1 || b.demoModeExcludedGamesRegex && "" != b.demoModeExcludedGamesRegex && new RegExp(b.demoModeExcludedGamesRegex, "g").test(this.game.gameId)) && (this.demoEnabledForProvider = !1), a.hideFavouritesOnPreLogin && !this.user.isAuthenticated && (this.displayFavouritesOnPreLogin = !1), this.enableQuickInfoReels = b.enableQuickInfoReels } bindFreeSpinInfo() { this.setfreeSpinsCount(this.freespinSummaryService.getFreespinCountInfoForGame(this.game.gameId)) } setfreeSpinsCount(t) { this.freespinCountGame = t, null != this.freespinCountGame ? (this.showFreeSpinCount = !0, this.optedIn = this.freespinCountGame.optedIn, this.availableCount = this.freespinCountGame.availableCount, this.totalCount = this.freespinCountGame.totalCount, this.rewardIds = this.freespinCountGame.rewardIds, this.rewardDetails = this.freespinSummaryService.getFreeSpinRewardDetails(this.rewardIds)) : this.showFreeSpinCount = !1 } ngOnChanges() { this.stickers = this.stickersArray || this.data.stickers } trackWidgetGames() { this.data.gameLaunchedFrom && "RecentlyPlayed_widget_Favourites" === this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo_Overlay", "component.ActionEvent": "Load", "component.PositionEvent": this.data.game.gameId + "_" + this.data.gamePosition, "component.LocationEvent": this.game.lobbyType }), this.data.gameLaunchedFrom && "RecentlyPlayed_widget_RecentlyPlayed" === this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_QuickInfo_Overlay", "component.ActionEvent": "Load", "component.PositionEvent": this.data.game.gameId + "_" + this.data.gamePosition, "component.LocationEvent": this.game.lobbyType }) } setGameTitleAndProvider() { this.game && (this.gameTitle = this.game.name, this.provider = this.game.provider, this.game.ownerId = this.game.ownerId) } onResize() { this.setWidth(), this.isTouch = this.casinoManager.isTouch() } setWidth() { this.width = this.windowRef.nativeWindow.screen.availWidth >= 768 ? 388 : this.windowRef.nativeWindow.screen.availWidth < this.windowRef.nativeWindow.screen.availHeight ? this.windowRef.nativeWindow.screen.availWidth : this.windowRef.nativeWindow.screen.availHeight, this.boxWidth = this.width, this.boxWidthInt = this.boxWidth - 176 } ngAfterViewInit() { (!this.newQuickInfoStyle || this.loadQuickInfo) && (this.isStickersForUk ? this.gameStickerStyleForUk() : this.gameStickerStyle()), document.querySelector(".casino-qi-noverlay") && (document.querySelector(".casino-qi-noverlay").style.cssText = this.quickInfoStyle), this.isMobileView = window.innerWidth <= 767 || document.body.offsetWidth <= 767, setTimeout(() => { this.isMobileView && this.quickInfoOverlayTopAllignment() }, 100) } setLocalData() { this.icon = this.data.icon, this.game = this.data.game, this.gamePosition = this.data.gamePosition, this.gameLaunchedFrom = this.data.gameLaunchedFrom, this.categoryType = this.data.categoryType, this.gridPosition = this.data.gridPosition, this.gameModel = this.data.gameModel, this.product = this.data.product } gameStickerStyle() { let t = this.GameStickerStyle, a = this.elementRef.nativeElement.querySelectorAll(".promo-text-badge-0"); for (let l = 0; l < a.length; l++)a[l].style.cssText = t } gameStickerStyleForUk() { let t = this.UkStickerStyle1, a = this.elementRef.nativeElement.querySelectorAll(".promo-text-badge-0"); for (let p = 0; p < a.length; p++)a[p].style.cssText = t; let l = this.UkStickerStyle2, g = this.elementRef.nativeElement.querySelectorAll(".promo-text-badge-1"); for (let p = 0; p < g.length; p++)g[p].style.cssText = l } openDialog(t) { if (null == this.game.fromCasino || this.game.fromCasino) { let a = this.navigation.location.absUrl(); t && (t.stopImmediatePropagation(), this.quickInfoScrollY = window.pageYOffset, document.getElementsByTagName("html")[0].classList.add("casino-quickinfo-open")), "RecentlyPlayed_widget_RecentlyPlayed" === this.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_QuickInfo", "component.ActionEvent": "Info_click", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.game.lobbyType }), "RecentlyPlayed_widget_Favourites" === this.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo", "component.ActionEvent": "Info_click", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.game.lobbyType }), "RecentlyPlayed_widget_Favourites" != this.gameLaunchedFrom && "RecentlyPlayed_widget_RecentlyPlayed" != this.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "games", "component.LabelEvent": "game interactions", "component.ActionEvent": "click", "component.PositionEvent": this.gamePosition, "component.LocationEvent": "bacon", "component.EventDetails": "more info icon", "component.URLClicked": "not applicable" }); let l = { game: this.game, gameTitle: this.gameTitle, src: this.mobileQuickInfoSrc, useFavouriteGames: this.useFavouriteGames, gameProvider: this.gameProvider, provider: this.provider, cta: this.cta, isTouch: this.isTouch, gamePosition: this.gamePosition, gameLaunchedFrom: this.gameLaunchedFrom, categoryType: this.categoryType, isLaunchedFromUrl: !t, stickers: this.stickers, gridPosition: this.gridPosition, routeParams: this.route.snapshot.params, style: this.quickInfoStyle, product: this.product, lobbyType: this.game.lobbyType, gameHomeUrl: window.location.href, moreInfoText: "moreInfoEvent" }; this.quickInfoService.openQuickInfoDialog(l).afterClosed().subscribe(p => { this.quickInfoScrollY && window.scrollTo(0, this.quickInfoScrollY), this.isTouch ? this.hideInfo() : this.handleQuickInfoonESC(a, p) }), setTimeout(() => { this.quickInfoOverlayTopAllignment() }, 0) } else { let a, l; event && (event.stopImmediatePropagation(), this.quickInfoScrollY = window.pageYOffset); let g = !1; document.getElementsByTagName("html")[0].classList.add("casino-quickinfo-open"), l = a ? { room: a, roomTitle: a.roomName, fromCozybingo: this.game.fromCozybingo, roomDescription: a.description || "Win a lot on the Jack in a Pot slot! This cheeky game lets you win up to 2,000x your stake using Jack the leprechaun\u2019s lucky features", src: a.image, gameProviderText: "GAME PROVIDER", providerName: "Win Studios", provider: "https://casinogames.galaspins.com/htmllobby/images/newlmticons/square/ivylootenkhamun.jpg", vendorLogo: "https://casinogames.galaspins.com/htmllobby/images/newlmticons/vendorlogos/21.jpg", cta: this.UKPlayNow, jackpotData: a.jackpot, isLaunchedFromUrl: g, section: this.data.gameLaunchedFrom || this.gameLaunchedFrom, position: this.data.gamePosition || this.gamePosition, gameContainer: this.game.gameContainer, gameContainerLocation: this.data.gameContainerLocation || this.gameContainerLocation + "QuickInfo", widgetFrameClr: this.data.widgetFrameClr || this.widgetFrameClr } : { room: { roomId: this.game.gameId }, fromCozybingo: this.game.fromCozybingo, roomDescription: this.game.sitecoreInfo.description, gameProviderText: "GAME PROVIDER", providerName: "Win Studios", provider: "https://casinogames.galaspins.com/htmllobby/images/newlmticons/square/ivylootenkhamun.jpg", vendorLogo: "https://casinogames.galaspins.com/htmllobby/images/newlmticons/vendorlogos/21.jpg", cta: this.UKPlayNow, isLaunchedFromUrl: g, section: this.data.gameLaunchedFrom || this.gameLaunchedFrom, position: this.data.gamePosition || this.gamePosition, gameContainer: this.game.gameContainer, gameContainerLocation: this.data.gameContainerLocation || this.gameContainerLocation + "QuickInfo", widgetFrameClr: this.data.widgetFrameClr || this.widgetFrameClr }; let p = this.bingoQuickInfo.open(G, { width: "790px", data: l }); p.afterClosed().subscribe(() => { this.quickInfoScrollY && window.scrollTo(0, this.quickInfoScrollY), this.isTouch && (this.recentlyPlayedTracking(), p.close()) }), setTimeout(() => { this.quickInfoOverlayTopAllignment() }, 0) } } recentlyPlayedTracking() { "RecentlyPlayed_widget_Favourites" != this.gameLaunchedFrom && "RecentlyPlayed_widget_RecentlyPlayed" != this.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "games", "component.LabelEvent": "game interactions", "component.ActionEvent": "close", "component.PositionEvent": this.data.gamePosition, "component.LocationEvent": "bacon", "component.EventDetails": "more info overlay", "component.URLClicked": "not applicable" }), document.getElementsByTagName("html")[0].classList.remove("casino-quickinfo-open") } handleQuickInfoonESC(t, a) { document.getElementsByTagName("html")[0].classList.remove("casino-quickinfo-open"), (!a || !a.noNavigation) && this.navigation.goTo(t), this.removeQuickInfoQueryParameterFromUrl(), this.quickInfoScrollY && window.scrollTo(0, this.quickInfoScrollY) } removeQuickInfoQueryParameterFromUrl() { let t = this.casinoNpmParamsService.getcasinoCoreNpmParams(); t && t.isDll && "Overlay" != this.game.gameContainer && "Widget" != this.game.gameContainer && window.history.pushState(location.href, "", location.href.substr(0, location.href.indexOf("game-info") - 1)) } launchGame(t, a) { this.data && this.data.gameLaunchedFrom && this.newQuickInfoStyle && ("RecentlyPlayed_widget_RecentlyPlayed" === this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_QuickInfo_Overlay", "component.ActionEvent": "CTA_Click", "component.PositionEvent": this.data.game.gameId + "_" + this.data.gamePosition, "component.LocationEvent": this.game.lobbyType }), this.data && this.data.gameLaunchedFrom && "RecentlyPlayed_widget_Favourites" === this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo_Overlay", "component.ActionEvent": "CTA_Click", "component.PositionEvent": this.data.game.gameId + "_" + this.data.gamePosition, "component.LocationEvent": this.game.lobbyType })), !this.newQuickInfoStyle && this.product && ("RecentlyPlayed_widget_RecentlyPlayed" === this.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_QuickInfo_Overlay", "component.ActionEvent": "CTA_Click", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.game.lobbyType }), "RecentlyPlayed_widget_Favourites" === this.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo_Overlay", "component.ActionEvent": "CTA_Click", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.game.lobbyType })), this.demoEnabled && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "Games Options", "component.LabelEvent": "Quick info overlay", "component.ActionEvent": "CTA - Clicked", "component.PositionEvent": this.gameTitle, "component.LocationEvent": a ? "Play Demo" : "Playnow", "component.EventDetails": "User clicked on CTA in the quick info overlay", "component.URLClicked": "Quick Info overlay - Enabled" }), this.isTouch && this.hideInfo(), "" == this.product && this.data && this.data.product && (this.product = this.data.product); let l = ""; if (this.casinoWidgetService.isCasinoWidget() ? l = document.referrer : this.isTouch ? "dice" == this.lobbyType.toLowerCase() && (l = this.productService.getMetadata("dicegames").apiBaseUrl + "/" + this.page.lang) : l = window.location.href, this.casinoManager.setGameHomeUrl(l), this.game.fromCozybingo) this.bingoGameLaunchService.initiateGameLaunch(t.name, "BINGO", t.bingo_type, "room", this.thumbImageSrc, t.id, !0, void 0, { position: this.gamePosition, section: this.gameLaunchedFrom, gameContainerLocation: this.gameContainerLocation, widgetFrameClr: this.widgetFrameClr }); else { let p = new c.Hq; p.game = t, p.isTouch = this.isTouch, p.gamePosition = this.gamePosition, p.categoryType = this.categoryType, p.from = "q", p.replaceRouteInHistory = !1, p.isDemoLaunch = a, p.skipUnfinGame = !1, p.gameLaunchedFrom = this.gameLaunchedFrom, p.gridPosition = this.gridPosition, p.specialProduct = this.product, p.gameContainer = this.game.gameContainer, p.clickTimeStamp = this.casinoCoreGameLaunchService.currentTimeStamp(), this.casinoCoreGameLaunchService.launchGame(p) } } toggleFavourite(t, a) { if (a.stopImmediatePropagation(), this.user.isAuthenticated) !this.isTouch && !this.newQuickInfoStyle && this.gameLaunchedFrom && ("RecentlyPlayed_widget_RecentlyPlayed" === this.gameLaunchedFrom || "RecentlyPlayed_widget_Favourites" === this.gameLaunchedFrom) && this.trackFavforDisbaledQuickInfoforDesktop(t), this.isTouch && this.data.gameLaunchedFrom && this.newQuickInfoStyle && ("RecentlyPlayed_widget_RecentlyPlayed" === this.data.gameLaunchedFrom || "RecentlyPlayed_widget_Favourites" === this.data.gameLaunchedFrom) && this.trackFavfromRpWidget(t), this.isTouch && !this.newQuickInfoStyle && this.data.gameLaunchedFrom && ("RecentlyPlayed_widget_RecentlyPlayed" === this.data.gameLaunchedFrom || "RecentlyPlayed_widget_Favourites" === this.data.gameLaunchedFrom) && this.trackFavforDisbaledQuickInfoforDesktop(t), this.favouriteService.toggleGameFavourite(t), this.isFavourite = !this.isFavourite; else { if (this.isTouch && this.hideInfo(), this.cookie.putObject("favouriteGame", t), this.casinoWidgetService.isCasinoWidget()) return void this.casinoWidgetService.postMessageToParent("UserAction", { promptLogin: !0, loginMessageKey: "Favourite" }); this.loginDialog.open({ loginMessageKey: "Favourite" }) } } trackFavforDisbaledQuickInfoforDesktop(t) { ("RecentlyPlayed_widget_RecentlyPlayed" === this.gameLaunchedFrom || "RecentlyPlayed_widget_Favourites" === this.gameLaunchedFrom) && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites", "component.ActionEvent": this.isFavouriteGame(t) ? "UnFavourited" : "Favourited", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.game.lobbyType }) } trackFavfromRpWidget(t) { "RecentlyPlayed_widget_RecentlyPlayed" === this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_QuickInfo_Overlay", "component.ActionEvent": this.isFavouriteGame(t) ? "UnFavourited" : "Favourited", "component.PositionEvent": t.gameId + "_" + this.gamePosition, "component.LocationEvent": this.game.lobbyType }), "RecentlyPlayed_widget_Favourites" === this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo_Overlay", "component.ActionEvent": this.isFavouriteGame(t) ? "UnFavourited" : "Favourited", "component.PositionEvent": t.gameId + "_" + this.gamePosition, "component.LocationEvent": t.lobbyType }) } hideInfo(t = null) { t && ("RecentlyPlayed_widget_RecentlyPlayed" === this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_QuickInfo_Overlay", "component.ActionEvent": "Close Overlay - Gradient Click", "component.PositionEvent": this.data.game.gameId + "_" + this.data.gamePosition, "component.LocationEvent": this.game.lobbyType }), "RecentlyPlayed_widget_Favourites" === this.data.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo_Overlay", "component.ActionEvent": "Close Overlay - Gradient Click", "component.PositionEvent": this.data.game.gameId + "_" + this.data.gamePosition, "component.LocationEvent": this.game.lobbyType }), this.demoEnabled && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "Games Options", "component.LabelEvent": "Quick info overlay", "component.ActionEvent": "CTA - Clicked", "component.PositionEvent": this.gameTitle, "component.LocationEvent": "close(x)", "component.EventDetails": "User clicked on CTA in the quick info overlay", "component.URLClicked": "Quick Info overlay - Enabled" })), this.recentlyPlayedTracking(), t && t.stopImmediatePropagation(), this.quickInfoService.closeGameQuickInfoDialog() } GameJackpotValue(t) { return this.jackpotservice.getGameJackpotValue(t.gameId) } isFavouriteGame(t) { return this.favouriteService.checkForFavouriteGame(t) } setImageIcon() { if (this.icon && this.icon.src && (this.src = JSON.parse(JSON.stringify(this.icon.src)), this.newQuickInfoStyle || this.useQuickInfo)) { let a = this.configProviderService.provideGameConfig(); this.mobileQuickInfoSrc = a.host + a.gameIconTemplate.replace("{0}", "square").replace("{1}", this.game.gameId) + ".jpg" } this.game.fromCozybingo && (this.src = this.game.sitecoreInfo.desktopImage.src), this.configProviderService.provideFeaturesConfig().enableGameIconTheming && (this.src = this.casinoLobbyService.appendTheme(this.src, this.game.gameId), this.mobileQuickInfoSrc = this.casinoLobbyService.appendTheme(this.mobileQuickInfoSrc, this.game.gameId)) } setPlayNowBtnWidth(t) { if (t && t.icon && !this.enableUkMouseOverStyle) { let a = this.configProviderService.provideGameConfig(); switch (a.iconTypeMapping[t.icon]) { case a.iconTypeMapping[0]: case a.iconTypeMapping[1]: this.playNowBtnWidth = 93; break; case a.iconTypeMapping[2]: this.playNowBtnWidth = 60; break; case a.iconTypeMapping[3]: this.playNowBtnWidth = 93; break; case a.iconTypeMapping[4]: this.playNowBtnWidth = 90; break; case a.iconTypeMapping[5]: this.playNowBtnWidth = 65 } } else this.playNowBtnWidth = 93 } openEmbeddedGameDailog(t = null) { this.dialog.open(c.Rv, { width: "790px", height: "779px", data: t }).afterClosed().subscribe(() => { }) } quickInfoOverlayTopAllignment() { this.configProviderService.provideFeaturesConfig().enableOverlayMobileSearchTopPosition && document.querySelector(".content-messages-header-top .content-message-container") && (document.querySelector(".casino-lobby-container-main .casino-qi-overlay") && (document.querySelector(".casino-lobby-container-main .casino-qi-overlay").style.top = document.querySelector(".content-messages-header-top .content-message-container").clientHeight + "px"), document.querySelector(".casino-lobby-container-main .casino-qi-noverlay") && (document.querySelector(".casino-lobby-container-main .casino-qi-noverlay").style.top = document.querySelector(".content-messages-header-top .content-message-container").clientHeight + "px")) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(d.WI), e.Y36(c.iX), e.Y36(r.f5Y), e.Y36(e.zs3), e.Y36(c.X9), e.Y36(d.uw), e.Y36(r.KDu), e.Y36(c.P1), e.Y36(c.io), e.Y36(r.N_8), e.Y36(c.cM), e.Y36(c.Gn), e.Y36(c.M3), e.Y36(e.SBq), e.Y36(d.uw), e.Y36(R.gz), e.Y36(c.B0), e.Y36(r.e2C), e.Y36(c.hY), e.Y36(r.U8N), e.Y36(c.nA), e.Y36(c.$l), e.Y36(c.BW), e.Y36(c._E), e.Y36(c.t$), e.Y36(r.t6E), e.Y36(r.M52), e.Y36(r.T3C), e.Y36(c.dk), e.Y36(Et)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-game-quick-info"]], hostBindings: function (t, a) { 1 & t && e.NdJ("resize", function () { return a.onResize() }, !1, e.Jf7) }, inputs: { game: "game", categoryType: "categoryType", gamePosition: "gamePosition", icon: "icon", gameLaunchedFrom: "gameLaunchedFrom", gameModel: "gameModel", gridPosition: "gridPosition", quickInfoScrollY: "quickInfoScrollY", product: "product", isLiveGame: "isLiveGame", liveGameInfo: "liveGameInfo", stickersArray: "stickersArray", lobbyType: "lobbyType", thumbImageSrc: "thumbImageSrc", widgetFrameClr: "widgetFrameClr", gameContainerLocation: "gameContainerLocation" }, features: [e.TTD], decls: 5, vars: 4, consts: [[1, "casino-lobby-container-main"], [4, "ngIf"], ["class", "casino-livecasino-m", 3, "ngClass", 4, "ngIf"], [1, "casino-qi-overlay", 3, "click"], [1, "casino-qi-rectangle"], [1, "casino-qi-game"], [1, "casino-qi-rectangle-int"], [1, "casino-qi-image"], [3, "src"], [1, "casino-qi-rectangle-right"], [1, "casino-qi-game-provider"], [1, "casino-qi-provider"], [1, "casino-qi-cta"], [1, "casino-qi-play-now", "btn", "btn-primary", 3, "click"], [2, "clear", "both"], [1, "casino-qi-gradient"], [1, "casino-qi-favourite", 3, "ngClass", "click"], [1, "casino-qi-noverlay", 3, "click"], [1, "casino-qi-nrectangle"], [1, "casino-total-data", "z-index-1"], [1, "casino-qi-nrectangle-int"], [1, "casino-qi-nimage"], [1, "casino-relativ-div-quickinfo"], [3, "demoEnabled", "stickers", "isTouch", "jackpotValue", "isHotJackpotGroup", "isStickersForUk", "lobbyType"], [1, "casino-qi-nrectangle-right"], [1, "casino-qi-ngame-provider"], [1, "close", "theme-close", "qi-close", 3, "click"], ["class", "casino-qi-nlogo", 4, "ngIf"], ["class", "casino-quickInfoReelsTopMobile", 4, "ngIf"], [1, "gamedata"], [1, "casino-qi-ngame", 3, "innerHTML"], [1, "casino-qi-btn-container", "casino-qi-btn-container-mobile"], ["class", "qi-margin-top casino-qi-demo-link", 3, "click", 4, "ngIf"], [1, "casino-qi-nplay-now", "btn", "qi-demo-btn", 3, "click"], [3, "rewardDetails", 4, "ngIf"], [1, "casino-qi-ngradient"], [1, "casino-qi-nfavourite", 3, "ngClass", "click"], [1, "casino-qi-nlogo"], [1, "casino-quickInfoReelsTopMobile"], ["class", "reels-dv casino-quickInfoReelsWidth", 4, "ngIf"], ["class", "paylines casino-quickInfoReelsWidth", 4, "ngIf"], ["class", "returntoplayer casino-quickInfoReelsWidth", 4, "ngIf"], [1, "reels-dv", "casino-quickInfoReelsWidth"], [1, "reelsValue"], ["class", "Reels", 4, "ngIf"], [1, "Reels"], [1, "paylines", "casino-quickInfoReelsWidth"], ["class", "Paylines", 4, "ngIf"], [1, "Paylines"], [1, "returntoplayer", "casino-quickInfoReelsWidth"], [1, "returnToPlayerValue"], ["class", "Return-to-Player", 4, "ngIf"], [1, "Return-to-Player"], [1, "gameData-body", 3, "innerHTML"], [1, "qi-margin-top", "casino-qi-demo-link", 3, "click"], [3, "ngStyle"], [3, "rewardDetails"], ["class", "casino-qi-container-d", 3, "click", 4, "ngIf"], ["class", "casino-rcnt-gyml-quick-container", 3, "click", 4, "ngIf"], [1, "casino-qi-container-d", 3, "click"], [3, "freespinAvailableCount", "freespinTotalCount", "isOptedIn", "freespinsInfo", 4, "ngIf"], ["class", "casino-game-fav-icon theme-favorite-i-non-touch", 3, "ngClass", "click", 4, "ngIf"], ["class", "casino-game-fav-icon theme-favorite-i-non-touch rcnt-gyml-quick-fav-icon", 3, "ngClass", "click", 4, "ngIf"], [1, "casino-qi-cta-container-d"], [1, "casino-qi-cta-btn-d", "btn", "btn-primary"], ["class", "overlay-moreinfo", 3, "click", 4, "ngIf"], [3, "freespinAvailableCount", "freespinTotalCount", "isOptedIn", "freespinsInfo"], [1, "casino-game-fav-icon", "theme-favorite-i-non-touch", 3, "ngClass", "click"], [1, "casino-game-fav-icon", "theme-favorite-i-non-touch", "rcnt-gyml-quick-fav-icon", 3, "ngClass", "click"], [1, "overlay-moreinfo", 3, "click"], [1, "casino-qi-gradient-d", 3, "ngStyle"], [1, "casino-qi-image-d", 3, "src"], [1, "casino-qi-detail-d"], ["class", "casino-qi-gamename-d", 3, "innerHTML", 4, "ngIf"], [1, "casino-qi-gamename-d", 3, "innerHTML"], [1, "casino-rcnt-gyml-quick-container", 3, "click"], [1, "rcnt-gyml-quick-gradient"], [1, "quick-image", 3, "src"], [1, "rcnt-gyml-quick-detail"], ["class", "rcnt-gyml-quick-gamename", 3, "innerHTML", 4, "ngIf"], [1, "rcnt-gyml-quick-gamename", 3, "innerHTML"], [1, "casino-livecasino-m", 3, "ngClass"], [1, "casino-qi-cta-container-d", 3, "ngClass"], ["class", "casino-qi-cta-btn-d btn btn-primary", 3, "width", 4, "ngIf"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0), e.YNc(1, yt, 20, 16, "div", 1), e.YNc(2, et, 28, 26, "div", 1), e.YNc(3, w, 4, 3, "div", 1), e.YNc(4, Fe, 9, 13, "div", 2), e.qZA()), 2 & t && (e.xp6(1), e.Q6J("ngIf", a.isTouch && !a.newQuickInfoStyle), e.xp6(1), e.Q6J("ngIf", a.isTouch && a.newQuickInfoStyle && a.loadQuickInfo), e.xp6(1), e.Q6J("ngIf", !a.isTouch && !a.isLiveGame), e.xp6(1), e.Q6J("ngIf", !a.isTouch && a.isLiveGame && a.isTableOnline)) }, directives: [Ln, pa, fa, o.O5, o.mk, o.PC], pipes: [o.gd, J.WL], encapsulation: 2 }), n })(), On = (() => { class n { constructor(t) { this.dialog = t } openQuickInfoDialog(t) { let a = this.dialog.open(xg, { width: "790px", data: t }); return this.dialogRef = a, a } closeQuickInfoDialog(t) { this.dialogRef && this.dialogRef.close(t) } openGameQuickInfoDialog(t) { let a = this.dialog.open(po, { data: t }); return this.gamedialogRef = a, a } closeGameQuickInfoDialog(t) { this.gamedialogRef && this.gamedialogRef.close() } getQuickInfoGameTitle() { let t = ""; return this.dialogRef && (t = this.dialogRef.componentInstance.gameTitle), t } } return n.\u0275fac = function (t) { return new (t || n)(e.LFG(d.uw)) }, n.\u0275prov = e.Yz7({ token: n, factory: n.\u0275fac, providedIn: "root" }), n })(); const Rg = { DiscoverFeedComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-discover-feed_mjs").then(i.bind(i, 34467)).then(n => n.DiscoverFeedModule) }, CozyBingoWidgetComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-cozy-bingo-widget_mjs").then(i.bind(i, 16986)).then(n => n.CozyBingoWidgetModule) }, LiveGamesIframeComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-live-games-section_mjs").then(i.bind(i, 44362)).then(n => n.LiveGamesIframeModule) }, JackpotwidgetComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-jackpot-widgets_mjs").then(i.bind(i, 78724)).then(n => n.JackpotWidgetModule) }, JackpotWidgetRedesignComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-jackpot-widgets_mjs").then(i.bind(i, 78724)).then(n => n.JackpotWidgetRedesignModule) }, MustGoJackpotRedesignComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-must-go-redesign_mjs").then(i.bind(i, 24098)).then(n => n.MustGoJackpotRedesignModule) }, LiveCasinoComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-livecasino_mjs").then(i.bind(i, 46433)).then(n => n.LiveCasinoModule) }, CasinoGameVideosComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-casino-game-videos_mjs").then(i.bind(i, 41099)).then(n => n.CasinoGameVideosModule) }, NewsFeedComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-news-feed-section_mjs").then(i.bind(i, 40545)).then(n => n.NewsFeedModule) }, ParallaxAnimationComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-parallax-animation_mjs").then(i.bind(i, 2225)).then(n => n.ParallaxAnimationModule) }, PromoOfferWidgetComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-promo-offer-widget_mjs").then(i.bind(i, 17631)).then(n => n.PromoOfferWidgetModule) }, PromoEdsWidgetComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-promo-eds-widget_mjs").then(i.bind(i, 46820)).then(n => n.PromoEdsWidgetModule) }, NewGridGameMetaDataComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-new-grid-game-me-e6bb74").then(i.bind(i, 41842)).then(n => n.NewGridGameMetaDataModule) }, TeasersComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-teasers_mjs").then(i.bind(i, 18206)).then(n => n.TeasersModule) }, TeasersWrapperComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-teasers_mjs").then(i.bind(i, 18206)).then(n => n.TeasersWrapperModule) }, SlotRacesComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-slot-races_mjs").then(i.bind(i, 46138)).then(n => n.SlotRacesModule) }, CasinoGameSelectorComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-casino-game-sele-a79837").then(i.bind(i, 85191)).then(n => n.CasinoGameSelectorModule) }, InstagramWrapperComponent: { loadChildren: () => i.e("Bwin_MobileCasino_Host_dist_casinocore_platform_fesm2015_casinocore-platform-instagram-sectio-2728d6").then(i.bind(i, 30626)).then(n => n.InstagramSectionWrapperModule) } }, wg = new e.OlP("LAZY_MODULES_MAP", { factory: () => Rg }); let Ug = (() => { class n { constructor(t, a, l) { this.injector = t, this.compiler = a, this.modulesMap = l } loadAndRenderLazyComponents(t, a) { return (0, W.mG)(this, void 0, void 0, function* () { const { type: l } = t; let p = this.modulesMap[l]; if (p) { let E, b = yield p.loadChildren(); return E = b instanceof e.YKP ? b : yield this.compiler.compileModuleAsync(b), E.create(this.injector).componentFactoryResolver.resolveComponentFactory(E.moduleType.rootComponent) } }) } } return n.\u0275fac = function (t) { return new (t || n)(e.LFG(e.zs3), e.LFG(e.Sil), e.LFG(wg)) }, n.\u0275prov = e.Yz7({ token: n, factory: n.\u0275fac, providedIn: "root" }), n })(), lt = (() => { class n { constructor(t) { this.lazyRouteService = t } ngOnInit() { this.lazyRouteService.loadAndRenderLazyComponents({ type: this.componentName }, this.casinoCoreLazyPlaceholdercontainer).then(a => { this.componentRef_ = this.casinoCoreLazyPlaceholdercontainer.createComponent(a); for (let l in this.inputData) this.componentRef_.instance[l] = this.inputData[l]; this.outputEvents && this.outputEvents.forEach(l => { this.componentRef_.instance[l.eventName].subscribe(g => { l.callback(g) }) }) }) } ngOnChanges() { if (this.componentRef_) { for (let t in this.inputData) this.componentRef_.instance[t] = this.inputData[t]; try { this.componentRef_.instance.ngOnChanges() } catch (t) { } } } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(Ug)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-casino-core-lazy-placeholder"]], viewQuery: function (t, a) { if (1 & t && e.Gf(Ee, 7, e.s_b), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.casinoCoreLazyPlaceholdercontainer = l.first) } }, inputs: { componentName: "componentName", inputData: "inputData", outputEvents: "outputEvents" }, features: [e.TTD], decls: 2, vars: 0, consts: [["casinoCoreLazyTemplate", ""]], template: function (t, a) { 1 & t && e.YNc(0, ye, 0, 0, "ng-template", null, 0, e.W1O) }, encapsulation: 2 }), n })(), Fi = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z, q, X, ee, fe, Ue, Xe, nt, Wt, Zi, Hi, Qi, zi, ji, qi) { this.dialogRef = t, this.jackpot = a, this.user = l, this.elementRef = g, this.openLoginDialog = p, this.favouriteService = b, this.cookie = E, this.gameDataManager = L, this.casinoManager = O, this.dialog = U, this.recentGamesService = K, this.liveCasinoService = z, this.tracking = q, this.casinoWidgetService = X, this.bingoGameLaunchService = ee, this.freespinSummaryService = fe, this.configProviderService = Ue, this.fastLoadingGamesService = Xe, this.casinoLobbyService = nt, this.casinoCoreGameLaunchService = Wt, this.casinoIFrameOverlayService = Zi, this.slotRacesService = Hi, this.timerService = Qi, this.casinoNpmParamsService = zi, this.quickInfoService = ji, this.libMockService = qi, this.product = "", this.widgetFrameClr = "", this.mouseHoveredOnGame = !1, this.QuickInfoVisible = "", this.gameClass = [], this.stickers = [], this.icon = { src: "" }, this.quickInfoIcon = { src: "" }, this.favouriteStyle = "theme-favorite-i", this.unFavouriteStyle = "theme-favorite", this.playNowHoverEffect = !1, this.quickInfoScrollY = 0, this.availableCount = 0, this.totalCount = 0, this.showFreeSpinCount = !1, this.races = [], this.getStickerColor = Vi => this.isStickersForUk ? Vi % 2 == 0 ? this.globalConfig.messages.UkStickerStyle1 : this.globalConfig.messages.UkStickerStyle2 : this.globalConfig.messages.GameStickerStyle, this.libMockService.setQuickInfoService(this.quickInfoService) } ngOnInit() { this.isTouch = this.casinoManager.isTouch(), this.currentLobbyType = this.game.lobbyType, this.assignFeatures(); let t = this.configProviderService.provideLiveCasinoConfig(); this.isLiveCasinoEnabled = this.casinoManager.IsFeatureEnabledforLobbytype(this.game.lobbyType, t.enableLobbyType), this.setStickers(), this.checkforLatestStickers(this.recentGamesService.getrecentGames()), this.isSignPosting && this.game.sticker && this.game.sticker.indexOf("LMS_LATEST") > -1 && (this.recentObs = this.recentGamesService.recentGamesFeedObservable.subscribe(a => { a && this.checkforLatestStickers(a) })), this.setGameIconSrc(), this.setJackPotValue(), this.subscribtToJackpotFeed(), this.enableQuickInfoforLiveCasinoApi = t.enableQuickInfo, this.enableFavouriteGamesforLiveCasinoApi = t.enableFavouriteGames, this.liveCasinoApiSubscriber = this.liveCasinoService.liveGamesFeedObservable.subscribe(a => { a && a.size >= 0 && this.setLiveGameInfo() }), this.setLiveGameInfo(), this.enableFreeSpinSummary = this.configProviderService.providefreeSpinsClientConfig().isFreeSpinSummaryEnabled, this.enableFreeSpinSummary && (this.freespinObservable = this.freespinSummaryService.freeSpinsGameDetailsObser.subscribe(a => { a && this.bindFreeSpinInfo() })), this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(a => { a && a.size > 0 && this.setFastLoading(a) }), this.setGameTitle(), this.gameContainerLocation = "Widget|" + this.product, this.slotRacesConfig && this.setSlotRaceStickers() } setFastLoading(t) { if (t && t.size > 0) for (let a of t) if (a[0] == this.game.gameId) { this.game.isFastLoadingGame = !0; break } } assignFeatures() { let t = this.configProviderService.provideFeaturesConfig(); this.useFavouriteGames = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, t.favouriteGamesLobbyType), this.showGameTitle = t.showGameTitle, this.isStickersForUk = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, t.stickersForUk), this.playNowHoverEffect = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, t.playNowHoverEffect), this.useQuickInfo = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, t.enableQuickInfoLobbyType), this.isAnchorTagVisible = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, t.isAnchorTagVisibleOnQuickInfo), this.newJackpotRibbonStyling = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, t.newJackpotRibbonStyling), this.enableUkMouseOverStyle = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, t.enableUkMouseOverStyle), this.enableHotIcon = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, t.enableHotIcon), this.isSignPosting = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, t.enableSignpostingSticker); let a = this.configProviderService.provideGameConfig(); this.hotIcon = a.host + "/htmllobby/images/newlmticons/square/hotjackpot.png"; let l = this.configProviderService.provideJackpotConfig(); this.showJackpotOnGameTiles = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, l.showJackpotOnGameTilesLobbyType), this.enableTickingForJackpotOnGameTiles = this.casinoManager.IsFeatureEnabledforLobbytype(this.currentLobbyType, l.enableJpTickingForLobbyType), this.globalConfig = this.configProviderService.provideGlobalConfig(), this.widgetRecommended = this.globalConfig.messages.WidgetRecommended, this.widgetRecommendedTxtClr = this.globalConfig.messages.widgetRecommendedTxtclr, this.widgetRecommendedBgClr = this.globalConfig.messages.widgetRecommendedBGclr, this.promotedGameText = this.globalConfig.lobbyConfigurations.PromotedGamesText, this.promotedGameBackgroundColor = this.globalConfig.lobbyConfigurations.promotedGamesFrameColor, this.promotedGameTextColor = this.globalConfig.lobbyConfigurations.promotedGamesTextColor, this.unfinishedBG = this.globalConfig.unfinishedStyle.unfinishedBackground ? this.globalConfig.unfinishedStyle.unfinishedBackground : "transparent", this.globalConfig.lobbyConfigurations.FavouriteHeart && "true" === this.globalConfig.lobbyConfigurations.FavouriteHeart.toLowerCase() && (this.favouriteStyle = "theme-heart-solid", this.unFavouriteStyle = "theme-heart-outline"); let g = this.configProviderService.provideSlotRacesConfig(); this.slotRacesConfig = g.enableSlotRacesStickers } bindFreeSpinInfo() { this.setfreeSpinsCount(this.freespinSummaryService.getFreespinCountInfoForGame(this.game.gameId)) } setfreeSpinsCount(t) { this.freespinCountGame = t, null != this.freespinCountGame ? (this.showFreeSpinCount = !0, this.optedIn = this.freespinCountGame.optedIn, this.availableCount = this.freespinCountGame.availableCount, this.totalCount = this.freespinCountGame.totalCount) : this.showFreeSpinCount = !1 } ngAfterViewInit() { this.isStickersForUk ? this.gameStickerStyleForUk() : this.gameStickerStyle() } ngOnChanges() { this.currentLobbyType = this.game.lobbyType, this.assignFeatures(), this.enableFreeSpinSummary && this.bindFreeSpinInfo(), this.setFastLoading(this.fastLoadingGamesService.getFastLoadingGamesLookUp()) } assignRecommendedWidgetColors() { return this.casinoWidgetService.isCasinoWidget() ? "gyml-frame-casinowidget" : "gyml-frame-casino" } assignPromotedGameThumbail(t) { if (t.isPromoted) return "promoted-games-outerframe-casino" } checkforLatestStickers(t) { this.setStickers(), this.stickers && this.stickers.length > 0 && this.stickers.forEach((a, l) => { a.indexOf("LMS_LATEST") > -1 && (t && t.length > 0 && t.indexOf(this.game.gameId) > -1 ? this.stickers.splice(l, 1) : this.stickers[l] = this.stickerMap.get(this.stickers[l]), this.stickers = Array.from(new Set(this.stickers))) }) } setStickers() { this.stickers = []; let t = []; if (this.stickerMap = this.casinoLobbyService.getStickerMap(this.currentLobbyType), this.game.sticker && -1 !== this.game.sticker.indexOf("#")) { let a = this.game.sticker.split("#"); if (this.isStickersForUk && this.stickerMap && this.stickerMap.size > 0 && a && a.length > 0) { for (let l = 0; l < a.length; l++) { let g = "LMS_LATEST" === a[l] ? a[l] : this.stickerMap.get(a[l]); g && "" != g && t.push(g) } this.stickers = t } else if (this.stickerMap && this.stickerMap.size > 0 && a && a.length > 0) { let l = "LMS_LATEST" === a[0] ? a[0] : this.stickerMap.get(a[0]); l && this.stickers.push(l) } } else if (this.game.sticker && this.stickerMap && this.stickerMap.size > 0) { let a = "LMS_LATEST" === this.game.sticker ? this.game.sticker : this.stickerMap.get(this.game.sticker); this.stickers = [a] } } ngOnDestroy() { this.jackpotHandle && this.jackpotHandle.unsubscribe(), this.liveCasinoApiSubscriber && this.liveCasinoApiSubscriber.unsubscribe(), this.recentObs && this.recentObs.unsubscribe(), this.freespinObservable && this.freespinObservable.unsubscribe(), this.slotRacesStickerTimeOut && clearTimeout(this.slotRacesStickerTimeOut), this.slotRacesStickerDataSubScription && this.slotRacesStickerDataSubScription.unsubscribe() } showUnfinishedBadge() { } setGameTitle() { this.game && (this.gameTitle = this.game.name) } mouseOver(t) { this.mouseHoveredOnGame = !0, !this.isTouch && this.mouseHoveredOnGame && (this.QuickInfoVisible = t, this.isLiveGame ? this.isTableOnline && (this.onLivecasinoMouseHover = !0, this.onLivecasinoMouseLeave = !0) : this.enableUkMouseOverStyle && (this.onMouseHover = !0, this.onMouseLeave = !0)) } gameStickerStyle() { let a = this.configProviderService.provideGlobalConfig().messages.GameStickerStyle, l = this.elementRef.nativeElement.querySelectorAll(".promo-text-badge-0"); for (let g = 0; g < l.length; g++)l[g].style.cssText = a } gameStickerStyleForUk() { let t = this.configProviderService.provideGlobalConfig(), a = t.messages.UkStickerStyle1, l = this.elementRef.nativeElement.querySelectorAll(".promo-text-badge-0"); for (let b = 0; b < l.length; b++)l[b].style.cssText = a; let g = t.messages.UkStickerStyle2, p = this.elementRef.nativeElement.querySelectorAll(".promo-text-badge-1"); for (let b = 0; b < p.length; b++)p[b].style.cssText = g } mouseLeave() { this.isTouch || (this.QuickInfoVisible = "", this.visiblestatus = !1, this.mouseHoveredOnGame = !1, this.enableUkMouseOverStyle && (this.onMouseHover = !1, this.onMouseLeave = !1), this.isLiveGame && (this.onLivecasinoMouseHover = !1, this.onLivecasinoMouseLeave = !1)) } hideQuickInfo() { window.scrollTo(0, this.quickInfoScrollY), this.removeQuickInfoQueryParameterFromUrl() } setJackPotValue() { var t, a, l, g; let p = this.jackpot.getGameJackpotValue(this.game.gameId), b = this.configProviderService.provideJackpotConfig(); p && (this.game.jackpotValue = p.amount, this.game.isHotJackpotGroup = p.isHotJackpotGroup, b.enableRibbonConfig && (this.game.jpBgColor = null === (t = null == p ? void 0 : p.jackpotAttributes) || void 0 === t ? void 0 : t.JackpotRibbonBgColor, this.game.jpTextCOlor = null === (a = null == p ? void 0 : p.jackpotAttributes) || void 0 === a ? void 0 : a.JackpotRibbonTextColor, (null == p ? void 0 : p.globalJackpotAttributes) && (this.game.jpBgColor = null === (l = null == p ? void 0 : p.globalJackpotAttributes) || void 0 === l ? void 0 : l.JackpotRibbonBgColor, this.game.jpTextCOlor = null === (g = null == p ? void 0 : p.globalJackpotAttributes) || void 0 === g ? void 0 : g.JackpotRibbonTextColor))) } subscribtToJackpotFeed() { this.jackpotHandle = this.jackpot.jackpotFeedObservable.subscribe(t => { this.setJackPotValue() }), this.enableTickingForJackpotOnGameTiles && this.jackpot.jpTickingObservable.subscribe(t => { this.setJackPotValue() }) } toggleFavourite(t, a) { if (a.stopImmediatePropagation(), this.user.isAuthenticated) this.gameLaunchedFrom && ("RecentlyPlayed_widget_RecentlyPlayed" === this.gameLaunchedFrom || "RecentlyPlayed_widget_Favourites" === this.gameLaunchedFrom) && this.trackFavfromRpWidget(t), this.favouriteService.toggleGameFavourite(t); else { if (this.cookie.putObject("favouriteGame", t), this.casinoWidgetService.isCasinoWidget()) return void this.casinoWidgetService.postMessageToParent("UserAction", { promptLogin: !0, loginMessageKey: "Favourite" }); this.openLoginDialog.open({ loginMessageKey: "Favourite" }) } } trackFavfromRpWidget(t) { this.currentLobbyType = this.game.lobbyType, ("RecentlyPlayed_widget_RecentlyPlayed" === this.gameLaunchedFrom || "rpWidgRecentlyPlayed_widget_FavouritesetFAV" === this.gameLaunchedFrom) && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites", "component.ActionEvent": this.isFavouriteGame(t) ? "UnFavourited" : "Favourited", "component.PositionEvent": t.gameId + "_" + this.gamePosition, "component.LocationEvent": this.currentLobbyType }) } isFavouriteGame(t) { return this.favouriteService.checkForFavouriteGame(t) } action(t, a) { let l = this.configProviderService.provideGameConfig(), g = ""; g = this.casinoIFrameOverlayService.isOverLayOnAProduct() || this.casinoWidgetService.isCasinoWidget() ? document.referrer : window.location.href, this.demoEnabled = l.enableDemoMode; let p = new c.Hq; p.game = t, p.isTouch = this.isTouch, p.gamePosition = this.gamePosition, p.categoryType = this.category.categoryid, p.from = a, p.replaceRouteInHistory = !1, p.isDemoLaunch = !1, p.skipUnfinGame = !1, p.gameLaunchedFrom = this.gameLaunchedFrom, p.gridPosition = this.category.categoryIndex, p.gameContainer = t.gameContainer, p.clickTimeStamp = this.casinoCoreGameLaunchService.currentTimeStamp(), this.casinoCoreGameLaunchService.launchGame(p) } setGameIconSrc() { if (!this.game.isDataNotAvailable) { if (this.game.icon && this.game.icon.src) this.icon.src = this.quickInfoIcon.src = this.game.icon.src; else { let t = this.configProviderService.provideGameConfig(), a = this.category.gamesModel && this.category.gamesModel.filter(l => l.game === this.game.gameId); if (a && a[0]) { let l = t.host + t.gameIconTemplate.replace("{0}", this.gameDataManager.getGameIcon(a[0])).replace("{1}", a[0].game) + "." + this.gameDataManager.getGameFormat(a[0]); this.icon.src = this.quickInfoIcon.src = l } else { let l = t.host + t.gameIconTemplate.replace("{0}", this.gameDataManager.getGameIcon(this.game.gameId)).replace("{1}", this.game.gameId) + "." + this.gameDataManager.getGameFormat(this.game.gameId); this.icon.src = this.quickInfoIcon.src = l } } this.icon.gameTileBorderRadius = this.game.gameTileBorderRadius, this.icon.gameTileDropShadow = this.game.gameTileDropShadow } } displayQuickInfo(t) { this.quickInfoScrollY = window.pageYOffset, this.appendQuickInfoQueryParameterToUrl(), document.getElementsByTagName("html")[0].classList.add("casino-quickinfo-open"), "RecentlyPlayed_widget_RecentlyPlayed" === this.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_QuickInfo", "component.ActionEvent": "Info_click", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.game.lobbyType }), "RecentlyPlayed_widget_Favourites" === this.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo", "component.ActionEvent": "Info_click", "component.PositionEvent": this.game.gameId + "_" + this.gamePosition, "component.LocationEvent": this.game.lobbyType }), "RecentlyPlayed_widget_RecentlyPlayed" != this.gameLaunchedFrom && "RecentlyPlayed_widget_Favourites" != this.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "games", "component.LabelEvent": "game interactions", "component.ActionEvent": "click", "component.PositionEvent": this.gamePosition, "component.LocationEvent": "bacon", "component.EventDetails": "more info icon", "component.URLClicked": "not applicable" }), this.quickInfoService.openGameQuickInfoDialog({ game: this.game, gamePosition: this.gamePosition, gameLaunchedFrom: this.gameLaunchedFrom, categoryType: this.category.categoryid, icon: this.icon, stickers: this.stickers, gridPosition: this.category.categoryIndex, gameModel: this.gameModel, product: this.product, widgetFrameClr: this.widgetFrameClr, gameContainerLocation: this.gameContainerLocation + "QuickInfo", lobbyType: this.currentLobbyType, moreInfoText: "moreInfoEvent" }).afterClosed().subscribe(() => { this.hideQuickInfo() }), t && t.stopImmediatePropagation() } appendQuickInfoQueryParameterToUrl() { let t = this.casinoNpmParamsService.getcasinoCoreNpmParams(); if (t && t.isDll && (null == this.game.fromCasino || this.game.fromCasino) && "Overlay" != this.game.gameContainer && "Widget" != this.game.gameContainer) { let l, a = window.location.href, g = ""; this.urlHasQueryStrings(a) ? (l = a.substr(0, a.indexOf("?")), g = a.substr(a.indexOf("?"))) : l = a, l = this.isUrlEndsWithSlash(l) ? l + "game-info/" + this.game.gameId : l + "/game-info/" + this.game.gameId, l += g, window.history.pushState(location.href, "", l) } } removeQuickInfoQueryParameterFromUrl() { let t = this.casinoNpmParamsService.getcasinoCoreNpmParams(); t && t.isDll && (null == this.game.fromCasino || this.game.fromCasino) && "Overlay" != this.game.gameContainer && "Widget" != this.game.gameContainer && window.history.pushState(location.href, "", location.href.substr(0, location.href.indexOf("game-info") - 1)) } setLiveGameInfo() { this.game && this.game.gameId && (this.liveGameInfo = this.liveCasinoService.getLiveGameLookUpInfo(this.game.gameId.toLowerCase())), this.isLiveGame = !!this.liveGameInfo, this.game && this.game.gameId && (this.isTableOnline = this.liveCasinoService.isTableOnline(this.game.gameId.toLowerCase())) } onLiveCasinoTableTimerEnd(t) { t && (this.isTableOnline = t) } isUrlEndsWithSlash(t) { if (t.lastIndexOf("/") + 1 === t.length) return !0 } urlHasQueryStrings(t) { return !!(t && t.indexOf("?") > -1) } setSlotRaceStickers() { this.slotRacesStickerDataSubScription = this.slotRacesService.stickerRacesData.subscribe(t => { if (t.size > 0) { let l, a = t.get(this.game.gameId); if (a) { this.isStickerEnabled = !0; let g = a.data.stickerText; g.length > 0 && (this.stickers = [g]), l = a.data && a.data.optinExpiryDate && a.data.optinExpiryDate.getTime(), !this.slotRacesStickerTimeOut && l > Date.now() && (this.slotRacesStickerTimeOut = this.timerService.setTimeout(() => { this.setStickers(), this.slotRacesStickerTimeOut = null }, l - Date.now())) } } }) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(d.so), e.Y36(c.Gn), e.Y36(r.KDu), e.Y36(e.SBq), e.Y36(c.P1), e.Y36(c.io), e.Y36(r.N_8), e.Y36(c.cM), e.Y36(c.M3), e.Y36(d.uw), e.Y36(c.vD), e.Y36(c.B0), e.Y36(r.e2C), e.Y36(c.hY), e.Y36(c.BW), e.Y36(c.t$), e.Y36(c.iX), e.Y36(c.$Q), e.Y36(c.nA), e.Y36(c.$l), e.Y36(c.Sy), e.Y36(c.Tq), e.Y36(r.fWh), e.Y36(c.dk), e.Y36(On), e.Y36(Et)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-game-lobby"]], viewQuery: function (t, a) { if (1 & t && e.Gf(Re, 5), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.gameref = l.first) } }, inputs: { category: "category", game: "game", radius: "radius", gamePosition: "gamePosition", gameLaunchedFrom: "gameLaunchedFrom", gameModel: "gameModel", product: "product", widgetFrameClr: "widgetFrameClr", gameIndex: "gameIndex" }, features: [e.TTD], decls: 11, vars: 26, consts: [[1, "casino-verticalicon-games", 3, "ngClass"], [1, "casino-game-cls", 3, "ngClass", "ngStyle", "mouseover", "mouseleave"], ["gameref", ""], ["class", "casino-overlay-bg", 3, "ngStyle", 4, "ngIf"], ["class", "casino-livecasino-overlay-bg", 4, "ngIf"], [3, "freespinAvailableCount", "freespinTotalCount", "isOptedIn", "freespinsInfo", 4, "ngIf"], [3, "game", "gamePosition", "categoryType", "icon", "quickInfoScrollY", "gameLaunchedFrom", "widgetFrameClr", "gridPosition", "gameModel", "isLiveGame", "gameContainerLocation", "liveGameInfo", "product", "stickersArray", "lobbyType", "hide", 4, "ngIf"], ["class", "game-image-link", 3, "ngStyle", "click", 4, "ngIf"], ["Favourite", ""], ["class", "game-title", 4, "ngIf"], [1, "casino-overlay-bg", 3, "ngStyle"], [1, "casino-livecasino-overlay-bg"], [3, "freespinAvailableCount", "freespinTotalCount", "isOptedIn", "freespinsInfo"], [3, "game", "gamePosition", "categoryType", "icon", "quickInfoScrollY", "gameLaunchedFrom", "widgetFrameClr", "gridPosition", "gameModel", "isLiveGame", "gameContainerLocation", "liveGameInfo", "product", "stickersArray", "lobbyType", "hide"], [1, "game-image-link", 3, "ngStyle", "click"], [3, "inputData", "componentName", 4, "ngIf"], [3, "icon", "iconType", "gameInfo", "format", "forcevisible", "alt", 4, "ngIf"], [3, "outputEvents", "inputData", "componentName", 4, "ngIf"], [1, "game-icon-bottom-wrapper"], ["style", "visibility: hidden;", 3, "href", 4, "ngIf"], ["class", "jackpot", 3, "ngStyle", "ngClass", "hidden", 4, "ngIf"], ["class", "casino-game-fav-icon casino-mobile-fav theme-info casino-quick-info rcntly-gyml-quick-info rp-i-fav-icon", 3, "ngClass", "click", 4, "ngIf", "ngIfElse"], ["class", "fast-loading-game", 3, "hidden", "ngClass", 4, "ngIf"], [3, "ngClass", 4, "ngIf"], [3, "ngClass", "background-color", "color", 4, "ngIf"], ["class", "casino-bageUnfinished", 3, "hidden", 4, "ngIf"], ["class", "game-badge", 3, "hidden", "ngClass", 4, "ngIf"], [3, "inputData", "componentName"], [3, "icon", "iconType", "gameInfo", "format", "forcevisible", "alt"], [3, "outputEvents", "inputData", "componentName"], [2, "visibility", "hidden", 3, "href"], [1, "jackpot", 3, "ngStyle", "ngClass", "hidden"], ["class", "hot-icon", 4, "ngIf"], [1, "jp-value"], [1, "hot-icon"], [3, "src"], [1, "casino-game-fav-icon", "casino-mobile-fav", "theme-info", "casino-quick-info", "rcntly-gyml-quick-info", "rp-i-fav-icon", 3, "ngClass", "click"], [1, "fast-loading-game", 3, "hidden", "ngClass"], ["src", "/pictures/Fast-Loading-Game-Animation.gif"], [3, "ngClass"], [1, "casino-bageUnfinished", 3, "hidden"], [3, "key"], [1, "game-badge", 3, "hidden", "ngClass"], ["class", "promo-text", 3, "style", "ngClass", 4, "ngFor", "ngForOf"], [1, "promo-text", 3, "ngClass"], ["class", "casino-game-fav-icon casino-mobile-fav fav", 3, "ngClass", "click", 4, "ngIf"], [1, "casino-game-fav-icon", "casino-mobile-fav", "fav", 3, "ngClass", "click"], [1, "game-title"], [3, "click"], [4, "ngIf"], [1, "icon", "theme-info", 3, "click"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0)(1, "div", 1, 2), e.NdJ("mouseover", function () { return a.mouseOver(a.game.gameId + a.category.categoryid) })("mouseleave", function () { return a.mouseLeave() }), e.YNc(3, Ce, 1, 3, "div", 3), e.YNc(4, dt, 1, 0, "div", 4), e.YNc(5, Ne, 1, 3, "cc-freespin-summary", 5), e.YNc(6, ze, 1, 15, "cc-game-quick-info", 6), e.YNc(7, Oo, 13, 18, "a", 7), e.YNc(8, Ke, 1, 1, "ng-template", null, 8, e.W1O), e.YNc(10, Xi, 4, 2, "div", 9), e.qZA()()), 2 & t && (e.Udp("border-color", a.promotedGameBackgroundColor), e.Q6J("ngClass", a.assignPromotedGameThumbail(a.game)), e.xp6(1), e.ekj("casino-playbtn-hover-effect", a.playNowHoverEffect), e.Q6J("ngClass", e.rFY(13, ko, [a.showJackpotOnGameTiles && !a.game.jackpotValue && a.isTouch, a.onMouseHover && !a.isTouch, a.useQuickInfo, a.isLiveCasinoEnabled, a.onLivecasinoMouseHover && !a.isTouch && a.liveGameInfo && a.liveGameInfo.tableStatus, a.isLiveGame, a.enableFavouriteGamesforLiveCasinoApi, !a.isTableOnline, "6" == a.game.iconType || "-6" == a.game.iconType, "7" == a.game.iconType || "-7" == a.game.iconType]))("ngStyle", e.VKq(24, xo, null == a.game ? null : a.game.gameTileDropShadow)), e.xp6(2), e.Q6J("ngIf", a.onMouseLeave && a.enableUkMouseOverStyle && !a.isTouch), e.xp6(1), e.Q6J("ngIf", a.onLivecasinoMouseLeave && a.isLiveGame && !a.isTouch && a.liveGameInfo.tableStatus), e.xp6(1), e.Q6J("ngIf", a.showFreeSpinCount), e.xp6(1), e.Q6J("ngIf", a.QuickInfoVisible && a.QuickInfoVisible === a.game.gameId + a.category.categoryid), e.xp6(1), e.Q6J("ngIf", a.game.icon), e.xp6(3), e.Q6J("ngIf", a.showGameTitle)) }, directives: [fa, po, lt, c.gB, r.MIT, c.yV, o.mk, o.PC, o.O5, o.sg], encapsulation: 2 }), n })(), ti = (() => { class n { constructor(t, a, l, g) { this.configProviderService = t, this.casinoManager = a, this.casinoWidgetService = l, this.deviceService = g, this.EnableFutureGrid = !0, this.currentIndex = 0, this.currentSlideCount = 12, this.multiRowScrollGameArray = new Array, this.gutterSize = "0px", this.rowHeight = "1:1", this.loadNextGames = new e.vpe, this.carouselDataEvent = new e.vpe, this.carouselConfigNonTouch = { grid: { xs: 3, sm: 6, md: 6, lg: 6, all: 0 }, slide: 6, speed: 400, point: { visible: !1 }, loop: !1, touch: !1 } } ngOnInit() { this.resizeSubscriber = this.casinoManager.reSizeObservable.subscribe(t => { t && this.setInfoClassIconForGames() }), this.isCrossSaleIOS = this.casinoWidgetService.isCasinoWidget() && this.deviceService.isiOS, this.isPreButtonVisible = !0, setTimeout(() => { this.loadNextGames.emit() }, 0), this.changeCarouselView && !this.isTouch && this.emitCarouselData() } onmoveFn(t) { this.isPreButtonVisible = t.isFirst, this.isNextButtonVisible = t.isLast, this.changeCarouselView && !this.isTouch && this.emitCarouselData() } ngOnDestroy() { this.resizeSubscriber.unsubscribe() } prevItem() { this.desktopGamesCarousel.moveTo(this.desktopGamesCarousel.activePoint - 1) } nextItem() { this.desktopGamesCarousel.moveTo(this.desktopGamesCarousel.activePoint + 1) } emitCarouselData() { this.carouselDataEvent.emit({ showArrows: "scrollable-games" == this.Type && !(this.isPreButtonVisible && this.isNextButtonVisible), disablePrev: this.isPreButtonVisible, disableNext: this.isNextButtonVisible }) } ngOnChanges(t) { var a, l; "scrollable-games" == this.Type && this.isTouch && this.subcategory.categoryWithMultipleGameIconTypes && (this.Type = "scrollable-games-multiple-icons"), this.newFeatureGridArr || (this.newFeatureGridArr = this.games), (t.subcategory || (null === (l = null === (a = this.subcategory) || void 0 === a ? void 0 : a.categoryid) || void 0 === l ? void 0 : l.toLowerCase()) === c.W7.FAVOURITE_GAMES_CATEGORY_ID && this.detectGamechangesLength(t)) && (this.refreshGrid(), this.desktopGamesCarousel && this.desktopGamesCarousel.moveTo(0)), (t.subcategory || this.detectGamechangesLength(t)) && this.setInfoClassIconForGames(), this.games && this.games.length ? (this.jackpot_justify_center_icon_7_xs = 1 == this.games.length && this.subcategory.isIconSevenCategory && this.gameLaunchedFrom == "JackpotWidget_" + this.subcategory.engCategoryName, this.jackpot_justify_center_icon_7_sm = 2 == this.games.length && this.subcategory.isIconSevenCategory && this.gameLaunchedFrom == "JackpotWidget_" + this.subcategory.engCategoryName, this.isNextButtonVisible = "-1" !== this.subcategory.rowCount && "-2" !== this.subcategory.rowCount && "-3" !== this.subcategory.rowCount || !(this.games.length > this.carouselConfigNonTouch.grid.lg * Math.abs(this.subcategory.rowCount))) : this.isNextButtonVisible = !0, this.changeCarouselView && !this.isTouch && this.emitCarouselData() } detectGamechangesLength(t) { return !(!t.games || (t.games.previousValue && t.games.previousValue.length) === (t.games.currentValue && t.games.currentValue.length)) } refreshGrid() { var t, a, l; if (this.currentSlideCount = 12, (null === (t = this.subcategory) || void 0 === t ? void 0 : t.isIconSevenCategory) && (this.gutterSize = "3px", this.rowHeight = "112", this.carouselConfigNonTouch = { grid: { xs: 1, sm: 2, md: 4, lg: 4, all: 0 }, slide: 6, speed: 400, point: { visible: !1 }, loop: !1, touch: !1 }), this.windowWidth(document.body.offsetWidth), this.subcategory.rowCount || (this.subcategory.rowCount = 0), "1" === this.subcategory.rowCount || "2" === this.subcategory.rowCount) for (let g = 0; g < this.games.length; g++)this.currentSlideCount > 0 && (this.currentSlideCount = "1" == this.games[g].iconType ? this.currentSlideCount - 1 : "2" == this.games[g].iconType || "3" == this.games[g].iconType ? this.currentSlideCount - 2 : "4" == this.games[g].iconType ? this.currentSlideCount - 4 : "6" == this.games[g].iconType ? this.currentSlideCount - 1 : "7" == this.games[g].iconType ? this.isTouch ? this.currentSlideCount - 2 : this.currentSlideCount - 1.5 : this.isTouch ? this.currentSlideCount - 4 : this.currentSlideCount - 6, this.currentIndex = g + 1); else this.currentIndex = null === (l = null === (a = this.subcategory) || void 0 === a ? void 0 : a.gamelist) || void 0 === l ? void 0 : l.length } onResize() { this.isCrossSaleIOS || ((!this.windowInnerWidth || this.windowInnerWidth !== document.body.offsetWidth) && this.windowWidth(document.body.offsetWidth), this.desktopGamesCarousel && this.desktopGamesCarousel.ngAfterViewInit()) } windowWidth(t) { let a = this.configProviderService.provideFeaturesConfig(); if (this.windowInnerWidth = t, this.games && this.games.length > 0 && !this.isTouch && this.EnableFutureGrid) switch (this.games[0].iconType) { case "1": case "3": default: this.carouselConfigNonTouch.grid.sm = 3, this.carouselConfigNonTouch.grid.md = 6, this.carouselConfigNonTouch.grid.lg = 6; break; case "2": case "4": this.carouselConfigNonTouch.grid.sm = 3, this.carouselConfigNonTouch.grid.md = 3, this.carouselConfigNonTouch.grid.lg = 3; break; case "5": this.carouselConfigNonTouch.grid.sm = 2, this.carouselConfigNonTouch.grid.md = 2, this.carouselConfigNonTouch.grid.lg = 2; break; case "7": this.carouselConfigNonTouch.grid.xs = 1, this.carouselConfigNonTouch.grid.sm = 2, this.carouselConfigNonTouch.grid.md = 4, this.carouselConfigNonTouch.grid.lg = 4 }if (this.games && this.games.length > 0 && this.isTouch) switch (this.games[0].iconType) { case "1": case "3": case "6": this.carouselConfigNonTouch.grid.xs = 2.5, this.carouselConfigNonTouch.grid.sm = 4.5, this.carouselConfigNonTouch.grid.md = 5.5, this.carouselConfigNonTouch.grid.lg = 5.5, window.innerWidth > 586 && window.innerWidth < 768 && (this.carouselConfigNonTouch.grid.xs = 4.5); break; case "2": case "4": case "5": this.carouselConfigNonTouch.grid.xs = 1.3, this.carouselConfigNonTouch.grid.sm = 2.3, this.carouselConfigNonTouch.grid.md = 2.7, this.carouselConfigNonTouch.grid.lg = 2.7, window.innerWidth > 586 && window.innerWidth < 768 && (this.carouselConfigNonTouch.grid.xs = 2.3); break; case "7": this.carouselConfigNonTouch.grid.xs = 1.2, this.carouselConfigNonTouch.grid.sm = 2.2, this.carouselConfigNonTouch.grid.md = 2.3, this.carouselConfigNonTouch.grid.lg = 2.3, window.innerWidth > 586 && window.innerWidth < 768 && (this.carouselConfigNonTouch.grid.xs = 2.2); break; default: this.carouselConfigNonTouch.grid.xs = 2.5, this.carouselConfigNonTouch.grid.sm = 4.5, this.carouselConfigNonTouch.grid.md = 5.5, this.carouselConfigNonTouch.grid.lg = 5.5 }if ("1" !== this.subcategory.rowCount && "2" !== this.subcategory.rowCount || !this.isTouch) this.width = "unset", this.height = "unset", this.breakpoint = this.subcategory.isIconSevenCategory ? "1" !== this.subcategory.rowCount && "2" !== this.subcategory.rowCount || this.isTouch ? t < 568 ? 2 : t < 1024 ? 4 : 8 : 8 : this.subcategory.isIconSixCategory ? t < 568 ? 3 : t < 768 ? 4 : 6 : t < 375 ? 2 : t <= 480 && window.matchMedia("(orientation:portrait)").matches ? this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, a.matGridColCountForLobbyType) : t < 568 ? 3 : t < 768 ? 4 : 6; else { this.breakpoint = 6; let l = this.configProviderService.provideModularSettingsConfig(), g = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, l.featuredGridSetHeightTimeOut); g || (g = 100), setTimeout(() => { !this.games[0] || "1" !== this.games[0].iconType && "2" !== this.games[0].iconType && "6" !== this.games[0].iconType && "7" !== this.games[0].iconType ? this.games && document.getElementById("heightFix-" + this.subcategory.categoryid + "-" + this.games[0].gameId) && document.getElementById("heightFix-" + this.subcategory.categoryid + "-" + this.games[0].gameId).clientHeight && (this.height = 20 + document.getElementById("heightFix-" + this.subcategory.categoryid + "-" + this.games[0].gameId).clientHeight + "px") : this.games && document.getElementById("heightFix-" + this.subcategory.categoryid + "-" + this.games[0].gameId) && document.getElementById("heightFix-" + this.subcategory.categoryid + "-" + this.games[0].gameId).clientHeight && (this.height = 20 + 2 * document.getElementById("heightFix-" + this.subcategory.categoryid + "-" + this.games[0].gameId).clientHeight + "px") }, g), this.width = t <= 320 || t <= 480 ? 2.4 * t + "px" : t < 625 ? 1.72 * t + "px" : t < 768 || t < 1e3 ? 1.33 * t + "px" : t < 1360 ? 27 + t + "px" : 37 + t + "px" } } colSpan(t) { if (this.subcategory.gamesModel && this.subcategory.gamesModel[t] && this.subcategory.gamesModel[t].icon && this.subcategory.gamesModel.length > 0 && this.subcategory.gamesModel[t] && this.EnableFutureGrid) switch (this.subcategory.gamesModel[t].icon) { case "1": case "-1": case "3": case "-3": case "7": case "-7": return this.games[t].colspan = 1; case "2": case "-2": case "4": case "-4": return this.games[t].colspan = 2; default: return this.games[t].colspan = this.isTouch ? 2 : 3 } else if (this.games[t]) return this.games[t].colspan = 1 } rowSpan(t) { if (!(this.subcategory.gamesModel && this.subcategory.gamesModel[t] && this.subcategory.gamesModel[t].icon && this.subcategory.gamesModel.length > 0 && this.subcategory.gamesModel[t] && this.EnableFutureGrid)) return this.games[t].rowspan = 1; switch (this.subcategory.gamesModel[t].icon) { case "1": case "-1": case "2": case "-2": case "7": case "-7": return this.games[t].rowspan = 1; default: return this.games[t].rowspan = 2 } } getClassByicon(t) { return t && t.iconType && this.EnableFutureGrid || t && t.iconType ? "icon-" + t.iconType : "icon-1" } loadNextGamesSet() { setTimeout(() => { this.loadNextGames.emit() }, 0) } setInfoClassIconForGames() { let t = this.games; if (t && t.length > 0) for (let a = 0; a < t.length; a++) { let g = this.gameLaunchedFrom && this.gameLaunchedFrom.toLowerCase().indexOf("jackpotwidget") > -1 ? "1" : t[a].iconType, p = this.casinoManager.getCurrentWidth(); t[a].infoIconClass = this.casinoManager.assignGameClass(p, g) } this.games = t } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.iX), e.Y36(c.M3), e.Y36(c.hY), e.Y36(r.U8N)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-feature-grid"]], viewQuery: function (t, a) { if (1 & t && (e.Gf(Je, 5), e.Gf(Ro, 5)), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.desktopGamesCarousel = l.first), e.iGM(l = e.CRH()) && (a.mobileGamesCarousel = l.first) } }, inputs: { games: "games", subcategory: "subcategory", isTouch: "isTouch", Type: "Type", EnableFutureGrid: "EnableFutureGrid", gameLaunchedFrom: "gameLaunchedFrom", lobbyType: "lobbyType", changeCarouselView: "changeCarouselView", newFeatureGridArr: "newFeatureGridArr" }, outputs: { loadNextGames: "loadNextGames", carouselDataEvent: "carouselDataEvent" }, features: [e.TTD], decls: 3, vars: 3, consts: [[3, "cols", "width", "height", "rowHeight", "gutterSize", "id", "ngClass", "resize", 4, "ngIf"], [3, "inputs", "dataSource", "ngClass", "onMove", "resize", 4, "ngIf"], ["class", "scrollable-games-multiple-icons", 3, "ngClass", "resize", 4, "ngIf"], [3, "cols", "rowHeight", "gutterSize", "id", "ngClass", "resize"], [3, "colspan", "rowspan", "ngStyle", 4, "ngFor", "ngForOf"], [3, "colspan", "rowspan", "ngStyle"], [1, "game", 3, "ngClass", "id"], [3, "id", "ngClass", "game", "gamePosition", "category", "gameLaunchedFrom", "gameIndex"], [3, "inputs", "dataSource", "ngClass", "onMove", "resize"], ["desktopGamesCarousel", ""], [4, "nguCarouselDef"], ["NguCarouselPrev", "", "class", "theme-left ngx-button-left", 3, "ngClass", 4, "ngIf"], ["NguCarouselNext", "", "class", "theme-right ngx-button-right", 3, "ngClass", "click", 4, "ngIf"], [3, "cols", "rowHeight", "gutterSize"], [1, "game", 3, "ngClass"], ["NguCarouselPrev", "", 1, "theme-left", "ngx-button-left", 3, "ngClass"], ["NguCarouselNext", "", 1, "theme-right", "ngx-button-right", 3, "ngClass", "click"], [1, "scrollable-games-multiple-icons", 3, "ngClass", "resize"], ["class", "game", 3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], ["rowHeight", "1:1", 3, "cols"]], template: function (t, a) { 1 & t && (e.YNc(0, Uo, 3, 17, "mat-grid-list", 0), e.YNc(1, Bo, 5, 11, "ngu-carousel", 1), e.YNc(2, Ko, 2, 4, "div", 2)), 2 & t && (e.Q6J("ngIf", "unscrollable-games" === a.Type), e.xp6(1), e.Q6J("ngIf", "scrollable-games" === a.Type), e.xp6(1), e.Q6J("ngIf", "scrollable-games-multiple-icons" === a.Type && a.isTouch)) }, directives: [Z.Il, Z.DX, Fi, Q.rC, Q.nN, o.O5, o.mk, o.sg, o.PC, Q.Mg, Q.Vy, Q.Wc], pipes: [o.OU], encapsulation: 2 }), n })(); class Fg { } class Bi { constructor(_, t, a, l) { this.fromCasino = !0, this.GameId = _, this.isRecentlyPlayed = a, this.isPromoted = t, this.fromCasino = l } } let fo = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K) { this.casinoLobbyService = t, this.gameDataManager = a, this.recentGameService = l, this.configProviderService = g, this.elementRef = p, this.unfinishedGameService = b, this.casinoManager = E, this.casinoIFrameOverlayService = L, this.deviceService = O, this.user = U, this.promotedGamesService = K, this.categoryId = "", this.recentlyandGymlGames = [], this.recentStartIndex = 0, this.unfinishedGames = [], this.Games = [], this.isCombinedCategories = !1, this.onlyRecentGames = [], this.onlyRecentGamesStrings = [], this.onlyGYMLGamesStrings = [], this.onlyGYMLGames = [], this.gymlGames = [], this.recentGames = [], this.gymlGameStrings = [], this.unfinishedRPANDGYMLGameIds = [], this.unfinishedRPANDGYMLGames = [], this.recentGamesCount = 0, this.isCombinedCategoriesNew = !1, this.bingoRecentGames = [], this.trackingClass = "", this.recentlyPlayedGames = [], this.newFeatureGridArr = [], this.carouselConfig = { grid: { xs: 3, sm: 6, md: 6, lg: 6, all: 0 }, slide: 6, speed: 400, point: { visible: !1 }, loop: !1, touch: !1 } } ngOnInit() { this.isTouch = this.casinoManager.isTouch(), this.isClientConfigLoaded = !0, this.setRpGyml(), this.isPreButtonVisible = !0 } ngOnChanges() { } ngOnDestroy() { this.clientConfigLoadSubscription && this.clientConfigLoadSubscription.unsubscribe(), this.promotedFeedSub && this.promotedFeedSub.unsubscribe(), this.recentGamesSubscription && this.recentGamesSubscription.unsubscribe(), this.unfinishedObv && this.unfinishedObv.unsubscribe() } setRpGyml() { var t; this.isClientConfigLoaded && (this.featureConfig = this.configProviderService.provideFeaturesConfig(), this.globalConfig = this.configProviderService.provideGlobalConfig(), this.casinoConfig = this.configProviderService.provideCasinoConfig(), this.youMightLikeMessage = this.globalConfig.messages.LobbyGamesYouMightLike ? this.globalConfig.messages.LobbyGamesYouMightLike : this.globalConfig.messages.GamesYouMightLike, this.gymlCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"), this.promotedGamesText = this.globalConfig.lobbyConfigurations.PromotedGamesCategoryname, this.gymlCategory && (this.gymlCategory.rowCount = "-1"), this.recentCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "recentgames"), this.setGamesOnInit(), this.promotedFeedSub = this.promotedGamesService.promotedFeedObservable.subscribe(a => { a && this.setUnfinishedRPAndGYML(this.promotedGamesService.getPromotedGames(), this.unfinishedGameService.getUnfinishedGames(), this.recentGameService.getrecentGames(), this.bingoRecentGames, this.getGymlGameIds(this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"))) }), this.recentGamesSubscription = this.recentGameService.recentGamesFeedObservable.subscribe(a => { this.recentCategory && a && this.setUnfinishedRPAndGYML(this.promotedGamesService.getPromotedGames(), this.unfinishedGameService.getUnfinishedGames(), this.recentGameService.getrecentGames(), this.bingoRecentGames, this.getGymlGameIds(this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"))) }), this.alignIconRight = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.featureConfig.alignIconRight), this.unfinishedObv = this.unfinishedGameService.unfinishedFeedObservable.subscribe(a => { a && (this.unfinishedGames = a, this.setUnfinishedRPAndGYML(this.promotedGamesService.getPromotedGames(), a, this.recentGameService.getrecentGames(), this.bingoRecentGames, this.getGymlGameIds(this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML")))) }), this.recentCategory && this.recentCategory.categoryInfo && (this.recentCategory.categoryInfo.categoryIndex = 1), this.gymlCategory && this.gymlCategory.categoryInfo && (this.gymlCategory.categoryInfo.categoryIndex = 1), this.subcategory && this.subcategory.categoryInfo && (this.subcategory.categoryInfo.categoryIndex = 1), this.isUkHeading = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.featureConfig.isUkHeading), this.isCrossSaleIOS = this.casinoIFrameOverlayService.isOverLayOnAProduct() && this.deviceService.isiOS, this.isSignPosting = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.featureConfig.enableSignpostingSticker), this.trackingClass = "track_" + this.categoryId, this.categoryObj = Object.assign({}, null === (t = this.subcategory) || void 0 === t ? void 0 : t.categoryInfo), this.categoryObj.rowCount = "-1") } setGamesOnInit() { let g, t = this.unfinishedGameService.getUnfinishedGames(), a = this.recentGameService.getrecentGames(), l = this.promotedGamesService.getPromotedGames(); this.gymlCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"), this.gymlCategory && (this.gymlCategory.rowCount = "-1", g = this.getGymlGameIds(this.gymlCategory)), this.setUnfinishedRPAndGYML(l, t, a, this.bingoRecentGames, g) } getGymlGameIds(t) { let a = []; if (t && t.categoryInfo && t.categoryInfo.gamelist && t.categoryInfo.gamelist.length > 0) for (let l = 0; l < t.categoryInfo.gamelist.length; l++) { let g = new Fg; g.gameId = t.categoryInfo.gamelist[l].game, t.categoryInfo.gamelist[l].sticker && (g.sticker = t.categoryInfo.gamelist[l].sticker), a.push(g) } return a } setUnfinishedRPAndGYML(t, a, l, g, p) { a || (a = []), l || (l = []), g || (g = []), p || (p = []), t || (t = []); let b = this.concatUnfinishedAndRecentGames(t, a, l, g); this.user.isAuthenticated || b.forEach(E => { E.isRecentlyPlayed = !1 }), this.unfinishedRPANDGYMLGameIds = this.concatUnfinishedRecentANDGYMLGames(b, p), this.processRecentGYMLGames() } concatUnfinishedAndRecentGames(t, a, l, g) { let p = []; for (let b = 0; b < t.length; b++)p.push(new Bi(t[b], !0, !0, !0)); for (let b = 0; b < a.length; b++)if (!(p.filter(L => L.GameId === a[b]).length > 0)) { let L = new Bi(a[b], !1, !0, !0); p.push(L) } for (let b = 0; b < l.length; b++)if (!(p.filter(L => L.GameId === l[b]).length > 0)) { let L = new Bi(l[b], !1, !0, !0); p.push(L) } for (let b = 0; b < g.length; b++)if (!(p.filter(L => L.GameId === g[b]).length > 0)) { let L = new Bi(g[b], !1, !0, !1); p.push(L) } return p.length == t.length && 0 == a.length && 0 == l.length && 0 == g.length ? this.recentTitle = this.promotedGamesText : this.recentCategory && this.recentCategory.categoryInfo && this.recentCategory.categoryInfo.sitecoreData && this.recentCategory.categoryInfo.sitecoreData.title && (this.recentTitle = this.recentCategory.categoryInfo.sitecoreData.title), p } concatUnfinishedRecentANDGYMLGames(t, a) { let l = t; for (let g = 0; g < a.length; g++)if (!l.find(b => b.GameId === a[g].gameId)) { let b = new Bi(a[g].gameId, !1, !1, !0); b.sticker = a[g].sticker, l.push(b) } return l } processRecentGYMLGames() { this.sliceGYMLLimitAndSetBaseGameCount(), this.setGames(), this.setIsCombinedCategories() } sliceGYMLLimitAndSetBaseGameCount() { let t = this.unfinishedRPANDGYMLGameIds.filter(l => l.isRecentlyPlayed); t && (this.recentGamesCount = t.length); let a = this.unfinishedRPANDGYMLGameIds.filter(l => !l.isRecentlyPlayed); a = a.slice(0, this.casinoConfig.gymlLimit), this.unfinishedRPANDGYMLGameIds = [], this.unfinishedRPANDGYMLGameIds = this.unfinishedRPANDGYMLGameIds.concat(t), this.unfinishedRPANDGYMLGameIds = this.unfinishedRPANDGYMLGameIds.concat(a) } setGames() { if (this.unfinishedRPANDGYMLGameIds && this.unfinishedRPANDGYMLGameIds.length > 0) { let a, t = []; for (let l = 0; l < this.unfinishedRPANDGYMLGameIds.length; l++) { let g = this.casinoLobbyService.getGameInfo(this.unfinishedRPANDGYMLGameIds[l].GameId); g && (g ? a = { game: this.unfinishedRPANDGYMLGameIds[l].GameId, name: g.name, provider: g.provider, ownerId: g.ownerId, icon: "1", isRecentlyPlayed: this.unfinishedRPANDGYMLGameIds[l].isRecentlyPlayed, sticker: this.unfinishedRPANDGYMLGameIds[l].sticker, fromCasino: this.unfinishedRPANDGYMLGameIds[l].fromCasino, gameContainer: this.gameContainer, isPromoted: this.unfinishedRPANDGYMLGameIds[l].isPromoted } : this.unfinishedRPANDGYMLGameIds[l].fromCasino || (a = { game: this.unfinishedRPANDGYMLGameIds[l].GameId, icon: "1", isRecentlyPlayed: this.unfinishedRPANDGYMLGameIds[l].isRecentlyPlayed, sticker: this.unfinishedRPANDGYMLGameIds[l].sticker, fromCasino: this.unfinishedRPANDGYMLGameIds[l].fromCasino, gameContainer: this.gameContainer, lobbyType: this.lobbyType }), a && t.push(a)) } this.setDefaultLMTGameIcons(t) } else this.unfinishedRPANDGYMLGameIds && 0 === this.unfinishedRPANDGYMLGameIds.length && (this.Games = [], this.unfinishedRPANDGYMLGames = []) } setDefaultLMTGameIcons(t) { this.Games = [], this.unfinishedRPANDGYMLGames = []; let a, l = this.casinoLobbyService.getDisabledGames(), g = this.casinoManager.getCurrentWidth(); if (t && t.length > 0) { for (let b = 0; b < t.length; b++) { let E = t[b], L = l.filter(O => O === E.game); if (!(L && L.length > 0)) { let O = this.gameDataManager.setGameLobbyModel(E, this.isTouch); O.isRecentlyPlayed = t[b].isRecentlyPlayed, O.isUnfinished = this.getUnfinishedStatus(O.gameId), O.fromCasino = t[b].fromCasino, O.infoIconClass = this.casinoManager.assignGameClass(g, "1"), O.lobbyType = this.lobbyType, O.gameContainer = this.gameContainer, O.isPromoted = t[b].isPromoted, O.provider = t[b].provider, O.ownerId = t[b].ownerId, O.trackCategory = this.categoryId, this.subcategory && this.subcategory.categoryInfo && (O.gameTileBorderRadius = this.casinoLobbyService.getBorderRadius(this.subcategory.categoryInfo), O.gameTileDropShadow = this.casinoLobbyService.getDropShadow(this.subcategory.categoryInfo), O.bgTileMode = this.subcategory.categoryInfo.isIconSevenCategory && a || !1), this.Games.push(O), this.unfinishedRPANDGYMLGames.push(O) } a = !a } let p = t.filter(b => b.isRecentlyPlayed); this.recentCategory && (this.recentCategory.categoryInfo.gamelist = p), this.isNextButtonVisible = !(this.unfinishedRPANDGYMLGames.length > 6) } } getUnfinishedStatus(t) { return -1 != this.unfinishedGameService.getUnfinishedGames().indexOf(t) } setIsCombinedCategories() { let t = this.casinoConfig.recentGamesCountLimit; if (this.unfinishedRPANDGYMLGames && this.unfinishedRPANDGYMLGames.length > 0) { let a = this.unfinishedRPANDGYMLGames.filter(g => g.isRecentlyPlayed), l = this.unfinishedRPANDGYMLGames.filter(g => !g.isRecentlyPlayed); if (this.evaluateIsCombined(a, l)) this.isCombinedCategories = !0; else { this.isCombinedCategories = !1, 0 === a.length && this.gymlCategory && l.length > 0 ? (this.subcategory = this.gymlCategory, this.unfinishedRPANDGYMLGames = this.unfinishedRPANDGYMLGames.filter(g => !g.isRecentlyPlayed), this.Games = this.unfinishedRPANDGYMLGames) : (a.length >= t || a.length > 0) && this.recentCategory && (this.subcategory = this.recentCategory, this.unfinishedRPANDGYMLGames = this.unfinishedRPANDGYMLGames.filter(g => g.isRecentlyPlayed), this.Games = this.unfinishedRPANDGYMLGames), this.newFeatureGridArr = []; for (let g = 0; g < this.Games.length; g++)this.newFeatureGridArr.push({ games: [this.Games[g]], maxRowSpan: this.Games[g].rowSpan, maxColSpan: this.Games[g].colSpan }) } } } evaluateIsCombined(t, a) { return !(!t || t && 0 === t.length || !a || a && 0 === a.length || t && t.length > 0 && t.length > this.casinoConfig.recentGamesCountLimit) } ngAfterViewInit() { document.getElementById("gymlId") && (this.maxScrollPosition = document.getElementById("gymlId").offsetLeft) } configureGYMLScenarios(t) { let a = this.casinoConfig.recentGamesCountLimit; this.subcategory = void 0, this.isCombinedCategories = !(0 === t.length || t.length >= a), (t.length > 0 && !this.gymlCategory || this.gymlCategory && this.gymlCategory.gamesModel && 0 === this.gymlCategory.gamesModel.length) && (this.isCombinedCategories = !1), !this.isCombinedCategories && 0 === t.length && this.gymlCategory ? this.subcategory = this.gymlCategory : (!this.isCombinedCategories && t.length >= a && this.recentCategory || t.length > 0 && this.recentCategory && !this.gymlCategory) && (this.subcategory = this.recentCategory) } setSubCategoryStyle() { return this.isTouch ? "scrollable-games" : "unscrollable-games" } loadNextGamesSet() { } scrollGYML() { this.elementRef.nativeElement.getElementsByClassName("scrollable-games")[0].scrollLeft >= this.maxScrollPosition ? (this.staticGYML = !0, setTimeout(() => { document.getElementById("sticky-container").setAttribute("position", "relative") }, 500)) : this.elementRef.nativeElement.getElementsByClassName("scrollable-games")[0].scrollLeft < this.maxScrollPosition && (this.staticGYML = !1) } onmoveFn(t) { this.recentStartIndex = t.currentSlide, this.isPreButtonVisible = t.isFirst, this.isNextButtonVisible = t.isLast } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.nA), e.Y36(c.cM), e.Y36(c.vD), e.Y36(c.iX), e.Y36(e.SBq), e.Y36(c.f), e.Y36(c.M3), e.Y36(c.Sy), e.Y36(r.U8N), e.Y36(r.KDu), e.Y36(c.g9)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-rp-gyml"]], viewQuery: function (t, a) { if (1 & t && e.Gf(io, 5), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.recentGYMLCarousel = l.first) } }, inputs: { lobbyType: "lobbyType", gameContainer: "gameContainer", categoryId: "categoryId" }, features: [e.TTD], decls: 2, vars: 2, consts: [["id", "sticky-container", "class", "sticky-container casino-lobby-width-gametile", 3, "ngClass", "class", 4, "ngIf"], ["id", "separate-container", "class", "casino-lobby-games casino-game-tile-wrapper casino-lobby-width-gametile", 3, "ngClass", "class", 4, "ngIf"], ["id", "sticky-container", 1, "sticky-container", "casino-lobby-width-gametile", 3, "ngClass"], [3, "ngClass", "scroll"], [3, "ngClass", 4, "ngIf"], [4, "ngIf"], [3, "ngClass"], [1, "base-category"], [1, "casino-allGames"], ["class", "gameContainers", 4, "ngIf"], ["class", "gameContainers mrgn-lft-cls", 4, "ngIf"], [1, "gameContainers"], ["class", "casino-lobby-header sticky-header-rp-gyml", 3, "lang", "non-touch-casino-lobby-header", "ngClass", 4, "ngIf"], ["class", "casino-rcntly-gyml-game-touch", 3, "hidden", 4, "ngFor", "ngForOf"], [1, "casino-lobby-header", "sticky-header-rp-gyml", 3, "lang", "ngClass"], [3, "title", "subCategory", "recentAndGyml", "alignIconRight", "lobbyType", 4, "ngIf"], [3, "title", "subCategory", "recentAndGyml", "alignIconRight", "lobbyType"], [1, "casino-rcntly-gyml-game-touch", 3, "hidden"], [3, "id", "ngClass", "game", "gamePosition", "casino-recentlyPromo", "category", "gameLaunchedFrom", 4, "ngIf"], [3, "id", "ngClass", "game", "gamePosition", "category", "gameLaunchedFrom"], [1, "gameContainers", "mrgn-lft-cls"], ["class", "casino-lobby-header sticky-header-rp-gyml", 3, "ngClass", "lang", "ngStyle", "non-touch-casino-lobby-header", 4, "ngIf"], [1, "casino-lobby-header", "sticky-header-rp-gyml", 3, "ngClass", "lang", "ngStyle"], [3, "category", 4, "ngIf"], [3, "category"], [3, "id", "ngClass", "casino-recentlyPromo", "game", "gamePosition", "category", "gameLaunchedFrom", 4, "ngIf"], ["class", "casino-lobby-header non-touch-sticky-header-rp-gyml", 3, "lang", "non-touch-casino-lobby-header", "ngClass", 4, "ngIf"], [3, "inputs", "dataSource", "onMove", 4, "ngIf"], [1, "casino-lobby-header", "non-touch-sticky-header-rp-gyml", 3, "lang", "ngClass"], [3, "inputs", "dataSource", "onMove"], ["recentGYMLCarousel", ""], ["class", "game", 4, "nguCarouselDef"], ["NguCarouselPrev", "", 1, "theme-left", "ngx-button-left", 3, "ngClass"], ["NguCarouselNext", "", 1, "theme-right", "ngx-button-right", 3, "ngClass"], [1, "game"], ["class", "casino-lobby-header", 3, "lang", "non-touch-casino-lobby-header", "ngClass", 4, "ngIf"], [1, "casino-lobby-header", 3, "lang", "ngClass"], ["id", "separate-container", 1, "casino-lobby-games", "casino-game-tile-wrapper", "casino-lobby-width-gametile", 3, "ngClass"], [1, "game-tile-heading", "casino-lobby-header", 3, "ngClass"], [1, "scrollable-games"], [3, "games", "subcategory", "isTouch", "Type", "gameLaunchedFrom", "lobbyType", "newFeatureGridArr", 4, "ngIf"], [3, "games", "subcategory", "isTouch", "Type", "gameLaunchedFrom", "lobbyType", "newFeatureGridArr"]], template: function (t, a) { 1 & t && (e.YNc(0, mn, 4, 14, "div", 0), e.YNc(1, B, 6, 16, "div", 1)), 2 & t && (e.Q6J("ngIf", a.isCombinedCategories), e.xp6(1), e.Q6J("ngIf", !a.isCombinedCategories && a.subcategory && a.subcategory.categoryInfo && a.Games.length > 0)) }, directives: [Sn, Fi, mo, Q.rC, Q.nN, ti, o.O5, o.mk, o.sg, o.PC, Q.Mg, Q.Vy, Q.Wc], encapsulation: 2 }), n })(), va = (() => { class n { constructor(t, a, l, g, p, b, E) { this.jackpotDataService = t, this.casinoLobbyService = a, this.navigation = l, this.gameDataManager = g, this.configProviderService = p, this.fastLoadingGamesService = b, this.casinoManager = E, this.games = [], this.className = "single-jackpot", this.jackpotType = "single", this.showJackpotWidget = !1, this.jackpotNameFromSitecore = "", this.newFeatureGridArr = [] } ngOnInit() { let t = this.configProviderService.provideGlobalConfig(); this.singleJackpotBgClr = t.lobbyConfigurations.singleJackpotBgClr, this.moreInfoMessage = "More info", this.startJackpotFeed(), this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(l => { this.fastLoadingGamesService.setFastLoadingGames(this.games, l) }); let a = t.lobbyConfigurations.singleJackpotmode; this.mode = "v2" === a || "v3" === a ? a : "v1" } startJackpotFeed() { this.showJackpotWidget = !1, this.refreshJackpotsNew(), this.jackpotDataService.jackpotFeedObservable.subscribe(() => { this.refreshJackpotsNew() }) } refreshJackpotsNew() { if (this.category.sitecoreData.showJackpotWidget) { if (this.jackpotsCache = this.jackpotDataService.getJackpotData(), this.jackpotWidget = decodeURIComponent(this.category.sitecoreData.jackpotWidget[0]), this.ShowSeeAllJackpots = this.category.sitecoreData.showSeeAllJackpots, this.jackpotsCache && this.jackpotWidget && "null" !== this.jackpotWidget) { let t = this.GetJackpotWidgetItem(this.jackpotWidget, this.jackpotsCache); this.jackpotDataService && Object.keys(this.jackpotDataService).length && (this.jackpotName && this.jackpotName.toLowerCase() === this.jackpotWidget.toLowerCase() && this.jackpotValue === t.amount || (this.jackpotValue = t.amount, this.jackpotName = t.jackpotGroupName, this.jackpotGames = t.gamesList, this.jackpotGames && this.jackpotGames.length > 0 && this.setGames(this.jackpotGames), this.showBackgroundImage = !0, this.jackpotWidgetBackgroundImage = t.backgroundImage, this.jackpotWidgetImage = t.jackpotImage, this.jackpotDesc = t.content, this.cta = t.ctaLink, this.jackpotWidgetImage && this.games && this.games.length > 0 && (this.showJackpotWidget = !0), t.content && (this.jackpotNameFromSitecore = t.content))) } } else this.showJackpotWidget = !1 } setGames(t) { var a, l, g; if (this.games = [], this.newFeatureGridArr = [], t && t.length > 0) { let p = !1, b = null === (g = null === (l = null === (a = this.category) || void 0 === a ? void 0 : a.sitecoreData) || void 0 === l ? void 0 : l.attributes) || void 0 === g ? void 0 : g.newgridbgcolor; this.categoryObj = Object.assign({}, this.category), this.categoryObj.rowCount = "-1"; for (let E = 0; E < t.length; E++) { let O = this.casinoLobbyService.getGameInfo(t[E]); if (O) { O.icon = this.category.isIconSixCategory ? "6" : this.category.isIconSevenCategory ? "7" : "1", O.lobbyType = this.lobbyType; let U = this.gameDataManager.setGameLobbyModel(O, this.isTouch); U.gameContainer = this.gameContainer, U.bgTileMode = this.category.isIconSevenCategory && p || !1, U.gameTileBorderRadius = this.casinoLobbyService.getBorderRadius(this.category), U.gameTileDropShadow = this.casinoLobbyService.getDropShadow(this.category), U.infoIconClass = this.casinoManager.assignGameClass(this.casinoManager.getCurrentWidth(), O.icon), U.newgridbgcolor = b, p = !p, this.games.push(U), this.newFeatureGridArr.push({ games: [U], maxRowSpan: U.rowSpan, maxColSpan: U.colSpan }) } } } } filterUnavailableGames() { this.games = this.games.filter(t => !t.isDataNotAvailable) } createEmptyGameModel(t) { let a = new c.b0; return a.isDataNotAvailable = !0, a.gameId = t, a } GotoJackpots(t) { t && this.navigation.goTo(t, { replace: !1, forceReload: !0 }) } GetJackpotWidgetItem(t, a) { for (let g in a) { if (g.toLowerCase() === t.toLowerCase()) return a[g]; if (a[g] && a[g].subJackpotDetails) for (let p of a[g].subJackpotDetails) if (p && p.subJackpotName.toLowerCase() === t.toLowerCase()) return p.gamesList = a[g].gamesList, p.jackpotGroupName = p.subJackpotName, p.amount = p.subJackpotAmount, p.Value = p.subJackpotValue, p } return {} } filterOutDisableGames() { let t; this.games = this.games.filter(a => { for (let l = 0; l < t.length; l++)if (t[l] === a.gameId) return !1; return !0 }) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.Gn), e.Y36(c.nA), e.Y36(r.f5Y), e.Y36(c.cM), e.Y36(c.iX), e.Y36(c.$Q), e.Y36(c.M3)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-single-jackpot-widget"]], inputs: { category: "category", isTouch: "isTouch", lobbyType: "lobbyType", gameContainer: "gameContainer" }, decls: 1, vars: 1, consts: [["class", "small-icon", 3, "background-image", "ngStyle", "ngClass", 4, "ngIf"], [1, "small-icon", 3, "ngStyle", "ngClass"], [3, "inputData", "componentName", 4, "ngIf"], [1, "jackpot-widget-content", "scrollable-games", "casino-lobby-width-gametile"], [3, "ngClass"], [3, "games", "EnableFutureGrid", "subcategory", "isTouch", "Type", "gameLaunchedFrom", "newFeatureGridArr", 4, "ngIf"], [1, "jackpot-widget-content"], ["class", "see-all-button", 4, "ngIf"], [3, "inputData", "componentName"], [3, "games", "EnableFutureGrid", "subcategory", "isTouch", "Type", "gameLaunchedFrom", "newFeatureGridArr"], [1, "see-all-button"], [1, "btn", "btn-cta", "btn-primary", 3, "innerHTML", "click"]], template: function (t, a) { 1 & t && e.YNc(0, Oi, 8, 21, "div", 0), 2 & t && e.Q6J("ngIf", a.showJackpotWidget) }, directives: [lt, ti, o.O5, o.PC, o.mk], encapsulation: 2 }), n })(); class Bg { constructor() { this.promise = new Promise((_, t) => { this.resolve = _, this.reject = t }) } } class Wg { constructor(_, t) { this.slides = _ || [], this.leftSlides = [], this.rightSlides = [], this.leftOutSlide = "", this.rightOutSlide = "", this.loadCount = 0, this.errorCount = 0, this.states = { PENDING: 1, LOADING: 2, RESOLVED: 3, REJECTED: 4 }, this.total = _.length; for (let a = 0; a <= this.slides.length - 1; a++)1 == this.slides[a].isActive && (this.currentIndex = a); this.lock = !1, this.loop = t.loop || !1, this.clicking = t.clicking || !1, this.sourceProp = t.sourceProp || "", this.visible = t.visible || 5, this.perspective = t.perspective || 35, this.animationSpeed = t.animationSpeed || 500, this.dir = t.dir || "ltr", this.width = t.width || 360, this.height = t.height || 270, this.border = t.border || 0, this.space = t.space || "auto", this.topSpace = t.topSpace || "auto", this.controls = t.controls || !1, this.startSlide = t.startSlide || 0, this.inverseScaling = t.inverseScaling || 300, this.autoRotationSpeed = t.autoRotationSpeed || 0, this.state = this.states.PENDING, this.deferred = new Bg, this.promise = this.deferred.promise, this.percent = new M.X(new Object), this.imageLocation = new M.X(new Object) } build(_, t) { const a = this; return a.load().promise.then(() => { a.visible = a.visible > a.total ? a.total : a.visible, a.currentIndex = a.startSlide > a.total - 1 ? a.total - 1 : t.startSlide; try { 2 !== a.visible && (a.visible = a.visible % 2 ? a.visible : a.visible - 1) } catch (l) { } return a }, l => a) } isInitiated() { return this.state !== this.states.PENDING } isRejected() { return this.state === this.states.REJECTED } isResolved() { return this.state === this.states.RESOLVED } load() { if (this.isInitiated()) return this; if (this.state = this.states.LOADING, this.sourceProp) for (let _ = 0; _ < this.total; _++)this.loadImageLocation(this.slides[_]); else this.deferred.resolve(this); return this } handleImageError() { this.errorCount++, !this.isRejected() && (this.state = this.states.REJECTED, this.deferred.reject(this)) } handleImageLoad(_) { this.loadCount++, !this.isRejected() && (this.percent.next(new Object({ percent: Math.ceil(this.loadCount / this.total * 100) })), this.imageLocation.next(_), this.loadCount === this.total && (this.state = this.states.RESOLVED, this.deferred.resolve(this))) } loadImageLocation(_) { const t = this; let a = new Image; a.onload = l => { t.handleImageLoad(l.target), a = l = null }, a.onerror = () => { t.handleImageError(), a = null }, a.src = _[this.sourceProp] ? _[this.sourceProp] : "" } getTotalNumber() { return this.total } setStartSlide(_) { this.startSlide = _ < 0 || _ > this.total ? 0 : _ } setCurrentIndex(_) { return this.currentIndex = _ } getOuterWidth() { return parseInt(this.width + this.border, 10) } getOuterHeight() { return parseInt(this.height + this.border, 10) } setLock(_) { return this.lock = _ } getLock() { return this.lock } getSlides() { return this.slides } setSlides() { const _ = Number(Math.floor(this.visible / 2) + 1), t = "ltr"; this.leftSlides = [], this.rightSlides = []; for (let g = 1; g < _; g++) { const b = this.dir === t ? (this.currentIndex - g) % this.total : (this.currentIndex + g) % this.total; this.leftSlides.push(this.dir === t ? (this.currentIndex + g) % this.total : (this.currentIndex - g) % this.total), this.rightSlides.push(b) } this.leftOutSlide = this.currentIndex - _, this.rightOutSlide = this.total - this.currentIndex - _ <= 0 ? -(this.total - this.currentIndex - _) : this.currentIndex + _; const l = this.rightOutSlide; return this.dir === t && (this.leftOutSlide = this.leftOutSlide, this.rightOutSlide = l), this.slides } getVisibleSlidesIndex() { const _ = {}; let t = this.currentIndex, a = Math.floor(this.total / 2), l = 0; for (; l !== this.total;)_[a % this.total] = t, a = ++a % this.total, t = ++t % this.total, l++; let g = Object.keys(_).map(b => _[b]); "ltr" === this.dir && (g = g.reverse()); const p = g.findIndex(b => b === this.currentIndex); return g.splice(p - Math.floor(this.visible / 2), this.visible) } isLastSlide() { return this.currentIndex === this.total - 1 } isFirstSlide() { return 0 === this.currentIndex } getSourceProp() { return this.sourceProp } getPercent() { return this.percent.asObservable() } getImageLocation() { return this.imageLocation.asObservable() } } let Ng = (() => { class n { constructor() { this.autoRotation = null, this.isLoading = !0, this.isSuccessful = !1, this.isRendered = !1, this.percentLoaded = 0 } ngOnDestroy() { this.percentSubscription && this.percentSubscription.unsubscribe() } ngOnChanges(t) { t.slides && t.options ? this.buildCarousel(t.slides.currentValue, t.options.currentValue) : t.slides ? this.buildCarousel(t.slides.currentValue, this.options) : t.options && this.buildCarousel(this.slides, this.options) } ngOnInit() { this.buildCarousel(this.slides, this.options) } buildCarousel(t, a) { return this.$carouselService = new Wg(this.slides, this.options), this.percentSubscription = this.$carouselService.getPercent().subscribe(l => { this.percentLoaded = l.percent }), this.autoRotationLocked = !1, this.$carouselService.build(this.slides || [], this.options || {}).then(l => { this.carousel3d = l, this.slides = this.carousel3d.slides, this.controls = this.carousel3d.controls, this.isLoading = !1, this.isSuccessful = !0; const g = this.carousel3d.getOuterHeight(), p = this.carousel3d.getOuterWidth(); this.carousel3dcontainerDivElement = this.carousel3dcontainer.nativeElement, this.carousel3dcontainerDivElement.style.height = g + "px", this.$wrapper = this.carousel3DnatEle.nativeElement, this.$wrapper.style.width = p + "px", this.$wrapper.style.height = g + "px", this.$slides = this.$wrapper.children, new Promise((b, E) => { b(this.render(!0, this.carousel3d.animationSpeed)) }).then(b => { this.animationEnd() }) }, l => { this.handleReject(l) }, l => { this.handleNotify(l) }) } handleReject(t) { this && (this.carousel3d = t, this.isLoading = !1, this.isSuccessful = !1), t.setAttribute("style", "height:" + t.getOuterHeight() + "px;") } handleNotify(t) { this.percentLoaded = t.percent } render(t, a) { this.carousel3d.setSlides(); const l = this.carousel3d.getOuterHeight(), g = this.carousel3d.getOuterWidth(), p = "auto" === this.carousel3d.topSpace ? 0 : l / 2 - l / 2, b = this.carousel3d.width / 2 - g / 2, E = a ? a / 1e3 : this.carousel3d.animationSpeed / 1e3; let L = 999; this.carousel3d.slides.forEach((K, z) => { let q = this.getSlide(z); const X = { position: "absolute", opacity: 0, visibility: "hidden", overflow: "hidden", top: p + "px", "border-width": this.carousel3d.border + "px", width: g + "px", height: l + "px" }; if (t) { const ee = Object.assign(Object.assign({}, X), { "-webkit-transition": "all " + E + "s ", "-moz-transition": "all " + E + "s ", "-o-transition": "all " + E + "s ", "-ms-transition": "all " + E + "s ", transition: "all " + E + "s " }); this.attachJSONCss(q, ee) } this.attachJSONCss(q, X) }); let O = { zIndex: L, opacity: 1, visibility: "visible", "-webkit-transform": "none", "-moz-transform": "none", "-o-transform": "none", "-ms-transform": "none", transform: "none", left: b + "px", top: p + "px", width: g + "px", height: l + "px" }, U = this.getSlide(this.carousel3d.currentIndex); if (U.classList.add("current"), this.attachJSONCss(U, O), this.carousel3d.rightSlides.forEach((K, z) => { const q = this.setCss(z, L, !0); L -= z + 1; let X = this.getSlide(K); this.attachJSONCss(this.attachJSONCss(X, q), { opacity: .46, visibility: "visible", zIndex: L }) }), this.carousel3d.leftSlides.forEach((K, z) => { const q = this.setCss(z, L, !1); L -= z + 1, this.attachJSONCss(this.getSlide(K), q), this.attachJSONCss(this.getSlide(K), { opacity: .46, visibility: "visible", zIndex: L }) }), this.carousel3d.total > this.carousel3d.visible) { const K = this.setCss(this.carousel3d.rightSlides.length - 1, this.carousel3d.rightSlides.length - 1, !0), z = this.setCss(this.carousel3d.leftSlides.length - 1, this.carousel3d.leftSlides.length - 1, !0); this.attachJSONCss(this.getSlide(this.carousel3d.rightOutSlide), K), this.attachJSONCss(this.getSlide(this.carousel3d.leftOutSlide), z) } return this.isRendered = !0, !0 } setCss(t, a, l) { const g = "auto" === this.carousel3d.space ? (t + 1) * (this.carousel3d.width / 1.5) : (t + 1) * this.carousel3d.space, p = l ? "translateX(" + g + "px) translateZ(-" + (this.carousel3d.inverseScaling + 100 * (t + 1)) + "px) rotateY(-" + this.carousel3d.perspective + "deg)" : "translateX(-" + g + "px) translateZ(-" + (this.carousel3d.inverseScaling + 100 * (t + 1)) + "px) rotateY(" + this.carousel3d.perspective + "deg)"; return { "-webkit-transform": p, "-moz-transform": p, "-o-transform": p, "-ms-transform": p, transform: p, left: "0%", top: "auto" === this.carousel3d.topSpace ? "none" : (t + 1) * this.carousel3d.space, width: "none", height: "none", zIndex: a, overflow: "visible" } } goSlide(t) { let a = !1; if ("function" != typeof this.onBeforeChange || (a = this.onBeforeChange({ index: this.carousel3d.currentIndex }), !1 !== a)) { this.carousel3d.setCurrentIndex(t < 0 || t > this.carousel3d.total - 1 ? 0 : t), this.carousel3d.isLastSlide() && "function" == typeof this.onLastSlide && this.onLastSlide({ index: this.carousel3d.currentIndex }); for (let l of this.$slides) l.classList.remove("current"); this.carousel3d.setLock(!0), new Promise((l, g) => { l(this.render(!0, this.carousel3d.animationSpeed)) }).then(l => { this.animationEnd() }) } } goNext() { return !(this.carousel3d.getLock() || !this.carousel3d.loop && this.carousel3d.isLastSlide() || (this.carousel3d.isLastSlide() ? this.goSlide(0) : this.goSlide(this.carousel3d.currentIndex + 1), 0)) } goPrev() { return !(this.carousel3d.getLock() || !this.carousel3d.loop && this.carousel3d.isFirstSlide() || (this.carousel3d.isFirstSlide() ? this.goSlide(this.carousel3d.total - 1) : this.goSlide(this.carousel3d.currentIndex - 1), 0)) } goFar(t) { if (t === this.carousel3d.currentIndex) return; const a = this.carousel3d.getVisibleSlidesIndex(), l = a.findIndex(O => O === t); if (l < 0) return; const g = a.findIndex(O => O === this.carousel3d.currentIndex); if (g < 0) return; let p = l - g; "ltr" === this.carousel3d.dir && (p = -p); const b = Math.abs(p); let E = 0; const L = this.carousel3d.animationSpeed / b; for (let O = 0; O < b; O++, E += L)setTimeout(() => { p >= 0 ? this.goNext() : this.goPrev() }, E) } animationEnd() { this.carousel3d.setLock(!1), "function" == typeof this.onSlideChange && this.onSlideChange({ index: this.carousel3d.currentIndex }), this.$timer || this.subscribe() } getSlide(t) { return this.$slides.item(t >= 0 ? t : this.carousel3d.total + t) } slideClicked(t) { if (this.$timer && this.$timer.unsubscribe(), this.$timer = null, this.carousel3d.currentIndex !== t) { if (!this.carousel3d.clicking) return !1; this.goFar(t) } else "function" == typeof this.onSelectedClick && this.onSelectedClick({ index: this.carousel3d.currentIndex }) } setSlideLock(t) { this.autoRotationLocked = t } subscribe() { this.$timer = (0, T.H)(this.carousel3d.autoRotationSpeed, this.carousel3d.autoRotationSpeed).subscribe(() => { this.carousel3d.autoRotationLocked || ("ltr" === this.options.dir ? this.goNext() : this.goPrev()) }) } attachJSONCss(t, a) { if (a && t) { let l = Object.keys(a); if (l && l.length > 0) for (let g = 0; g < l.length; g++)t.style.setProperty(l[g], a[l[g]]) } return t } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-ngx-carousel-3d"]], viewQuery: function (t, a) { if (1 & t && (e.Gf(Ai, 5), e.Gf(Gi, 5)), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.carousel3dcontainer = l.first), e.iGM(l = e.CRH()) && (a.carousel3DnatEle = l.first) } }, inputs: { options: "options", slides: "slides", onBeforeChange: "onBeforeChange", onLastSlide: "onLastSlide", onSlideChange: "onSlideChange", onSelectedClick: "onSelectedClick", category: "category" }, features: [e.TTD], ngContentSelectors: $t, decls: 13, vars: 7, consts: [[1, "carousel-3d-container"], ["corousel3dcontainer", ""], [1, "carousel-3d-loader", 3, "hidden"], [1, "carousel-3d-loader-circle"], [1, "carousel-3d-loader-percentage"], [3, "hidden", "ngSwitch"], [1, "carousel-3d", 3, "hidden"], ["carousel3D", ""], [1, "carousel-3d-loader-error", 3, "hidden"], ["class", "carousel-3d-controls", 4, "ngIf"], [1, "carousel-3d-controls"], [1, "carousel-3d-next", "arrow-left", 3, "click"], [1, "carousel-3d-prev", "arrow-right", 3, "click"]], template: function (t, a) { 1 & t && (e.F$t(), e.TgZ(0, "div", 0, 1)(2, "div", 2), e._UZ(3, "div", 3), e.TgZ(4, "div", 4), e._uU(5), e.qZA()(), e.TgZ(6, "div", 5)(7, "div", 6, 7), e.Hsn(9), e.qZA(), e.TgZ(10, "p", 8), e._uU(11, "There was a problem during load"), e.qZA(), e.YNc(12, ki, 3, 0, "div", 9), e.qZA()()), 2 & t && (e.xp6(2), e.Q6J("hidden", !a.isLoading), e.xp6(3), e.Oqu(a.percentLoaded), e.xp6(1), e.Q6J("hidden", a.isLoading)("ngSwitch", a.isSuccessful), e.xp6(1), e.Q6J("hidden", !a.isRendered && !a.isSuccessful), e.xp6(3), e.Q6J("hidden", a.isSuccessful), e.xp6(2), e.Q6J("ngIf", a.controls)) }, directives: [o.RF, o.O5], encapsulation: 2 }), n })(), Kg = (() => { class n { constructor() { } ngOnInit() { } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-ngx-carousel-3d-slide"]], ngContentSelectors: $t, decls: 2, vars: 0, consts: [[1, "slide-3d"]], template: function (t, a) { 1 & t && (e.F$t(), e.TgZ(0, "div", 0), e.Hsn(1), e.qZA()) }, encapsulation: 2 }), n })(), ya = (() => { class n { constructor(t, a, l, g, p, b, E, L) { this.sanitizer = t, this.jackpotDataService = a, this.navigation = l, this.gameDataManager = g, this.casinoLobbyService = p, this.configProviderService = b, this.fastLoadingGamesService = E, this.casinoManager = L, this.classNameTop = "single-jackpot", this.classNameBottom = "multiple-jackpot", this.jackpotType = "multi", this.moreInfoMessage = "More info", this.jackpotWidgetData = [], this.widgets = [], this.games = [], this.items = [], this.value = "multi", this.options = {}, this.startSlide = 0, this.endSlide = 5, this.jackpotDisplayName = "", this.newFeatureGridArr = [], this.currentSlideIndex = 0, this.carouselConfig = { grid: { xs: 1, sm: 6, md: 6, lg: 6, all: 0 }, slide: 1, speed: 400, point: { visible: !0 }, loop: !1, touch: !0 }, this.options3D(), this.indexCount = 0, this.isCarousal = document.body.offsetWidth >= 655 || window.innerWidth >= 655 } ngOnInit() { let t = this.configProviderService.provideGlobalConfig(); this.multiJackpotBgClr = t.lobbyConfigurations.multiJackpotBgClr, this.multiJackpotLeftArrowBgClr = t.lobbyConfigurations.multiJackpotLeftArrowBgClr, this.multiJackpotRightArrowBgClr = t.lobbyConfigurations.multiJackpotRightArrowBgClr, this.mJPaginationActiveClr = t.lobbyConfigurations.mJPaginationActiveClr, this.mJPaginationInactiveClr = t.lobbyConfigurations.mJPaginationInactiveClr, this.multiJackpotArrowOpacity = t.lobbyConfigurations.multiJackpotArrowOpacity; let a = t.lobbyConfigurations.multiJackpotmode; this.mode = "v2" === a || "v3" === a ? a : "v1", this.startJackpotFeed(), this.isPreButtonVisible = !0, this.isNextButtonVisible = !(this.widgets.length > 1), this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(l => { this.fastLoadingGamesService.setFastLoadingGames(this.games, l) }) } ngDoCheck() { let t, a; for (t = document.getElementsByClassName("slide-3d"), a = 0; a < t.length; ++a)t[a].setAttribute("style", "border-style: none !important;") } onResize() { document.body.offsetWidth >= 655 || window.innerWidth >= 655 ? (this.isCarousal = !0, this.options3D()) : (this.isCarousal = !1, this.moveSlideTo = this.indexCount), this.setCarousel() } options3D() { this.options = document.body.offsetWidth >= 1345 ? { clicking: !0, sourceProp: "src", visible: 3, perspective: 1, startSlide: 0, dir: "rtr", width: 260, height: 250, autoRotationSpeed: 5e9, loop: !0, space: 260 } : { clicking: !0, sourceProp: "src", visible: 3, perspective: 1, startSlide: 0, dir: "rtr", width: 210, height: 200, space: 200, autoRotationSpeed: 5e9, loop: !0 } } startJackpotFeed() { this.showJackpotWidget = !1, this.refreshJackpotsNew(), this.jackpotDataService.jackpotFeedObservable.subscribe(() => { this.refreshJackpotsNew(), this.isNextButtonVisible = !(this.widgets.length > 1) }) } refreshJackpotsNew() { if (this.category.sitecoreData.showJackpotWidget) { this.jackpotsCache = this.jackpotDataService.getJackpotData(); let t = this.category.sitecoreData.jackpotWidget; for (let l in t) t[l] = decodeURIComponent(t[l]); let a = []; if (this.jackpotWidgetData.length = 0, this.widgets.length = 0, this.ShowSeeAllJackpots = !!this.category.sitecoreData.showSeeAllJackpots && this.category.sitecoreData.showSeeAllJackpots, this.jackpotsCache && Object.keys(this.jackpotsCache).length && t && t.length > 1) { let l = 0; for (let g in this.jackpotsCache) { if (l >= this.MaxWidgets) break; let p = this.GetJackpotWidgetItem(g, this.jackpotsCache); this.CheckJackpotWidget(g, t) && (a.push({ isActive: !1, jackpotValue: p.amount, jackpotDisplayName: p.content, jackpotName: p.jackpotGroupName, jackpotWidgetImage: p.jackpotImage, showBackgroundImage: !0, jackpotWidgetBackgroundImage: p.backgroundImage }), this.jackpotWidgetData.push({ jackpotName: p.jackpotGroupName, jackpotDisplayName: p.content, jackpotCta: p.ctaLink, jackpotGames: p.gamesList }), l++) } this.jackpotWidgetData.length > 0 && (this.UpdateWidget(this.jackpotWidgetData[this.currentSlideIndex]), this.widgets = a, this.widgets[this.currentSlideIndex].isActive = !0, this.widgetsData = this.jackpotWidgetData, this.showJackpotWidget = !0, this.MaxWidgets = this.widgets.length, this.SetActiveMultiJackpotWidget(this.currentSlideIndex)) } } else this.showJackpotWidget = !1 } GetJackpotWidgetItem(t, a) { for (let g in a) { if (g.toLowerCase() === t.toLowerCase()) return a[g]; if (a[g] && a[g].subJackpotDetails) for (let p of a[g].subJackpotDetails) if (p && p.subJackpotName && p.subJackpotName.toLowerCase() === t.toLowerCase()) return p.gamesList = a[g].gamesList, p.jackpotGroupName = p.subJackpotName, p.amount = p.subJackpotAmount, p.Value = p.subJackpotValue, p } return {} } CheckJackpotWidget(t, a) { for (let l in a) if (a[l].toLowerCase() === t.toLowerCase()) return !0; return !1 } onmoveFn(t) { this.isPreButtonVisible = t.isFirst, this.moveSlideTo = t.slideItems, this.isNextButtonVisible = t.isLast, this.currentSlideIndex = t.currentSlide, this.UpdateWidget(this.jackpotWidgetData[this.currentSlideIndex]), this.SetActiveMultiJackpotWidget(this.currentSlideIndex), this.indexCount = this.currentSlideIndex, this.carousel.slideClicked(this.indexCount) } setCarousel() { this.isJackpotWidgetGamesCarousel = !this.isTouch } HandleMultiJackpotClick(t) { this.SetActiveMultiJackpotWidget(t), this.moveSlideTo = t } slideClicked(t) { !0 === t ? this.indexCount < this.widgets.length - 1 ? (this.indexCount++, this.carousel.slideClicked(this.indexCount), this.UpdateWidget(this.jackpotWidgetData[this.indexCount]), this.SetActiveMultiJackpotWidget(this.indexCount)) : this.indexCount === this.widgets.length - 1 && (this.indexCount = 0, this.carousel.slideClicked(this.indexCount), this.UpdateWidget(this.jackpotWidgetData[this.indexCount]), this.SetActiveMultiJackpotWidget(this.indexCount)) : 0 !== this.indexCount ? (this.indexCount--, this.carousel.slideClicked(this.indexCount), this.UpdateWidget(this.jackpotWidgetData[this.indexCount]), this.SetActiveMultiJackpotWidget(this.indexCount)) : 0 === this.indexCount && (this.indexCount = this.widgets.length - 1, this.carousel.slideClicked(this.indexCount), this.UpdateWidget(this.jackpotWidgetData[this.indexCount]), this.SetActiveMultiJackpotWidget(this.indexCount)), this.HandleMultiJackpotClick(this.indexCount), this.currentSlideIndex = this.indexCount, this.featuredGrid && this.featuredGrid.desktopGamesCarousel && this.featuredGrid.desktopGamesCarousel.moveTo(0), this.featuredGrid && this.featuredGrid.mobileGamesCarousel && this.featuredGrid.mobileGamesCarousel.moveTo(0) } postUpdatedWidgetHeight(t) { } pointClicked(t) { this.indexCount = t, this.carousel.goSlide(this.indexCount), this.UpdateWidget(this.jackpotWidgetData[this.indexCount]), this.SetActiveMultiJackpotWidget(this.indexCount), this.currentSlideIndex = this.indexCount } GotoJackpots(t) { this.navigation.goTo(t, { replace: !1, forceReload: !0 }) } UpdateWidget(t) { t && t.jackpotGames && t.jackpotGames.length > 0 && this.setGames(t.jackpotGames), this.jackpotDesc = this.sanitizer.bypassSecurityTrustResourceUrl(t.jackpotDesc), this.cta = t.jackpotCta, this.postUpdatedWidgetHeight(0) } setGames(t) { var a, l, g; if (this.games = [], this.newFeatureGridArr = [], t && t.length > 0) { let p = !1, b = null === (g = null === (l = null === (a = this.category) || void 0 === a ? void 0 : a.sitecoreData) || void 0 === l ? void 0 : l.attributes) || void 0 === g ? void 0 : g.newgridbgcolor; this.categoryObj = Object.assign({}, this.category), this.categoryObj.rowCount = "-1"; for (let E = 0; E < t.length; E++) { let O = this.casinoLobbyService.getGameInfo(t[E]); if (O) { O.icon = this.category.isIconSixCategory ? "6" : this.category.isIconSevenCategory ? "7" : "1", O.lobbyType = this.lobbyType; let U = this.gameDataManager.setGameLobbyModel(O, this.isTouch); U.gameContainer = this.gameContainer, U.bgTileMode = this.category.isIconSevenCategory && p || !1, U.gameTileBorderRadius = this.casinoLobbyService.getBorderRadius(this.category), U.gameTileDropShadow = this.casinoLobbyService.getDropShadow(this.category), U.infoIconClass = this.casinoManager.assignGameClass(this.casinoManager.getCurrentWidth(), O.icon), U.newgridbgcolor = b, p = !p, this.games.push(U), this.newFeatureGridArr.push({ games: [U], maxRowSpan: U.rowSpan, maxColSpan: U.colSpan }) } } } } filterUnavailableGames() { this.games = this.games.filter(t => !t.isDataNotAvailable) } SetActiveMultiJackpotWidget(t) { try { this.widgets && (this.widgets.forEach(a => { a.isActive = !1 }), this.widgets[t] && (this.widgets[t].isActive = !0)) } catch (a) { } } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(ae.H7), e.Y36(c.Gn), e.Y36(r.f5Y), e.Y36(c.cM), e.Y36(c.nA), e.Y36(c.iX), e.Y36(c.$Q), e.Y36(c.M3)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-multi-jackpot-widget"]], viewQuery: function (t, a) { if (1 & t && (e.Gf(xi, 5), e.Gf(Ri, 5), e.Gf(wi, 5), e.Gf(Ui, 5)), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.el = l.first), e.iGM(l = e.CRH()) && (a.featuredGrid = l.first), e.iGM(l = e.CRH()) && (a.carousel = l.first), e.iGM(l = e.CRH()) && (a.myCarousel = l.first) } }, inputs: { category: "category", isTouch: "isTouch", lobbyType: "lobbyType", gameContainer: "gameContainer" }, decls: 1, vars: 1, consts: [["class", "small-icon", 3, "ngClass", "ngStyle", 4, "ngIf"], [1, "small-icon", 3, "ngClass", "ngStyle"], ["class", "casino-multi-jackpot", 3, "resize", 4, "ngIf"], [1, "jackpot-widget-content", "casino-lobby-width-gametile", 3, "ngClass"], ["class", "subcategory-start", 3, "ngClass", "resize", 4, "ngIf"], [1, "jackpot-widget-content", "casino-lobby-width"], ["class", "see-all-button", 4, "ngIf"], [1, "casino-multi-jackpot", 3, "resize"], [3, "inputs", "dataSource", "onMove", 4, "ngIf"], [3, "slides", "options", "category", "hidden", "id"], ["carousel", ""], [3, "ngClass", 4, "ngFor", "ngForOf"], [1, "theme-left", "button-left-multi", 3, "ngStyle", "click"], [1, "theme-right", "button-right-multi", 3, "ngStyle", "click"], ["class", "swiper-pagination-dot", 4, "ngIf"], [3, "inputs", "dataSource", "onMove"], ["myCarousel", ""], [4, "nguCarouselDef"], ["NguCarouselPrev", "", 1, "theme-left", "button-left-multi", 3, "ngStyle", "ngClass"], ["NguCarouselNext", "", 1, "theme-right", "button-right-multi", 3, "ngStyle", "ngClass"], ["NguCarouselPoint", "", 1, "myPoint"], [3, "active", "click", 4, "ngFor", "ngForOf"], [3, "inputData", "componentName", 4, "ngIf"], [3, "inputData", "componentName"], [3, "click"], [3, "ngClass"], [1, "swiper-pagination-dot"], ["class", "swiper-pagination-bullet", 3, "ngStyle", "ngClass", "click", 4, "ngFor", "ngForOf"], [1, "swiper-pagination-bullet", 3, "ngStyle", "ngClass", "click"], [1, "subcategory-start", 3, "ngClass", "resize"], [1, "scrollable-games", 3, "ngClass"], [3, "games", "subcategory", "EnableFutureGrid", "isTouch", "Type", "ngClass", "gameLaunchedFrom", "newFeatureGridArr", 4, "ngIf"], [3, "games", "subcategory", "EnableFutureGrid", "isTouch", "Type", "ngClass", "gameLaunchedFrom", "newFeatureGridArr"], ["featuredGrid", ""], [1, "see-all-button"], [1, "btn", "btn-cta", "btn-primary", 3, "innerHTML", "click"]], template: function (t, a) { 1 & t && e.YNc(0, ns, 6, 16, "div", 0), 2 & t && e.Q6J("ngIf", a.showJackpotWidget) }, directives: [Q.rC, Q.nN, lt, Ng, Kg, ti, o.O5, o.mk, o.PC, Q.Mg, Q.Vy, Q.Wc, Q.zO, o.sg], encapsulation: 2 }), n })(), Jg = (() => { class n { constructor(t) { this.changeDetectorRef = t, this.majorItems = [], this.fileSrcs = [], this.debugSizeBefore = [], this.debugSizeAfter = [], this.isMobile = !(document.body.offsetWidth >= 768 || window.innerWidth >= 768) } ngOnInit() { this.eightyPercentValue = .8 * parseInt(this.releaseamount), this.sixtyPercentValue = .6 * parseInt(this.releaseamount), this.bufferValue = parseInt(this.amount), this.amount = parseInt(this.amount), this.tickerValue = this.bufferValue, this.updateTicker(this.tickerValue), this.tickerCode() } ngOnChanges() { clearInterval(this.controlIntervalId), clearInterval(this.setFlipId), parseInt(this.amount) > parseInt(this.tickerValue) && (this.tickerValue = parseInt(this.amount)), this.tickerCode() } updateTicker(t) { this.majorItems = []; let a = this.formatNumber(t); if (a && "nan" !== a.toLowerCase()) for (let l = 0; "." != a[l] && l < a.length; l++)this.majorItems.push({ isFlipVisible: !1, value: a[l] }); this.tickerValueLength = this.majorItems.length } formatNumber(t) { return t.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") } paddingValue(t) { if (!1 === this.isMobile) switch (t) { case 1: return "61px"; case 2: return "46px"; case 3: return "33px"; case 5: return "10px"; case 6: return "-1px"; default: return "0px" } } paddingValueMega(t) { if (!1 === this.isMobile) switch (t) { case 1: return "172px"; case 2: return "143px"; case 3: return "114px"; case 5: return "75px"; case 6: return "49px"; case 7: return "17px"; case 9: return "-10px"; default: return "0px" } } tickerCode() { this.controlIntervalId = setInterval(() => { this.tickerValue = (parseFloat(this.tickerValue) + .5).toFixed(2), this.updateTicker(this.tickerValue) }, 6e3) } fileChange(t) { if (!/(\.jpg|\.jpeg|\.png|\.gif)$/i.exec(t.value)) return t.value = "", !1; this.readFiles(t.files) } readFile(t, a, l) { a.onload = () => { l(a.result) }, a.readAsDataURL(t) } readFiles(t, a = 0) { let l = new FileReader; a in t ? this.readFile(t[a], l, g => { let p = document.createElement("img"); p.src = g, this.resize(p, 150, 150, (b, E, L) => { this.debugSizeBefore.push(E), this.debugSizeAfter.push(L), this.fileSrcs.pop(), this.fileSrcs.push(b), this.readFiles(t, a + 1) }) }) : this.changeDetectorRef.detectChanges() } resize(t, a, l, g) { return t.onload = () => { let p = t.width, b = t.height; p > b ? p > a && (b *= a / p, p = a) : b > l && (p *= l / b, b = l); let E = document.createElement("canvas"); E.width = p, E.height = b, E.getContext("2d").drawImage(t, 0, 0, p, b); let O = E.toDataURL("image/jpeg"); g(O, t.src.length, O.length) } } mustGoPtLsMargin(t) { if (!0 === this.isMobile) switch (t) { case 1: if (document.body.offsetWidth <= 320) return "35.2%"; if (document.body.offsetWidth <= 360) return "37%"; if (document.body.offsetWidth <= 375) return "37%"; if (document.body.offsetWidth <= 414) return "38.5%"; if (document.body.offsetWidth <= 480) return "37%"; if (document.body.offsetWidth <= 568) return "40%"; if (document.body.offsetWidth <= 640) return "40.5%"; if (document.body.offsetWidth <= 667) return "41.3%"; if (document.body.offsetWidth <= 736) return "42%"; case 2: if (document.body.offsetWidth <= 320) return "29%"; if (document.body.offsetWidth <= 360) return "31%"; if (document.body.offsetWidth <= 375) return "32%"; if (document.body.offsetWidth <= 414) return "33.5%"; if (document.body.offsetWidth <= 480) return "33.5%"; if (document.body.offsetWidth <= 568) return "35.8%"; if (document.body.offsetWidth <= 640) return "37.5%"; if (document.body.offsetWidth <= 667) return "38%"; if (document.body.offsetWidth <= 736) return "39%"; case 3: if (document.body.offsetWidth <= 320) return "24%"; if (document.body.offsetWidth <= 360) return "26.5%"; if (document.body.offsetWidth <= 375) return "27.5%"; if (document.body.offsetWidth <= 414) return "29.5%"; if (document.body.offsetWidth <= 480) return "29%"; if (document.body.offsetWidth <= 568) return "32%"; if (document.body.offsetWidth <= 640) return "34.2%"; if (document.body.offsetWidth <= 667) return "34.8%"; if (document.body.offsetWidth <= 736) return "36.5%"; case 5: if (document.body.offsetWidth <= 320) return "16.5%"; if (document.body.offsetWidth <= 360) return "20.5%"; if (document.body.offsetWidth <= 375) return "21.5%"; if (document.body.offsetWidth <= 414) return "24%"; if (document.body.offsetWidth <= 480) return "24%"; if (document.body.offsetWidth <= 568) return "27.6%"; if (document.body.offsetWidth <= 640) return "30.1%"; if (document.body.offsetWidth <= 667) return "31%"; if (document.body.offsetWidth <= 736) return "32.5%"; case 6: if (document.body.offsetWidth <= 320) return "11%"; if (document.body.offsetWidth <= 360) return "15%"; if (document.body.offsetWidth <= 375) return "16.5%"; if (document.body.offsetWidth <= 414) return "19.8%"; if (document.body.offsetWidth <= 480) return "19.3%"; if (document.body.offsetWidth <= 568) return "23.8%"; if (document.body.offsetWidth <= 640) return "26.7%"; if (document.body.offsetWidth <= 667) return "27.7%"; if (document.body.offsetWidth <= 736) return "30%"; case 7: if (document.body.offsetWidth <= 320) return "5.4%"; if (document.body.offsetWidth <= 360) return "10.5%"; if (document.body.offsetWidth <= 375) return "12%"; if (document.body.offsetWidth <= 414) return "15.5%"; if (document.body.offsetWidth <= 480) return "15%"; if (document.body.offsetWidth <= 568) return "20.1%"; if (document.body.offsetWidth <= 640) return "23.5%"; if (document.body.offsetWidth <= 667) return "24.6%"; if (document.body.offsetWidth <= 736) return "27%"; case 9: if (document.body.offsetWidth <= 320) return "-2%"; if (document.body.offsetWidth <= 360) return "4%"; if (document.body.offsetWidth <= 375) return "5.8%"; if (document.body.offsetWidth <= 414) return "10%"; if (document.body.offsetWidth <= 480) return "9.3%"; if (document.body.offsetWidth <= 568) return "15.4%"; if (document.body.offsetWidth <= 640) return "19.4%"; if (document.body.offsetWidth <= 667) return "20.5%"; if (document.body.offsetWidth <= 736) return "23.3%"; default: return "0%" } } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(e.sBO)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-flipclock"]], inputs: { amount: "amount", currency: "currency", releaseamount: "releaseamount", isMega: "isMega" }, features: [e.TTD], decls: 3, vars: 5, consts: [[1, "mustGoFlip", 3, "ngStyle"], ["class", "tickerpadding", 3, "ngStyle", 4, "ngIf"], ["class", "flipleftpad", 3, "ngStyle", 4, "ngIf"], [1, "tickerpadding", 3, "ngStyle"], [1, "seg"], [1, "flip-wrapper"], [1, "curr"], ["class", "seg", 3, "ngClass", 4, "ngFor", "ngForOf"], [1, "seg", 3, "ngClass"], ["class", "flip-comma", 4, "ngIf"], ["class", "flip-wrapper", 4, "ngIf"], [1, "flip-comma"], ["class", "flip", 3, "ngClass", 4, "ngIf"], [1, "flip", 3, "ngClass"], ["class", "flip flip--top flip--back", 3, "ngClass", 4, "ngIf"], [1, "flip", "flip--bottom", 3, "ngClass"], [1, "flip", "flip--top", "flip--back", 3, "ngClass"], [1, "flipleftpad", 3, "ngStyle"], [1, "seg-mega"], [1, "flip-wrapper-mega"], [1, "curr-mega"], ["class", "seg-mega", 3, "ngClass", 4, "ngFor", "ngForOf"], [1, "seg-mega", 3, "ngClass"], ["class", "flip-comma-mega", 4, "ngIf"], ["class", "flip-wrapper-mega", 4, "ngIf"], [1, "flip-comma-mega"], ["class", "flip-mega", 3, "ngClass", 4, "ngIf"], [1, "flip-mega", 3, "ngClass"], ["class", "flip-mega flip--top--mega flip--back--mega", 3, "ngClass", 4, "ngIf"], [1, "flip-mega", "flip--bottom--mega", 3, "ngClass"], [1, "flip-mega", "flip--top--mega", "flip--back--mega", 3, "ngClass"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0), e.YNc(1, ds, 6, 5, "div", 1), e.YNc(2, bs, 6, 5, "div", 2), e.qZA()), 2 & t && (e.Q6J("ngStyle", e.VKq(3, En, a.mustGoPtLsMargin(a.tickerValueLength))), e.xp6(1), e.Q6J("ngIf", null != a.amount && "true" != a.isMega), e.xp6(1), e.Q6J("ngIf", null != a.amount && "true" == a.isMega)) }, directives: [o.PC, o.O5, o.sg, o.mk], encapsulation: 2 }), n })(), ba = (() => { class n { constructor(t, a, l, g, p, b) { this.configProviderService = t, this.jackpotDataService = a, this.gameDataManager = l, this.fastLoadingGamesService = g, this.casinoLobbyService = p, this.casinoManager = b, this.games = [], this.MustGoSubJackpotsList = [], this.currentSlide = 0, this.startSlide = 0, this.endSlide = 5, this.isMustgoRedesign = !1, this.primaryJackpotDisplayname = "", this.subJackpot1DisplayName = "", this.subJackpot2DisplayName = "", this.subJackpot3DisplayName = "", this.newFeatureGridArr = [], document.body.offsetWidth == window.innerWidth || document.body.offsetWidth > window.innerWidth ? this.windowWidth = document.body.offsetWidth : document.body.offsetWidth < window.innerWidth && (this.windowWidth = window.innerWidth), this.isClockVisible = !1 } ngOnInit() { let t = this.configProviderService.provideJackpotConfig(); this.reftime = t.mustGoJackpotTimerBase, this.reftime = this.reftime.split(":"), this.setCarousel(), this.isMustgoRedesign || setInterval(() => { let a = new Date((new Date).getFullYear(), (new Date).getMonth(), (new Date).getDate(), this.reftime[0], this.reftime[1], this.reftime[2], (new Date).getMilliseconds()), l = new Date, g = a.getTime() - l.getTime(); g < 0 && (g += 864e5); let p = Math.floor(g / 36e5 % 24), b = Math.floor(g / 6e4 % 60), E = Math.floor(g / 1e3 % 60); p = p < 10 ? "0" + p : p, b = b < 10 ? "0" + b : b, E = E < 10 ? "0" + E : E, this.releaseTime = p + ":" + b + ":" + E }, 1e3), this.mobileCarouselTile = { grid: { xs: 1, sm: 4.5, md: 4.5, lg: 6, all: 0 }, slide: 1, speed: 400, point: { visible: !1 }, loop: !1, touch: !0 }, this.startJackpotFeed(), this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(a => { this.fastLoadingGamesService.setFastLoadingGames(this.games, a) }) } onResize() { this.setCarousel(), document.body.offsetWidth == window.innerWidth || document.body.offsetWidth > window.innerWidth ? this.windowWidth = document.body.offsetWidth : document.body.offsetWidth < window.innerWidth && (this.windowWidth = window.innerWidth), 0 == this.currentSlide && (this.isPreButtonVisible = !0), this.moveSlideTo = this.currentSlide } startJackpotFeed() { this.refreshJackpotsNew(), this.jackpotDataService.jackpotFeedObservable.subscribe(() => { this.refreshJackpotsNew() }) } refreshJackpotsNew() { if (this.MustGoSitecoreObject = this.category.sitecoreData, this.MustGoProperties = this.MustGoSitecoreObject.attributes, this.ribboncolor = this.MustGoSitecoreObject.attributes.mustgojackpotribboncolor, this.bcolor = this.MustGoSitecoreObject.attributes.mustgobackgroundcolor, this.ribbonsidecolor = this.MustGoSitecoreObject.attributes.mustgoribbonsidecolor, this.ribbontrianglecolor = this.MustGoSitecoreObject.attributes.mustgoribbontrianglecolor, this.MustGoSitecoreObject.showMustGo) { this.showMustGo = !0, this.jackpotsFeed = this.jackpotDataService.getJackpotData(); let t = this.MustGoSitecoreObject.mustGoJackpot; if (this.jackpotsFeed && "" !== t && t) { for (let a in this.jackpotsFeed) { let l = this.jackpotsFeed[a]; if (l.jackpotGroupName && t && l.jackpotGroupName.toLowerCase() == t.toLowerCase()) { this.MustGoFeedObject = l; let g = this.MustGoFeedObject.amount.match(/[^\d\.\,\s]/g); if (g && g.length > 0) { this.currency = ""; for (let E = 0; E < g.length; E++)this.currency = this.currency + g[E]; this.currency = this.currency.replace(/\,/g, ""), this.currency = this.currency.replace(/\./g, "") } let p = l.subJackpotDetails; this.MustGoSubJackpotsList = []; let b = { "primaryJackpot-name": this.MustGoSitecoreObject.attributes.primaryjackpotname, "subJackpot1-Name": this.MustGoSitecoreObject.attributes.subjackpot1name, "subJackpot2-Name": this.MustGoSitecoreObject.attributes.subjackpot2name, "subJackpot3-Name": this.MustGoSitecoreObject.attributes.subjackpot3name }; for (let E in b) p.forEach(L => { b[E] && L.subJackpotName && b[E].toLowerCase() == L.subJackpotName.toLowerCase() && (L.subJackpotValue = parseFloat(L.subJackpotValue), L.ribbonName = this.MustGoProperties.subjackpot1name, this.MustGoSubJackpotsList.push(L)) }); if (this.MustGoFeedObject && this.MustGoFeedObject.messages) { let E = this.MustGoFeedObject.messages; this.primaryJackpotDisplayname = E.PrimaryJackpotDisplayname ? E.PrimaryJackpotDisplayname : this.MustGoProperties.primaryjackpotname, this.subJackpot1DisplayName = E.SubJackpot1DisplayName ? E.SubJackpot1DisplayName : this.MustGoProperties.subjackpot1name, this.subJackpot2DisplayName = E.SubJackpot2DisplayName ? E.SubJackpot2DisplayName : this.MustGoProperties.subjackpot2name, this.subJackpot3DisplayName = E.SubJackpot3DisplayName ? E.SubJackpot3DisplayName : this.MustGoProperties.subjackpot3name } this.MustGoSubJackpotsList[0] && (this.MustGoSubJackpotsList[0].ribbonName = "" != this.primaryJackpotDisplayname ? this.primaryJackpotDisplayname : this.MustGoProperties.primaryjackpotname, this.MustGoSubJackpotsList[0].releaseAmount = this.MustGoProperties.primaryjackpotreleaseamount), this.MustGoSubJackpotsList[1] && (this.MustGoSubJackpotsList[1].ribbonName = "" != this.subJackpot1DisplayName ? this.subJackpot1DisplayName : this.MustGoProperties.subjackpot1name, this.MustGoSubJackpotsList[1].releaseAmount = this.MustGoProperties.subjackpot1releaseamount), this.MustGoSubJackpotsList[2] && (this.MustGoSubJackpotsList[2].ribbonName = "" != this.subJackpot2DisplayName ? this.subJackpot2DisplayName : this.MustGoProperties.subjackpot2name, this.MustGoSubJackpotsList[2].releaseAmount = this.MustGoProperties.subjackpot2releaseamount), this.MustGoSubJackpotsList[3] && (this.MustGoSubJackpotsList[3].ribbonName = "" != this.subJackpot3DisplayName ? this.subJackpot3DisplayName : this.MustGoProperties.subjackpot3name, this.MustGoSubJackpotsList[3].releaseAmount = this.MustGoProperties.subjackpot3releaseamount); break } } (this.MustGoSubJackpotsList.length < 4 || "" == this.MustGoProperties.primaryjackpotname || "" == this.MustGoProperties.subjackpot1name || "" == this.MustGoProperties.subjackpot2name || "" == this.MustGoProperties.subjackpot3name || "" == this.MustGoProperties.subjackpot1releaseamount || "" == this.MustGoProperties.primaryjackpotreleaseamount || "" == this.MustGoProperties.subjackpot2releaseamount || "" == this.MustGoProperties.subjackpot3releaseamount) && (this.showMustGo = !1), this.MustGoFeedObject && this.MustGoFeedObject.gamesList && this.setGames(this.MustGoFeedObject.gamesList), "" !== this.MustGoProperties.primaryjackpotname && ("" == this.MustGoProperties.subjackpot1name || "" == this.MustGoProperties.subjackpot2name || "" == this.MustGoProperties.subjackpot3name) && ("" != this.MustGoProperties.subjackpot1name || "" != this.MustGoProperties.subjackpot2name || "" != this.MustGoProperties.subjackpot3name) && (this.isMustgoRedesign = !0) } } else this.showMustGo = !1 } onmoveFn(t) { this.isClockVisible = this.MustGoProperties.dailyjackpotname == this.MustGoSubJackpotsList[t.currentSlide].subJackpotName, this.isPreButtonVisible = t.isFirst, this.currentSlide = t.currentSlide, this.isNextButtonVisible = t.isLast, this.moveSlideTo = t.slideItems } setGames(t) { var a, l, g; if (this.games = [], this.newFeatureGridArr = [], t && t.length > 0) { let p = !1, b = null === (g = null === (l = null === (a = this.category) || void 0 === a ? void 0 : a.sitecoreData) || void 0 === l ? void 0 : l.attributes) || void 0 === g ? void 0 : g.newgridbgcolor; this.categoryObj = Object.assign({}, this.category), this.categoryObj.rowCount = "-1"; for (let E = 0; E < t.length; E++) { let O = this.casinoLobbyService.getGameInfo(t[E]); if (O) { let U = !1; if (this.casinoLobbyService.getDisabledGames().forEach(z => { z.toLowerCase() == O.game.toLowerCase() && (U = !0) }), !U) { O.icon = this.category.isIconSixCategory ? "6" : this.category.isIconSevenCategory ? "7" : "1", O.lobbyType = this.lobbyType; let z = this.gameDataManager.setGameLobbyModel(O, this.isTouch); z.gameContainer = this.gameContainer, z.bgTileMode = this.category.isIconSevenCategory && p || !1, z.gameTileBorderRadius = this.casinoLobbyService.getBorderRadius(this.category), z.gameTileDropShadow = this.casinoLobbyService.getDropShadow(this.category), z.infoIconClass = this.casinoManager.assignGameClass(this.casinoManager.getCurrentWidth(), O.icon), z.newgridbgcolor = b, p = !p, this.games.push(z), this.newFeatureGridArr.push({ games: [z], maxRowSpan: z.rowSpan, maxColSpan: z.colSpan }) } } } this.isPreButtonVisible = !0, this.isNextButtonVisible = !(this.games && this.games.length > 6) } } setMustGoGames(t) { this.games = []; for (let a = 0; a < t.length; a++) { let g = this.gameDataManager.setGameLobbyModel(t[a], this.isTouch); this.games.push(g) } } filterUnavailableGames() { this.games = this.games.filter(t => !t.isDataNotAvailable) } createEmptyGameModel(t) { let a = new c.b0; return a.isDataNotAvailable = !0, a.gameId = t, a } setCarousel() { this.isCarousal = !1 === this.isTouch } ngOnChanges() { this.refreshJackpotsNew() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.iX), e.Y36(c.Gn), e.Y36(c.cM), e.Y36(c.$Q), e.Y36(c.nA), e.Y36(c.M3)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-must-go"]], inputs: { category: "category", isTouch: "isTouch", lobbyType: "lobbyType", gameContainer: "gameContainer" }, features: [e.TTD], decls: 1, vars: 1, consts: [["class", "casino-mustgo", 3, "ngStyle", "ngClass", "resize", 4, "ngIf"], [1, "casino-mustgo", 3, "ngStyle", "ngClass", "resize"], ["class", "casino-mustgo1", 3, "ngClass", 4, "ngIf"], ["class", "casino-mustgo1", 4, "ngIf"], [1, "casino-mustgo1"], [1, "casino-mustgo-games", "casino-lobby-width-gametile"], [1, "casino-carousel-wrapper", "scrollable-games", 3, "ngStyle"], [3, "games", "subcategory", "EnableFutureGrid", "isTouch", "Type", "gameLaunchedFrom", "newFeatureGridArr", 4, "ngIf"], [1, "casino-mustgo1", 3, "ngClass"], [1, "mustgo-wrapper"], [1, "casino-top-logo", "casino-dsktp-logo", "left-padding", 3, "ngClass"], [3, "src"], [1, "mustgo-carousel", 3, "ngClass"], [3, "inputs", "dataSource", "onMove"], [4, "nguCarouselDef"], ["NguCarouselPrev", "", 1, "theme-left", "leftRs", "carousel-btn", "must-go-carousel-btn", 3, "ngClass"], ["NguCarouselNext", "", 1, "theme-right", "rightRs", "carousel-btn", "must-go-carousel-btn", 3, "ngClass"], [1, "casino-subjackpot", "lastchild", "ribbon-ticker-jpk"], [1, "casino-ribbon-container", "one"], [1, "bk", "l", 3, "ngStyle"], [1, "casino-arrow", "top", 3, "ngStyle"], [1, "caino-arrow", "bottom", 3, "ngStyle"], [1, "casino-skew", "l", 3, "ngStyle"], [1, "casino-ribbon-main", 3, "ngStyle"], [1, "casino-skew", "r", 3, "ngStyle"], [1, "bk", "r", 3, "ngStyle"], [1, "arrow", "top", 3, "ngStyle"], [1, "casino-arrow", "bottom", 3, "ngStyle"], [1, "ticker"], [3, "isMega", "currency", "amount", "releaseamount"], [2, "clear", "both"], ["class", "casino-mustgo-clock", 3, "ngStyle", 4, "ngIf"], [1, "casino-mustgo-clock", 3, "ngStyle"], [1, "clock-img", "theme-clock"], [1, "casino-clock-time"], [1, "casino-top-logo", "casino-dsktp-logo", "left-padding"], [1, "casino-dsktp-primarybanner", "casino-jckpt"], ["class", "casino-ribbon-main", 3, "ngStyle", 4, "ngIf"], [1, "ticker", "first-ticker"], [1, "some", 3, "isMega", "currency", "amount", "releaseamount"], [1, "casino-combined-stuff", "casino-jckpt"], [1, "casino-subjackpot"], ["class", "casino-mustgo-clock", 4, "ngIf"], [1, "casino-subjackpot", "lastchild"], [1, "space"], [1, "casino-mustgo-clock"], [3, "inputData", "componentName"], [3, "games", "subcategory", "EnableFutureGrid", "isTouch", "Type", "gameLaunchedFrom", "newFeatureGridArr"]], template: function (t, a) { 1 & t && e.YNc(0, Ys, 8, 20, "div", 0), 2 & t && e.Q6J("ngIf", a.MustGoSitecoreObject && a.MustGoSubJackpotsList && a.MustGoFeedObject && a.games) }, directives: [Q.rC, Q.K4, Jg, lt, ti, o.O5, o.PC, o.mk, Q.Mg, Q.Vy, Q.Wc], encapsulation: 2 }), n })(), Ca = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z, q, X, ee, fe, Ue, Xe) { this.configProviderService = t, this.mcPage = a, this.casinoManager = l, this.casinoLobbyService = g, this.gameDataManager = p, this.elementRef = b, this.utility = E, this.casinoIFrameOverlayService = L, this.liveCasinoService = O, this.casinoWidgetService = U, this.trackingService = K, this.optimizedTeaserManager = z, this.teaserService = q, this.navigation = X, this.urlUtilityService = ee, this.recentGamesService = fe, this.slotRacesTracking = Ue, this.slotRacesService = Xe, this.trackingIndex = 1, this.SubCategoryTeaser = "Embedded", this.isLastNavigationLevel = !1, this.Games = [], this.headerTeasers = [], this.loadNewSet = !0, this.offlineGamesArray = [], this.disabledGameArray = [], this.optimizedEmbeddedAboveTeasers = [], this.optimizedEmbeddedBelowTeasers = [], this.isShowEmbeddedAbove = !1, this.isShowEmbeddedBelow = !1, this.mostRecentlyPlayedGamesArr = [], this.trackingClass = "", this.newFeatureGridArr = [], this.skipRPCount = 0, this.alreadyFilteredRecentGames = [] } ngOnInit() { this.assignFeatures(), this.assignVideoParams(), this.subscribeToLoadNextGames(), this.subscribeToElementEventListeners(), this.subcategory.categoryInfo.categoryIndex = this.trackingIndex + 1, this.liveCasinoService.liveGamesFeedObservable.subscribe(t => { t && t.size > 0 && this.setOfflinesLivecasino() }), this.setTeasers(), (this.enableEmbeddedTeasers || this.configProviderService.provideOptimizedTeaserConfig().teaserOptimization) && (this.teaserObs = this.teaserService.teaserDataObservable.subscribe(t => { t && this.setTeasers() })), this.parallexInputData(), (this.validGames && this.validGames.length > 0 || this.subCategoryInfo && this.subCategoryInfo.sitecoreData && this.subCategoryInfo.sitecoreData.showJackpotWidget && this.subCategoryInfo.sitecoreData.jackpotWidgetIds) && (this.trackingClass = "gametracking track_" + this.subcategoryId) } assignFeatures() { var t, a, l, g, p; let b = this.configProviderService.provideFeaturesConfig(); this.showTeasersAboveGames = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, b.showEmbeddedTeasersAboveGames), this.isUkHeading = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, b.isUkHeading), this.isSignPosting = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, b.enableSignpostingSticker), this.changeCarouselView = null == b ? void 0 : b.changeCarouselView; let E = this.configProviderService.provideGlobalConfig(); this.subCategorySubTitleFontSize = this.casinoLobbyService.getsubCategorySubTitleFontSize(this.subCategoryInfo), this.categoryBackgroundFull = E.messages.CategoryBgFull, this.themeArrowLeft = E.messages.ThemeArrowLeft, this.themeArrowRight = E.messages.ThemeArrowRight; let L = this.configProviderService.provideGameSelectorWidgetConfig(), O = this.configProviderService.providewidgetConfig(); this.isEnabledGameSelector = (null == L ? void 0 : L.isEnabled) && this.subCategoryInfo && this.subCategoryInfo.sitecoreData && this.subCategoryInfo.sitecoreData.displayGameSelectorWidget, this.gameSelectorWidgetPosition = this.isEnabledGameSelector ? null === (t = this.subCategoryInfo) || void 0 === t ? void 0 : t.sitecoreData.gameSelectorWidgetPosition : void 0, this.displayPromoEDSWidget = (null == O ? void 0 : O.enablePromoEdsWidget) && (null === (l = null === (a = this.subCategoryInfo) || void 0 === a ? void 0 : a.sitecoreData) || void 0 === l ? void 0 : l.displayPromoEDSWidget) && "Overlay" != this.gameContainer, this.promoEDSWidgetPosition = null === (p = null === (g = this.subCategoryInfo) || void 0 === g ? void 0 : g.sitecoreData) || void 0 === p ? void 0 : p.promoEDSWidgetPosition, this.subcategory.categoryInfo.filterRecentlyPlayedGames && (this.filterThreshold = this.configProviderService.provideRecentlyPlayedGamesConfig().recentlyPlayedFilterThreshold, this.subcategory && this.subcategory.categoryInfo.sitecoreData && this.subcategory.categoryInfo.sitecoreData.recentlyPlayedFilterThreshold && 0 != this.subcategory.categoryInfo.sitecoreData.recentlyPlayedFilterThreshold && (this.filterThreshold = this.subcategory.categoryInfo.sitecoreData.recentlyPlayedFilterThreshold)); let U = this.subcategory.categoryInfo.parentCategoryId; this.isSlotRacesEnabled = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, b.enableSlotRacesForLobbyType), this.isSlotRacesEnabled && U + this.casinoManager.getSlotRaceCategoryId(this.lobbyType) === this.subcategoryId && (this.isSlotRacesCategory = !0), this.showSeeAllGamesCount = b.showSeeAllGamesCount && !this.isSlotRacesCategory, this.isSlotRacesCategory ? this.slotRacesSubscription = this.slotRacesService.content.subscribe(K => { var z, q, X; this.seeAllText = null !== (X = null === (q = null === (z = null == K ? void 0 : K.textTranslations) || void 0 === z ? void 0 : z.versionedList) || void 0 === q ? void 0 : q.SeeUpcoming) && void 0 !== X ? X : "See Upcoming" }) : this.seeAllText = E.messages.SeeAll } assignVideoParams() { var t, a, l, g; let b = this.configProviderService.provideFeaturesConfig().enableVideoPhase2; if (this.subCategoryInfo && this.subCategoryInfo.sitecoreData) if (b) { if (this.subCategoryInfo.sitecoreData.casinoVideo) { this.videoType = this.subCategoryInfo.sitecoreData.casinoVideo.videoType; const E = [null === (a = null === (t = this.subCategoryInfo.sitecoreData.casinoVideo) || void 0 === t ? void 0 : t.cmsVideoUrlVersioned) || void 0 === a ? void 0 : a.src, null === (g = null === (l = this.subCategoryInfo.sitecoreData.casinoVideo) || void 0 === l ? void 0 : l.cmsVideoUrlShared) || void 0 === g ? void 0 : g.src], O = [this.subCategoryInfo.sitecoreData.casinoVideo.videoUrlVersioned, this.subCategoryInfo.sitecoreData.casinoVideo.videoUrlShared].filter(K => null != K), U = E.filter(K => null != K); U.length > 0 ? (this.videoUrl = U[0], this.videoType = "cms") : O.length > 0 && (this.videoUrl = O[0]), this.launchUrl = this.subCategoryInfo.sitecoreData.casinoVideo.link, this.imageThumbnail = this.subCategoryInfo.sitecoreData.casinoVideo.thumbnailImage, this.videoName = this.subCategoryInfo.sitecoreData.casinoVideo.videoName, this.displayVideoinLoop = this.subCategoryInfo.sitecoreData.casinoVideo.displayVideoinLoop, this.videoBoxContent = this.subCategoryInfo.sitecoreData.casinoVideo.videoBoxContent } } else this.videoType = this.subCategoryInfo.sitecoreData.videoType, this.videoUrl = this.subCategoryInfo.sitecoreData.imageOrVideoUrl, this.launchUrl = this.subCategoryInfo.sitecoreData.launchUrl, this.imageThumbnail = this.subCategoryInfo.sitecoreData.imageThumbnail, this.videoName = this.subCategoryInfo.sitecoreData.videoName } ngOnChanges() { var t, a, l, g, p, b; if (this.assignFeatures(), this.assignVideoParams(), this.validGames = [], this.newFeatureGridArr = [], this.parallexInputData(), this.subcategory && this.subcategory.categoryInfo) { this.subCategoryInfo = this.subcategory.categoryInfo, this.gameTileDropShadow = this.casinoLobbyService.getDropShadow(this.subCategoryInfo), this.newgridbgcolor = null === (l = null === (a = null === (t = this.subCategoryInfo) || void 0 === t ? void 0 : t.sitecoreData) || void 0 === a ? void 0 : a.attributes) || void 0 === l ? void 0 : l.newgridbgcolor, this.amazonstylebottombgclr = null === (b = null === (p = null === (g = this.subCategoryInfo) || void 0 === g ? void 0 : g.sitecoreData) || void 0 === p ? void 0 : p.attributes) || void 0 === b ? void 0 : b.amazonstylebottombgclr, this.lobbyTileFontFamily = this.casinoLobbyService.getLTileFontFamily(this.subCategoryInfo), this.subCategoryTextColor = this.casinoLobbyService.getsubCategoryTextColor(this.subCategoryInfo), this.subCategoryTitleFontSize = this.casinoLobbyService.getsubCategoryTitleFontSize(this.subCategoryInfo), this.subCategoryInfo.categoryIndex = this.trackingIndex + 1, this.mostRecentlyPlayedRouteInfo = this.recentGamesService.getMostRecentlyPlayedRouteInfo(this.subcategoryId); let E = this.configProviderService.provideRecentlyPlayedGamesConfig(); this.mostRecentlyPlayedRouteInfo && E.isMostRecentlyPlayedEnabled && (this.mostRecentlyPlayedRoutesKey = this.mostRecentlyPlayedRouteInfo.mostPlayedRoute.toLowerCase()), this.subCategoryInfo && (this.subcategoryId.toLowerCase() == this.mostRecentlyPlayedRoutesKey && this.bindMostRecentlyPlayedGames(), this.setValidGames()), this.isEnableOptimizedTeasers = this.configProviderService.provideOptimizedTeaserConfig().teaserOptimization, this.enableEmbeddedTeasers = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.configProviderService.provideFeaturesConfig().enableEmbeddedTeasers), this.setTeasers() } this.subCategoryStyle = this.setSubCategoryStyle() } setValidGames(t = !1) { if (this.validGames = [], this.Games = [], this.subCategoryInfo.gamelist && this.subCategoryInfo.gamelist.length > 0) { let a = !0, l = !0, g = !1; for (let E = 0; E < this.subCategoryInfo.gamelist.length; E++) { let L = this.subCategoryInfo.gamelist[0].icon ? Math.abs(this.subCategoryInfo.gamelist[0].icon) : 1, O = this.subCategoryInfo.gamelist[E], U = this.casinoLobbyService.getGameInfo(O.game); if (U) { let K = O.icon ? Math.abs(O.icon) : 1; "6" != O.icon && "-6" != O.icon && (l = !1), "7" != O.icon && "-7" != O.icon && (a = !1), L != K && (g = !0); let z = !1; this.casinoLobbyService.getDisabledGames().forEach(X => { X.toLowerCase() == U.game.toLowerCase() && (z = !0) }), z || (O.name = U.name, O.provider = U.provider, O.sid = U.sid, O.ownerId = U.ownerId, O.gameIndex = E, this.validGames.push(O)) } } l && (this.subCategoryInfo.isIconSixCategory = !0), a && (this.subCategoryInfo.isIconSevenCategory = !0, "-3" == this.subCategoryInfo.rowCount && (this.subCategoryInfo.displayGameIndex = !0)), g && (this.subCategoryInfo.categoryWithMultipleGameIconTypes = !0), this.gameTileBorderRadius = this.casinoLobbyService.getBorderRadius(this.subCategoryInfo), this.assignSeeAllGameCount(); let p = this.configProviderService.provideCasinoConfig(); this.gamesLoadCount = this.isCategoryScrollable() ? p.gamesLoadCount.loadHorizontalGamesCount : p.gamesLoadCount.loadVerticalGamesCount; let b = Math.abs(this.subCategoryInfo.rowCount); b > 1 && (this.gamesLoadCount = this.gamesLoadCount * b), this.validGames && this.validGames.length > 0 && this.setGames(this.validGames.slice(0, this.gamesLoadCount), t, !1) } } setTeasers() { this.enableEmbeddedTeasers && !this.configProviderService.provideOptimizedTeaserConfig().teaserOptimization && this.setEmbeddedTeasersForSubCategory(this.subcategory.categoryInfo), this.configProviderService.provideOptimizedTeaserConfig().teaserOptimization && this.setOptimizedEmbeddedTeasersForSubCategory(this.subcategory.categoryInfo) } assignSeeAllGameCount() { let t = 0; if (this.seeAllGamesCount = 0, this.subCategoryInfo && this.subCategoryInfo.linkedCategory) { if (this.seeAllGamesCountCategory = this.casinoLobbyService.getCategoryInfoOnLMTId(this.lobbyType, this.subCategoryInfo.linkedCategory), this.seeAllGamesCountCategory && (this.seeAllGamesCountCategory.gamelist && this.seeAllGamesCountCategory.gamelist.length > 0 && (this.seeAllGamesCount = this.seeAllGamesCountCategory.gamelist.length), this.seeAllGamesCountCategory.lmtSubCategories && this.seeAllGamesCountCategory.lmtSubCategories.length > 0)) for (let a = 0; a < this.seeAllGamesCountCategory.lmtSubCategories.length; a++) { let l = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.seeAllGamesCountCategory.lmtSubCategories[a]); l && l.categoryInfo && l.categoryInfo.gamelist && l.categoryInfo.gamelist.length > 0 && (t += l.categoryInfo.gamelist.length) } t > 0 && (this.seeAllGamesCount = this.seeAllGamesCount + t) } } ngAfterViewInit() { } seeAll() { var t, a, l; let g = this.configProviderService.provideFeaturesConfig(), p = null === (l = null === (a = null === (t = this.subcategory) || void 0 === t ? void 0 : t.categoryInfo) || void 0 === a ? void 0 : a.sitecoreData) || void 0 === l ? void 0 : l.categoryUrl; if (this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, g.dynamicSeeAllLink) && p && p.url) return this.trackingService.triggerEvent("Event.Clicks", { "component.CategoryEvent": "Sports Gaming Overlay", "component.LabelEvent": "Gaming Overlay on Sports Lobby", "component.ActionEvent": "See ALL Link - Click", "component.LocationEvent": "Gaming Overlay on Sports Lobby|" + this.subcategory.categoryInfo.categoryname, "component.URLClicked": p.url }), void this.navigation.goTo(p.url); let E = this.urlUtilityService.getCategoryNavigationBaseUrl(), O = this.casinoLobbyService.getCategoryInfoOnLMTId(this.lobbyType, this.subcategory.categoryInfo.linkedCategory).route; if (this.subcategory.categoryInfo && this.subcategory.categoryInfo.linkedCategory) if (this.casinoIFrameOverlayService.isOverLayOnAProduct(this.lobbyType)) { let U = this.casinoIFrameOverlayService.lobbyTypeForNavCategories(this.lobbyType), K = E + "/" + this.mcPage.lang + "/" + this.casinoManager.getProductForGivenLobbyType(U) + "/c/" + O; this.trackingService.triggerEvent("Event.Clicks", { "component.CategoryEvent": "Sports Gaming Overlay", "component.LabelEvent": "Gaming Overlay on Sports Lobby", "component.ActionEvent": "See ALL Link - Click", "component.LocationEvent": "Gaming Overlay on Sports Lobby|" + this.subcategory.categoryInfo.categoryname, "component.URLClicked": K }), window.parent.postMessage({ eventName: "UserAction", params: { redirectUrl: K } }, "*") } else if (this.casinoWidgetService.isCasinoWidget()) { let U = E + "/" + this.mcPage.lang + "/" + this.casinoManager.getProduct() + "/c/" + O; this.casinoWidgetService.getWidgetPosition() && this.trackingService.triggerEvent("Event.Clicks", { "component.CategoryEvent": "X-Sell Casino Footer", "component.LabelEvent": "X-Sell Casino Footer|" + this.subcategory.categoryname, "component.ActionEvent": "See ALL Link - Click", "component.LocationEvent": "X-Sell Casino Footer|" + this.subcategory.categoryname, "component.URLClicked": U }), window.parent.postMessage({ eventName: "UserAction", params: { redirectUrl: U } }, "*") } else { let U; U = this.seeAllProductLinkOverride ? this.urlUtilityService.getProductApiBaseUrl(this.seeAllProductLinkOverride) + "/" + this.seeAllProductLinkOverride + "/games/" + O : E + "/" + this.mcPage.lang + "/" + this.casinoManager.getLobbyUrlPrefix(this.lobbyType) + "/c/" + O, this.isSlotRacesCategory ? this.slotRacesTracking.track("See upcoming - CTA Clicked", "not applicable", this.subcategory.categoryInfo.categoryname, "User clicked on see upcoming Link") : this.trackingService.triggerEvent("Event.Clicks", { "component.CategoryEvent": "Sports Gaming Overlay", "component.LabelEvent": "Gaming Overlay on Sports Lobby", "component.ActionEvent": "See ALL Link - Click", "component.LocationEvent": "Gaming Overlay on Sports Lobby|" + this.subcategory.categoryInfo.categoryname, "component.URLClicked": U }), this.navigation.goTo(U) } } setSubCategoryStyle() { return this.isCategoryScrollable() ? "scrollable-games" : "unscrollable-games" } isCategoryScrollable() { if (this.subcategory) return Number(this.subCategoryInfo.rowCount) < 0 } subscribeToLoadNextGames() { let t = this; t.loadnextGamesObs = t.casinoManager.loadNextGamesSetObservable.subscribe(a => { a && t.loadNewSet && !t.isCategoryScrollable() && (t.loadNewSet = !1, t.getNextGames(t.gamesLoadCount, l => { l && (t.loadNewSet = !0) })) }) } setEmbeddedTeasersForSubCategory(t) { this.headerTeasers = []; let a = this.teaserService.getTeaserData(); t && t.sitecoreData.showTeasers && t.sitecoreData.teasers && t.sitecoreData.teasers.length > 0 && a && a.length > 0 && a.forEach(l => { t.sitecoreData.teasers.indexOf(t.sitecoreData.teasers.filter(p => p.itemName === l.teaserId)[0]) > -1 && l.isEmbeddedTeaser && (l.gameContainer = this.gameContainer, this.headerTeasers.push(l)) }), this.showTeasers = this.headerTeasers && this.headerTeasers.length > 0, this.isShowEmbeddedAbove = !1, this.isShowEmbeddedBelow = !1 } setOptimizedEmbeddedTeasersForSubCategory(t) { this.optimizedHeaderTeasers = this.optimizedTeaserManager.setOptimizedTeasersBasedOnCatery(t), this.optimizedHeaderTeasers && (this.optimizedHeaderTeasers.optimizedEmbeddedAboveTeasers.length > 0 ? (this.optimizedEmbeddedAboveTeasers = this.optimizedHeaderTeasers.optimizedEmbeddedAboveTeasers, this.isShowEmbeddedAbove = this.optimizedEmbeddedAboveTeasers && this.optimizedEmbeddedAboveTeasers.length > 0) : (this.optimizedEmbeddedAboveTeasers = [], this.isShowEmbeddedAbove = !1), this.optimizedHeaderTeasers.optimizedEmbeddedBelowTeasers.length > 0 ? (this.optimizedEmbeddedBelowTeasers = this.optimizedHeaderTeasers.optimizedEmbeddedBelowTeasers, this.isShowEmbeddedBelow = this.optimizedEmbeddedBelowTeasers && this.optimizedEmbeddedBelowTeasers.length > 0) : (this.optimizedEmbeddedBelowTeasers = [], this.isShowEmbeddedBelow = !1)), this.showTeasers = !1 } loadNextGamesSet() { this.isCategoryScrollable() && this.getNextGames(this.gamesLoadCount) } getNextGames(t, a) { if (this.validGames.length - (this.Games.length + this.disabledGameArray.length + this.skipRPCount) > 0) { const l = this.validGames.slice(this.Games.length + this.disabledGameArray.length + this.skipRPCount, this.Games.length + t); this.setGames(l, !1, a) } else a && a(!0) } setGames(t, a = !1, l) { this.offlineGamesArray.length > 0 && this.Games.splice(this.Games.length - this.offlineGamesArray.length, this.offlineGamesArray.length); let g = !1; if (this.subcategory.categoryInfo.filterRecentlyPlayedGames && this.recentGames && this.recentGames.length > 0) { a && (this.skipRPCount = 0, this.newFeatureGridArr = [], this.alreadyFilteredRecentGames = []); let p = this.filterRPGames(t, [...this.recentGames]); this.skipRPCount += Math.abs(t.length - p.length), t = p } if (this.isCategoryScrollable()) this.formNewFeatureGridGameArray(t); else { for (let p = 0; p < t.length; p++) { let b = t[p], E = b; if (E && E.length > 0) this.disabledGameArray.push(E); else { let L = this.setGameModel(b, g); this.liveGameInfo = this.liveCasinoService.getLiveGameLookUpInfo(L.gameId.toLowerCase()); let O = this.liveCasinoService.isTableOnline(L.gameId.toLowerCase()); !this.liveGameInfo || this.liveGameInfo.tableStatus && O ? this.Games = [...this.Games, L] : (L.secondsToStartTable = this.assignSecondsLeftToStartTableOnline(this.liveGameInfo), this.offlineGamesArray.push(L)) } if (this.subCategoryInfo.isIconSevenCategory) { let L = document.body.offsetWidth; "1" == this.subCategoryInfo.rowCount || "2" == this.subCategoryInfo.rowCount ? g = this.isTouch ? !g : (p + 1) % 4 == 0 ? g : !g : L < 568 ? g = !g : L < 1024 ? p % 2 == 0 && (g = !g) : g = (p + 1) % 4 == 0 ? g : !g } } this.offlineGamesArray = this.offlineGamesArray.sort((p, b) => p.secondsToStartTable - b.secondsToStartTable), this.Games = this.Games.concat(this.offlineGamesArray), this.newFeatureGridArr = [...this.Games] } l && l(!0), this.Games && this.Games.length < this.gamesLoadCount && this.getNextGames(this.gamesLoadCount) } setGameModel(t, a) { let l = this.casinoManager.getCurrentWidth(), g = this.gameDataManager.setGameLobbyModel(t, this.isTouch); return g.infoIconClass = this.casinoManager.assignGameClass(l, g.iconType), g.lobbyType = this.lobbyType, g.gameSection = this.subcategory.categoryInfo.engCategoryName, g.gameContainer = this.gameContainer, g.gameTileBorderRadius = this.gameTileBorderRadius, g.gameTileDropShadow = this.gameTileDropShadow, g.bgTileMode = this.subCategoryInfo.isIconSevenCategory && a || !1, g.newgridbgcolor = this.newgridbgcolor, g } formNewFeatureGridGameArray(t) { var a, l; let g = this.casinoManager.isTouch(), p = this.subCategoryInfo.rowCount; g && (this.subCategoryInfo.isIconSixCategory || this.subCategoryInfo.isIconSevenCategory) && Number(this.subCategoryInfo.rowCount) > 0 && (p = "-2"); let b = Math.abs(p), E = t, L = 0, O = null === (a = this.newFeatureGridArr[this.newFeatureGridArr.length - 1]) || void 0 === a ? void 0 : a.games, U = O ? O[b - 1].bgTileMode : null === (l = E[0]) || void 0 === l ? void 0 : l.bgTileMode; for (O && b % 2 != 0 && (U = !U); L < E.length;) { let K = [], z = 0, q = 0; for (let X = L; X < L + b; X++)if (E[X]) { let ee = this.setGameModel(E[X], U); this.liveGameInfo = this.liveCasinoService.getLiveGameLookUpInfo(ee.gameId.toLowerCase()); let fe = this.liveCasinoService.isTableOnline(ee.gameId.toLowerCase()); !this.liveGameInfo || this.liveGameInfo.tableStatus && fe ? this.Games = [...this.Games, ee] : (ee.secondsToStartTable = this.assignSecondsLeftToStartTableOnline(this.liveGameInfo), this.offlineGamesArray.push(ee)), K.push(ee), z = this.findMax(z, ee.rowSpan), q = this.findMax(q, ee.colSpan), U = !U } b % 2 == 0 && (U = !U), L += b, this.newFeatureGridArr.push({ games: K, maxRowSpan: z, maxColSpan: q }) } this.offlineGamesArray = this.offlineGamesArray.sort((K, z) => K.secondsToStartTable - z.secondsToStartTable); for (let K = 0; K < this.offlineGamesArray.length; K++) { let z = []; z.push(this.offlineGamesArray[K]), this.newFeatureGridArr.push({ games: z, maxRowSpan: this.offlineGamesArray[K].rowSpan, maxColSpan: this.offlineGamesArray[K].colSpan }) } } findMax(t, a) { return t > a ? t : a } subscribeToElementEventListeners() { let t = this; t.elementRef.nativeElement.addEventListener("touchstart", a => { t.startPosition = t.utility.getPositionXY(a) }), this.elementRef.nativeElement.addEventListener("touchend", a => { let l = t.utility.getPositionXY(a); t.isCategoryScrollable() && l.x < t.startPosition.x && t.getNextGames(t.gamesLoadCount) }), this.recentGamesObs = this.recentGamesService.recentGamesFeedObservable.subscribe(a => { a && 0 !== a.length && (this.recentGames = a, this.subcategoryId.toLowerCase() == this.mostRecentlyPlayedRoutesKey && this.bindMostRecentlyPlayedGames(), (this.subcategoryId.toLowerCase() == this.mostRecentlyPlayedRoutesKey || this.subcategory.categoryInfo.filterRecentlyPlayedGames) && this.setValidGames(!0)) }) } filterRPGames(t, a) { var l, g; let p = [], b = this; if (t && t.length > 0) { let E; t.forEach(O => { -1 === a.indexOf(O.game) ? p.push(O) : this.alreadyFilteredRecentGames.push(O) }), b.isCategoryScrollable() ? t[t.length - 1].game == b.validGames[b.validGames.length - 1].game && (E = b.filterThreshold - (b.Games.length + p.length)) : E = b.filterThreshold - p.length; let L = []; if (E && E > 0 && this.alreadyFilteredRecentGames && 0 != this.alreadyFilteredRecentGames.length && this.alreadyFilteredRecentGames.forEach(O => { a.forEach(U => { O.game == U && L.push(O) }) }), L.length > 0) { let O = L.splice(0, E), U = this.configProviderService.provideFeaturesConfig(), K = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, U.mostPlayedRouteForLobbyType) || ""; (null === (g = null === (l = this.subcategoryId) || void 0 === l ? void 0 : l.toLowerCase()) || void 0 === g ? void 0 : g.includes(K)) || O.reverse(), p.push(...O) } } return p } setOfflinesLivecasino() { this.offlineGamesArray = [], this.Games.forEach((t, a) => { this.liveGameInfo = this.liveCasinoService.getLiveGameLookUpInfo(t.gameId.toLowerCase()); let l = this.liveCasinoService.isTableOnline(t.gameId.toLowerCase()); this.liveGameInfo && (!this.liveGameInfo.tableStatus || !l) && (this.Games[a].secondsToStartTable = this.assignSecondsLeftToStartTableOnline(this.liveGameInfo), this.offlineGamesArray.push(this.Games[a])) }), this.offlineGamesArray.forEach(t => { this.Games.splice(this.Games.indexOf(t), 1) }), this.offlineGamesArray.length > 0 && (this.offlineGamesArray = this.offlineGamesArray.sort((t, a) => t.secondsToStartTable - a.secondsToStartTable), this.Games = this.Games.concat(this.offlineGamesArray)) } assignSecondsLeftToStartTableOnline(t) { let a = 0; return t.tableStatus ? t.countdown && t.countdown.type && "bounded" === t.countdown.type.toLowerCase() && t.countdown.time && (a = this.liveCasinoService.secondsToStartTable(t.countdown.time)) : a = 999999999, a } bindMostRecentlyPlayedGames() { this.mostRecentlyPlayedGamesArr = (0, N.Z)(this.recentGamesService.getMostRecentlyPlayedGames()), this.mostRecentlyPlayedRouteInfo.filterOn && (this.mostRecentlyPlayedGamesArr = this.mostRecentlyPlayedGamesArr.filter(a => a.gameType === this.mostRecentlyPlayedRouteInfo.filterOn)), this.mostRecentlyPlayedRouteInfo.orderBy && (this.mostRecentlyPlayedGamesArr = this.mostRecentlyPlayedGamesArr.sort((a, l) => l[this.mostRecentlyPlayedRouteInfo.orderBy] - a[this.mostRecentlyPlayedRouteInfo.orderBy])); let t = []; for (let a = 0; a < this.mostRecentlyPlayedGamesArr.length; a++)t.push({ game: this.mostRecentlyPlayedGamesArr[a].gamevariant }); this.subCategoryInfo.gamelist = t, this.subCategoryInfo.rowCount = "1" } parallexInputData() { let t = this.configProviderService.provideGlobalConfig(), a = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.subcategoryId); a && (this.MustGoSitecoreObject = a.categoryInfo, this.parallaxInput = { sitecoreData: { backgroundImageLayer1: this.MustGoSitecoreObject.sitecoreData.jackpotBackgroundImage1, backgroundImageLayer2: this.MustGoSitecoreObject.sitecoreData.jackpotBackgroundImage2, backgroundImageLayer3: this.MustGoSitecoreObject.sitecoreData.jackpotBackgroundImage3 } }), this.categoryBackgroundFull = t.messages.CategoryBgFull } getCarouselData(t) { this.carouselData = t } onPrevClick() { this.featureGrid.prevItem() } onNextClick() { this.featureGrid.nextItem(), this.loadNextGamesSet() } ngOnDestroy() { this.teaserObs && this.teaserObs.unsubscribe(), this.recentGamesObs && this.recentGamesObs.unsubscribe(), this.slotRacesSubscription && this.slotRacesSubscription.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.iX), e.Y36(r.T3C), e.Y36(c.M3), e.Y36(c.nA), e.Y36(c.cM), e.Y36(e.SBq), e.Y36(c.tI), e.Y36(c.Sy), e.Y36(c.B0), e.Y36(c.hY), e.Y36(r.e2C), e.Y36(c.hE), e.Y36(c.BQ), e.Y36(r.f5Y), e.Y36(c.Sl), e.Y36(c.vD), e.Y36(c.hh), e.Y36(c.Tq)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-lmt-sub-category-lobby"]], viewQuery: function (t, a) { if (1 & t && e.Gf(Zs, 5), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.featureGrid = l.first) } }, inputs: { subcategoryId: "subcategoryId", subcategory: "subcategory", isTouch: "isTouch", trackingIndex: "trackingIndex", lobbyType: "lobbyType", gameContainer: "gameContainer", seeAllProductLinkOverride: "seeAllProductLinkOverride" }, features: [e.TTD], decls: 7, vars: 16, consts: [[3, "ngClass", 4, "ngIf"], [1, "casino-bgColorWidthfull", 3, "ngClass"], [3, "inputData", "componentName", 4, "ngIf"], ["class", "casino-game-tile-wrapper", 4, "ngIf"], [4, "ngIf"], [3, "ngClass"], [1, "casino-game-tile-wrapper", "casino-lobby-width-gametile", 3, "ngClass"], [1, "game-tile-heading", "casino-lobby-header", 3, "ngClass", "ngStyle"], ["class", "seeallarrows", 4, "ngIf"], ["class", "category-title", 3, "ngStyle", 4, "ngIf"], [3, "lobbyType", "subCategory", "recentAndGyml", "alignIconRight", 4, "ngIf"], ["class", "casino-seeall-text", 3, "ngStyle", "click", 4, "ngIf"], ["class", "casino-seeall-text ul-icon", 3, "ngClass", "ngStyle", "click", 4, "ngIf"], ["class", "casino-lmt-sub-category", 4, "ngIf"], ["class", "casino-game-selector", 4, "ngIf"], ["class", "casino-promo-eds-widget", 4, "ngIf"], [3, "games", "subcategory", "isTouch", "Type", "changeCarouselView", "gameLaunchedFrom", "lobbyType", "newFeatureGridArr", "loadNextGames", "carouselDataEvent", 4, "ngIf"], [3, "inputData", "componentName"], [1, "seeallarrows"], [1, "arrows-left", 3, "ngClass", "ngStyle", "click"], [1, "arrows-right", 3, "ngClass", "ngStyle", "click"], [1, "category-title", 3, "ngStyle"], [3, "category", 4, "ngIf"], [3, "category"], [3, "lobbyType", "subCategory", "recentAndGyml", "alignIconRight"], [1, "casino-seeall-text", 3, "ngStyle", "click"], [3, "key"], ["class", "seeall-count", 4, "ngIf"], [1, "theme-right"], [1, "seeall-count"], [1, "casino-seeall-text", "ul-icon", 3, "ngClass", "ngStyle", "click"], ["class", "seeall-count", 3, "font-size", 4, "ngIf"], [1, "casino-lmt-sub-category"], [1, "casino-game-selector"], [1, "casino-promo-eds-widget"], [3, "games", "subcategory", "isTouch", "Type", "changeCarouselView", "gameLaunchedFrom", "lobbyType", "newFeatureGridArr", "loadNextGames", "carouselDataEvent"], ["featureGrid", ""], [1, "casino-game-tile-wrapper"], [3, "id", "category", "isTouch", "lobbyType", "gameContainer"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div"), e.YNc(1, fr, 18, 34, "div", 0), e.TgZ(2, "div", 1), e.YNc(3, vr, 1, 4, "cc-casino-core-lazy-placeholder", 2), e.YNc(4, Cr, 3, 2, "div", 3), e.YNc(5, Mr, 2, 5, "div", 3), e.qZA(), e.YNc(6, Er, 2, 13, "div", 4), e.qZA()), 2 & t && (e.Tol(a.trackingClass), e.xp6(1), e.Q6J("ngIf", a.validGames && a.validGames.length > 0), e.xp6(1), e.Udp("overflow", a.isTouch ? "unset" : "hidden"), e.Q6J("ngClass", e.kEZ(12, In, a.parallaxInput && a.parallaxInput.sitecoreData.backgroundImageLayer1, a.parallaxInput && a.parallaxInput.sitecoreData.backgroundImageLayer2 || a.parallaxInput && a.parallaxInput.sitecoreData.backgroundImageLayer3, a.categoryBackgroundFull)), e.xp6(1), e.Q6J("ngIf", a.parallaxInput && (a.parallaxInput.sitecoreData.backgroundImageLayer1 || a.parallaxInput.sitecoreData.backgroundImageLayer2 || a.parallaxInput.sitecoreData.backgroundImageLayer3)), e.xp6(1), e.Q6J("ngIf", a.subCategoryInfo && a.subCategoryInfo.sitecoreData && a.subCategoryInfo.sitecoreData.showJackpotWidget && a.subCategoryInfo.sitecoreData.jackpotWidgetIds), e.xp6(1), e.Q6J("ngIf", a.subCategoryInfo && a.subCategoryInfo.sitecoreData && a.subCategoryInfo.sitecoreData.showMustGo), e.xp6(1), e.Q6J("ngIf", a.subCategoryInfo && a.subCategoryInfo.sitecoreData && a.videoUrl && (a.subCategoryInfo.sitecoreData.videoType || a.subCategoryInfo.sitecoreData.casinoVideo && a.subCategoryInfo.sitecoreData.casinoVideo.videoType))) }, directives: [lt, mo, Sn, c.yV, ti, va, ya, ba, o.O5, o.mk, o.PC], encapsulation: 2 }), n })(), Yg = (() => { class n { constructor(t, a, l, g) { this.casinoManager = t, this.configProviderService = a, this.user = l, this.slotRacesService = g, this.rpPositionLmtKey = "" } ngOnInit() { this.gettingInputVariables() } ngOnChanges() { this.gettingInputVariables() } gettingInputVariables() { let t = this.configProviderService.provideFeaturesConfig(), a = this.configProviderService.provideSlotRacesConfig(); this.subcategoryid = this.subcategory.categoryInfo.categoryid; let l = this.subcategory.categoryInfo.parentCategoryId; this.isSlotRacesEnabled = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableSlotRacesForLobbyType), this.isSlotRacesEnabled && l + this.casinoManager.getSlotRaceCategoryId(this.lobbyType) === this.subcategoryid ? this.slotRacesService.updateNavigation.subscribe(b => { if (b) { let E = this.slotRacesService.getCurrentRaces(); this.loadLMTCategory = !a.disableWhenNoPromotions || !!(E.liveNow && E.liveNow.length || E.upcomingToday && E.upcomingToday.length || E.upcomingTomorrow && E.upcomingTomorrow.length) } }) : this.loadLMTCategory = !0, this.user.isAuthenticated || (this.hideRpGyml = !t.enablePreLoginRecentlyPlayed), this.rpPositionLmtKey = this.casinoManager.IsFeatureEnabledforLobbytypeWithInvokerProduct(this.lobbyType, t.rpPositionLmtKey); let g = this.configProviderService.provideCozyBingoConfig(); this.cozyBingoWidgetKey = this.casinoManager.IsFeatureEnabledforLobbytypeWithInvokerProduct(this.lobbyType, g.cozyBingoWidgetPosition); let p = this.configProviderService.providePromoOfferWidgetConfig(); this.promoWidgetEnabled = p.enablePromoOfferWidget, this.promoProducts = p.products, this.promoOfferWidgetKey = this.casinoManager.IsFeatureEnabledforLobbytypeWithInvokerProduct(this.lobbyType, p.promoOfferWidgetPosition) } ngOnDestroy() { } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.M3), e.Y36(c.iX), e.Y36(r.KDu), e.Y36(c.Tq)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-lmt-sub-category-wrapper"]], inputs: { trackingIndex: "trackingIndex", subcategory: "subcategory", isTouch: "isTouch", lobbyType: "lobbyType", gameContainer: "gameContainer", seeAllProductLinkOverride: "seeAllProductLinkOverride" }, features: [e.TTD], decls: 7, vars: 8, consts: [[3, "ngSwitch"], [4, "ngSwitchCase"], [3, "inputData", "componentName", 4, "ngSwitchCase"], [4, "ngIf"], [3, "ngClass"], [3, "trackingIndex", "subcategoryId", "isTouch", "subcategory", "lobbyType", "gameContainer", "seeAllProductLinkOverride", 4, "ngSwitchDefault"], ["id", "rpGYMLSection", "class", "casino-rpPositionConfiguration", 3, "lobbyType", "gameContainer", "categoryId", 4, "ngIf"], ["id", "rpGYMLSection", 1, "casino-rpPositionConfiguration", 3, "lobbyType", "gameContainer", "categoryId"], [3, "inputData", "componentName"], [3, "trackingIndex", "subcategoryId", "isTouch", "subcategory", "lobbyType", "gameContainer", "seeAllProductLinkOverride"]], template: function (t, a) { 1 & t && (e.TgZ(0, "span", 0), e.YNc(1, Pr, 2, 1, "div", 1), e.YNc(2, Dr, 1, 4, "cc-casino-core-lazy-placeholder", 2), e.YNc(3, Sr, 1, 5, "cc-casino-core-lazy-placeholder", 2), e.YNc(4, Ar, 2, 1, "ng-container", 3), e.TgZ(5, "span", 4), e.YNc(6, Gr, 1, 7, "cc-lmt-sub-category-lobby", 5), e.qZA()()), 2 & t && (e.Q6J("ngSwitch", a.subcategoryid), e.xp6(1), e.Q6J("ngSwitchCase", a.rpPositionLmtKey), e.xp6(1), e.Q6J("ngSwitchCase", a.cozyBingoWidgetKey), e.xp6(1), e.Q6J("ngSwitchCase", a.slotRacesCategoryId), e.xp6(1), e.Q6J("ngIf", a.promoWidgetEnabled), e.xp6(1), e.Q6J("ngClass", e.VKq(6, it, !a.loadLMTCategory))) }, directives: [fo, lt, Ca, o.RF, o.n9, o.O5, o.mk, o.ED], encapsulation: 2 }), n })(), vo = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, c.IR]] }), n })(), Wi = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ providers: [{ provide: d.WI, useValue: {} }, { provide: d.so, useValue: {} }], imports: [[o.ez, r.b9i, d.Is, c.IR, f.hy.forRoot({ backgroundPadding: -3, radius: 24, space: -4, outerStrokeGradient: !1, outerStrokeWidth: 4, outerStrokeColor: "#82c248", innerStrokeColor: "#585858", innerStrokeWidth: 4, title: "", animateTitle: !1, animationDuration: 1e3, showSubtitle: !1, showUnits: !1, showBackground: !1, clockwise: !1, startFromZero: !1, animation: !1, titleColor: "#000000", titleFontSize: "18", titleFontWeight: "900" })]] }), n })(), An = (() => { class n { static forRoot() { return { ngModule: n } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ providers: [{ provide: d.WI, useValue: {} }, { provide: d.so, useValue: {} }], imports: [[o.ez, d.Is, vo, Wi, J.I8, r.b9i]] }), n })(), Zg = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z, q, X, ee, fe, Ue, Xe, nt, Wt) { this.window = t, this.navigation = a, this.user = l, this.loginDialog = g, this.favouriteService = p, this.casinoCoreGameLaunchService = b, this.cookie = E, this.route = L, this.casinoManager = O, this.dialog = U, this.jackpotservice = K, this.categoryManager = z, this.cacheManager = q, this.elementRef = X, this.configProviderService = ee, this.casinoLobbyService = fe, this.gameDataManager = Ue, this.router = Xe, this.casinoNpmParamsService = nt, this.quickInfoService = Wt, this.favouriteStyle = "theme-favorite-i", this.unFavouriteStyle = "theme-favorite", this.jackpotValue = null, this.isHotJackpotGroup = !1, this.vendorLogo = null, this.gameDescription = null, this.contentLoaded = !1, this.isFavourite = !1, this.game = {}, this.showQuickInfo = !1, this.stickers = [], this.newQuickInfoStyle = !1, this.isStickersForUk = !1, this.demoEnabledForProvider = !0, this.reels = null, this.payLines = null, this.returnToPlayer = null, this.enableQuicInfoReelskDiv = !1, this.reelsTitle = "", this.payLinesTitle = "", this.returnToPlayerTitle = "", this.setWidth() } ngOnInit() { let t = this.configProviderService.provideGameConfig(); this.assignFeatures(), this.getGameAndShowQuickInfo(), this.game && this.game.gameId && this.isTouch && this.window.nativeWindow.screen.availWidth < 830 && (this.gameDataManager.getGameDescription(this.game.gameId, this.game.provider).subscribe(a => { a && (this.gameDescription = a.gameDescription, this.reels = a.reels, this.payLines = a.payLines, this.returnToPlayer = a.returnToPlayer) }), t.enableDemoMode || (this.gameDetailPageObs = this.casinoCoreGameLaunchService.gameDetailPageObservable.subscribe(a => { a && this.hideInfo() }))) } assignFeatures() { let t = this.configProviderService.provideFeaturesConfig(), a = this.configProviderService.provideGlobalConfig(), l = this.configProviderService.provideGameConfig(), g = this.configProviderService.provideQuickInfoConfig(); this.enableQuickInfoReels = l.enableQuickInfoReels, this.reelsTitle = a.messages.Reels, this.payLinesTitle = a.messages.PayLines, this.returnToPlayerTitle = a.messages.ReturnToPlayer, this.useFavouriteGames = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.favouriteGamesLobbyType), this.gameProvider = g.quickInfo.gameProviderHeader, this.cta = g.quickInfo.cta, this.isTouch = this.casinoManager.isTouch(), ("true" === a.lobbyConfigurations.FavouriteHeart || "True" === a.lobbyConfigurations.FavouriteHeart || "TRUE" === a.lobbyConfigurations.FavouriteHeart) && (this.favouriteStyle = "theme-heart-solid", this.unFavouriteStyle = "theme-heart-outline"), document.querySelector(".casino-qi-noverlay") && (document.querySelector(".casino-qi-noverlay").style.cssText = a.messages.quickInfoStyles), this.newQuickInfoStyle = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.newQuickInfoStyle), this.isStickersForUk = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.stickersForUk), this.demoLinkText = a.messages.DemoLinkText, this.demoLinkTextColor = a.messages.DemoLinkTextColor, this.demoEnabled = l.enableDemoMode } getGameAndShowQuickInfo() { let t = this.configProviderService.provideGameConfig(), a = this.route.snapshot.params.gameId; if (a && this.route.snapshot.routeConfig.path.indexOf("game-info") > -1) { let g = this.casinoLobbyService.getGameInfo(a); if (g) { this.game = this.gameDataManager.setGameLobbyModel(g, this.isTouch), this.game.lobbyType = this.lobbyType, this.gameTitle = this.game.name; let p = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.vendorsWithOnlyRealModeLobbyType); (p && p.indexOf(this.game.provider) > -1 || t.demoModeExcludedGamesRegex && "" != t.demoModeExcludedGamesRegex && new RegExp(t.demoModeExcludedGamesRegex, "g").test(this.game.gameId)) && (this.demoEnabledForProvider = !1), this.loadContentAfterStickersData(this.game) } } else this.game = null, this.showQuickInfo = null } loadContentAfterStickersData(t) { this.isFavourite = this.favouriteService.checkForFavouriteGame(this.game), this.jackpotFeedObs = this.jackpotservice.jackpotFeedObservable.subscribe(a => { if (a) { let l = a.get(this.game.gameId); l && (this.jackpotValue = l, this.isHotJackpotGroup = this.jackpotValue.isHotJackpotGroup) } }), this.setGameTitleAndProvider(), this.loadQuickInfo(t) } onResize() { this.setWidth(), this.isTouch = this.casinoManager.isTouch() } setGameTitleAndProvider() { var t; let a = this.configProviderService.provideGameConfig(); this.provider = this.game.provider; let l = null === (t = a.gameOwnerIdMap) || void 0 === t ? void 0 : t.find(g => g.gameId == this.game.gameId); this.vendorLogo = a.host + a.gameIconTemplate.replace("{0}", "vendorlogos").replace("{1}", l ? null == l ? void 0 : l.ownerId : this.game.ownerId) + ".jpg" } loadQuickInfo(t) { !this.newQuickInfoStyle || this.isTouch && window.innerWidth < 768 ? (this.contentLoaded = !0, this.setImageIcon(), this.showQuickInfo = !0, document.getElementsByTagName("html")[0].classList.add("casino-quickinfo-open")) : (this.openDialog(t), document.getElementsByTagName("html")[0].classList.add("casino-quickinfo-open")) } setWidth() { this.width = this.window.nativeWindow.screen.availWidth >= 768 ? 388 : this.window.nativeWindow.screen.availWidth < this.window.nativeWindow.screen.availHeight ? this.window.nativeWindow.screen.availWidth : this.window.nativeWindow.screen.availHeight, this.boxWidth = this.width, this.boxWidthInt = this.boxWidth - 176 } hideInfo() { document.getElementsByTagName("html")[0].classList.remove("casino-quickinfo-open"), this.showQuickInfo = !1, this.removeQuickInfoQueryParameterFromUrl() } launchGame(t, a) { this.isTouch && this.hideInfo(); let l = new c.Hq; l.game = t, l.isTouch = this.isTouch, l.gamePosition = 0, l.categoryType = "QuickInfo", l.from = "q", l.replaceRouteInHistory = !1, l.isDemoLaunch = a, l.skipUnfinGame = !1, l.gameLaunchedFrom = this.gameLaunchedFrom, l.clickTimeStamp = this.casinoCoreGameLaunchService.currentTimeStamp(), this.casinoCoreGameLaunchService.launchGame(l) } toggleFavourite(t, a) { a.stopImmediatePropagation(), this.user.isAuthenticated ? (this.favouriteService.toggleGameFavourite(t), this.isFavourite = !this.isFavourite) : (this.hideInfo(), this.cookie.putObject("favouriteGame", t), this.loginDialog.open({ loginMessageKey: "Favourite" })) } isFavouriteGame(t) { return this.favouriteService.checkForFavouriteGame(t) } setImageIcon() { let t = this.configProviderService.provideFeaturesConfig(), a = this.configProviderService.provideGameConfig(); this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableQuickInfoLobbyType) && (this.src = a.host + a.gameIconTemplate.replace("{0}", "square").replace("{1}", this.game.gameId) + ".jpg") } removeQuickInfoQueryParameterFromUrl() { let t = this.casinoNpmParamsService.getcasinoCoreNpmParams(); t && t.isDll && window.history.pushState(location.href, "", location.href.substr(0, location.href.indexOf("game-info") - 1)) } GameJackpotValue(t) { return this.jackpotservice.getGameJackpotValue(t.gameId) } openDialog(t = null) { let a = this.navigation.location.absUrl(), l = { game: this.game, gameTitle: this.gameTitle, src: t.icon.src, useFavouriteGames: this.useFavouriteGames, gameProvider: this.gameProvider, provider: this.provider ? this.provider : "No provider", cta: this.cta, isTouch: this.isTouch, gamePosition: 0, gameLaunchedFrom: this.gameLaunchedFrom, categoryType: "QuickInfo", jackpotData: this.jackpotValue, isLaunchedFromUrl: !0, stickers: this.stickers, lobbyType: this.lobbyType, gameHomeUrl: window.location.href.slice(0, window.location.href.indexOf("/game-info")) }; this.quickInfoService.openQuickInfoDialog(l).afterClosed().subscribe(() => { this.isTouch ? this.removeQuickInfoQueryParameterFromUrl() : this.handleEscClick(a) }) } handleEscClick(t) { document.getElementsByTagName("html")[0].classList.remove("casino-quickinfo-open"), this.navigation.goTo(t), this.removeQuickInfoQueryParameterFromUrl() } ngOnDestroy() { this.jackpotFeedObs && this.jackpotFeedObs.unsubscribe(), this.gameDetailPageObs && this.gameDetailPageObs.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.X9), e.Y36(r.f5Y), e.Y36(r.KDu), e.Y36(c.P1), e.Y36(c.io), e.Y36(c.$l), e.Y36(r.N_8), e.Y36(R.gz), e.Y36(c.M3), e.Y36(d.uw), e.Y36(c.Gn), e.Y36(c.q_), e.Y36(c.q), e.Y36(e.SBq), e.Y36(c.iX), e.Y36(c.nA), e.Y36(c.cM), e.Y36(R.F0), e.Y36(c.dk), e.Y36(On)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-quick-info-direct"]], hostBindings: function (t, a) { 1 & t && e.NdJ("resize", function () { return a.onResize() }, !1, e.Jf7) }, inputs: { lobbyType: "lobbyType", gameLaunchedFrom: "gameLaunchedFrom" }, decls: 3, vars: 2, consts: [[1, "casino-lobby-container-main"], [4, "ngIf"], [1, "casino-qi-overlay", 3, "click"], [1, "casino-qi-rectangle"], [1, "casino-qi-game"], [1, "casino-qi-rectangle-int"], [1, "casino-qi-image"], [3, "src"], [1, "casino-qi-rectangle-right"], [1, "casino-qi-game-provider"], [1, "casino-qi-provider"], [1, "casino-qi-cta", 3, "click"], [1, "casino-qi-play-now", "btn"], [2, "clear", "both"], [1, "casino-qi-gradient"], [1, "casino-qi-favourite", 3, "ngClass", "click"], [1, "casino-qi-noverlay", 3, "click"], [1, "casino-qi-nrectangle"], [1, "casino-total-data"], [1, "casino-qi-nrectangle-int"], [1, "casino-qi-nimage"], [1, "casino-relativ-div-quickinfo"], [3, "demoEnabled", "stickers", "isTouch", "jackpotValue", "isHotJackpotGroup", "isStickersForUk", "lobbyType"], [1, "casino-qi-nrectangle-right"], [1, "casino-qi-ngame-provider"], [1, "close", "theme-close", "qi-close", 3, "click"], ["class", "casino-qi-nlogo", 4, "ngIf"], ["class", "casino-quickInfoReelsTopMobile", 4, "ngIf"], [1, "gamedata"], [1, "casino-qi-ngame"], [1, "gameData-body", 3, "innerHTML"], [1, "casino-qi-btn-container"], ["class", "casino-qi-demo-link", 3, "click", 4, "ngIf"], [1, "casino-qi-nplay-now", "btn", "qi-demo-btn", 3, "click"], [1, "casino-qi-ngradient"], [1, "casino-qi-nfavourite", 3, "ngClass", "click"], [1, "casino-qi-nlogo"], [1, "casino-quickInfoReelsTopMobile"], ["class", "reels-dv casino-quickInfoReelsWidth", 4, "ngIf"], ["class", "paylines casino-quickInfoReelsWidth", 4, "ngIf"], ["class", "returntoplayer casino-quickInfoReelsWidth", 4, "ngIf"], [1, "reels-dv", "casino-quickInfoReelsWidth"], [1, "reelsValue"], ["class", "Reels", 4, "ngIf"], [1, "Reels"], [1, "paylines", "casino-quickInfoReelsWidth"], ["class", "Paylines", 4, "ngIf"], [1, "Paylines"], [1, "returntoplayer", "casino-quickInfoReelsWidth"], [1, "returnToPlayerValue"], ["class", "Return-to-Player", 4, "ngIf"], [1, "Return-to-Player"], [1, "casino-qi-demo-link", 3, "click"], [3, "ngStyle"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0), e.YNc(1, xr, 20, 16, "div", 1), e.YNc(2, Hr, 29, 27, "div", 1), e.qZA()), 2 & t && (e.xp6(1), e.Q6J("ngIf", a.isTouch && a.showQuickInfo && !a.newQuickInfoStyle), e.xp6(1), e.Q6J("ngIf", a.isTouch && a.showQuickInfo && a.contentLoaded && a.newQuickInfoStyle)) }, directives: [Ln, o.O5, o.mk, o.PC], pipes: [o.gd, J.WL], encapsulation: 2 }), n })(), yo = (() => { class n { static forRoot() { return { ngModule: n, providers: [{ provide: d.WI, useValue: {} }, { provide: d.so, useValue: {} }] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ providers: [{ provide: d.so, useValue: {} }], imports: [[o.ez, r.b9i, J.I8, An, d.Is, vo, c.IR, Wi]] }), n })(), _t = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[r.b9i]] }), n })(), ii = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ providers: [{ provide: d.WI, useValue: {} }, { provide: d.so, useValue: {} }], imports: [[o.ez, r.b9i, yo, d.Is, Wi, c.IR, _t]] }), n })(), Tt = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, ii, Z.N6, Q.vz, c.IR]] }), n })(), bo = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[r.b9i, o.ez, Tt, _t]] }), n })(), Gn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez]] }), n })(), Co = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[r.b9i, o.ez, Q.vz, Gn, Tt, c.IR, _t]] }), n })(), Hg = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez]] }), n })(), Mo = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, Hg, Tt, Q.vz, c.IR, _t]] }), n })(), Bt = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez]] }), n })(), Ni = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, Bt, c.IR]] }), n })(), Eo = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, c.IR, bo, Tt, Co, Mo, Ni, Bt, _t]] }), n })(), Ki = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, ii, Q.vz, Tt, Ni, Bt]] }), n })(), kn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, c.IR, Eo, Ki, _t]] }), n })(), Qg = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z, q, X, ee, fe) { this.configProviderService = t, this.casinoLobbyService = a, this.gameDataManager = l, this.deviceService = g, this.casinoManager = p, this.elementRef = b, this.utility = E, this.favouriteService = L, this.recentService = O, this.fastLoadingGamesService = U, this.page = K, this.navigation = z, this.unfinishedGamesService = q, this.liveCasinoService = X, this.optimizedTeaserManager = ee, this.teaserService = fe, this.enableFixedMobileNavigation = !1, this.offlineGamesArray = [], this.Games = [], this.loadNewSet = !0, this.headerTeasers = [], this.displayHeader = !0, this.optimizedTopTeasers = [], this.optimizedSubNavigationTeasers = [], this.optimizedEmbeddedAboveTeasers = [], this.optimizedEmbeddedBelowTeasers = [], this.trackingClass = "", this.newFeatureGridArr = [] } ngOnInit() { this.assignFeatures(), this.assignVideoParams(), this.isMobileWidth = window.innerWidth < 768 || document.body.offsetWidth < 768, this.EmbeddedTeaser = "Embedded", this.SubCategoryTeaser = "SubNavigation", this.subscribeToLoadNextGames(), this.subscribeToElementEventListeners(), this.category.categoryInfo.categoryIndex = 1, this.liveCasinoService.liveGamesFeedObservable.subscribe(t => { t && t.size > 0 && this.setOfflinesLivecasino() }), this.parallexInputData(), this.trackingClass = "track_" + this.categoryId, this.categoryHeaderForSubCat() } assignFeatures() { var t, a, l, g, p, b, E, L, O, U, K, z; let q = this.configProviderService.provideFeaturesConfig(); this.enableFixedMobileNavigation = q.enableFixedMobileNavigation, this.showTeasersAboveGames = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.configProviderService.provideFeaturesConfig().showEmbeddedTeasersAboveGames), this.enableEmbeddedTeasers = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, q.enableEmbeddedTeasers); let X = this.configProviderService.provideOptimizedTeaserConfig(); this.isEnableOptimizedTeasers = X.teaserOptimization; let ee = this.configProviderService.provideGameSelectorWidgetConfig(), fe = this.configProviderService.providewidgetConfig(); this.isEnabledGameSelector = (null == ee ? void 0 : ee.isEnabled) && (null === (l = null === (a = null === (t = this.category) || void 0 === t ? void 0 : t.categoryInfo) || void 0 === a ? void 0 : a.sitecoreData) || void 0 === l ? void 0 : l.displayGameSelectorWidget), this.gameSelectorWidgetPosition = this.isEnabledGameSelector ? null === (b = null === (p = null === (g = this.category) || void 0 === g ? void 0 : g.categoryInfo) || void 0 === p ? void 0 : p.sitecoreData) || void 0 === b ? void 0 : b.gameSelectorWidgetPosition : void 0, this.displayPromoEDSWidget = (null == fe ? void 0 : fe.enablePromoEdsWidget) && (null === (O = null === (L = null === (E = this.category) || void 0 === E ? void 0 : E.categoryInfo) || void 0 === L ? void 0 : L.sitecoreData) || void 0 === O ? void 0 : O.displayPromoEDSWidget) && "Overlay" != this.gameContainer, this.promoEDSWidgetPosition = null === (z = null === (K = null === (U = this.category) || void 0 === U ? void 0 : U.categoryInfo) || void 0 === K ? void 0 : K.sitecoreData) || void 0 === z ? void 0 : z.promoEDSWidgetPosition } assignVideoParams() { var t, a, l, g, p, b; let L = this.configProviderService.provideFeaturesConfig().enableVideoPhase2; if ((null === (a = null === (t = this.category) || void 0 === t ? void 0 : t.categoryInfo) || void 0 === a ? void 0 : a.sitecoreData) && this.categoryInfo && this.categoryInfo.sitecoreData) if (L) { if (this.category.categoryInfo.sitecoreData.casinoVideo) { this.videoType = this.category.categoryInfo.sitecoreData.casinoVideo.videoType; const O = [null === (g = null === (l = this.categoryInfo.sitecoreData.casinoVideo) || void 0 === l ? void 0 : l.cmsVideoUrlVersioned) || void 0 === g ? void 0 : g.src, null === (b = null === (p = this.categoryInfo.sitecoreData.casinoVideo) || void 0 === p ? void 0 : p.cmsVideoUrlShared) || void 0 === b ? void 0 : b.src], K = [this.categoryInfo.sitecoreData.casinoVideo.videoUrlVersioned, this.categoryInfo.sitecoreData.casinoVideo.videoUrlShared].filter(q => null != q), z = O.filter(q => null != q); z.length > 0 ? (this.videoUrl = z[0], this.videoType = "cms") : K.length > 0 && (this.videoUrl = K[0]), this.launchUrl = this.category.categoryInfo.sitecoreData.casinoVideo.link, this.imageThumbnail = this.category.categoryInfo.sitecoreData.casinoVideo.thumbnailImage, this.videoName = this.category.categoryInfo.sitecoreData.casinoVideo.videoName, this.displayVideoinLoop = this.category.categoryInfo.sitecoreData.casinoVideo.displayVideoinLoop, this.videoBoxContent = this.category.categoryInfo.sitecoreData.casinoVideo.videoBoxContent } } else this.videoType = this.category.categoryInfo.sitecoreData.videoType, this.videoUrl = this.category.categoryInfo.sitecoreData.imageOrVideoUrl, this.launchUrl = this.category.categoryInfo.sitecoreData.launchUrl, this.imageThumbnail = this.category.categoryInfo.sitecoreData.imageThumbnail, this.videoName = this.category.categoryInfo.sitecoreData.videoName } ngOnChanges() { var t, a, l, g, p, b; this.assignFeatures(), this.assignVideoParams(), this.isDefaultCategory = this.casinoLobbyService.isDefaultCategory(this.lobbyType, this.category.categoryInfo.route), this.Games = [], this.newFeatureGridArr = [], this.validGames = []; let E = this.configProviderService.provideCasinoConfig(); if (this.parallexInputData(), this.category && this.category.categoryInfo && (this.category.categoryInfo.categoryIndex = 1, this.categoryInfo = this.category.categoryInfo, this.categoryInfo)) { if (this.gameTileDropShadow = this.casinoLobbyService.getDropShadow(this.categoryInfo), this.newgridbgcolor = null === (l = null === (a = null === (t = this.categoryInfo) || void 0 === t ? void 0 : t.sitecoreData) || void 0 === a ? void 0 : a.attributes) || void 0 === l ? void 0 : l.newgridbgcolor, this.amazonstylebottombgclr = null === (b = null === (p = null === (g = this.categoryInfo) || void 0 === g ? void 0 : g.sitecoreData) || void 0 === p ? void 0 : p.attributes) || void 0 === b ? void 0 : b.amazonstylebottombgclr, this.lobbyTileFontFamily = this.casinoLobbyService.getLTileFontFamily(this.categoryInfo), this.subCategoryTextColor = this.casinoLobbyService.getsubCategoryTextColor(this.categoryInfo), this.categoryInfo.gamelist && this.categoryInfo.gamelist.length > 0) { let O = !0, U = !0, K = !1; for (let z = 0; z < this.categoryInfo.gamelist.length; z++) { let q = this.categoryInfo.gamelist[0].icon ? Math.abs(this.categoryInfo.gamelist[0].icon) : 1, X = this.categoryInfo.gamelist[z], ee = this.casinoLobbyService.getGameInfo(X.game); if (ee) { let fe = X.icon ? Math.abs(X.icon) : 1; "6" != X.icon && "-6" != ee.icon && (O = !1), "7" != X.icon && "-7" != ee.icon && (U = !1), q != fe && (K = !0); let Ue = !1; this.casinoLobbyService.getDisabledGames().forEach(nt => { nt.toLowerCase() == ee.game.toLowerCase() && (Ue = !0) }), Ue || (X.name = ee.name, X.provider = ee.provider, X.sid = ee.sid, X.ownerId = ee.ownerId, X.gameIndex = z, this.validGames.push(X)) } } O && (this.categoryInfo.isIconSixCategory = !0), U && (this.categoryInfo.isIconSevenCategory = !0, "-3" == this.categoryInfo.rowCount && (this.categoryInfo.displayGameIndex = !0)), K && (this.categoryInfo.categoryWithMultipleGameIconTypes = !0) } this.gameTileBorderRadius = this.casinoLobbyService.getBorderRadius(this.categoryInfo), this.gamesLoadCount = this.isCategoryScrollable() ? E.gamesLoadCount.loadHorizontalGamesCount : E.gamesLoadCount.loadVerticalGamesCount; let L = Math.abs(this.categoryInfo.rowCount); L > 1 && (this.gamesLoadCount = this.gamesLoadCount * L), this.categoryId.toLowerCase() === c.W7.FAVOURITE_GAMES_CATEGORY_ID ? this.setFavouriteGames(this.favouriteService.getFavouriteGames()) : this.categoryId.toLowerCase() === c.W7.RECENT_GAMES_CATEGORY_ID ? this.setRecentAndUnfinishedGames(this.unfinishedGamesService.getUnfinishedGames(), this.recentService.getrecentGames()) : this.validGames && this.validGames.length > 0 && this.setGames(this.validGames.slice(0, this.gamesLoadCount), !1), this.teaserCategoryVal = this.categoryInfo.categoryid, this.setTeasers(), this.categoryStyle = this.getCategoryStyle(), this.categoryHeaderForSubCat() } } onResize() { let t; t = this.deviceService.isiOS ? document.body.offsetWidth : window.innerWidth, this.isMobileWidth = window.innerWidth < 768 || document.body.offsetWidth < 768 } loadNextGamesSet() { this.isCategoryScrollable() && this.getNextGames(this.gamesLoadCount) } setEmbeddedTeasersForSubCategory(t) { this.headerTeasers = []; let a = this.teaserService.getTeaserData(); t && t.sitecoreData.showTeasers && t.sitecoreData.teasers && t.sitecoreData.teasers.length > 0 && a && a.length > 0 && a.forEach(l => { t.sitecoreData.teasers.indexOf(t.sitecoreData.teasers.filter(p => p.itemName === l.teaserId)[0]) > -1 && l.isEmbeddedTeaser && this.headerTeasers.push(l) }), this.showTeasers = this.headerTeasers && this.headerTeasers.length > 0, this.isShowEmbeddedAbove = !1, this.isShowEmbeddedBelow = !1, this.isShowSubnavigation = !1 } setOptimizedEmbeddedTeasersForSubCategory(t) { this.optimizedHeaderTeasers = this.optimizedTeaserManager.setOptimizedTeasersBasedOnCatery(t), this.optimizedHeaderTeasers && (this.optimizedHeaderTeasers.optimizedSubNavigationTeasers.length > 0 ? (this.optimizedSubNavigationTeasers = this.optimizedHeaderTeasers.optimizedSubNavigationTeasers, this.isShowSubnavigation = this.optimizedSubNavigationTeasers && this.optimizedSubNavigationTeasers.length > 0 && !this.isDefaultCategory) : (this.optimizedSubNavigationTeasers = [], this.isShowSubnavigation = !1), this.optimizedHeaderTeasers.optimizedEmbeddedAboveTeasers.length > 0 ? (this.optimizedEmbeddedAboveTeasers = this.optimizedHeaderTeasers.optimizedEmbeddedAboveTeasers, this.isShowEmbeddedAbove = this.optimizedEmbeddedAboveTeasers && this.optimizedEmbeddedAboveTeasers.length > 0) : (this.optimizedEmbeddedAboveTeasers = [], this.isShowEmbeddedAbove = !1), this.optimizedHeaderTeasers.optimizedEmbeddedBelowTeasers.length > 0 ? (this.optimizedEmbeddedBelowTeasers = this.optimizedHeaderTeasers.optimizedEmbeddedBelowTeasers, this.isShowEmbeddedBelow = this.optimizedEmbeddedBelowTeasers && this.optimizedEmbeddedBelowTeasers.length > 0) : (this.optimizedEmbeddedBelowTeasers = [], this.isShowEmbeddedBelow = !1)), this.showTeasers = !1 } getNextGames(t, a) { this.validGames.length - this.Games.length > 0 ? this.setGames(this.validGames.slice(this.Games.length, this.Games.length + t), !1, a) : a && a(!0) } setGames(t, a, l) { this.offlineGamesArray.length > 0 && this.Games.splice(this.Games.length - this.offlineGamesArray.length, this.offlineGamesArray.length); let g = !1; if (this.isCategoryScrollable()) this.formNewFeatureGridGameArray(t, a); else { for (let p = 0; p < t.length; p++) { let E, b = t[p]; if (!(E && E.length > 0)) { let L = this.setGameModel(b, g); a && (L.isUnfinished = this.getUnfinishedStatus(L.gameId)), this.liveGameInfo = this.liveCasinoService.getLiveGameLookUpInfo(L.gameId.toLowerCase()); let O = this.liveCasinoService.isTableOnline(L.gameId.toLowerCase()); !this.liveGameInfo || this.liveGameInfo.tableStatus && O ? this.Games = [...this.Games, L] : (L.secondsToStartTable = this.assignSecondsLeftToStartTableOnline(this.liveGameInfo), this.offlineGamesArray.push(L)) } if (this.categoryInfo.isIconSevenCategory) { let L = document.body.offsetWidth; this.isTouch && ("1" == this.categoryInfo.rowCount || "2" == this.categoryInfo.rowCount) || L < 568 ? g = !g : L < 1024 ? p % 2 == 0 && (g = !g) : g = (p + 1) % 4 == 0 ? g : !g } } this.offlineGamesArray = this.offlineGamesArray.sort((p, b) => p.secondsToStartTable - b.secondsToStartTable), this.Games = this.Games.concat(this.offlineGamesArray), this.newFeatureGridArr = [...this.Games] } l && l(!0) } setGameModel(t, a) { let l = this.casinoManager.getCurrentWidth(), g = this.gameDataManager.setGameLobbyModel(t, this.isTouch); return g.infoIconClass = this.casinoManager.assignGameClass(l, g.iconType), g.lobbyType = this.lobbyType, g.gameSection = this.category.categoryInfo.engCategoryName, g.gameContainer = this.gameContainer, g.gameTileBorderRadius = this.gameTileBorderRadius, g.gameTileDropShadow = this.gameTileDropShadow, g.bgTileMode = this.categoryInfo.isIconSevenCategory && a || !1, g.newgridbgcolor = this.newgridbgcolor, g } formNewFeatureGridGameArray(t, a) { var l; let g = this.casinoManager.isTouch(), p = this.categoryInfo.rowCount; g && (this.categoryInfo.isIconSixCategory || this.categoryInfo.isIconSevenCategory) && Number(this.categoryInfo.rowCount) > 0 && (p = "-2"); let b = Math.abs(p), E = t, L = 0, O = null === (l = this.newFeatureGridArr[this.newFeatureGridArr.length - 1]) || void 0 === l ? void 0 : l.games, U = O ? O[b - 1].bgTileMode : E[0].bgTileMode; for (O && b % 2 != 0 && (U = !U); L < E.length;) { let K = [], z = 0, q = 0; for (let X = L; X < L + b; X++)if (E[X]) { let ee = this.setGameModel(E[X], U); a && (ee.isUnfinished = this.getUnfinishedStatus(ee.gameId)), this.liveGameInfo = this.liveCasinoService.getLiveGameLookUpInfo(ee.gameId.toLowerCase()); let fe = this.liveCasinoService.isTableOnline(ee.gameId.toLowerCase()); !this.liveGameInfo || this.liveGameInfo.tableStatus && fe ? this.Games = [...this.Games, ee] : (ee.secondsToStartTable = this.assignSecondsLeftToStartTableOnline(this.liveGameInfo), this.offlineGamesArray.push(ee)), K.push(ee), z = this.findMax(z, ee.rowSpan), q = this.findMax(q, ee.colSpan), U = !U } b % 2 == 0 && (U = !U), L += b, this.newFeatureGridArr.push({ games: K, maxRowSpan: z, maxColSpan: q }) } this.offlineGamesArray = this.offlineGamesArray.sort((K, z) => K.secondsToStartTable - z.secondsToStartTable); for (let K = 0; K < this.offlineGamesArray.length; K++) { let z = []; z.push(this.offlineGamesArray[K]), this.newFeatureGridArr.push({ games: z, maxRowSpan: this.offlineGamesArray[K].rowSpan, maxColSpan: this.offlineGamesArray[K].colSpan }) } } findMax(t, a) { return t > a ? t : a } getUnfinishedStatus(t) { return -1 != this.unfinishedGamesService.getUnfinishedGames().indexOf(t) } isCategoryScrollable() { if (this.category) return Number(this.categoryInfo.rowCount) < 0 } subscribeToLoadNextGames() { let t = this; t.loadnextGamesObs = t.casinoManager.loadNextGamesSetObservable.subscribe(a => { a && t.loadNewSet && !t.isCategoryScrollable() && (t.loadNewSet = !1, t.getNextGames(t.gamesLoadCount, l => { l && (t.loadNewSet = !0) })) }) } subscribeToElementEventListeners() { let t = this; t.elementRef.nativeElement.addEventListener("touchstart", a => { t.startPosition = t.utility.getPositionXY(a) }), this.elementRef.nativeElement.addEventListener("touchend", a => { let l = t.utility.getPositionXY(a); t.isCategoryScrollable() && l.x < t.startPosition.x && t.getNextGames(t.gamesLoadCount) }), this.favObs = this.favouriteService.favouriteGamesFeedObservable.subscribe(a => { a && this.categoryId.toLowerCase() === c.W7.FAVOURITE_GAMES_CATEGORY_ID && (this.isFavouriteObservableFired = !0, this.setFavouriteGames(a)) }), this.recentObs = this.recentService.recentGamesFeedObservable.subscribe(a => { a && (this.isRecentObservableFired = !0), a && a.length > 0 && this.categoryId.toLowerCase() === c.W7.RECENT_GAMES_CATEGORY_ID && this.isRecentObservableFired && this.isUnfinishedObservableFired && this.setRecentAndUnfinishedGames(this.unfinishedGamesService.getUnfinishedGames(), a) }), this.unfinishedObs = this.unfinishedGamesService.unfinishedFeedObservable.subscribe(a => { a && (this.isUnfinishedObservableFired = !0); let l = this.recentService.getrecentGames(); (a && a.length > 0 || l && l.length > 0) && this.categoryId.toLowerCase() === c.W7.RECENT_GAMES_CATEGORY_ID && this.isRecentObservableFired && this.isUnfinishedObservableFired && this.setRecentAndUnfinishedGames(a, this.recentService.getrecentGames()) }), (this.enableEmbeddedTeasers || this.isEnableOptimizedTeasers) && (this.teaserObs = this.teaserService.teaserDataObservable.subscribe(a => { a && this.setTeasers() })) } setFavouriteGames(t) { if (this.Games = [], this.validGames = [], t.length > 0) { let a = this.setDefaultGameIcons(t); this.categoryInfo.gamelist = a; for (let l = 0; l < this.categoryInfo.gamelist.length; l++) { let g = this.categoryInfo.gamelist[l], p = this.casinoLobbyService.getGameInfo(g.game); if (p) { let b = !1; this.casinoLobbyService.getDisabledGames().forEach(L => { L.toLowerCase() == p.game.toLowerCase() && (b = !0) }), b || (g.name = p.name, g.provider = p.provider, g.sid = p.sid, g.ownerId = p.ownerId, this.validGames.push(g)) } } this.setGames(this.validGames, !1) } else if (0 === t.length && (this.favouriteService.removeQuickInfoClass(), this.isFavouriteObservableFired)) return this.navigation.goTo("/" + this.page.lang + "/" + this.casinoManager.getLobbyUrlPrefix(this.lobbyType)) } setRecentAndUnfinishedGames(t, a) { let l = []; if (t && t.length > 0 && (l = l.concat(t)), a && a.length > 0) for (let p = 0; p < a.length; p++)-1 === l.indexOf(a[p]) && l.push(a[p]); let g = this.setDefaultGameIcons(l); this.categoryId.toLowerCase() === c.W7.RECENT_GAMES_CATEGORY_ID && (this.categoryInfo.gamelist = g), this.Games = [], this.validGames = []; for (let p = 0; p < this.categoryInfo.gamelist.length; p++) { let b = this.categoryInfo.gamelist[p], E = this.casinoLobbyService.getGameInfo(b.game); if (E) { let L = !1; this.casinoLobbyService.getDisabledGames().forEach(U => { U.toLowerCase() == E.game.toLowerCase() && (L = !0) }), L || (b.name = E.name, b.provider = E.provider, b.sid = E.sid, b.ownerId = E.ownerId, this.validGames.push(b)) } } this.setGames(this.validGames, !0) } setDefaultGameIcons(t) { let a = []; return t && t.length > 0 && t.forEach(l => { a.push({ game: l, icon: "1" }) }), a } getCategoryStyle() { return this.categoryInfo && this.categoryInfo && this.isCategoryScrollable() ? "scrollable-games" : "unscrollable-games" } setOfflinesLivecasino() { this.offlineGamesArray = [], this.Games.forEach((t, a) => { this.liveGameInfo = this.liveCasinoService.getLiveGameLookUpInfo(t.gameId.toLowerCase()); let l = this.liveCasinoService.isTableOnline(t.gameId.toLowerCase()); this.liveGameInfo && (!this.liveGameInfo.tableStatus || !l) && (this.Games[a].secondsToStartTable = this.assignSecondsLeftToStartTableOnline(this.liveGameInfo), this.offlineGamesArray.push(this.Games[a])) }), this.offlineGamesArray.forEach(t => { this.Games.splice(this.Games.indexOf(t), 1) }), this.offlineGamesArray.length > 0 && (this.offlineGamesArray = this.offlineGamesArray.sort((t, a) => t.secondsToStartTable - a.secondsToStartTable), this.Games = this.Games.concat(this.offlineGamesArray)) } assignSecondsLeftToStartTableOnline(t) { let a = 0; return t.tableStatus ? t.countdown && t.countdown.type && "bounded" === t.countdown.type.toLowerCase() && t.countdown.time && (a = this.liveCasinoService.secondsToStartTable(t.countdown.time)) : a = 999999999, a } setTeasers() { this.enableEmbeddedTeasers && !this.configProviderService.provideOptimizedTeaserConfig().teaserOptimization && this.setEmbeddedTeasersForSubCategory(this.categoryInfo), this.configProviderService.provideOptimizedTeaserConfig().teaserOptimization && this.setOptimizedEmbeddedTeasersForSubCategory(this.categoryInfo) } ngOnDestroy() { this.favObs && this.favObs.unsubscribe(), this.recentObs && this.recentObs.unsubscribe(), this.loadnextGamesObs && this.loadnextGamesObs.unsubscribe(), this.teaserObs && this.teaserObs.unsubscribe(), this.unfinishedObs && this.unfinishedObs.unsubscribe(), this.fastLoadingObs && this.fastLoadingObs.unsubscribe() } parallexInputData() { let t = this.configProviderService.provideGlobalConfig(), a = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.categoryId); a && (this.MustGoSitecoreObject = a.categoryInfo, this.parallaxInput = { sitecoreData: { backgroundImageLayer1: this.MustGoSitecoreObject.sitecoreData.jackpotBackgroundImage1, backgroundImageLayer2: this.MustGoSitecoreObject.sitecoreData.jackpotBackgroundImage2, backgroundImageLayer3: this.MustGoSitecoreObject.sitecoreData.jackpotBackgroundImage3 } }), this.categoryBackgroundFull = t.messages.CategoryBgFull } categoryHeaderForSubCat() { this.categoryInfo && this.categoryInfo.gamelist && this.categoryInfo.gamelist.length > 0 ? this.isMobileWidth && this.enableFixedMobileNavigation && (null == this.category.categoryInfo.lmtSubCategories || 0 == this.category.categoryInfo.lmtSubCategories.length) && 0 == this.optimizedSubNavigationTeasers.length && (this.displayCatHeader = !0) : this.displayCatHeader = !1 } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.iX), e.Y36(c.nA), e.Y36(c.cM), e.Y36(r.U8N), e.Y36(c.M3), e.Y36(e.SBq), e.Y36(c.tI), e.Y36(c.io), e.Y36(c.vD), e.Y36(c.$Q), e.Y36(r.T3C), e.Y36(r.f5Y), e.Y36(c.f), e.Y36(c.B0), e.Y36(c.hE), e.Y36(c.BQ)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-lmt-category-lobby"]], inputs: { categoryId: "categoryId", isTouch: "isTouch", category: "category", lobbyType: "lobbyType", gameContainer: "gameContainer" }, features: [e.TTD], decls: 1, vars: 1, consts: [[3, "class", "resize", 4, "ngIf"], [3, "resize"], [3, "class", "ngStyle", 4, "ngIf"], ["class", "casino-lmt-sub-category", 4, "ngIf"], [1, "casino-bgColorWidthfull", 3, "ngClass"], [3, "inputData", "componentName", 4, "ngIf"], [4, "ngIf"], ["class", "casino-game-selector", 4, "ngIf"], ["class", "casino-promo-eds-widget", 4, "ngIf"], ["class", "overflow-sub casino-lobby-width-gametile", 3, "ngClass", "overflow-x", "non-touch-scrollable-games", 4, "ngIf"], [3, "ngStyle"], [1, "casino-lmt-sub-category"], [3, "inputData", "componentName"], [3, "id", "category", "isTouch", "lobbyType", "gameContainer"], [1, "casino-game-selector"], [1, "casino-promo-eds-widget"], [1, "overflow-sub", "casino-lobby-width-gametile", 3, "ngClass"], ["scroll", ""], [3, "games", "subcategory", "isTouch", "Type", "gameLaunchedFrom", "lobbyType", "newFeatureGridArr", "loadNextGames", 4, "ngIf"], [3, "games", "subcategory", "isTouch", "Type", "gameLaunchedFrom", "lobbyType", "newFeatureGridArr", "loadNextGames"]], template: function (t, a) { 1 & t && e.YNc(0, cc, 14, 23, "div", 0), 2 & t && e.Q6J("ngIf", a.category) }, directives: [lt, va, ya, ba, ti, o.O5, o.PC, o.mk], encapsulation: 2 }), n })(), zg = (() => { class n { constructor(t, a, l) { this.casinoManager = t, this.configProviderService = a, this.casinoLobbyService = l } ngOnInit() { this.getInputParameters() } ngOnChanges() { this.getInputParameters() } getInputParameters() { let t = this.configProviderService.provideFeaturesConfig(); this.isSlotRacesEnabled = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableSlotRacesForLobbyType), this.slotRacesCategoryId = this.casinoManager.getSlotRaceCategoryId(this.lobbyType); let a = this.configProviderService.provideDiscoverFeedConfig(); a.enableDiscoverFeed && (this.discoverFeedLmtkey = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, a.discoverFeedLmtkey)), this.checkLiveGameIframeCategory() } checkLiveGameIframeCategory() { let t = this.configProviderService.provideCasinoConfig(); if (t.liveGamesCategories && t.liveGamesCategories.length > 0) for (let a = 0; a < t.liveGamesCategories.length; a++)if (t.liveGamesCategories[a].toLowerCase() === this.categoryId.toLowerCase()) { let l = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.categoryId); this.liveGameInfo = this.casinoLobbyService.getGameInfo(l.categoryInfo.gamelist[0].game), this.liveGamesCategory = l.categoryInfo, this.liveGameInfo && (this.liveGameIframeCategory = this.categoryId) } } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.M3), e.Y36(c.iX), e.Y36(c.nA)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-lmt-category-wrapper"]], inputs: { categoryId: "categoryId", isTouch: "isTouch", category: "category", lobbyType: "lobbyType", gameContainer: "gameContainer" }, features: [e.TTD], decls: 5, vars: 4, consts: [[3, "ngSwitch"], [3, "inputData", "componentName", 4, "ngSwitchCase"], [3, "categoryId", "category", "isTouch", "lobbyType", "gameContainer", 4, "ngSwitchDefault"], [3, "inputData", "componentName"], [3, "categoryId", "category", "isTouch", "lobbyType", "gameContainer"]], template: function (t, a) { 1 & t && (e.TgZ(0, "span", 0), e.YNc(1, _c, 1, 5, "cc-casino-core-lazy-placeholder", 1), e.YNc(2, dc, 1, 5, "cc-casino-core-lazy-placeholder", 1), e.YNc(3, hc, 1, 6, "cc-casino-core-lazy-placeholder", 1), e.YNc(4, mc, 1, 5, "cc-lmt-category-lobby", 2), e.qZA()), 2 & t && (e.Q6J("ngSwitch", a.categoryId), e.xp6(1), e.Q6J("ngSwitchCase", a.slotRacesCategoryId), e.xp6(1), e.Q6J("ngSwitchCase", a.discoverFeedLmtkey), e.xp6(1), e.Q6J("ngSwitchCase", a.liveGameIframeCategory)) }, directives: [lt, Qg, o.RF, o.n9, o.ED], encapsulation: 2 }), n })(), jg = (() => { class n { constructor(t, a, l, g, p) { this.casinoLobbyService = t, this.deviceService = a, this.configProviderService = l, this.user = g, this.casinoManager = p, this.gamesInCategory = !1, this.subCategoryLoadCount = 2, this.subCategoryLoadLimit = 2 } ngOnInit() { this.isTouch = this.deviceService.isTouch, this.bindCategory(), this.setSubCategoryLoadCount() } ngOnChanges() { this.isTouch = this.deviceService.isTouch, this.bindCategory() } bindCategory() { this.currentCategoryInfo = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.categoryRoute), this.currentCategoryInfo && this.currentCategoryInfo.categoryInfo ? (this.setDataVariables(), this.checkGamesInCategory()) : this.casinoLobbyService.categoryNotFoundSubject.next(this.categoryRoute) } setDataVariables() { this.isDefaultCategory = this.casinoLobbyService.isDefaultCategory(this.lobbyType, this.categoryRoute), this.displayLMTCategoryData = this.checkForLMTCategoryData(); let t = this.configProviderService.provideFeaturesConfig(), a = this.configProviderService.provideSlotRacesConfig(), l = this.casinoManager.getSlotRaceCategoryId(this.lobbyType), g = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableSlotRacesForLobbyType); if (this.isLobbyHasNoSeo = this.currentCategoryInfo.categoryInfo && this.currentCategoryInfo.categoryInfo.sitecoreData && this.currentCategoryInfo.categoryInfo.sitecoreData.seoBoxes && this.currentCategoryInfo.categoryInfo.sitecoreData.seoBoxes.length > 0, this.lmtSubCategories = [], this.currentCategoryInfo.categoryInfo.lmtSubCategories && this.currentCategoryInfo.categoryInfo.lmtSubCategories.length > 0) { for (let p = 0; p < this.currentCategoryInfo.categoryInfo.lmtSubCategories.length; p++) { let E = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.currentCategoryInfo.categoryInfo.lmtSubCategories[p]); if (E && E.categoryInfo && E.categoryInfo.isSubCatVisible) { let L = !0, O = l == E.categoryInfo.categoryid || E.categoryInfo.parentCategoryId + l == E.categoryInfo.categoryid; l && O && (!g || !a.enablePreLogin && !this.user.isAuthenticated) && (L = !1), L && this.lmtSubCategories.push(E) } } this.hasLMTSubCategories = this.lmtSubCategories.length > 0 } } checkForLMTCategoryData() { let t = this.configProviderService.provideDiscoverFeedConfig(), a = t.enableDiscoverFeed && this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.discoverFeedLmtkey); if (this.currentCategoryInfo && this.currentCategoryInfo.categoryInfo && this.currentCategoryInfo.categoryInfo.categoryid) { let l = this.currentCategoryInfo.categoryInfo; if (l.categoryid.toLowerCase() === c.W7.RECENT_GAMES_CATEGORY_ID || l.categoryid.toLowerCase() === c.W7.FAVOURITE_GAMES_CATEGORY_ID) return !0; if (t.enableDiscoverFeed && a && a.toLowerCase() == l.categoryid.toLowerCase()) return !0; if (this.isDefaultCategory) { let g = !1; return l.lmtSubCategories && l.lmtSubCategories.length > 0 ? g = !1 : l.gamelist && l.gamelist.length > 0 && (g = !0), g } return l.gamelist && l.gamelist.length > 0 && !this.isDefaultCategory } return !1 } onResize() { let t; t = this.deviceService.isiOS ? document.body.offsetWidth : window.innerWidth, this.casinoManager.checkForResize(t), this.postWidgetHeight() } onWindowScroll(t) { let a = t.target; if (a.scrollingElement) { let l = a.scrollingElement.scrollTop; this.lastScrollTop > 0 && l > this.lastScrollTop && (this.loadNextSubCategories(), this.casinoManager.loadNextGamesSet()), this.lastScrollTop = l } } postWidgetHeight() { setTimeout(() => { }, 500) } ngOnDestroy() { } checkGamesInCategory() { this.currentCategoryInfo.categoryInfo.gamelist && this.currentCategoryInfo.categoryInfo.gamelist.length > 0 && (this.gamesInCategory = !0) } setSubCategoryLoadCount() { let t = this.configProviderService.provideDevSettingsConfig(); t && (this.gameContainer && "overlay" === this.gameContainer.toLowerCase() && t.subCategoryLoadLimitOverlayOverride ? (this.subCategoryLoadLimit = t.subCategoryLoadLimitOverlayOverride, this.subCategoryLoadCount = t.subCategoryLoadLimitOverlayOverride) : t.subCategoryLoadLimit && (this.subCategoryLoadLimit = t.subCategoryLoadLimit, this.subCategoryLoadCount = t.subCategoryLoadLimit)) } loadNextSubCategories() { this.hasLMTSubCategories && this.lmtSubCategories && this.lmtSubCategories.length > this.subCategoryLoadCount && (this.subCategoryLoadCount = this.subCategoryLoadCount + this.subCategoryLoadLimit) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.nA), e.Y36(r.U8N), e.Y36(c.iX), e.Y36(r.KDu), e.Y36(c.M3)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-casino-page-container"]], hostBindings: function (t, a) { 1 & t && e.NdJ("scroll", function (g) { return a.onWindowScroll(g) }, !1, e.Jf7) }, inputs: { lobbyType: "lobbyType", categoryRoute: "categoryRoute", gameContainer: "gameContainer", seeAllProductLinkOverride: "seeAllProductLinkOverride" }, features: [e.TTD], decls: 3, vars: 5, consts: [[1, "casino-game-ctr-clr", 3, "ngClass", "resize"], ["class", "casino-lobby-games", 4, "ngIf"], [1, "casino-lobby-games"], [3, "id", "categoryId", "category", "isTouch", "lobbyType", "gameContainer"], [4, "ngFor", "ngForOf"], [3, "id", "trackingIndex", "subcategory", "isTouch", "lobbyType", "gameContainer", "seeAllProductLinkOverride", 4, "ngIf"], [3, "id", "trackingIndex", "subcategory", "isTouch", "lobbyType", "gameContainer", "seeAllProductLinkOverride"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0), e.NdJ("resize", function () { return a.onResize() }, !1, e.Jf7), e.YNc(1, pc, 2, 6, "div", 1), e.YNc(2, yc, 2, 1, "div", 1), e.qZA()), 2 & t && (e.Q6J("ngClass", e.VKq(3, bc, !a.isLobbyHasNoSeo)), e.xp6(1), e.Q6J("ngIf", a.displayLMTCategoryData), e.xp6(1), e.Q6J("ngIf", a.hasLMTSubCategories)) }, directives: [zg, Yg, o.mk, o.O5, o.sg], encapsulation: 2 }), n })(), xn = (() => { class n { static forRoot() { return { ngModule: n } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, Tt, bo, Co, Mo, _t, c.IR]] }), n })(), Rn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, xn, _t, c.IR]] }), n })(), To = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[r.b9i, o.ez, kn, Rn, c.IR]] }), n })(), Ma = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[r.b9i, o.ez, To, c.IR]] }), n })(), qg = (() => { class n { constructor(t, a, l, g) { this.deviceService = t, this.casinoLobbyService = a, this.configProviderService = l, this.casinoWidgetService = g } ngOnInit() { this.isTouch = this.deviceService.isTouch, this.trackingIndex = 1, this.gameContainer = "Widget", this.lobbyLoadSubscription = this.casinoLobbyService.lobbyLoadedObservable.subscribe(t => { t && this.gettingInputVariables() }) } gettingInputVariables() { let t = this.configProviderService.providewidgetConfig(); this.lobbyType = t.lobbyTypeForFooterOnOtherProducts, this.subCategoryRoute = t.subCategoryRouteForFooterOnOtherProducts, this.subCategoryRoute && (this.subCategoryRoute = this.subCategoryRoute.toLowerCase()), this.subCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.subCategoryRoute), this.isLobbyLoaded = !0, setTimeout(() => { this.casinoWidgetService.getWidgetHeight("SubCategoryAsFooter", "iframeFooterId") }, 500) } ngOnDestroy() { this.lobbyLoadSubscription && this.lobbyLoadSubscription.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(r.U8N), e.Y36(c.nA), e.Y36(c.iX), e.Y36(c.hY)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-lmt-sub-category-as-footer"]], decls: 1, vars: 1, consts: [[4, "ngIf"], [3, "trackingIndex", "subcategoryId", "isTouch", "subcategory", "lobbyType", "gameContainer"]], template: function (t, a) { 1 & t && e.YNc(0, Cc, 2, 6, "div", 0), 2 & t && e.Q6J("ngIf", a.isLobbyLoaded) }, directives: [Ca, o.O5], encapsulation: 2 }), n })(), Ea = (() => { class n { static forRoot() { return { ngModule: n } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, Eo]] }), n })(), wn = (() => { class n { constructor(t) { this.casinoLobbyService = t } ngOnInit() { this.lobbyLoadSubscription = this.casinoLobbyService.lobbyLoadedObservable.subscribe(t => { t && (this.isLobbyLoaded = !0, this.lobbyType && (!this.categoryRoute || "" === this.categoryRoute) && this.setCategoryRoute()) }) } ngOnChanges() { this.isLobbyLoaded && this.lobbyType && (!this.categoryRoute || "" === this.categoryRoute) && this.setCategoryRoute() } setCategoryRoute() { let t = this.casinoLobbyService.getLobbyInfo(this.lobbyType); t && t.categoriesMap && t.categoriesMap.size > 0 ? (this.categoryRoute = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.lobbyType).categoryInfo.categoryid, this.casinoLobbyService.categoryNotFoundSubject.next(null)) : this.casinoLobbyService.categoryNotFoundSubject.next("CategoryNotFound") } ngOnDestroy() { this.lobbyLoadSubscription && this.lobbyLoadSubscription.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.nA)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-casino-grid-on-lobby-type"]], inputs: { lobbyType: "lobbyType", categoryRoute: "categoryRoute", gameContainer: "gameContainer", seeAllProductLinkOverride: "seeAllProductLinkOverride" }, features: [e.TTD], decls: 1, vars: 1, consts: [[3, "lobbyType", "categoryRoute", "gameContainer", "seeAllProductLinkOverride", 4, "ngIf"], [3, "lobbyType", "categoryRoute", "gameContainer", "seeAllProductLinkOverride"]], template: function (t, a) { 1 & t && e.YNc(0, Mc, 1, 4, "cc-casino-page-container", 0), 2 & t && e.Q6J("ngIf", a.isLobbyLoaded) }, directives: [jg, o.O5], encapsulation: 2 }), n })(), Po = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[r.b9i, o.ez, c.IR, To]] }), n })(), Ta = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[r.b9i, o.ez, c.IR, Po]] }), n })(); const Vg = { left: "left", right: "left", top: "top", bottom: "top" }, Pa = { left: 1, right: -1, top: 1, bottom: -1 }; let Xg = (() => { class n { constructor(t, a, l, g) { this.dialog = t, this.ngZone = a, this.incomingOptions = l, this.outgoingOptions = g } open(t, a) { const l = a.direction || (document.querySelectorAll('[dir="rtl"]').length ? "rtl" : "ltr"); a.direction = a.direction || l, a.animation && ("aside" === a.animation.to && (a.animation.to = "rtl" === l ? "left" : "right"), a.position && a.position.rowEnd && ("rtl" === l ? a.position.right = a.position.rowEnd : a.position.left = a.position.rowEnd), a.position && a.position.rowStart && ("rtl" === l ? a.position.left = a.position.rowEnd : a.position.right = a.position.rowEnd)); const g = this.dialog.open(t, a), p = document.getElementsByTagName("mat-dialog-container")[0]; if (a.title) { const b = document.createElement("span"); b.textContent = a.title, b.className = "dialogTitle", p.prepend(b) } if (a.animation) { const b = a.animation.incomingOptions || this.incomingOptions || { keyframeAnimationOptions: { duration: 600, easing: "ease-in" } }, E = a.animation.outgoingOptions || this.outgoingOptions || { keyframeAnimationOptions: { duration: 600, easing: "ease-out" } }, L = document.getElementsByClassName("cdk-global-overlay-wrapper")[0], O = (ee, fe) => L.animate(ee, fe), U = new y.x; g.afterClosed = () => U.asObservable(); const K = g.close; let z = b.keyframes, q = E.keyframes; if (a.animation.to) { const ee = Vg[a.animation.to], fe = {}, Ue = {}; Ue[ee] = 0, fe[ee] = "top" === ee || "bottom" === ee ? p.clientHeight * Pa[a.animation.to] + "px" : p.clientWidth * Pa[a.animation.to] + "px", z = z || [fe, Ue], q = q || [Ue, fe] } O(z, b.keyframeAnimationOptions); const X = ee => { U.next(!0), O(q, E.keyframeAnimationOptions).onfinish = () => { L.style.display = "none", this.ngZone.run(() => g.close(ee)) }, g.close = K }; g.close = ee => X(ee) } return g } } return n.\u0275fac = function (t) { return new (t || n)(e.LFG(d.uw), e.LFG(e.R0b), e.LFG("INCOMING_OPTION", 8), e.LFG("OUTGOING_OPTION", 8)) }, n.\u0275prov = e.Yz7({ token: n, factory: n.\u0275fac, providedIn: "root" }), n })(), Io = (() => { class n { constructor(t, a, l, g, p, b, E, L) { this.menuActions = t, this.dialog = a, this.trackingService = l, this.navigation = g, this.configProviderService = p, this.searchSectionService = b, this.libMockService = E, this.cookie = L } onAppInit() { if (this.getFromCookie("dark-mode") ? document.getElementsByTagName("html")[0].classList.add("casino-darkmode") : (document.getElementsByTagName("html")[0].classList.remove("casino-darkmode"), this.setBackgroundColor()), this.menuActions.register("openSearch", () => { this.isSearchOverlayVisible = !this.isSearchOverlayVisible, this.searchSectionService.setSearchVisibility(this.isSearchOverlayVisible) }), this.menuActions.register("casinoSportsOverlay", () => { this.trackingService.triggerEvent("Event.Clicks", { "component.CategoryEvent": "Sports Gaming Overlay", "component.LabelEvent": "Gaming Overlay on Sports Lobby", "component.ActionEvent": "Gaming Overlay - Loaded", "component.PositionEvent": "not applicable", "component.LocationEvent": "Sports Lobby", "component.EventDetails": "not applicable", "component.URLClicked": "not applicable" }), document.getElementsByTagName("html")[0].classList.add("casino-gaming-cdk-overlay"); let t = this.dialog.open(Un, { width: "100%", height: "100%", animation: { to: "top" }, position: { rowEnd: "0" }, panelClass: "casino-lobby-container-main" }); this.libMockService.setDialogRef(t), setTimeout(() => { document.getElementById("casinocoreoverlay") && document.getElementById("casinocoreoverlay").scrollTo(0, 0) }, 10), this.libMockService.getDialogRef().afterClosed().subscribe(() => { document.getElementsByTagName("html")[0].classList.remove("casino-gaming-cdk-overlay") }) }), "true" === this.navigation.location.search.get("openCasinoCoreOverlay")) { document.getElementsByTagName("html")[0].classList.add("casino-gaming-cdk-overlay"); let t = this.dialog.open(Un, { width: "100%", height: "100%", panelClass: "casino-lobby-container-main" }); this.libMockService.setDialogRef(t), setTimeout(() => { document.getElementById("casinocoreoverlay") && document.getElementById("casinocoreoverlay").scrollTo(0, 0) }, 10), this.libMockService.getDialogRef().afterClosed().subscribe(() => { document.getElementsByTagName("html")[0].classList.remove("casino-gaming-cdk-overlay") }) } } getFromCookie(t) { return this.cookie.get(t) > "0" } setBackgroundColor() { var t; let a = this.configProviderService.provideGlobalConfig(); (null === (t = null == a ? void 0 : a.lobbyConfigurations) || void 0 === t ? void 0 : t.lobbyBackgroundColor) && (document.body.style.backgroundColor = a.lobbyConfigurations.lobbyBackgroundColor, document.body.setAttribute("data-bg-color", a.lobbyConfigurations.lobbyBackgroundColor)) } setSearchOverlayVisibility(t) { this.isSearchOverlayVisible = t } } return n.\u0275fac = function (t) { return new (t || n)(e.LFG(r.JO$), e.LFG(Xg), e.LFG(r.e2C), e.LFG(r.f5Y), e.LFG(c.iX), e.LFG(c.Zc), e.LFG(Et), e.LFG(r.N_8)) }, n.\u0275prov = e.Yz7({ token: n, factory: n.\u0275fac, providedIn: "root" }), n })(), $g = (() => { class n { constructor(t, a, l, g, p) { this.trackingService = t, this.configProviderService = a, this.navigation = l, this.router = g, this.libMockService = p } ngOnInit() { let t = this.configProviderService.provideGlobalConfig(); this.overlayBgcolor = t.messages.OverlayHeaderBgColor } closeSportsOverlay() { this.trackingService.triggerEvent("Event.Tracking", { "component.CategoryEvent": "Sports Gaming Overlay", "component.LabelEvent": "Gaming Overlay on Sports Lobby", "component.ActionEvent": "Gaming Overlay - Closed", "component.PositionEvent": "not applicable", "component.LocationEvent": "Sports Lobby", "component.EventDetails": "not applicable", "component.URLClicked": "not applicable" }), "true" === this.navigation.location.search.get("openCasinoCoreOverlay") && this.router.navigate(["."]); let t = this.libMockService.getDialogRef(); this.libMockService.closeDialogRef(t) } logoClicked() { let t = this.configProviderService.provideMcPageConfig(); t && t.gamingOverlayLogoUrl && t.gamingOverlayLogoUrl.url && this.navigation.goTo(t.gamingOverlayLogoUrl.url) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(r.e2C), e.Y36(c.iX), e.Y36(r.f5Y), e.Y36(R.F0), e.Y36(Et)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-overlay-header"]], inputs: { hideCloseButton: "hideCloseButton" }, decls: 4, vars: 4, consts: [[1, "sports-header-title-overlay"], [1, "game-overlay", 3, "key"], [1, "brand-logo", 3, "click"], ["class", "theme-close-button theme-ex", 3, "click", 4, "ngIf"], [1, "theme-close-button", "theme-ex", 3, "click"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0), e._UZ(1, "cc-global-translate", 1), e.TgZ(2, "div", 2), e.NdJ("click", function () { return a.logoClicked() }), e.qZA(), e.YNc(3, Ec, 1, 0, "div", 3), e.qZA()), 2 & t && (e.Udp("background", a.overlayBgcolor), e.xp6(1), e.Q6J("key", "GameOfferings"), e.xp6(2), e.Q6J("ngIf", !a.hideCloseButton)) }, directives: [c.yV, o.O5], encapsulation: 2 }), n })(), ed = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U) { this.windowRef = t, this.searchSection = a, this.gameDataManager = l, this.gameLaunchService = g, this.fastLoadingGamesService = p, this.casinoManager = b, this.tracking = E, this.configProviderService = L, this.casinoLobbyService = O, this.libMockService = U, this.isCancelVisible = !0, this.loadNewSet = !0, this.model = { query: "", results: [] }, this.isMsgVisible = !1, this.showGYML = !0, this.GYMLGames = [] } ngOnInit() { this.casinoMenuActionsBootstrapService = this.libMockService.getCasinoBootstrapService(), this.configProviderService.provideCasinoAsIFrameConfig(), this.Global = this.configProviderService.provideGlobalConfig(), this.features = this.configProviderService.provideFeaturesConfig(), this.casinoConfiguration = this.configProviderService.provideCasinoConfig(), this.gymlText = this.Global.messages.SearchGamesYouMightLike ? this.Global.messages.SearchGamesYouMightLike : this.Global.messages.GamesYouMightLike, this.searchSection.searchVisibilityStatus.subscribe(a => { this.setSearchLayerVisibility(a) }), this.SearchCloseIcon = !1, this.showGYML = !0, this.isTouch = this.casinoManager.isTouch(), this.features.enableEnhancedSearch && (this.setGYML(), this.gymlCategory || (this.gymlCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"), this.fastLoadingObs = this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(a => { this.fastLoadingGamesService.setFastLoadingGames(this.GYMLGames, a) }))), this.SearchProductForGamingOverlay = this.Global.messages.SearchProductForGamingOverlay } ngOnDestroy() { this.fastLoadingObs && this.fastLoadingObs.unsubscribe() } trackInput() { this.tracking.triggerEvent("GameSearch", { eventAction: "Search", "page.search": this.model.query }) } setGYML() { if (this.gymlCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"), this.gymlCategory && this.gymlCategory.categoryInfo && this.gymlCategory.categoryInfo.gamelist && this.gymlCategory.categoryInfo.gamelist.length > 0) { this.gymlCategory.categoryInfo.gamesModel = this.gymlCategory.categoryInfo.gamelist.slice(0, this.casinoConfiguration.gymlLimitForSearch); let t = []; this.gymlCategory.categoryInfo.gamesModel.forEach(l => { t.push(l.game) }); let a = this.gameDataManager.setDefaultGameIcons(t); this.getGyMLGames(a) } } ngAfterViewInit() { this.vc.first.nativeElement.focus(); let t = setInterval(() => { document.getElementById("serachTxt") && (document.getElementById("serachTxt").focus(), clearInterval(t)) }, 1e3) } onEvent(t) { this.event = t } onResize() { this.innerWidth = window.innerWidth } setSearchLayerVisibility(t) { this.showGYML = t, this.show = t, this.innerWidth = window.innerWidth, this.show && this.innerWidth < 1365 ? this.windowRef.nativeWindow.document.body.classList.add("casino-hidescroll") : this.windowRef.nativeWindow.document.body.classList.remove("casino-hidescroll") } setSearchCancelVisibility() { } hideSearch() { this.setSearchLayerVisibility(!1), this.model.query = [], this.model.results = [], this.isMsgVisible = !1, this.searchSection.setSearchVisibility(!1), this.casinoMenuActionsBootstrapService.setSearchOverlayVisibility(!1) } launchGame(t, a) { this.setSearchLayerVisibility(!1), this.searchSection.setSearchVisibility(!1), t.lobbyType = this.lobbyType, t.iconType = 1; let l = new c.Hq; l.game = t, l.isTouch = this.isTouch, l.gamePosition = a, l.categoryType = "Search", l.from = "s", l.clickTimeStamp = this.gameLaunchService.currentTimeStamp(), l.gameContainer = "Overlay", this.gameLaunchService.launchGame(l) } hideDisplayGYML() { return !(!this.GYMLGames || this.GYMLGames.length <= 0) && this.showGYML } closeSearchIcon() { this.model.query = "", this.displaySearchOverlay = !1, 0 == this.model.query.length && (this.SearchCloseIcon = !1) } queryChanged() { this.loadNewSet = !0, this.displaySearchOverlay = !0, 0 === this.model.query.length ? (this.showGYML = !0, this.SearchCloseIcon = !1) : (this.showGYML = !1, this.SearchCloseIcon = !0), setTimeout(() => { this.model.query.length < 1 ? this.model.results = [] : (this.model.results = this.casinoLobbyService.searchGames(this.model.query), this.isMsgVisible = !(this.model.results.length > 0)) }, 500), this.isMsgVisible = !1 } getGyMLGames(t) { this.GYMLGames = []; for (let a = 0; a < t.length; a++) { let g = this.gameDataManager.setGameLobbyModel(t[a], this.isTouch); this.GYMLGames.push(g) } } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(r.X9E), e.Y36(c.Zc), e.Y36(c.cM), e.Y36(c.$l), e.Y36(c.$Q), e.Y36(c.M3), e.Y36(r.e2C), e.Y36(c.iX), e.Y36(c.nA), e.Y36(Et)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-overlay-search"]], viewQuery: function (t, a) { if (1 & t && e.Gf(la, 5), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.vc = l) } }, inputs: { lobbyType: "lobbyType" }, decls: 15, vars: 12, consts: [[1, "casino-overlay-search", 3, "resize"], [1, "casino-overlay-search-content"], [1, "search-query"], [1, "theme-search"], ["id", "serachTxt", "name", "searchText", "type", "text", "autocomplete", "off", 3, "ngModel", "placeholder", "change", "ngModelChange", "keyup", "focusout", "keydown"], ["searchInput", ""], ["class", "close-button theme-close-i", 3, "click", 4, "ngIf"], [1, "casino-overlay-search-results"], [3, "hidden"], [3, "click", 4, "ngFor", "ngForOf"], [3, "key"], ["class", "overlay", 4, "ngIf"], [1, "close-button", "theme-close-i", 3, "click"], [3, "click"], [3, "src"], [1, "search-result-title", 3, "innerHTML"], [1, "overlay"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0), e.NdJ("resize", function () { return a.onResize() }, !1, e.Jf7), e.TgZ(1, "div", 1)(2, "div", 2), e._UZ(3, "span", 3), e.TgZ(4, "input", 4, 5), e.NdJ("change", function () { return a.queryChanged() })("ngModelChange", function (g) { return a.model.query = g })("keyup", function () { return a.queryChanged() })("focusout", function () { return a.trackInput() })("keydown", function (g) { return a.onEvent(g) }), e.qZA(), e.YNc(6, Tc, 1, 0, "span", 6), e.qZA()(), e.TgZ(7, "div", 7)(8, "ul", 8), e.YNc(9, Pc, 4, 5, "li", 9), e.ALo(10, "async"), e.ALo(11, "dsl"), e.qZA(), e.TgZ(12, "p", 8), e._UZ(13, "cc-global-translate", 10), e.qZA()(), e.YNc(14, Ic, 1, 0, "div", 11), e.qZA()), 2 & t && (e.xp6(4), e.s9C("placeholder", a.SearchProductForGamingOverlay), e.Q6J("ngModel", a.model.query), e.xp6(2), e.Q6J("ngIf", a.SearchCloseIcon), e.xp6(2), e.Q6J("hidden", !(a.model.results.length > 0)), e.xp6(1), e.Q6J("ngForOf", e.lcZ(10, 8, e.lcZ(11, 10, a.model.results))), e.xp6(3), e.Q6J("hidden", !a.isMsgVisible), e.xp6(1), e.Q6J("key", "SearchNoResults"), e.xp6(1), e.Q6J("ngIf", a.displaySearchOverlay)) }, directives: [c.yV, re.Fj, re.JJ, re.On, o.O5, o.sg], pipes: [o.Ov, J.Ut, c.qs], encapsulation: 2 }), n })(), td = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K) { this.configProviderService = t, this.casinoLobbyService = a, this.deviceService = l, this.trackingService = g, this.page = p, this.navigation = b, this.urlUtilityService = E, this.user = L, this.recentGameService = O, this.favouriteService = U, this.invokerProductService = K } ngOnInit() { let t = this.configProviderService.provideGlobalConfig(); this.isIOS = this.deviceService.isiOS, this.currentLang = this.page.lang, this.product = "games", this.lobbyTypeForNavCategories(this.lobbyType, "CASINO"), this.categoryHeaderForBottomNav = t.messages.XSellOverlayBottomNavCategoryHeader, this.recentGamesFeedSubscription = this.recentGameService.recentGamesFeedObservable.subscribe(l => { l && (this.navBarCategories = this.filterNavCategories(this.navBarUnfilteredCategories)) }), this.favouriteGamesFeedSubscription = this.favouriteService.favouriteGamesFeedObservable.subscribe(l => { l && (this.navBarCategories = this.filterNavCategories(this.navBarUnfilteredCategories)) }) } ngAfterViewInit() { let t = this.configProviderService.provideCasinoAsIFrameConfig(); document.getElementById("bottom-category-header").style.marginBottom = t.enableSearch ? "100px" : "" } ngOnDestroy() { this.recentGamesFeedSubscription && this.recentGamesFeedSubscription.unsubscribe(), this.favouriteGamesFeedSubscription && this.favouriteGamesFeedSubscription.unsubscribe() } lobbyTypeForNavCategories(t, a) { let g, l = this.configProviderService.provideCasinoAsIFrameConfig(); if (l && l.overlayBottomNavLobbyTypeMap && l.overlayBottomNavLobbyTypeMap.length > 0) { let p = l.overlayBottomNavLobbyTypeMap.filter(b => b.invokerProduct.toLowerCase() === this.invokerProductService.getInvokerProduct().toLowerCase()); for (let b = 0; b < p.length; b++)g = p[b].lobbyType, this.navBarUnfilteredCategories = this.casinoLobbyService.getNavCategoriesForInvokerProduct(p[b].lobbyType, a), this.navBarCategories = this.filterNavCategories(this.navBarUnfilteredCategories); this.navBarCategories && this.navBarCategories.length <= 0 && (this.casinoLobbyService.setCasinoLobbyForInvokerProduct(g, a), this.casinoLobbyService.lobbyLoadedObservableForInvokerProduct.subscribe(b => { if (b) for (let E = 0; E < p.length; E++)this.navBarUnfilteredCategories = this.casinoLobbyService.getNavCategoriesForInvokerProduct(p[E].lobbyType, a), this.navBarCategories = this.filterNavCategories(this.navBarUnfilteredCategories) })) } } filterNavCategories(t) { let a, l; return a = this.recentGameService.getrecentGames(), l = this.favouriteService.getFavouriteGames(), this.fetchCategories(t, a, l) } fetchCategories(t, a, l) { let g = []; return t && t.length > 0 && t.forEach(p => { p.categoryid.toLowerCase() !== c.W7.FAVOURITE_GAMES_CATEGORY_ID.toLowerCase() && p.categoryid.toLowerCase() !== c.W7.RECENT_GAMES_CATEGORY_ID.toLowerCase() && p.gamelist && p.gamelist.length > 0 && g.push(p) }), g } navItemClick(t, a, l, g) { t.preventDefault(); let b = this.urlUtilityService.getCategoryNavigationBaseUrl() + g; this.trackingService.triggerEvent("Event.Clicks", { "component.CategoryEvent": "Sports Gaming Overlay", "component.LabelEvent": "Gaming Overlay on Sports Lobby", "component.ActionEvent": "Gaming Overlay - " + l + " - Click", "component.PositionEvent": a + 1 + " - position of the category", "component.LocationEvent": "Gaming Overlay - SubNav", "component.EventDetails": "User taps on any Sub-Nav category", "component.URLClicked": b }), this.navigation.goTo(b) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.iX), e.Y36(c.nA), e.Y36(r.U8N), e.Y36(r.e2C), e.Y36(r.T3C), e.Y36(r.f5Y), e.Y36(c.Sl), e.Y36(r.KDu), e.Y36(c.vD), e.Y36(c.io), e.Y36(c.uZ)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-bottom-navbar"]], inputs: { lobbyType: "lobbyType" }, decls: 8, vars: 5, consts: [["id", "bottom-category-header", 1, "bottom-category-header", "clearfix", 3, "ngClass"], [1, "bottom-nav-heading"], ["id", "bottom-navbar", 1, "bottom-navbar"], [1, "bottom-nav-category-container"], [1, "bottom-nav-resizable-container"], [1, "bottom-nav-list"], [3, "hidden", 4, "ngFor", "ngForOf"], [3, "hidden"], [3, "click"], [4, "ngIf"], [1, "icon", 3, "ngClass"], [1, "name", 3, "innerHtml"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0)(1, "span", 1), e._uU(2), e.qZA(), e.TgZ(3, "nav", 2)(4, "div", 3)(5, "div", 4)(6, "ul", 5), e.YNc(7, Sc, 3, 2, "li", 6), e.qZA()()()()()), 2 & t && (e.Q6J("ngClass", e.VKq(3, co, a.isIOS)), e.xp6(2), e.Oqu(a.categoryHeaderForBottomNav), e.xp6(5), e.Q6J("ngForOf", a.navBarCategories)) }, directives: [o.mk, o.sg, o.O5], encapsulation: 2 }), n })(), Un = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z, q, X) { this.casinoLobbyService = t, this.configProviderService = a, this.deviceService = l, this.casinoManager = g, this.lhProductHomepagesConfig = p, this.navigate = b, this.trackingService = E, this.route = L, this.jackpotDataService = O, this.liveCasinoService = U, this.casinoCoreNpmParamsService = K, this.casinoIFrameOverlayService = z, this.libMockService = q, this.casinoMenuActionsBootstrapService = X, this.libMockService.setCasinoBootstrapService(this.casinoMenuActionsBootstrapService) } ngOnInit() { delete Object.assign({}, this.route.snapshot.queryParams).openCasinoCoreOverlay, this.lobbyLoadSubscription = this.casinoLobbyService.lobbyLoadedObservable.subscribe(a => { if (a) { this.isLobbyLoaded = !0, this.lobbyResponse = a, this.mcPageConfig = this.configProviderService.provideMcPageConfig(), this.gamingHomeBtnText = this.mcPageConfig.gamingHomeButtonLink.text, this.bindOverlay(); let l = this.casinoCoreNpmParamsService.getcasinoCoreNpmParams(), g = this.configProviderService.provideLiveCasinoConfig(), p = this.configProviderService.provideFeedCacheConfig(), b = this.configProviderService.provideCasinoAsIFrameConfig(); this.hideBottomNav = b.hideBottomNav, this.enableSearch = b.enableSearch, p.enableJackpotFeed && (null == l ? void 0 : l.isDisableJackpotCalls) && this.jackpotDataService.startFeed(), g.enabled && (null == l ? void 0 : l.isDisableLiveCasinoCalls) && this.liveCasinoService.getLiveCasinoData(!0) } }) } onResize() { let t; t = this.deviceService.isiOS ? document.body.offsetWidth : window.innerWidth, this.casinoManager.checkForResize(t) } bindOverlay() { let t = this.configProviderService.provideFeaturesConfig(); if (this.overlayLobbyType = this.casinoIFrameOverlayService.fetchOverlayLobby(), this.overlayLobbyType && "" != this.overlayLobbyType) { let a = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.overlayLobbyType); a && (this.overlayCategoryRoute = a.categoryInfo.categoryid), this.rpPositionLmtKey = this.casinoManager.IsFeatureEnabledforLobbytype(this.overlayLobbyType, t.rpPositionLmtKey), this.raiseOverlayLoadedEvent() } else console.log("Overlay lobby is not available") } goToCasinoHome() { this.trackingService.triggerEvent("Event.Clicks", { "component.CategoryEvent": "Sports Gaming Overlay", "component.LabelEvent": "Gaming Overlay on Sports Lobby", "component.ActionEvent": "CTA - Click", "component.PositionEvent": "sticky CTA", "component.LocationEvent": "Gaming Overlay on Sports Lobby", "component.EventDetails": "User taps CTA and is taken to Casino Home", "component.URLClicked": this.mcPageConfig.gamingHomeButtonLink.url }), this.navigate.goTo(this.mcPageConfig.gamingHomeButtonLink.url) } ngOnDestroy() { this.lobbyLoadSubscription && this.lobbyLoadSubscription.unsubscribe(); let t = this.casinoCoreNpmParamsService.getcasinoCoreNpmParams(), a = this.configProviderService.provideLiveCasinoConfig(); this.configProviderService.provideFeedCacheConfig().enableJackpotFeed && (null == t ? void 0 : t.isDisableJackpotCalls) && this.jackpotDataService.stopFeed(), a.enabled && (null == t ? void 0 : t.isDisableLiveCasinoCalls) && this.liveCasinoService.stopFeed() } getCasinoHomeUrl() { return this.lhProductHomepagesConfig.casino } raiseOverlayLoadedEvent() { let t = { lobbyLoaded: this.isLobbyLoaded, overlayLobbyType: this.overlayLobbyType, overlayCategoryRoute: this.overlayCategoryRoute, lobbyResponse: this.lobbyResponse }; console.log("Casino Overlay Data" + t); let a = new CustomEvent("sports-overlay-loaded", { detail: { overlayData: t } }); document.dispatchEvent(a) } ngAfterViewInit() { let t = this.configProviderService.provideFeaturesConfig(); t && t.enableOverlayMobileSearchTopPosition && this.deviceService.isTouch && this.sportsGameOverlayTopAllignment() } sportsGameOverlayTopAllignment() { if (document.querySelector(".content-messages-header-top .content-message-container")) { let t = document.querySelector(".content-messages-header-top .content-message-container"); document.querySelector("sportsOverlay-top-position").style.top = t.clientHeight + "px" } } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.nA), e.Y36(c.iX), e.Y36(r.U8N), e.Y36(c.M3), e.Y36(r.t6E), e.Y36(r.f5Y), e.Y36(r.e2C), e.Y36(R.gz), e.Y36(c.Gn), e.Y36(c.B0), e.Y36(c.dk), e.Y36(c.Sy), e.Y36(Et), e.Y36(Io)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-sports-overlay"]], inputs: { hideCloseButton: "hideCloseButton" }, decls: 4, vars: 3, consts: [[1, "sportsOverlay-top-position"], [3, "hideCloseButton", 4, "ngIf"], [3, "lobbyType", 4, "ngIf"], ["id", "casinocoreoverlay", 3, "resize", 4, "ngIf"], [3, "hideCloseButton"], [3, "lobbyType"], ["id", "casinocoreoverlay", 3, "resize"], [3, "scope"], [4, "ngIf"], [3, "lobbyType", "categoryRoute", "gameContainer"], [4, "ngIf", "ngIfElse"], ["elseblock", ""], ["tabindex", "-1", 1, "btn", "btn-primary", "casino-gaming-home-button", 3, "click"], ["id", "rpGYMLSection", 3, "lobbyType", "gameContainer", "categoryId"], [1, "noBottomNav"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0), e.YNc(1, Lc, 1, 1, "cc-overlay-header", 1), e.YNc(2, Oc, 1, 1, "cc-overlay-search", 2), e.YNc(3, xc, 9, 8, "div", 3), e.qZA()), 2 & t && (e.xp6(1), e.Q6J("ngIf", a.isLobbyLoaded), e.xp6(1), e.Q6J("ngIf", a.isLobbyLoaded && a.enableSearch), e.xp6(1), e.Q6J("ngIf", a.isLobbyLoaded)) }, directives: [$g, ed, ce.Y, fo, wn, td, o.O5], encapsulation: 2 }), n })(), Fn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ providers: [{ provide: d.WI, useValue: {} }, { provide: d.so, useValue: {} }], imports: [[o.ez, r.b9i, d.Is, c.IR]] }), n })(), Bn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, c.IR]] }), n })(), Ia = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, re.u5, ii, r.b9i, c.IR, J.I8]] }), n })(), Da = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ providers: [{ provide: d.WI, useValue: {} }, { provide: d.so, useValue: {} }], imports: [[r.b9i, o.ez, c.IR, Po, Fn, Bn, Ki, ce.w, Ia, d.Is]] }), n })(), id = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z, q, X) { this.dialogRef = t, this.activeroute = a, this.deviceService = l, this.gameLaunchService = g, this.user = p, this.bingoFavouriteService = b, this.cozyBingoDataService = E, this.toastMessageService = L, this.casinoManager = O, this.tracking = U, this.dialog = K, this.casinoWidgetService = z, this.favouriteService = q, this.configProvider = X, this.quickInfoScrollY = 0, this.ingame_rooms_status = !1, this.playNowHoverEffect = !1, this.mouseHoveredOnGame = !1, this.QuickInfoVisible = "", this.quickInfoIcon = { src: "" } } ngOnInit() { let t = this.configProvider.provideFeaturesConfig(); this.isSafari = navigator.vendor && navigator.vendor.indexOf("Apple") > -1 && navigator.userAgent && !navigator.userAgent.match("CriOS") && !navigator.userAgent.match("FxiOS"), this.playNowHoverEffect = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.playNowHoverEffect), this.isTouch = this.casinoManager.isTouch(), this.useQuickInfo = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableQuickInfoLobbyType), this.enableUkMouseOverStyle = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableUkMouseOverStyle), this.bingoItem.sitecoreInfo && this.bingoItem.sitecoreInfo.desktopImage && this.bingoItem.sitecoreInfo.desktopImage.src && (this.thumbImageSrc = this.bingoItem.sitecoreInfo.desktopImage.src, this.quickInfoIcon.src = this.bingoItem.sitecoreInfo.desktopImage.src), this.toasterRequired = this.featureConfigs.favouritesConfirmationPopUp, this._favouriteAddedMessage = this.globalMessages.favouriteAddedMessage, this._favouriteRemovedMessage = this.globalMessages.favouriteRemovedMessage, this._favouriteAddedErrorMessage = this.globalMessages.errorOccuredWhileAddingToFavMessage, this._favouriteRemovedErrorMessage = this.globalMessages.errorOccuredWhileRemovingFromFavMessage, this.roomnavlist = this.categoryList.find(l => "schedule" == l.categoryType), this.roomIconslist = this.categoryList.find(l => "rooms" == l.categoryType), this.isTabletView = this.deviceService.isTablet, this.isMobileView = this.deviceService.isMobilePhone; let a = this.activeroute.snapshot.queryParamMap.get("ingame"); null != a && a && (this.ingame_rooms_status = !0), this.gameContainerLocation = "Widget|" + this.product } gameLaunch() { this.gameLaunchService.initiateGameLaunch(this.bingoItem.name, "BINGO", this.bingoItem.bingo_type, "room", this.thumbImageSrc, this.bingoItem.id, !0, void 0, { position: this.gamePosition, section: this.gameLaunchedFrom, gameContainerLocation: this.gameContainerLocation, widgetFrameClr: this.widgetFrameClr }) } toggleFavourite() { this.bingoItem.isFavourite ? this.bingoFavouriteService.removeFavourite(this.bingoItem.id, this.user.id).subscribe(t => { t.result && (this.toasterRequired && this.toastMessageService.on("theme-heart-broken", this._favouriteRemovedMessage, !0), this.cozyBingoDataService.getBingoData(!1, !1), this.casinoWidgetService.postMessageToParent("favupdated", { categoryid: "rcp-widget", roomid: this.bingoItem.id, isFavourite: !0 }), this.favouriteService.publishingFavObervable(!0, this.bingoItem.id)) }, t => { t && this.toasterRequired && this.toastMessageService.on("theme-heart-broken", this._favouriteRemovedErrorMessage, !0) }) : this.bingoFavouriteService.addFavourite(this.bingoItem.id, this.user.id).subscribe(t => { t.result && (this.toasterRequired && this.toastMessageService.on("theme-bingo-heart", this._favouriteAddedMessage, !0), this.cozyBingoDataService.getBingoData(!1, !1), this.casinoWidgetService.postMessageToParent("favupdated", { categoryid: "rcp-widget", roomid: this.bingoItem.id, isFavourite: !1 }), this.favouriteService.publishingFavObervable(!1, this.bingoItem.id)) }, t => { t && this.toasterRequired && this.toastMessageService.on("theme-bingo-heart", this._favouriteAddedErrorMessage, !0) }) } hideQuickInfo() { window.scrollTo(0, this.quickInfoScrollY), this.removeQuickInfoQueryParameterFromUrl() } removeQuickInfoQueryParameterFromUrl() { window.history.pushState(location.href, "", location.href.substr(0, location.href.indexOf("game-info") - 1)) } mouseOver(t) { this.mouseHoveredOnGame = !0, !this.isTouch && this.mouseHoveredOnGame && (this.QuickInfoVisible = t, this.enableUkMouseOverStyle && (this.onMouseHover = !0, this.onMouseLeave = !0)) } mouseLeave() { this.isTouch || (this.QuickInfoVisible = "", this.visiblestatus = !1, this.mouseHoveredOnGame = !1, this.enableUkMouseOverStyle && (this.onMouseHover = !1, this.onMouseLeave = !1)) } displayQuickInfo(t) { this.quickInfoScrollY = window.pageYOffset, document.getElementsByTagName("html")[0].classList.add("casino-quickinfo-open"), "RecentlyPlayed_widget_Favourites" === this.gameLaunchedFrom && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_QuickInfo", "component.ActionEvent": "Info_click", "component.PositionEvent": this.bingoItem.id + "_" + this.gamePosition, "component.LocationEvent": this.casinoManager.getLobbyType() }), this.bingoItem.lobbyType = this.lobbyType; let l = this.dialog.open(po, { data: { game: this.bingoItem, gamePosition: this.gamePosition, gameLaunchedFrom: this.gameLaunchedFrom, categoryType: "", icon: this.thumbImageSrc, stickers: "", gridPosition: 1, gameModel: this.bingoItem, product: this.product, gameContainerLocation: this.gameContainerLocation + "QuickInfo", widgetFrameClr: this.widgetFrameClr } }); l.afterClosed().subscribe(() => { this.hideQuickInfo(), l.close() }), t && t.stopImmediatePropagation() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(d.so), e.Y36(R.gz), e.Y36(r.U8N), e.Y36(c.BW), e.Y36(r.KDu), e.Y36(c.W), e.Y36(c.Kh), e.Y36(c.D7), e.Y36(c.M3), e.Y36(r.e2C), e.Y36(d.uw), e.Y36(c.hY), e.Y36(c.io), e.Y36(c.iX)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-cozybingo-game-info"]], inputs: { bingoItem: "bingoItem", globalMessages: "globalMessages", featureConfigs: "featureConfigs", categoryList: "categoryList", gamePosition: "gamePosition", gameLaunchedFrom: "gameLaunchedFrom", product: "product", lobbyType: "lobbyType", widgetFrameClr: "widgetFrameClr" }, decls: 11, vars: 15, consts: [[1, "casino-game-cls", 3, "ngClass", "mouseover", "mouseleave"], ["gameref", ""], ["class", "casino-overlay-bg", 4, "ngIf"], [3, "game", "gamePosition", "categoryType", "icon", "quickInfoScrollY", "gameLaunchedFrom", "gridPosition", "gameModel", "isLiveGame", "widgetFrameClr", "gameContainerLocation", "liveGameInfo", "product", "stickersArray", "thumbImageSrc", "lobbyType", "hide", 4, "ngIf"], [1, "game-image-link", 3, "click"], [1, "image-load-div"], [1, "game-name", 3, "ngClass"], [3, "src"], [1, "game-icon-bottom-wrapper"], ["class", "casino-game-fav-icon casino-mobile-fav theme-info casino-quick-info rcntly-gyml-quick-info rp-i-fav-icon", 3, "click", 4, "ngIf", "ngIfElse"], [1, "casino-overlay-bg"], [3, "game", "gamePosition", "categoryType", "icon", "quickInfoScrollY", "gameLaunchedFrom", "gridPosition", "gameModel", "isLiveGame", "widgetFrameClr", "gameContainerLocation", "liveGameInfo", "product", "stickersArray", "thumbImageSrc", "lobbyType", "hide"], [1, "casino-game-fav-icon", "casino-mobile-fav", "theme-info", "casino-quick-info", "rcntly-gyml-quick-info", "rp-i-fav-icon", 3, "click"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0, 1), e.NdJ("mouseover", function () { return a.mouseOver(a.bingoItem.name) })("mouseleave", function () { return a.mouseLeave() }), e.YNc(2, Rc, 1, 0, "div", 2), e.YNc(3, Uc, 1, 17, "cc-game-quick-info", 3), e.TgZ(4, "a", 4), e.NdJ("click", function () { return a.gameLaunch() }), e.TgZ(5, "div", 5)(6, "span", 6), e._uU(7), e.qZA(), e._UZ(8, "img", 7), e.qZA()(), e.TgZ(9, "div", 8), e.YNc(10, Fc, 2, 1, "div", 9), e.qZA()()), 2 & t && (e.ekj("casino-playbtn-hover-effect", a.playNowHoverEffect), e.Q6J("ngClass", e.WLB(10, Bc, a.onMouseHover && !a.isTouch, a.useQuickInfo)), e.xp6(2), e.Q6J("ngIf", a.onMouseLeave && a.enableUkMouseOverStyle && !a.isTouch), e.xp6(1), e.Q6J("ngIf", a.QuickInfoVisible && a.QuickInfoVisible === a.bingoItem.name), e.xp6(3), e.Q6J("ngClass", e.VKq(13, Wc, a.isSafari)), e.xp6(1), e.Oqu(a.bingoItem.name), e.xp6(1), e.s9C("src", a.thumbImageSrc, e.LSH), e.xp6(2), e.Q6J("ngIf", a.isTouch && a.useQuickInfo)("ngIfElse", a.Favourite)) }, directives: [po, o.mk, o.O5], encapsulation: 2 }), n })(), Sa = (() => { class n { constructor(t) { this.cozybingoService = t } ngOnInit() { this.featureConfigs = this.cozybingoService.getFeatureConfigs(), this.globalMessages = this.cozybingoService.getGlobalMessages(), this.categoryList = this.cozybingoService.getcategoryList(), this.bingoConfiguration = this.cozybingoService.getbingoConfiguration() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.Kh)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-cozy-bingo-game"]], inputs: { roomInfo: "roomInfo", gamePosition: "gamePosition", gameLaunchedFrom: "gameLaunchedFrom", product: "product", lobbyType: "lobbyType", widgetFrameClr: "widgetFrameClr" }, decls: 2, vars: 1, consts: [[1, "casino-cozy-rp-bingorooms"], [3, "bingoItem", "featureConfigs", "globalMessages", "categoryList", "gamePosition", "gameLaunchedFrom", "product", "lobbyType", "widgetFrameClr", 4, "ngIf"], [3, "bingoItem", "featureConfigs", "globalMessages", "categoryList", "gamePosition", "gameLaunchedFrom", "product", "lobbyType", "widgetFrameClr"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0), e.YNc(1, Nc, 1, 9, "cc-cozybingo-game-info", 1), e.qZA()), 2 & t && (e.xp6(1), e.Q6J("ngIf", a.roomInfo)) }, directives: [id, o.O5], encapsulation: 2 }), n })(); le.ZP.use([le.tl, le.W_, le.pt]); class od { } class Ji { constructor(_, t, a, l, g, p) { this.fromCasino = !0, this.GameId = _, this.isRecentlyPlayed = t, this.isGYML = a, this.fromCasino = l, this.isPromoted = g, this.fromCozybingo = p } } let nd = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z) { this.gameDataManager = t, this.recentGameService = a, this.elementRef = l, this.unfinishedGameService = g, this.casinoManager = p, this.configProviderService = b, this.casinoWidgetService = E, this.casinoIFrameOverlayService = L, this.casinoLobbyService = O, this.promotedGamesService = U, this.changeDetectorRef = K, this.cozyBingoDataService = z, this.recentlyandGymlGames = [], this.recentStartIndex = 0, this.unfinishedGames = [], this.Games = [], this.isCombinedCategories = !1, this.onlyRecentGames = [], this.onlyRecentGamesStrings = [], this.onlyGYMLGamesStrings = [], this.onlyGYMLGames = [], this.gymlGames = [], this.recentGames = [], this.recentlyPlayedGames = [], this.gymlGameStrings = [], this.unfinishedRPANDGYMLGameIds = [], this.unfinishedRPANDGYMLGames = [], this.recentGamesCount = 0, this.isCombinedCategoriesNew = !1, this.elms = 6, this.isRCPWidget = !1, this.currentWidgetHeight = 0, this.newWidgetHeight = 0, this.cozyBingoRecentGames = [], this.hidePreButton = !0, this.hideNextButton = !0, this.isCategoryRcpWidget = !0 } ngOnInit() { this.youMightLikeMessage = this.Global.messages.LobbyGamesYouMightLike ? this.Global.messages.LobbyGamesYouMightLike : this.Global.messages.GamesYouMightLike, this.gameLaunchedFromLoc = "RecentlyPlayed_widget_RecentlyPlayed", this.noRecentGamesIcon = this.Global.messages.WidgetnoRecentGamesIcon, this.WidgetFrameClr = this.Global.messages.WidgetframeClr, this.WidgetDefaultMsgTxtColor = this.Global.messages.rcpWidgetDefaultMsgTxtColor, this.WidgetBackgroundClr = this.Global.messages.WidgetBackgroundColor; let t = this.configProviderService.provideCozyBingoConfig(); this.cozyBingoRecentGamesInRpwidget = t.cozyBingoRecentGamesInRpwidget; let a = (0, N.Z)(this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML")); a && (this.gymlCategory = a.categoryInfo), this.gymlCategory && (this.gymlCategory.rowCount = "-1"), this.isRCPWidget = this.casinoWidgetService.isCasinoWidget(), this.maxHeightCount = this.widgetConfig.maxHeightCount; let l = (0, N.Z)(this.casinoLobbyService.getCategoryInfo(this.lobbyType, "recentgames")); l && (this.recentCategory = l.categoryInfo), this.recentlyPlayedGames = this.recentGameService.getrecentGamesFromAllLobby(), this.setGamesOnInit(), this.promotedGamesSubscriber = this.promotedGamesService.promotedFeedFromAllLobbyObservable.subscribe(g => { if (g) { let p, b = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); b && (p = b.categoryInfo), this.setUnfinishedRPAndGYML(this.promotedGamesService.getPromotedGamesFromAllLobby(), this.unfinishedGameService.getUnfinishedGamesFromAllLobby(), this.recentGameService.getrecentGamesFromAllLobby(), this.cozyBingoDataService.getcozybingorecentgames(), this.getGymlGameIds(p)) } }), this.recentGamesSubscriber = this.recentGameService.recentGamesFeedFromAllLobbyObservable.subscribe(g => { if (this.recentCategory && g) { this.recentlyPlayedGames = g; let p, b = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); b && (p = b.categoryInfo), this.setUnfinishedRPAndGYML(this.promotedGamesService.getPromotedGamesFromAllLobby(), this.unfinishedGameService.getUnfinishedGamesFromAllLobby(), this.recentlyPlayedGames, this.cozyBingoDataService.getcozybingorecentgames(), this.getGymlGameIds(p)) } }), this.alignIconRight = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.features.alignIconRight), this.unfinishedObv = this.unfinishedGameService.unfinishedFeedFromAllLobbyObservable.subscribe(g => { if (g) { this.unfinishedGames = g; let p, b = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); b && (p = b.categoryInfo), this.setUnfinishedRPAndGYML(this.promotedGamesService.getPromotedGamesFromAllLobby(), g, this.recentGameService.getrecentGamesFromAllLobby(), this.cozyBingoDataService.getcozybingorecentgames(), this.getGymlGameIds(p)) } }), this.cozyBingoRecentGamesInRpwidget && (this.cozyBingoSubscriber = this.cozyBingoDataService.cozyBingoRoomsDataObservable.subscribe(g => { if (g) { this.cozyBingoRecentGames = this.cozyBingoDataService.getcozybingorecentgames(); let p, b = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); b && (p = b.categoryInfo), this.setUnfinishedRPAndGYML(this.promotedGamesService.getPromotedGamesFromAllLobby(), this.unfinishedGameService.getUnfinishedGamesFromAllLobby(), this.recentGameService.getrecentGamesFromAllLobby(), this.cozyBingoRecentGames, this.getGymlGameIds(p)) } })), this.recentCategory && (this.recentCategory.categoryIndex = 1), this.gymlCategory && (this.gymlCategory.categoryIndex = 1), this.subcategory && (this.subcategory.categoryIndex = 1), this.isUkHeading = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.features.isUkHeading) } ngOnChanges() { this.assignConfig(), this.cozyBingoRecentGames = this.cozyBingoDataService.getcozybingorecentgames(); let t, a = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); a && (t = a.categoryInfo), this.setUnfinishedRPAndGYML(this.promotedGamesService.getPromotedGamesFromAllLobby(), this.unfinishedGameService.getUnfinishedGamesFromAllLobby(), this.recentGameService.getrecentGamesFromAllLobby(), this.cozyBingoRecentGames, this.getGymlGameIds(t)) } assignConfig() { this.casinoConfig = this.configProviderService.provideCasinoConfig(), this.Global = this.configProviderService.provideGlobalConfig(), this.features = this.configProviderService.provideFeaturesConfig(), this.widgetConfig = this.configProviderService.providewidgetConfig() } postHeight() { if (this.casinoWidgetService.isCasinoWidget() && this.unfinishedRPANDGYMLGames.length > 0) { let t = document.getElementById("sticky-container"); t && (this.currentWidgetHeight = t.scrollHeight, this.casinoWidgetService.postMessageToParent("LobbyLoaded", { categoryid: "recentgameswidget", displayName: this.recentGamesCount > 0 ? this.recentCategory.categoryname : this.gymlCategory.categoryname, height: this.currentWidgetHeight }), this.interval || (this.interval = setInterval(() => { this.checkAndUpdateWidgetHeight() }, 500))) } } checkAndUpdateWidgetHeight() { if (document.getElementById("sticky-container") && (this.newWidgetHeight = document.getElementById("sticky-container").scrollHeight, this.currentWidgetHeight === this.newWidgetHeight && this.maxHeightCount--, this.maxHeightCount || clearInterval(this.interval), this.newWidgetHeight !== this.currentWidgetHeight)) { this.currentWidgetHeight = this.newWidgetHeight; let t = { categoryid: "recentgameswidget", displayName: this.recentGamesCount > 0 ? this.recentCategory.categoryname : this.gymlCategory.categoryname, height: document.getElementById("sticky-container").scrollHeight }; this.casinoWidgetService.postMessageToParent("LobbyLoaded", t) } } onResize() { } setGamesOnInit() { let b, t = this.unfinishedGameService.getUnfinishedGamesFromAllLobby(), a = this.recentGameService.getrecentGamesFromAllLobby(), l = this.cozyBingoDataService.getcozybingorecentgames(), g = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"), p = this.promotedGamesService.getPromotedGamesFromAllLobby(); g && (this.gymlCategory = g.categoryInfo), this.gymlCategory && (this.gymlCategory.rowCount = "-1", b = this.getGymlGameIds(this.gymlCategory)), this.setUnfinishedRPAndGYML(p, t, a, l, b) } getGymlGameIds(t) { let a = []; if (t && t.gamelist && t.gamelist.length > 0) for (let l = 0; l < t.gamelist.length; l++) { let g = new od; g.gameId = t.gamelist[l].game, g.sticker = t.gamelist[l].sticker, a.push(g) } return a } setUnfinishedRPAndGYML(t, a, l, g, p) { a || (a = []), l || (l = []), p || (p = []), t || (t = []), g || (g = []); let b = this.concatUnfinishedAndRecentGames(t, a, l, g); this.unfinishedRPANDGYMLGameIds = this.concatUnfinishedRecentANDGYMLGames(b, p), this.processRecentGYMLGames() } concatUnfinishedAndRecentGames(t, a, l, g) { let p = []; for (let E = 0; E < t.length; E++)p.push(new Ji(t[E], !0, !1, !0, !0, !1)); for (let E = 0; E < a.length; E++)if (!(p.filter(O => O.GameId === a[E]).length > 0)) { let O = new Ji(a[E], !0, !1, !0, !1, !1); -1 === p.indexOf(O) && p.push(O) } for (let E = 0; E < l.length; E++)if (!(p.filter(O => O.GameId === l[E]).length > 0)) { let O = new Ji(l[E], !0, !1, !0, !1, !1); -1 === p.indexOf(O) && p.push(O) } let b = []; for (let E = 0; E < p.length; E++)this.casinoLobbyService.getGameInfo(p[E].GameId) && b.push(p[E]); if (p = b, this.cozyBingoRecentGamesInRpwidget) for (let E = 0; E < g.length; E++) { let L = new Ji(g[E], !0, !1, !1, !1, !0); -1 === p.indexOf(L) && p.push(L) } return this.zeroRecentGames = !p || 0 == p.length, p } assignRecommendedWidgetColors(t) { if (t.isGYML) return this.casinoWidgetService.isCasinoWidget() ? "gyml-outerframe-casinowidget" : this.casinoIFrameOverlayService.isOverLayOnAProduct() ? "gyml-outerframe-bg-overlay" : "gyml-outerframe-casino" } concatUnfinishedRecentANDGYMLGames(t, a) { let l = t; for (let g = 0; g < a.length; g++)if (!l.find(b => b.GameId === a[g].gameId)) { let b = new Ji(a[g].gameId, !1, !0, !0, !1, !1); b.sticker = a[g].sticker; let E = this.casinoLobbyService.getGameInfo(b.GameId); E && (b.name = E.Title, b.ownerId = E.ownerId, l.push(b)) } return l } processRecentGYMLGames() { this.sliceGYMLLimitAndSetBaseGameCount(), this.setGames(), this.setIsCombinedCategories() } sliceGYMLLimitAndSetBaseGameCount() { let t = this.unfinishedRPANDGYMLGameIds.filter(l => l.isRecentlyPlayed); t && (this.recentGamesCount = t.length); let a = this.unfinishedRPANDGYMLGameIds.filter(l => !l.isRecentlyPlayed); a = a.slice(0, this.casinoConfig.gymlLimit), this.unfinishedRPANDGYMLGameIds = [], this.unfinishedRPANDGYMLGameIds = this.unfinishedRPANDGYMLGameIds.concat(t), this.unfinishedRPANDGYMLGameIds = this.unfinishedRPANDGYMLGameIds.concat(a) } setGames() { if (this.unfinishedRPANDGYMLGameIds && this.unfinishedRPANDGYMLGameIds.length > 0) { let a, t = []; for (let l = 0; l < this.unfinishedRPANDGYMLGameIds.length; l++) { if (this.unfinishedRPANDGYMLGameIds[l].fromCasino) { let g = this.casinoLobbyService.getGameInfo(this.unfinishedRPANDGYMLGameIds[l].GameId); g && (a = { game: this.unfinishedRPANDGYMLGameIds[l].GameId, icon: "1", isRecentlyPlayed: this.unfinishedRPANDGYMLGameIds[l].isRecentlyPlayed, isGYML: this.unfinishedRPANDGYMLGameIds[l].isGYML, sticker: this.unfinishedRPANDGYMLGameIds[l].sticker, fromCasino: this.unfinishedRPANDGYMLGameIds[l].fromCasino, name: g.name, provider: g.provider, lobbyType: this.lobbyType, ownerId: g.ownerId, isPromoted: this.unfinishedRPANDGYMLGameIds[l].isPromoted, fromCozybingo: this.unfinishedRPANDGYMLGameIds[l].fromCozybingo }) } else this.unfinishedRPANDGYMLGameIds[l].fromCozybingo && (a = this.cozyBingoDataService.getRoomdatabyId(this.unfinishedRPANDGYMLGameIds[l].GameId), a && (a.fromCozybingo = this.unfinishedRPANDGYMLGameIds[l].fromCozybingo, a.fromCasino = !1, a.isRecentlyPlayed = this.unfinishedRPANDGYMLGameIds[l].isRecentlyPlayed, a.gameId = a.id, a.lobbyType = this.lobbyType)); a && t.push(a) } this.setDefaultLMTGameIcons(t) } else this.unfinishedRPANDGYMLGameIds && 0 === this.unfinishedRPANDGYMLGameIds.length && (this.Games = [], this.unfinishedRPANDGYMLGames = []) } setDefaultLMTGameIcons(t) { this.Games = [], this.unfinishedRPANDGYMLGames = []; let a = this.casinoLobbyService.getDisabledGames(), l = []; if (l = this.cozyBingoDataService.getcozybingorecentgames(), this.elms = this.recentGameService.getrecentGamesFromAllLobby() && 0 == this.recentGameService.getrecentGamesFromAllLobby().length && l && 0 == l.length && this.promotedGamesService.getPromotedGamesFromAllLobby() && 0 == this.promotedGamesService.getPromotedGamesFromAllLobby().length ? window.innerWidth < 321 ? 3 : 5 : window.innerWidth < 321 ? 3 : 6, setTimeout(() => { this.recentGYMLCarousel && this.recentGYMLCarousel.swiperRef && this.recentGYMLCarousel.swiperRef.update() }, 0), t && t.length > 0) { for (let L = 0; L < t.length; L++) { let U, O = t[L]; O.fromCozybingo || (U = a.filter(z => z === O.game)); let K = {}; O.fromCozybingo ? (K = O, K.gameSection = "RecentlyPlayed_widget_RecentlyPlayed", K.gameContainer = this.gameContainer) : U && U.length > 0 || (K = this.gameDataManager.setGameLobbyModel(O, this.isTouch), K.isRecentlyPlayed = t[L].isRecentlyPlayed, K.isUnfinished = this.getUnfinishedStatus(K.gameId), K.isGYML = t[L].isGYML, K.fromCasino = t[L].fromCasino, K.gameSection = "RecentlyPlayed_widget_RecentlyPlayed", K.gameContainer = this.gameContainer, K.isPromoted = t[L].isPromoted, K.fromCozybingo = t[L].fromCozybingo), U && U.length > 0 || (K.dataIndex = L, K.data = K, this.Games.push(K), this.unfinishedRPANDGYMLGames.push(K)) } let g = "1", p = this.casinoManager.getCurrentWidth(); this.unfinishedRPANDGYMLGames.forEach(L => { L.infoIconClass = this.casinoManager.assignGameClass(p, g) }); let b = t.filter(L => L.isRecentlyPlayed); this.recentCategory && (this.recentCategory.gamesModel = b), this.cozyBingoDataService.getcozybingorecentgames(), this.hideNextButton = !(this.unfinishedRPANDGYMLGames.length > 6 || this.isNoIconBoxVisible() && this.unfinishedRPANDGYMLGames.length > 5) } } getUnfinishedStatus(t) { return -1 != this.unfinishedGameService.getUnfinishedGamesFromAllLobby().indexOf(t) } setIsCombinedCategories() { this.subcategory = void 0; let t = this.isRCPWidget ? this.widgetConfig.recentGamesCountLimit : this.casinoConfig.recentGamesCountLimit; if (this.unfinishedRPANDGYMLGames) { let g = this.unfinishedRPANDGYMLGames.filter(b => b.isRecentlyPlayed), p = this.unfinishedRPANDGYMLGames.filter(b => !b.isRecentlyPlayed); !g || !p || g && (0 === g.length || g.length >= t) || p && p.length > 0 && (!g || g && 0 === g.length) ? (this.isCombinedCategories = !1, 0 === g.length && this.gymlCategory && p.length > 0 ? (this.subcategory = this.gymlCategory, this.unfinishedRPANDGYMLGames = this.unfinishedRPANDGYMLGames.filter(b => !b.isRecentlyPlayed), this.Games = this.unfinishedRPANDGYMLGames) : (g.length >= t && this.recentCategory || g.length > 0 && this.recentCategory && !this.gymlCategory) && (this.subcategory = this.recentCategory, this.unfinishedRPANDGYMLGames = this.unfinishedRPANDGYMLGames.filter(b => b.isRecentlyPlayed), this.Games = this.unfinishedRPANDGYMLGames)) : this.isCombinedCategories = !0 } let l = this.casinoManager.getCurrentWidth(); this.unfinishedRPANDGYMLGames.forEach(g => { g.infoIconClass = this.casinoManager.assignGameClass(l, "1") }), this.hideNextButton = !(this.unfinishedRPANDGYMLGames.length > 6 || this.isNoIconBoxVisible() && this.unfinishedRPANDGYMLGames.length > 5), setTimeout(() => { this.changeDetectorRef.detectChanges() }, 500) } isNoIconBoxVisible() { let t = this.cozyBingoDataService.getcozybingorecentgames(); return this.recentlyPlayedGames && 0 == this.recentlyPlayedGames.length && t && 0 == t.length } ngAfterViewInit() { document.getElementById("gymlId") && (this.maxScrollPosition = document.getElementById("gymlId").offsetLeft) } setSubCategoryStyle() { return this.isTouch ? "scrollable-games" : "unscrollable-games" } loadNextGamesSet() { } scrollGYML() { this.elementRef.nativeElement.getElementsByClassName("scrollable-games")[0].scrollLeft >= this.maxScrollPosition ? (this.staticGYML = !0, setTimeout(() => { document.getElementById("sticky-container").setAttribute("position", "relative") }, 500)) : this.elementRef.nativeElement.getElementsByClassName("scrollable-games")[0].scrollLeft < this.maxScrollPosition && (this.staticGYML = !1) } onIndexChanged(t) { let a = t.realIndex; this.hidePreButton = 0 === a, this.recentGYMLCarousel && this.recentGYMLCarousel.swiperRef && this.unfinishedRPANDGYMLGames && this.unfinishedRPANDGYMLGames.length > 0 && (this.lastElementIndex = a + this.elms - 1, this.hideNextButton = this.lastElementIndex === this.unfinishedRPANDGYMLGames.length - 1) } goToPrevSlide() { this.recentGYMLCarousel && this.recentGYMLCarousel.swiperRef && this.recentGYMLCarousel.swiperRef.slidePrev() } goToNextSlide() { this.recentGYMLCarousel && this.recentGYMLCarousel.swiperRef && (this.recentGYMLCarousel.swiperRef.slideNext(), this.hideNextButton = this.lastElementIndex === this.unfinishedRPANDGYMLGames.length - 1) } trackGame(t, a) { if (a.icon && a.icon.src) return a.gameId + a.icon.src } ngOnDestroy() { this.unfinishedObv && this.unfinishedObv.unsubscribe(), this.promotedGamesSubscriber && this.promotedGamesSubscriber.unsubscribe(), this.recentGamesSubscriber && this.recentGamesSubscriber.unsubscribe(), this.bingoRoomDataSubscriber && this.bingoRoomDataSubscriber.unsubscribe(), this.bingoVfSchedulerSubscriber && this.bingoVfSchedulerSubscriber.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.cM), e.Y36(c.vD), e.Y36(e.SBq), e.Y36(c.f), e.Y36(c.M3), e.Y36(c.iX), e.Y36(c.hY), e.Y36(c.Sy), e.Y36(c.nA), e.Y36(c.g9), e.Y36(e.sBO), e.Y36(c.Kh)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-rcp-gyml-widget"]], viewQuery: function (t, a) { if (1 & t && e.Gf(io, 5), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.recentGYMLCarousel = l.first) } }, inputs: { lobbyType: "lobbyType", isTouch: "isTouch", gameContainer: "gameContainer" }, features: [e.TTD], decls: 4, vars: 8, consts: [["id", "sticky-container", 1, "sticky-container", "casino-lobby-width-gametile", 3, "resize"], [3, "ngClass", "scroll"], [3, "ngClass", 4, "ngIf"], [4, "ngIf"], [3, "ngClass"], [1, "base-category"], [1, "casino-allGames"], ["class", "gameContainers", 4, "ngIf"], ["class", "gameContainers mrgn-lft-cls", 4, "ngIf"], [1, "gameContainers"], ["class", "casino-no-games-box", 3, "ngClass", "ngStyle", 4, "ngIf"], ["class", "casino-rcntly-gyml-game-touch", 3, "hidden", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "casino-no-games-box", 3, "ngClass", "ngStyle"], [1, "casino-rcntly-gyml-game-touch", 3, "hidden"], [3, "roomInfo", "gamePosition", "gameLaunchedFrom", "product", "lobbyType", "widgetFrameClr", 4, "ngIf"], [3, "id", "ngClass", "game", "gamePosition", "casino-recentlyPromo", "category", "widgetFrameClr", "gameLaunchedFrom", "product", 4, "ngIf"], [3, "roomInfo", "gamePosition", "gameLaunchedFrom", "product", "lobbyType", "widgetFrameClr"], [3, "id", "ngClass", "game", "gamePosition", "category", "widgetFrameClr", "gameLaunchedFrom", "product"], [1, "gameContainers", "mrgn-lft-cls"], ["class", "casino-rcntly-gyml-game-touch", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "casino-rcntly-gyml-game-touch"], [3, "ngClass", "ngStyle"], [3, "id", "ngClass", "casino-recentlyPromo", "game", "gamePosition", "category", "widgetFrameClr", "gameLaunchedFrom", "product", 4, "ngIf"], ["class", "casino-no-games-box", 3, "ngStyle", 4, "ngIf"], [3, "loop", "autoplay", "slidesPerView", "slidesPerGroup", "slideChange"], ["recentGYMLCarousel", ""], [4, "ngFor", "ngForOf"], [1, "theme-left", "ngx-button-left", 3, "hidden", "click"], [1, "theme-right", "ngx-button-right", 3, "hidden", "click"], [1, "casino-no-games-box", 3, "ngStyle"], ["class", "game item", "swiperSlide", ""], [1, "game"], [3, "id", "ngClass", "game", "gamePosition", "casino-recentlyPromo", "widgetFrameClr", "category", "gameLaunchedFrom", "product", 4, "ngIf"], [3, "id", "ngClass", "game", "gamePosition", "widgetFrameClr", "category", "gameLaunchedFrom", "product"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0), e.NdJ("resize", function () { return a.onResize() }, !1, e.Jf7), e.TgZ(1, "div", 1), e.NdJ("scroll", function () { return a.scrollGYML() }), e.YNc(2, Xc, 5, 7, "div", 2), e.YNc(3, sl, 9, 13, "div", 3), e.qZA()()), 2 & t && (e.xp6(1), e.Udp("overflow-x", 0 == a.isTouch ? "hidden" : "auto"), e.ekj("non-touch-scrollable-games", !a.isTouch && "scrollable-games" == a.setSubCategoryStyle()), e.Q6J("ngClass", a.setSubCategoryStyle()), e.xp6(1), e.Q6J("ngIf", a.isTouch && a.unfinishedRPANDGYMLGames), e.xp6(1), e.Q6J("ngIf", !a.isTouch && a.unfinishedRPANDGYMLGames && a.recentCategory)) }, directives: [Sa, Fi, be.nF, o.mk, o.O5, o.PC, o.sg, be.YC], encapsulation: 2 }), n })(); le.ZP.use([le.tl, le.W_, le.pt]); class ad { } class Wn { constructor(_, t, a, l = !0, g, p, b = !1) { this.fromCasino = !0, this.fromCozybingo = !1, this.GameId = _, this.isFavourite = t, this.isGYML = a, this.fromCasino = l, this.name = g, this.ownerId = p, this.fromCozybingo = b } } let sd = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K) { this.gameDataManager = t, this.favouriteService = a, this.fastLoadingGamesService = l, this.casinoLobbyService = g, this.elementRef = p, this.categoryManager = b, this.casinoManager = E, this.casinoIFrameOverlayService = L, this.casinoWidgetService = O, this.configProviderService = U, this.cozyBingoDataService = K, this.elms = 6, this.favourtieandGymlGames = [], this.recentStartIndex = 0, this.unfinishedGames = [], this.Games = [], this.isCombinedCategories = !1, this.onlyRecentGames = [], this.onlyRecentGamesStrings = [], this.onlyGYMLGamesStrings = [], this.onlyGYMLGames = [], this.gymlGames = [], this.favGames = [], this.gymlGameStrings = [], this.favouriteAandGYMLGameIds = [], this.unfinishedFavANDGYMLGames = [], this.favGamesCount = 0, this.favouriteGames = [], this.isCombinedCategoriesNew = !1, this.hidePreButton = !0, this.hideNextButton = !0, this.cozyBingoFavouriteGames = [] } ngOnInit() { this.youMightLikeMessage = this.Global.messages.LobbyGamesYouMightLike ? this.Global.messages.LobbyGamesYouMightLike : this.Global.messages.GamesYouMightLike, this.gameLaunchedFromLoc = "RecentlyPlayed_widget_Favourites"; let t = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); t && (this.gymlCategory = t.categoryInfo), this.gymlCategory && (this.gymlCategory.rowCount = "-1"), this.noFavouritesIcon = this.Global.messages.WidgetnoFavouritesIcon, this.WidgetFrameClr = this.Global.messages.WidgetframeClr, this.WidgetDefaultMsgTxtColor = this.Global.messages.WidgetDefaultMsgTxtColor, this.WidgetBackgroundClr = this.Global.messages.WidgetBackgroundColor; let a = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "favouritegames"); a && (this.favouriteCategory = a.categoryInfo), this.setGamesOnInit(), this.favouriteGames = this.favouriteService.getFavouriteGames(), this.cozyBingoFavouriteGames = this.cozyBingoDataService.getcozybingofavourites(), this.favGamesSubscription = this.favouriteService.favouriteGamesFeedObservable.subscribe(l => { if (this.favouriteCategory && l) { this.favouriteGames = l; let g, p = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); p && (g = p.categoryInfo), this.setFavouriteAndGYML(this.favouriteGames, this.getGymlGameIds(g), this.cozyBingoDataService.getcozybingofavourites()) } }), this.cozybingoSubscription = this.cozyBingoDataService.cozyBingoRoomsDataObservable.subscribe(l => { if (l) { let g, p = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); p && (g = p.categoryInfo), this.cozyBingoFavouriteGames = this.cozyBingoDataService.getcozybingofavourites(); let b = this.getGymlGameIds(g); this.setFavouriteAndGYML(this.favouriteService.getFavouriteGames(), b, this.cozyBingoFavouriteGames) } }), this.alignIconRight = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.features.alignIconRight), this.favouriteCategory && (this.favouriteCategory.categoryIndex = 1), this.gymlCategory && (this.gymlCategory.categoryIndex = 1), this.subcategory && (this.subcategory.categoryIndex = 1), this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(l => { this.fastLoadingGamesService.setFastLoadingGames(this.unfinishedFavANDGYMLGames, l) }), this.isUkHeading = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.features.isUkHeading) } ngOnChanges() { this.assignConfig(); let t, a = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); a && (t = a.categoryInfo), this.setFavouriteAndGYML(this.favouriteService.getFavouriteGames(), this.getGymlGameIds(t), this.cozyBingoDataService.getcozybingofavourites()) } assignConfig() { this.casinoConfig = this.configProviderService.provideCasinoConfig(), this.Global = this.configProviderService.provideGlobalConfig(), this.features = this.configProviderService.provideFeaturesConfig() } setGamesOnInit() { let l, t = this.favouriteService.getFavouriteGames(), a = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"); a && (this.gymlCategory = a.categoryInfo), this.gymlCategory && (this.gymlCategory.rowCount = "-1", l = this.getGymlGameIds(this.gymlCategory)), this.setFavouriteAndGYML(t, l, this.cozyBingoDataService.getcozybingofavourites()) } assignRecommendedWidgetColors(t) { if (t.isGYML) return this.casinoWidgetService.isCasinoWidget() ? "gyml-outerframe-casinowidget" : this.casinoIFrameOverlayService.isOverLayOnAProduct() ? "gyml-outerframe-bg-overlay" : "gyml-outerframe-casino" } getGymlGameIds(t) { let a = []; if (t && t.gamelist && t.gamelist.length > 0) for (let l = 0; l < t.gamelist.length; l++) { let g = new ad; g.gameId = t.gamelist[l].game, g.sticker = t.gamelist[l].sticker, a.push(g) } return a } setFavouriteAndGYML(t, a, l) { t || (t = []), l || (l = []), a || (a = []); let g = this.concatUnfinishedAndFavouriteGames(t, l); this.favouriteAandGYMLGameIds = this.concatFavouriteAndGYMLGames(g, a), this.processFavouriteGYMLGames() } concatUnfinishedAndFavouriteGames(t, a) { let l = []; for (let p = 0; p < t.length; p++) { let b = this.casinoLobbyService.getGameInfo(t[p]); b && l.push(new Wn(t[p], !0, !1, !0, b.name, b.ownerId, !1)) } if (this.configProviderService.provideCozyBingoConfig().cozyBingoFavouritesInRpwidget) for (let p = 0; p < a.length; p++) { let b = new Wn(a[p], !0, !1, !1, null, null, !0); l.push(b) } return this.zeroFavourite = !l || 0 == l.length, l } concatFavouriteAndGYMLGames(t, a) { let l = t = Array.from(new Set(t)); for (let g = 0; g < a.length; g++) { let p = t; if (!p.find(E => E.GameId === a[g].gameId)) { let E = new Wn(a[g].gameId, !1, !0, !0, null, null, !1); E.sticker = a[g].sticker; let L = this.casinoLobbyService.getGameInfo(E.GameId); L && (E.name = L.Title, E.ownerId = L.ownerId, p.push(E)) } } return l } processFavouriteGYMLGames() { this.sliceGYMLLimitAndSetBaseGameCount(), this.setGames() } sliceGYMLLimitAndSetBaseGameCount() { let t = this.favouriteAandGYMLGameIds.filter(l => l.isFavourite); t && (this.favGamesCount = t.length); let a = this.favouriteAandGYMLGameIds.filter(l => !l.isFavourite); this.casinoConfig && (a = a.slice(0, this.casinoConfig.gymlLimit), this.favouriteAandGYMLGameIds = [], this.favouriteAandGYMLGameIds = this.favouriteAandGYMLGameIds.concat(t), this.isGymlInFavourite && (this.favouriteAandGYMLGameIds = this.favouriteAandGYMLGameIds.concat(a))) } setGames() { if (this.favouriteAandGYMLGameIds && this.favouriteAandGYMLGameIds.length > 0) { let a, t = []; for (let l = 0; l < this.favouriteAandGYMLGameIds.length; l++) { if (this.favouriteAandGYMLGameIds[l].fromCozybingo) a = this.cozyBingoDataService.getRoomdatabyId(this.favouriteAandGYMLGameIds[l].GameId), a && (a.fromCozybingo = !0, a.fromCasino = !1, a.isFavourite = !0, a.gameId = a.id, a.lobbyType = this.lobbyType); else if (this.favouriteAandGYMLGameIds[l].fromCasino) { let g = this.casinoLobbyService.getGameInfo(this.favouriteAandGYMLGameIds[l].GameId); a = { game: this.favouriteAandGYMLGameIds[l].GameId, icon: "1", isFavourite: this.favouriteAandGYMLGameIds[l].isFavourite, isGYML: this.favouriteAandGYMLGameIds[l].isGYML, sticker: this.favouriteAandGYMLGameIds[l].sticker, fromCasino: this.favouriteAandGYMLGameIds[l].fromCasino, name: g.name, provider: g.provider, lobbyType: this.lobbyType, ownerId: g.ownerId } } a && t.push(a) } this.setDefaultLMTGameIcons(t) } else this.favouriteAandGYMLGameIds && 0 === this.favouriteAandGYMLGameIds.length && (this.Games = [], this.unfinishedFavANDGYMLGames = []) } setDefaultLMTGameIcons(t) { this.Games = [], this.unfinishedFavANDGYMLGames = []; let a = this.casinoLobbyService.getDisabledGames(); if (this.elms = this.favouriteGames && 0 == this.favouriteGames.length && this.cozyBingoFavouriteGames && 0 == this.cozyBingoFavouriteGames.length ? window.innerWidth < 321 ? 3 : 5 : window.innerWidth < 321 ? 3 : 6, t && t.length > 0) { for (let g = 0; g < t.length; g++) { let b, p = t[g]; p.fromCozybingo || (b = a.filter(L => L === p.game)); let E = {}; p.fromCozybingo ? (E = p, E.gameSection = "RecentlyPlayed_widget_Favourites", E.gameContainer = this.gameContainer) : (E = this.gameDataManager.setGameLobbyModel(p, this.isTouch), b && b.length > 0 || (E.isFavourite = t[g].isFavourite, E.isGYML = t[g].isGYML, E.fromCasino = t[g].fromCasino, E.gameSection = "RecentlyPlayed_widget_Favourites", E.gameContainer = this.gameContainer)), b && b.length > 0 || (E.dataIndex = g, E.data = E, E.infoIconClass = this.casinoManager.assignGameClass(this.casinoManager.getCurrentWidth(), "1"), this.Games.push(E), this.unfinishedFavANDGYMLGames.push(E)) } let l = t.filter(g => g.isFavourite && g.fromCasino); this.favouriteCategory && (this.favouriteCategory.gamesModel = l), this.hideNextButton = !(this.unfinishedFavANDGYMLGames.length > 6 || this.isNoIconBoxVisible() && this.unfinishedFavANDGYMLGames.length > 5), 6 == this.unfinishedFavANDGYMLGames.length && !this.isNoIconBoxVisible() && (this.hideNextButton = !0) } setTimeout(() => { this.favouriteGYMLCarousel && this.favouriteGYMLCarousel.swiperRef && this.favouriteGYMLCarousel.swiperRef.update() }, 500) } isNoIconBoxVisible() { return this.favouriteGames && 0 == this.favouriteGames.length && this.cozyBingoFavouriteGames && 0 == this.cozyBingoFavouriteGames.length } ngAfterViewInit() { document.getElementById("gymlId") && (this.maxScrollPosition = document.getElementById("gymlId").offsetLeft) } ngOnDestroy() { this.cozybingoSubscription && this.cozybingoSubscription.unsubscribe(), this.favGamesSubscription && this.favGamesSubscription.unsubscribe() } setSubCategoryStyle() { return this.isTouch ? "scrollable-games" : "unscrollable-games" } scrollGYML() { this.elementRef.nativeElement.getElementsByClassName("scrollable-games")[0].scrollLeft >= this.maxScrollPosition ? (this.staticGYML = !0, setTimeout(() => { document.getElementById("sticky-container").setAttribute("position", "relative") }, 500)) : this.elementRef.nativeElement.getElementsByClassName("scrollable-games")[0].scrollLeft < this.maxScrollPosition && (this.staticGYML = !1) } onIndexChanged(t) { let a = t.realIndex; this.hidePreButton = 0 === a, this.favouriteGYMLCarousel && this.favouriteGYMLCarousel.swiperRef && this.unfinishedFavANDGYMLGames && this.unfinishedFavANDGYMLGames.length > 0 && (this.lastElementIndex = a + this.elms - 1, this.hideNextButton = this.lastElementIndex === this.unfinishedFavANDGYMLGames.length - 1) } goToPrevSlide() { this.favouriteGYMLCarousel && this.favouriteGYMLCarousel.swiperRef && this.favouriteGYMLCarousel.swiperRef.slidePrev() } goToNextSlide() { this.favouriteGYMLCarousel && this.favouriteGYMLCarousel.swiperRef && (this.favouriteGYMLCarousel.swiperRef.slideNext(), this.hideNextButton = this.lastElementIndex === this.unfinishedFavANDGYMLGames.length - 1) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.cM), e.Y36(c.io), e.Y36(c.$Q), e.Y36(c.nA), e.Y36(e.SBq), e.Y36(c.q_), e.Y36(c.M3), e.Y36(c.Sy), e.Y36(c.hY), e.Y36(c.iX), e.Y36(c.Kh)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-fav-gyml-widget"]], viewQuery: function (t, a) { if (1 & t && e.Gf(rl, 5), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.favouriteGYMLCarousel = l.first) } }, inputs: { lobbyType: "lobbyType", isTouch: "isTouch", isGymlInFavourite: "isGymlInFavourite", gameContainer: "gameContainer" }, features: [e.TTD], decls: 4, vars: 8, consts: [["id", "sticky-container", 1, "sticky-container", "casino-lobby-width-gametile"], [3, "ngClass", "scroll"], [3, "ngClass", 4, "ngIf"], [4, "ngIf"], [3, "ngClass"], [1, "base-category"], [1, "casino-allGames"], ["class", "gameContainers", 4, "ngIf"], ["class", "gameContainers mrgn-lft-cls", 4, "ngIf"], [1, "gameContainers"], ["class", "casino-no-games-box", 3, "ngClass", "ngStyle", 4, "ngIf"], ["class", "casino-rcntly-gyml-game-touch", 3, "hidden", 4, "ngFor", "ngForOf"], [1, "casino-no-games-box", 3, "ngClass", "ngStyle"], [1, "casino-rcntly-gyml-game-touch", 3, "hidden"], [3, "ngClass", "ngStyle"], [3, "roomInfo", "gamePosition", "gameLaunchedFrom", "product", "lobbyType", "widgetFrameClr", 4, "ngIf"], [3, "id", "ngClass", "game", "gamePosition", "casino-recentlyPromo", "category", "widgetFrameClr", "gameLaunchedFrom", "product", 4, "ngIf"], [3, "roomInfo", "gamePosition", "gameLaunchedFrom", "product", "lobbyType", "widgetFrameClr"], [3, "id", "ngClass", "game", "gamePosition", "category", "widgetFrameClr", "gameLaunchedFrom", "product"], [1, "gameContainers", "mrgn-lft-cls"], ["class", "casino-rcntly-gyml-game-touch", 4, "ngFor", "ngForOf"], [1, "casino-rcntly-gyml-game-touch"], [3, "id", "ngClass", "widgetFrameClr", "casino-recentlyPromo", "game", "gamePosition", "category", "gameLaunchedFrom", 4, "ngIf"], [3, "id", "ngClass", "widgetFrameClr", "game", "gamePosition", "category", "gameLaunchedFrom"], ["class", "casino-no-games-box", 3, "ngStyle", 4, "ngIf"], [1, "casino-fav-gyml-carousel-wrapper", 3, "ngClass"], [3, "loop", "autoplay", "slidesPerView", "slidesPerGroup", "slideChange"], ["favouriteGYMLCarousel", ""], [4, "ngFor", "ngForOf"], [1, "theme-left", "ngx-button-left", 3, "hidden", "click"], [1, "theme-right", "ngx-button-right", 3, "hidden", "click"], [1, "casino-no-games-box", 3, "ngStyle"], ["class", "game item", "swiperSlide", ""], [1, "game"], [3, "id", "ngClass", "widgetFrameClr", "game", "gamePosition", "casino-recentlyPromo", "category", "gameLaunchedFrom", "product", 4, "ngIf"], [3, "id", "ngClass", "casino-recentlyPromo", "game", "gamePosition", "category", "widgetFrameClr", "gameLaunchedFrom", "product", 4, "ngIf"], [3, "id", "ngClass", "widgetFrameClr", "game", "gamePosition", "category", "gameLaunchedFrom", "product"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0)(1, "div", 1), e.NdJ("scroll", function () { return a.scrollGYML() }), e.YNc(2, vl, 5, 7, "div", 2), e.YNc(3, Il, 9, 13, "div", 3), e.qZA()()), 2 & t && (e.xp6(1), e.Udp("overflow-x", 0 == a.isTouch ? "hidden" : "auto"), e.ekj("non-touch-scrollable-games", !a.isTouch && "scrollable-games" == a.setSubCategoryStyle()), e.Q6J("ngClass", a.setSubCategoryStyle()), e.xp6(1), e.Q6J("ngIf", a.isTouch && a.unfinishedFavANDGYMLGames), e.xp6(1), e.Q6J("ngIf", !a.isTouch && a.unfinishedFavANDGYMLGames)) }, directives: [Sa, Fi, be.nF, o.mk, o.O5, o.PC, o.sg, be.YC], encapsulation: 2 }), n })(), La = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z) { this.recentGameService = t, this.user = a, this.casinoManager = l, this.deviceService = g, this.navigation = p, this.tracking = b, this.casinoWidgetService = E, this.fastLoadingGamesService = L, this.configProviderService = O, this.favouriteService = U, this.cozyBingoDataService = K, this.freespinSummaryService = z, this.isAuthenticated = !1, this.currentWidgetHeight = 0, this.newWidgetHeight = 0 } ngOnInit() { var t; this.isAuthenticated = this.user.isAuthenticated, this.assignConfig(), this.assignFeatures(), this.isTouch = this.deviceService.isTouch; let a = this.configProviderService.provideABTestingConfig(); a && (this.isAbRecentlyPlayedWidget = a.isEnabled && a.recentlyPlayedAsWidget, this.isAbRecentlyPlayedContainer = a.isEnabled && a.recentlyPlayedAsContainer), this.WidgetHelpButton = this.widgetConfig.widgetLinks.help && this.widgetConfig.widgetLinks.help.imageLink ? this.widgetConfig.widgetLinks.help.imageLink.text : "", this.WidgetContactusButton = this.widgetConfig.widgetLinks.contactus && this.widgetConfig.widgetLinks.contactus.imageLink ? this.widgetConfig.widgetLinks.contactus.imageLink.text : "", this.dataBindings(), this.isDisplayRpandGyml(), this.currentLobbyType = this.lobbyType, this.useFavouriteGames = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.features.favouriteGamesLobbyType), this.widgetToggleInfo = this.casinoManager.getWidgetToggleInfo(), (this.widgetToggleInfo && "" != this.widgetToggleInfo || null != this.widgetToggleInfo) && (this.recentGames = this.recentGameService.getrecentGamesFromAllLobby(), this.favouriteGames = this.favouriteService.getFavouriteGames(), this.isDisplayRpandGyml(), this.widgetToggleHandler(this.widgetToggleInfo)), this.postWidgetHeight(null === (t = this.widgetConfig) || void 0 === t ? void 0 : t.rpFavWidgetPostHeightTimeOut), this.subscribeToUserEvents() } ngOnChanges() { this.isDisplayRpandGyml() } assignConfig() { this.global = this.configProviderService.provideGlobalConfig(), this.widgetConfig = this.configProviderService.providewidgetConfig(), this.features = this.configProviderService.provideFeaturesConfig() } assignFeatures() { this.enableBingoWidgetOnCasino = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.features.enableBingoWidgetOnCasino), this.displayFavInRPFavWidget = this.widgetConfig.displayFavInRPFavWidget } setFastLoadingGames() { this.features.enableFastLoadingGames && this.fastLoadingGamesService.setFastLoadingGamesFromLMT() } dataBindings() { this.rcpWidgetBackground = this.global.messages.WidgetBackgroundColor, this.rpWidgetActiveBtBackground = this.global.messages.WidgetActiveBtnBGColor, this.rpWidgetInactiveBtBackground = this.global.messages.WidgetInActiveBtnBGColor, this.rpWidgetActiveTxtcolor = this.global.messages.WidgetActiveTxtColor, this.rpWidgetInactiveTxtcolor = this.global.messages.WidgetInActiveTxtColor, this.widgetFavourites = this.global.messages.WidgetFavourites, this.widgetRecentlyPlayed = this.global.messages.WidgetRecentlyPlayed, this.widgetContactUsBG = this.global.messages.WidgetContactUsBG, this.widgetContactUsClr = this.global.messages.WidgetContactUsClr, this.widgetHelpBG = this.global.messages.WidgetHelpBG, this.widgetHelpClr = this.global.messages.WidgetHelpClr, this.rcpWidgeticon = this.global.messages.rcpWidgeticon, this.rcpFavWidgeticon = this.global.messages.rcpFavWidgeticon, this.rcpWidgetBackgroundTrans = this.global.messages.rcpWidgetBackgroundTrans, this.rcpContactUsicon = this.widgetConfig.widgetLinks.contactus && this.widgetConfig.widgetLinks.contactus.image ? this.widgetConfig.widgetLinks.contactus.image.src : "", this.rcpHelpicon = this.widgetConfig.widgetLinks.help && this.widgetConfig.widgetLinks.help.image ? this.widgetConfig.widgetLinks.help.image.src : "" } getContactusUrl() { this.casinoWidgetService.isCasinoWidget() && this.widgetConfig.widgetLinks.contactus && this.widgetConfig.widgetLinks.contactus.imageLink ? this.casinoWidgetService.postMessageToParent("ContactUs", { categoryid: "casino-rcp-widget", contactUrl: this.widgetConfig.widgetLinks.contactus.imageLink.url }) : this.navigation.goTo(this.widgetConfig.widgetLinks.contactus.imageLink.url) } getHelpUrl() { this.casinoWidgetService.isCasinoWidget() && this.widgetConfig.widgetLinks.help && this.widgetConfig.widgetLinks.help.imageLink ? this.casinoWidgetService.postMessageToParent("Help", { categoryid: "casino-rcp-widget", helpUrl: this.widgetConfig.widgetLinks.help.imageLink.url }) : this.navigation.goTo(this.widgetConfig.widgetLinks.help.imageLink.url) } subscribeToUserEvents() { this.user.events.pipe((0, _e.h)(t => t instanceof r.U0n)).subscribe(() => { this.isDisplayRpandGyml() }), this.recentGamesSubscriber = this.recentGameService.recentGamesFeedFromAllLobbyObservable.subscribe(t => { t && (this.recentGames = t, this.isDisplayRpandGyml()) }), this.favGamesSubscriber = this.favouriteService.favouriteGamesFeedObservable.subscribe(t => { t && (this.favouriteGames = t, this.isDisplayRpandGyml()) }), this.cozyBingoSubscriber = this.cozyBingoDataService.cozyBingoRoomsDataObservable.subscribe(t => { t && this.isDisplayRpandGyml() }), this.freespinObs = this.freespinSummaryService.freespinsMoreInfoClickObser.subscribe(() => { this.rcpToggle = this.favToggle = !1 }) } receiveWidgetMessages(t) { let a = this.configProviderService.provideCozyBingoConfig(); "favoriteUpdated" == t.data.eventName && a.cozyBingoFavouritesInRpwidget && this.cozyBingoDataService.getBingoData(!1, !1) } isDisplayRpandGyml() { var t; this.isAuthenticated = this.user.isAuthenticated; let a = this.configProviderService.providewidgetConfig(); if (this.user.isAuthenticated) { let l = [], g = []; l = this.cozyBingoDataService.getcozybingorecentgames(), g = this.cozyBingoDataService.getcozybingofavourites(), this.recentGameService.getrecentGamesFromAllLobby() && this.recentGameService.getrecentGamesFromAllLobby().length > 0 || l.length > 0 || this.favouriteGames && this.favouriteGames.length > 0 || g.length > 0 ? (this.IsRpFavWidgetEnabled = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, a.isRpFavWidgetEnabled), this.IsGymlInFavourites = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, a.isGymlInFavourites), this.IsFloatingEnabledForWidget = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, a.isStickyEnabledForWidget), this.recentGameService.isRpfavDisplayed(this.IsRpFavWidgetEnabled)) : (this.IsRpFavWidgetEnabled = !1, this.rcpToggle = this.favToggle = !1), this.IsRpFavWidgetEnabled && this.widgetHeight() } else this.IsRpFavWidgetEnabled = !1, this.IsGymlInFavourites = !1, this.IsFloatingEnabledForWidget = !1; this.showRcpHelpContactUs = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, a.enableRcpwidgetHelpContactUs), this.IsRpFavWidgetEnabled ? document.getElementsByTagName("html")[0].classList.contains("help-contact-bar") || document.getElementsByTagName("html")[0].classList.add("help-contact-bar") : this.postWidgetHeight(null === (t = this.widgetConfig) || void 0 === t ? void 0 : t.rpFavWidgetPostHeightTimeOut), this.IsRpFavWidgetEnabled ? document.getElementsByTagName("html")[0].classList.add("rpfav-widget-enabled") : document.getElementsByTagName("html")[0].classList.remove("rpfav-widget-enabled") } postWidgetHeight(t) { setTimeout(() => { this.postHeight(), this.widgetHeight() }, t) } postHeight() { if (this.casinoWidgetService.isCasinoWidget()) { let t = document.getElementById("widgettoggle"); if (t) { this.currentWidgetHeight = t.scrollHeight; let a = { isFooterWidget: !!this.casinoWidgetService.getWidgetPosition(), categoryid: "casino-rcp-widget", height: this.casinoWidgetService.getWidgetPosition() ? this.currentWidgetHeight + 10 : this.currentWidgetHeight }; this.casinoWidgetService.postMessageToParent("LobbyLoaded", a), this.interval || (this.interval = setInterval(() => { this.checkAndUpdateWidgetHeight() }, 500)) } else this.casinoWidgetService.postMessageToParent("ReloadWidget", null) } } checkAndUpdateWidgetHeight() { if (this.newWidgetHeight = document.getElementById("widgettoggle").scrollHeight, this.currentWidgetHeight === this.newWidgetHeight && this.maxHeightCount--, this.maxHeightCount || clearInterval(this.interval), this.newWidgetHeight !== this.currentWidgetHeight) { this.currentWidgetHeight = this.newWidgetHeight; let t = { isFooterWidget: !!this.casinoWidgetService.getWidgetPosition(), categoryid: "casino-rcp-widget", height: document.getElementById("widgettoggle").scrollHeight }; this.casinoWidgetService.postMessageToParent("LobbyLoaded", t) } } onResize() { var t; this.postWidgetHeight(null === (t = this.widgetConfig) || void 0 === t ? void 0 : t.rpFavTogglePostHeightTimeOut) } close() { var t; this.postWidgetHeight(null === (t = this.widgetConfig) || void 0 === t ? void 0 : t.rpFavTogglePostHeightTimeOut), this.rcpToggle && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_Widget", "component.ActionEvent": "Close Widget- X Click", "component.PositionEvent": "Not applicable", "component.LocationEvent": this.currentLobbyType }), this.favToggle && this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_Widget", "component.ActionEvent": "Close Widget- X Click", "component.PositionEvent": "Not applicable", "component.LocationEvent": this.currentLobbyType }), this.rcpToggle = this.favToggle = !1, document.getElementsByTagName("html")[0].classList.contains("rpfav-widget-expanded") && document.getElementsByTagName("html")[0].classList.remove("rpfav-widget-expanded"), this.casinoManager.setWidgetToggleInfo("") } widgetToggleHandler(t, a = !1) { var l; this.postWidgetHeight(null === (l = this.widgetConfig) || void 0 === l ? void 0 : l.rpFavTogglePostHeightTimeOut), a && "rcp" == t && (this.rcpToggle = !this.rcpToggle), a && "fav" == t && (this.favToggle = !this.favToggle), "rcp" === t ? (this.rcpToggle = !this.rcpToggle, this.rcpToggle ? (this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_Widget", "component.ActionEvent": "Expand", "component.LocationEvent": this.currentLobbyType }), this.casinoManager.setWidgetToggleInfo("rcp")) : (this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "RecentlyPlayed_Widget", "component.ActionEvent": "Close", "component.LocationEvent": this.currentLobbyType }), this.casinoManager.setWidgetToggleInfo("")), this.favToggle = !1) : "fav" === t && (this.favToggle = !this.favToggle, this.favToggle ? (this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_Widget", "component.ActionEvent": "Expand", "component.LocationEvent": this.currentLobbyType }), this.casinoManager.setWidgetToggleInfo("fav"), this.favGYMLWidget && this.favGYMLWidget.favouriteGYMLCarousel && this.favGYMLWidget.favouriteGYMLCarousel.swiperRef && this.favGYMLWidget.favouriteGYMLCarousel.swiperRef.update()) : (this.tracking.triggerEvent("Event.Clicks", { "component.CategoryEvent": "RecentlyPlayed_Widget", "component.LabelEvent": "Favourites_Widget", "component.ActionEvent": "Close", "component.LocationEvent": this.currentLobbyType }), this.casinoManager.setWidgetToggleInfo("")), this.rcpToggle = !1), this.rcpToggle || this.favToggle ? document.getElementsByTagName("html")[0].classList.contains("rpfav-widget-expanded") || document.getElementsByTagName("html")[0].classList.add("rpfav-widget-expanded") : document.getElementsByTagName("html")[0].classList.contains("rpfav-widget-expanded") && document.getElementsByTagName("html")[0].classList.remove("rpfav-widget-expanded"), this.widgetContainerToggle = !this.widgetContainerToggle } widgetHeight() { if (document.getElementsByTagName("vn-bottom-nav") && document.getElementsByTagName("vn-bottom-nav").length > 0) { let t = 0; if (document.getElementsByClassName("bottom-nav") && document.getElementsByClassName("bottom-nav")[0] && document.getElementsByClassName("bottom-nav")[0].clientHeight) { let a = document.getElementsByClassName("bottom-nav")[0].clientHeight; document.getElementsByClassName("casino-rcp-widget") && document.getElementsByClassName("casino-rcp-widget")[0] && document.getElementsByClassName("casino-rcp-widget")[0].setAttribute("style", "bottom:" + a + "px;") } else document.getElementsByClassName("casino-rcp-widget") && document.getElementsByClassName("casino-rcp-widget")[0] && document.getElementsByClassName("casino-rcp-widget")[0].setAttribute("style", "bottom:" + t + "px;") } } ngOnDestroy() { this.freespinObs && this.freespinObs.unsubscribe(), this.cozyBingoSubscriber && this.cozyBingoSubscriber.unsubscribe(), this.favGamesSubscriber && this.favGamesSubscriber.unsubscribe(), this.recentGamesSubscriber && this.recentGamesSubscriber.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.vD), e.Y36(r.KDu), e.Y36(c.M3), e.Y36(r.U8N), e.Y36(r.f5Y), e.Y36(r.e2C), e.Y36(c.hY), e.Y36(c.$Q), e.Y36(c.iX), e.Y36(c.io), e.Y36(c.Kh), e.Y36(c.t$)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-rp-fav-widget"]], viewQuery: function (t, a) { if (1 & t && e.Gf(Dl, 5), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.favGYMLWidget = l.first) } }, hostBindings: function (t, a) { 1 & t && e.NdJ("message", function (g) { return a.receiveWidgetMessages(g) }, !1, e.Jf7) }, inputs: { lobbyType: "lobbyType", gameContainer: "gameContainer" }, features: [e.TTD], decls: 1, vars: 1, consts: [["class", "casino-rcp-widget", "id", "widgettoggle", 3, "ngStyle", 4, "ngIf"], ["id", "widgettoggle", 1, "casino-rcp-widget", 3, "ngStyle"], ["id", "rpfavWidget", 3, "ngStyle"], [1, "rcp-btn", 3, "ngClass", "ngStyle"], ["widgettoggle", ""], [1, "casino-rcp-buttons"], ["class", "rcp-widget-btn btn", 3, "ngClass", "ngStyle", "click", 4, "ngIf"], ["class", "rcp-fav-btn btn", 3, "ngClass", "ngStyle", "click", 4, "ngIf"], [1, "casino-help-contact-buttons"], [4, "ngIf"], [1, "theme-close", 3, "ngStyle", "click"], ["id", "rpfavWidget_rcp_gyml", 1, "casino-rcp-container", 3, "ngStyle"], [3, "isTouch", "lobbyType", "gameContainer"], ["id", "rpfavWidget_fav_gyml", 1, "casino-fav-container", 3, "ngStyle"], [3, "isTouch", "lobbyType", "isGymlInFavourite", "gameContainer"], ["favGYMLWidget", ""], [1, "rcp-widget-btn", "btn", 3, "ngClass", "ngStyle", "click"], [1, "icon-widget", 3, "ngClass"], [1, "theme-arrow-down", 3, "ngClass"], [1, "rcp-fav-btn", "btn", 3, "ngClass", "ngStyle", "click"], [1, "rcp-contact-button", "btn", 3, "ngStyle", "click"], [1, "icon-widget"], [3, "src"], [1, "rcp-help-button", "btn", 3, "ngStyle", "click"]], template: function (t, a) { 1 & t && e.YNc(0, xl, 15, 36, "div", 0), 2 & t && e.Q6J("ngIf", (a.IsRpFavWidgetEnabled || a.isAbRecentlyPlayedWidget) && !a.isAbRecentlyPlayedContainer) }, directives: [nd, sd, o.O5, o.PC, o.mk], encapsulation: 2 }), n })(), Oa = (() => { class n { constructor(t, a, l, g, p, b, E, L, O) { this.deviceService = t, this.navigation = a, this.casinoManager = l, this.user = g, this.recentGameService = p, this.favouriteService = b, this.casinoWidgetService = E, this.configProviderService = L, this.cozyBingoDataService = O, this.recentGames = [], this.favouriteGames = [], this.currentWidgetHeight = 0, this.newWidgetHeight = 0 } ngOnInit() { this.isDisplayRpandGyml(), this.global = this.configProviderService.provideGlobalConfig(), this.widgetConfig = this.configProviderService.providewidgetConfig(), this.WidgetHelpButton = this.widgetConfig.widgetLinks.help && this.widgetConfig.widgetLinks.help.imageLink ? this.widgetConfig.widgetLinks.help.imageLink.text : "", this.WidgetContactusButton = this.widgetConfig.widgetLinks.contactus && this.widgetConfig.widgetLinks.contactus.imageLink ? this.widgetConfig.widgetLinks.contactus.imageLink.text : "", this.isTouch = this.deviceService.isTouch, this.dataBindings(), this.postWidgetHeight(), this.recentGameService.recentGamesFeedObservable.subscribe(t => { t && (this.recentGames = t, this.isDisplayRpandGyml()) }), this.favouriteService.favouriteGamesFeedObservable.subscribe(t => { t && (this.favouriteGames = t, this.isDisplayRpandGyml()) }), this.casinoManager.lobbyObservable.subscribe(t => { t && this.isDisplayRpandGyml() }), this.cozyBingoSubscriber = this.cozyBingoDataService.cozyBingoRoomsDataObservable.subscribe(t => { t && this.isDisplayRpandGyml() }) } ngOnChanges() { this.isDisplayRpandGyml() } isDisplayRpandGyml() { let t = this.configProviderService.providewidgetConfig(); if (this.user.isAuthenticated || (this.showHelpContactForPrelogin = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableHelpContactForPrelogin), this.showHelpContactForPrelogin && this.addHelpContactBarClassToHtml()), this.user.isAuthenticated) { let a = [], l = []; a = this.cozyBingoDataService.getcozybingorecentgames(), l = this.cozyBingoDataService.getcozybingofavourites(), this.recentGames && 0 == this.recentGames.length && this.favouriteGames && 0 == this.favouriteGames.length && 0 == a.length && 0 == l.length ? (this.showHelpContactForPrelogin = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableHelpContactForPrelogin), this.showHelpContactForPrelogin && this.addHelpContactBarClassToHtml()) : this.showHelpContactForPrelogin = !1 } this.showHelpContactForPrelogin && document.getElementsByTagName("html")[0].classList.add("rpfav-widget-enabled") } addHelpContactBarClassToHtml() { document.getElementsByTagName("html")[0].classList.add("help-contact-bar"), this.casinoWidgetService.isCasinoWidget() && this.casinoWidgetService.postMessageToParent("HtmlClass", { categoryid: "rcp-widget", htmlClass: "help-contact-bar" }) } dataBindings() { this.widgetContactUsBG = this.global.messages.WidgetContactUsBG, this.widgetContactUsClr = this.global.messages.WidgetContactUsClr, this.widgetHelpBG = this.global.messages.WidgetHelpBG, this.widgetHelpClr = this.global.messages.WidgetHelpClr, this.rcpWidgeticon = this.global.messages.rcpWidgeticon, this.rcpFavWidgeticon = this.global.messages.rcpFavWidgeticon, this.rcpContactUsicon = this.widgetConfig.widgetLinks.contactus && this.widgetConfig.widgetLinks.contactus.image ? this.widgetConfig.widgetLinks.contactus.image.src : "", this.rcpHelpicon = this.widgetConfig.widgetLinks.help && this.widgetConfig.widgetLinks.help.image ? this.widgetConfig.widgetLinks.help.image.src : "", this.rcpWidgetBackground = this.global.messages.WidgetBackgroundColor } getContactusUrl() { this.casinoWidgetService.isCasinoWidget() && this.widgetConfig.widgetLinks.contactus && this.widgetConfig.widgetLinks.contactus.imageLink ? this.casinoWidgetService.postMessageToParent("ContactUs", { categoryid: "rcp-widget", contactUrl: this.widgetConfig.widgetLinks.contactus.imageLink.url }) : this.navigation.goTo(this.widgetConfig.widgetLinks.contactus.imageLink.url) } getHelpUrl() { this.casinoWidgetService.isCasinoWidget() && this.widgetConfig.widgetLinks.help && this.widgetConfig.widgetLinks.help.imageLink ? this.casinoWidgetService.postMessageToParent("Help", { categoryid: "rcp-widget", helpUrl: this.widgetConfig.widgetLinks.help.imageLink.url }) : this.navigation.goTo(this.widgetConfig.widgetLinks.help.imageLink.url) } postWidgetHeight() { setTimeout(() => { this.postHeight(), this.widgetHeight() }, 500) } postHeight() { if (this.casinoWidgetService.isCasinoWidget()) { let t = document.getElementById("loggedoutWidgetToggle"); if (t) { this.currentWidgetHeight = t.scrollHeight; let a = { isFooterWidget: !!this.casinoWidgetService.getWidgetPosition(), categoryid: "rcp-widget", height: this.casinoWidgetService.getWidgetPosition() ? this.currentWidgetHeight + 10 : this.currentWidgetHeight }; this.casinoWidgetService.postMessageToParent("LobbyLoaded", a), this.interval || (this.interval = setInterval(() => { this.checkAndUpdateWidgetHeight() }, 500)) } } } checkAndUpdateWidgetHeight() { if (document.getElementById("loggedoutWidgetToggle") && (this.newWidgetHeight = document.getElementById("loggedoutWidgetToggle").scrollHeight), this.currentWidgetHeight === this.newWidgetHeight && this.maxHeightCount--, this.maxHeightCount || clearInterval(this.interval), this.newWidgetHeight !== this.currentWidgetHeight) { this.currentWidgetHeight = this.newWidgetHeight, document.getElementById("loggedoutWidgetToggle") && (this.newWidgetHeight = document.getElementById("loggedoutWidgetToggle").scrollHeight); let t = { isFooterWidget: !!this.casinoWidgetService.getWidgetPosition(), categoryid: "rcp-widget", height: this.newWidgetHeight }; this.casinoWidgetService.postMessageToParent("LobbyLoaded", t) } } widgetHeight() { if (document.getElementsByTagName("vn-bottom-nav") && document.getElementsByTagName("vn-bottom-nav").length > 0) { let t = 0; document.getElementsByClassName("bottom-nav") && document.getElementsByClassName("bottom-nav")[0] && document.getElementsByClassName("bottom-nav")[0].clientHeight && (t = document.getElementsByClassName("bottom-nav")[0].clientHeight), document.getElementsByClassName("rcp-widget") && document.getElementsByClassName("rcp-widget")[0] && document.getElementsByClassName("rcp-widget")[0].setAttribute("style", "bottom:" + t + "px;") } } ngOnDestroy() { this.cozyBingoSubscriber && this.cozyBingoSubscriber.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(r.U8N), e.Y36(r.f5Y), e.Y36(c.M3), e.Y36(r.KDu), e.Y36(c.vD), e.Y36(c.io), e.Y36(c.hY), e.Y36(c.iX), e.Y36(c.Kh)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-rcp-fav-logout-widget"]], inputs: { lobbyType: "lobbyType" }, features: [e.TTD], decls: 1, vars: 1, consts: [["class", "casino-rcp-widget casino-loggedouthelpCusBtn", 4, "ngIf"], [1, "casino-rcp-widget", "casino-loggedouthelpCusBtn"], [3, "ngStyle"], ["id", "loggedoutWidgetToggle", 1, "rcp-btn", 3, "ngClass", "ngStyle"], ["loggedoutWidgetToggle", ""], [1, "casino-help-contact-buttons"], [1, "rcp-contact-button", "btn", 3, "ngStyle", "click"], [1, "icon-widget"], [3, "src"], [1, "rcp-help-button", "btn", 3, "ngStyle", "click"]], template: function (t, a) { 1 & t && e.YNc(0, wl, 15, 21, "div", 0), 2 & t && e.Q6J("ngIf", a.showHelpContactForPrelogin) }, directives: [o.O5, o.PC, o.mk], encapsulation: 2 }), n })(), Aa = (() => { class n { constructor(t, a, l) { this.casinoLobbyService = t, this.configProviderService = a, this.invokerProductService = l } ngOnInit() { this.lobbyLoadSubscription = this.casinoLobbyService.lobbyLoadedObservable.subscribe(t => { if (t) { let a = this.configProviderService.providewidgetConfig(); this.lobbyType = a.lobbyTypeForRpFavOnOtherProducts, this.isLobbyLoaded = !0, this.invokerProduct = this.invokerProductService.getInvokerProduct() } }) } ngOnDestroy() { this.lobbyLoadSubscription && this.lobbyLoadSubscription.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.nA), e.Y36(c.iX), e.Y36(c.uZ)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-rp-fav-widget-wrapper"]], decls: 1, vars: 1, consts: [[4, "ngIf"], [3, "lobbyType", "gameContainer"], [3, "lobbyType"]], template: function (t, a) { 1 & t && e.YNc(0, Ul, 3, 3, "div", 0), 2 & t && e.Q6J("ngIf", a.isLobbyLoaded) }, directives: [La, Oa, o.O5], encapsulation: 2 }), n })(), Nn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ providers: [{ provide: d.WI, useValue: {} }, { provide: d.so, useValue: {} }], imports: [[o.ez, r.b9i, yo, d.Is]] }), n })(), Kn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, ii, c.IR, Nn, be.kz]] }), n })(), Jn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, ii, c.IR, Nn, r.b9i, be.kz]] }), n })(), Yn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, Kn, Jn, c.IR]] }), n })(), Zn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, c.IR]] }), n })(), Ga = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, Yn, Zn]] }), n })(), rd = (() => { class n { constructor(t, a, l) { this.casinoLobbyService = t, this.configProviderService = a, this.casinoWidgetService = l } ngOnInit() { this.gameContainer = "Widget", this.lobbyLoadSubscription = this.casinoLobbyService.lobbyLoadedObservable.subscribe(t => { if (t) { let a = this.configProviderService.providewidgetConfig(); this.lobbyType = a.lobbyTypeForRpGymlOnOtherProducts, this.isLobbyLoaded = !0, setTimeout(() => { this.casinoWidgetService.getWidgetHeight("RpGymlWidget", "rpGymlId") }, a.rpGymlWidgetPostHeightTimeOut) } }) } ngOnDestroy() { this.lobbyLoadSubscription && this.lobbyLoadSubscription.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.nA), e.Y36(c.iX), e.Y36(c.hY)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-rp-gyml-wrapper"]], decls: 1, vars: 1, consts: [[4, "ngIf"], ["id", "rpGYMLSection", 3, "lobbyType", "gameContainer"]], template: function (t, a) { 1 & t && e.YNc(0, Fl, 2, 2, "div", 0), 2 & t && e.Q6J("ngIf", a.isLobbyLoaded) }, directives: [fo, o.O5], encapsulation: 2 }), n })(), ka = (() => { class n { static forRoot() { return { ngModule: n } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, Ki]] }), n })(), Hn = (() => { class n { constructor(t, a, l, g, p, b, E, L) { this.configProviderService = t, this.gameLaunchService = a, this.user = l, this.cacheManager = g, this.tracking = p, this.navigation = b, this.casinoLobbyService = E, this.thumbnailService = L, this.place = "", this.closeThumbnail = new e.vpe, this.displayThumbnail = !1, this.fontColor = "", this.thumbnailBgColor = "", this.buttonText = "", this.stickerBg = "" } ngOnInit() { this.gameConfig = this.configProviderService.provideGameConfig(), this.thumbnailConfig = this.configProviderService.provideThumbnailConfig(), this.isVipUser = null != this.user.claims.get("vipLevel"), this.setThumbnail(!0), this.thumbnailObs = this.thumbnailService.thumbnailDataObservable.subscribe(t => { t && this.setThumbnail(!1) }) } setThumbnail(t) { let a = this.casinoLobbyService.getThumbnailbasedonroute(this.category); if (a) if (this.game = a.gameId, this.game != this.cacheManager.getThumbnailsfromLocalStorage(this.lobbyType)) { this.cacheManager.removeThumbnailfromLocalStorage(this.lobbyType), t && this.trackingInitEvent(), this.displayThumbnail = !0, this.bindThumbnailData(a), this.bindStyles(a); let l = this.configProviderService.provideFeaturesConfig(); this.game && this.data && (this.data.src = this.gameConfig.host + this.gameConfig.gameIconTemplate.replace("{0}", "square").replace("{1}", this.game) + ".jpg", l.enableGameIconTheming && (this.data.src = this.casinoLobbyService.appendTheme(this.data.src, this.game))) } else this.closeThumbnail.emit(!1) } bindThumbnailData(t) { this.data = t, this.config = this.thumbnailConfig.thumbnailConfigurations } action(t) { if (t) { let a = this.isVipUser ? this.thumbnailConfig.thumbnailConfigurations.VIPThumbnailColor : this.thumbnailConfig.thumbnailConfigurations.AnonymousThumbnailColor, l = {}; l.gameId = t, l.isDemo = !1, l.iconType = 1, l.lobbyType = this.lobbyType; let g = new c.Hq; g.game = l, g.isTouch = this.isTouch, g.gamePosition = 1, g.categoryType = this.category.categoryid, g.from = this.user.isAuthenticated ? "" : "thumbnail", g.replaceRouteInHistory = !1, g.isDemoLaunch = !1, g.skipUnfinGame = !1, g.gameLaunchedFrom = "thumbnail", g.gridPosition = this.category.categoryIndex, g.gameSection = "thumbnail", g.gameContainer = "Page Container", g.lobbyType = this.lobbyType, g.highlightedColor = a, g.clickTimeStamp = this.gameLaunchService.currentTimeStamp(), this.gameLaunchService.launchGame(g), this.displayThumbnail = !1, this.hideThumbnail() } } bindStyles(t) { this.thumbnailConfig.thumbnailConfigurations && (t.isVipThumbnail ? (this.fontColor = this.thumbnailConfig.thumbnailConfigurations.VIPTextColor, this.thumbnailBgColor = this.thumbnailConfig.thumbnailConfigurations.VIPThumbnailColor, this.buttonText = this.thumbnailConfig.thumbnailConfigurations.VIPCTAText) : (this.fontColor = this.thumbnailConfig.thumbnailConfigurations.AnonymousTextColor, this.thumbnailBgColor = this.thumbnailConfig.thumbnailConfigurations.AnonymousThumbnailColor, this.buttonText = this.thumbnailConfig.thumbnailConfigurations.AnonymousCTAText)) } hideThumbnail() { this.cacheManager.setThumbnailLocalStorageCacheMap(this.lobbyType, this.game), this.trackingCloseEvent(), this.displayThumbnail = !1, this.closeThumbnail.emit(!1) } getLocation() { let a, t = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.lobbyType).categoryInfo; return t && t.categoryid.toLowerCase() === this.category.categoryid.toLowerCase() && (a = !0), a ? this.casinoLobbyService.getProductForGivenLobbyType(this.lobbyType) : this.navigation.location.url() } trackingInitEvent() { this.tracking.triggerEvent("Event.Tracking", { "component.CategoryEvent": "Game Containers", "component.LabelEvent": "Thumbnail", "component.ActionEvent": "Displayed", "component.PositionEvent": this.place, "component.LocationEvent": this.getLocation(), "component.EventDetails": this.game + "-" + this.gameLaunchService.getGameLunchType(this.game), "component.URLClicked": "thumbnail | " + this.category.categoryid }) } trackingCloseEvent() { this.tracking.triggerEvent("Event.Tracking", { "component.CategoryEvent": "Game Containers", "component.LabelEvent": "Thumbnail", "component.ActionEvent": "Close (x) - Click", "component.PositionEvent": this.place, "component.LocationEvent": this.getLocation(), "component.EventDetails": this.game + "-" + this.gameLaunchService.getGameLunchType(this.game), "component.URLClicked": "thumbnail | " + this.category.categoryid }) } ngOnDestroy() { this.thumbnailObs && this.thumbnailObs.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.iX), e.Y36(c.$l), e.Y36(r.KDu), e.Y36(c.q), e.Y36(r.e2C), e.Y36(r.f5Y), e.Y36(c.nA), e.Y36(c.R)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-thumbnail-newgame"]], inputs: { category: "category", isTouch: "isTouch", place: "place", lobbyType: "lobbyType" }, outputs: { closeThumbnail: "closeThumbnail" }, decls: 1, vars: 1, consts: [["class", "casino-thumbnail-wrapper", 3, "background", 4, "ngIf"], [1, "casino-thumbnail-wrapper"], [1, "thumbnail-data", 3, "click"], ["class", "thumbnail-icon-div vthumbnail-inline", 4, "ngIf"], [1, "thumbnail-title-wrapper", "vthumbnail-inline"], ["class", "thumbnail-title", 4, "ngIf"], ["class", "thumbnail-subtitle", 4, "ngIf"], ["class", "thumbnail-sticker-wrapper", 4, "ngIf"], [1, "thumbnail-ctalink", "vthumbnail-inline"], [1, "clear"], [1, "thumbnail-close"], [1, "theme-ex", 3, "click"], [1, "thumbnail-icon-div", "vthumbnail-inline"], [1, "thumbnail-icon", 3, "src"], [1, "thumbnail-title"], [1, "thumbnail-subtitle"], [1, "thumbnail-sticker-wrapper"], ["class", "thumbnail-sticker", 3, "ngStyle", 4, "ngFor", "ngForOf"], [1, "thumbnail-sticker", 3, "ngStyle"]], template: function (t, a) { 1 & t && e.YNc(0, Yl, 13, 13, "div", 0), 2 & t && e.Q6J("ngIf", a.displayThumbnail) }, directives: [o.O5, o.sg, o.PC], encapsulation: 2 }), n })(), Yi = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i]] }), n })(), cd = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z, q, X, ee, fe, Ue, Xe, nt, Wt, Zi, Hi, Qi, zi, ji, qi, Vi) { this.navigation = t, this.configProviderService = a, this.nativeApplication = l, this.casinoManager = g, this.favouriteService = p, this.recentGamesService = b, this.searchSection = E, this.nativeApi = L, this.NativeAppHelper = O, this.m2Page = U, this.deviceService = K, this.user = z, this.smartBannerService = q, this.tracking = X, this.navigationBar = ee, this.headerService = fe, this.bottomNavService = Ue, this.windowRef = Xe, this.cacheManager = nt, this.page = Wt, this.signPostingService = Zi, this.slotRacesService = Hi, this.dslService = Qi, this.discoverFeedService = zi, this.casinoLobbyService = ji, this.gamelaunchservice = qi, this.gameLaunchFactoryService = Vi, this.navItems = [], this.moreCategories = [], this.navCategories = [], this.hideMore = !0, this.isMoreActive = !1, this.windowInnerWidth = document.body.offsetWidth, this.showLastLevelCategoryDropdown = !1, this.prevLobbyCategories = [], this.isLastNavigationLevel = !1, this.checkingNavBar = "", this.displayDesktopNavigationOnMobile = !1, this.favouritesCategoryIndex = -1, this.recentsCategoryIndex = -1, this.slotRacesCategoryIndex = -1, this.lastScrollTopPosition = 0, this.tempArray = [], this.displayDiscoverSticker = !1, this.badgeColor = "", this.badgeTextColor = "", this.isThumnbailEnabled = !1, this.thumbnailVisible = !1, this.displayThumbnailDesktop = !1, this.displayThumbnailMobile = !0, this.thumbnailgame = "", this.slotracesKey = "", this.navIndex = 0, this.gameLaunchFactoryService.setGameLaunchService(this.gamelaunchservice) } assignFeatures() { let t = this.configProviderService.provideFeaturesConfig(), a = this.configProviderService.provideSubNavigationConfig(); this.isInstaStoriesEnabled = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, a.isInstaStoriesEnabled), this.isInstaStoriesEnabled && (this.instaStoriesDataObj = { trackPos: "above-subnav" }), this.slotRacesConfig = this.configProviderService.provideSlotRacesConfig(), this.feature = t, this.thumbnailConfig = this.configProviderService.provideThumbnailConfig(), this.isThumnbailEnabled = this.thumbnailConfig.enableGameThumbnail, this.isThumbnailEnabledforLobby = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.thumbnailConfig.isGameThumbnailsVisible), this.isVipUser = null != this.user.claims.get("vipLevel"), this.useFavouriteGames = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.favouriteGamesLobbyType), this.isSignPosting = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableSignpostingSticker); let l = this.configProviderService.provideLmtConfig(); this.enableDefaultHomeUrl = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, l.enableDefaultHomeUrl), this.defaultProductHomeUrl = l.defaultProductHomeUrl ? l.defaultProductHomeUrl : ""; let g = this.configProviderService.provideDiscoverFeedConfig(); this.discoverFeedLmtkey = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, g.discoverFeedLmtkey), this.evalSubNavDisplay(this.subNavConfigEnabledCondition); let p = this.configProviderService.provideNewsFeedCasinoConfig(); p && (this.isNewsFeedEnabled = p.isEnabled, this.isNewsFeedEnabledOnHome = p.isEnabledOnHomeCategory, this.newsFeedPosition = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, p.newsFeedPosition)) } thumbnailArrowColor(t) { return this.thumbnailArrowColorConfig = this.thumbnailConfig.thumbnailConfigurations, t.isVipThumbnail ? { "border-bottom-color": this.thumbnailArrowColorConfig.VIPThumbnailColor } : { "border-bottom-color": this.thumbnailArrowColorConfig.AnonymousThumbnailColor } } assignConfigs() { this.slotRacesConfig = this.configProviderService.provideSlotRacesConfig(); let t = this.configProviderService.provideFeaturesConfig(); this.showGlobalSearch = t.showGlobalSearch, this.extendTopMenuState = t.extendedTopMenuStatus, this.extendedTopMenuToRight = t.extendedTopMenuToRight, this.showSearchInTopNavigation = t.showSearchInTopNavigation, this.showHomeInTopNavigation = t.showHomeInTopNavigation, this.showHomeFixedNavigation = t.showHomeFixedNavigation, this.categoryHeaderHighLight = t.highlightCategoryHeader, this.enableFixedMobileNavigation = t.enableFixedMobileNavigation, this.enablePreLoginRecentlyPlayed = t.enablePreLoginRecentlyPlayed, this.navBarLimitTimeout = t.setNavBarLimitTimeout, this.isPromotionPagesEnabled = t.isPromotionPagesEnabled, this.hideHomeInSubNav = t.hideHomeInSubNav; let a = this.configProviderService.provideMcPageConfig(); this.extendTopMenu = a.extendTopMenu, this.defaultPageText = a.defaultPage, this.mcPageDefaultHomePageUrl = a.defaultHomePage.url; let l = this.configProviderService.provideGlobalConfig(); this.searchText = l.messages.Search, this.moreIcon = l.lobbyConfigurations.moreIcon; let g = this.configProviderService.providePromotionsInfoConfig(); this.promotionLinkText = g.promotionPageLink.text, this.promotionLinkUrl = g.promotionPageLink.url; let p = this.configProviderService.provideDiscoverFeedConfig(); this.enableDiscoverFeed = p.enableDiscoverFeed; let b = this.configProviderService.provideSubNavigationConfig(); this.subNavConfigEnabledCondition = b.isEnabledCondition, this.subNavConfigEnableDesktopIcon = b.enableDesktopIcon, this.enableSubNavigationBgColor = b.enableSubNavigationBgColor, this.subNavConfigEnableIconTextColor = b.enableIconTextColor } ngOnInit() { this.assignConfigs(), this.assignFeatures(), this.onLobbyChange(), this.LobbySubscriptions(), this.isTouch = this.deviceService.isTouch, this.isMobileWidth = document.body.offsetWidth < 768 || document.body.offsetWidth >= 768 && this.isTouch || document.body.offsetWidth < 768 || document.body.offsetWidth >= 768 && this.isTouch, this.isIpad = document.body.offsetWidth < 768 || document.body.offsetWidth < 768, document.body.offsetWidth >= 768 && this.isTouch && (this.displayDesktopNavigationOnMobile = !0), this.isMobile = document.body.offsetWidth < 768, this.categoryType = this.casinoManager.getActiveCategory(), this.fixednavEnabled = this.NativeAppHelper.isNativeFeatureEnabled(this.NativeAppHelper.nativeAppFeatures.fixednav), ("/" === this.navigation.location.path() || this.navigation.location.path() === "/" + this.page.lang) && this.tracking.updateDataLayer({ "page.referrer": this.windowRef.nativeWindow.document.referrer, "page.url": this.navigation.location.absUrl(), "page.host": this.navigation.location.host(), "page.name": this.casinoManager.getProductForGivenLobbyType(this.lobbyType), "page.responsive": !0 }); let t = this.configProviderService.provideLmtConfig(); this.currentUrl = this.navigation.location.baseUrl() + this.navigation.location.path(), this.ForceMobileNav = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.lobbyTypeMap), document.getElementsByTagName("html")[0].classList.contains("casino-sub-nav-thumbnail") && document.getElementsByTagName("html")[0].classList.remove("casino-sub-nav-thumbnail") } setSlotRacesConfigs() { this.slotracesKey = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.slotRacesConfig.slotRacesLMTCategoryIdForLobbyType), this.isSlotRacesEnabled = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, this.feature.enableSlotRacesForLobbyType), this.isSlotRacesEnabled && this.slotRacesConfig.disableWhenNoPromotions && (this.slotRacesNavSubscription = this.slotRacesService.updateNavigation.subscribe(t => { t && this.updateNavItems() })) } onLobbyChange() { this.setDefaultCategoryInfo(), this.assignNavItems(), this.setCurrentCategoryInfo(), this.setVanillaActiveHeader() } checkforThumnbail(t) { if (this.isThumnbailEnabled && this.isThumbnailEnabledforLobby) { let a = this.casinoLobbyService.getThumbnailbasedonroute(t); a ? a.gameId != this.cacheManager.getThumbnailsfromLocalStorage(this.lobbyType) && (this.displayThumbnailDesktop = !0) : this.displayThumbnailDesktop = !1 } } onRouteChange() { this.setCurrentCategoryInfo(), this.setVanillaActiveHeader(), this.navItems && this.navItems.length > 0 || this.assignNavItems(), this.assignThumbnailPropertyandsignposting(), this.highlightActiveCategory() } highlightActiveCategory() { this.setActiveMobile(this.categoryRoute), window.innerWidth >= 768 && this.setActiveCategory() } assignNavItems() { let t = this.casinoLobbyService.getNavCategories(this.lobbyType, this.productOverride); if (t) { this.navItems = []; for (let a = 0; a < t.length; a++) { let l = (0, N.Z)(t[a]); l.isdefault && this.enableDefaultHomeUrl && l.categoryid.toLowerCase() === this.defaultProductHomeUrl.toLowerCase() && (l.url = "/"), this.checkIfShowInNavigation(l) && this.navItems.push(l) } this.extendTopMenuState && this.extendedTopMenuToRight && this.topMenuItemsToend() } } prepareTopNavigation() { this.navTopMenuItems = [], this.navItemsActive = []; let t = []; this.navIndex = 0, this.showSearchInTopNavigation ? (t.index = this.navIndex + 1, this.navIndex = t.index, t.categoryType = this.searchText, t.Flagname = "showSearchInTopNavigation", this.navTopMenuItems.push(t)) : this.showHomeFixedNavigation ? (t = [], t.index = this.navIndex + 1, this.navIndex = t.index, t.categoryType = this.defaultPageText, t.Flagname = "showHomeFixedNavigation", this.navTopMenuItems.push(t)) : this.fixednavEnabled && this.showHomeInTopNavigation ? (t = [], t.index = this.navIndex + 1, this.navIndex = t.index, t.categoryType = this.defaultPageText, t.Flagname = "fixednavEnabled", this.navTopMenuItems.push(t)) : this.isPromotionPagesEnabled && (t = [], t.index = this.navIndex + 1, this.navIndex = t.index, t.categoryType = this.promotionLinkText, t.Flagname = "isPromotionPagesEnabled", this.navTopMenuItems.push(t)), this.extendTopMenuState && !this.extendedTopMenuToRight && this.extendTopMenu.forEach(a => { t = [], t.index = this.navIndex + 1, this.navIndex = t.index, t.categoryType = a.title, t.Flagname = "extendTopMenuState", this.navTopMenuItems.push(t) }) } topMenuItemsToend() { if (this.extendTopMenu && this.extendTopMenu.length > 0) { let t = new xa; this.extendTopMenu.forEach(a => { t = new xa, t.sitecoreData = {}, t.url = a.url, t.categoryid = a.title, t.categoryname = a.title, t.isNavigationCategory = !0, t.sitecoreData.categoryId = a.title, t.sitecoreData.attributes = {}, t.sitecoreData.attributes.icon = a.cssClass, t.condition = a.condition, t.fromExtendedMenuRight = !0, t.sitecoreData.categoryId && a.dslResult && this.navItems.push(t) }) } } ngOnChanges(t) { this.assignFeatures(), this.onRouteChange(), (t.lobbyType || t.lobbyProduct) && this.setSlotRacesConfigs() } setCurrentCategoryInfo() { let t = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.categoryRoute); t && t.categoryInfo && (this.categorySelected = t.categoryInfo.categoryid, this.categoryType = this.categorySelected, this.currentCategoryInfo = t.categoryInfo, this.checkforThumnbail(this.currentCategoryInfo)) } setDefaultCategoryInfo() { var t; this.defaultCategoryType = null === (t = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.lobbyType)) || void 0 === t ? void 0 : t.categoryInfo, this.isDefaultCategory = this.defaultCategoryType && this.defaultCategoryType.categoryid === this.categoryRoute } LobbySubscriptions() { this.smartBannerStatusObs = this.smartBannerService.smartBannerStatusObservable.subscribe(t => { this.smartBannerStatusChanged(t) }), this.smartBannerExistsObs = this.smartBannerService.smartBannersExistsObservable.subscribe(t => { this.smartBannerListExistsChanged(t) }), this.favObs = this.favouriteService.favouriteGamesFeedObservable.subscribe(t => { t && (this.getAvailableGames(t, this.favouritesCategoryIndex), this.updateNavItems()) }), this.recentObs = this.recentGamesService.recentGamesFeedObservable.subscribe(t => { t ? (this.getAvailableGames(t, this.recentsCategoryIndex), this.updateNavItems()) : this.enablePreLoginRecentlyPlayed && this.updateNavItems() }), this.user.isAuthenticated || (this.casinoLobbyObs = this.casinoLobbyService.lobbyLoadedObservable.subscribe(t => { this.user.isAuthenticated && t && t.size > 0 && (this.onLobbyChange(), this.updateNavItems()) })), this.discoverFeedStickerObs = this.discoverFeedService.discoverFeedStickerObservable.subscribe(t => { t && (this.displayDiscoverSticker = !0, t.parameters && (this.badgeColor = t.parameters.BadgeColor, this.badgeTextColor = t.parameters.BadgeTextColor), "Text" == t.badgeType && t.messages && (this.isBadgeTypeText = !0, this.categoryStickerName = t.messages.CategoryStickerName), "Icon" == t.badgeType && (this.isBadgeTypeIcon = !0, this.badgeIcon = t.parameters.BadgeIcon)) }) } checkIfShowInNavigation(t) { return !!(t.categoryid && t.categoryid.toLowerCase() === c.W7.RECENT_GAMES_CATEGORY_ID || this.useFavouriteGames && t.categoryid && t.categoryid.toUpperCase() === c.W7.FAVOURITE_GAMES_CATEGORY_ID.toUpperCase() || t.isNavigationCategory && t.categoryid !== this.slotracesKey && (t.lmtSubCategories && t.lmtSubCategories.length > 0 || t.gamelist && t.gamelist.length > 0) || this.enableDiscoverFeed && this.discoverFeedLmtkey && this.discoverFeedLmtkey.toLowerCase() == t.categoryid.toLowerCase() || this.isSlotRacesEnabled && this.slotracesKey == t.categoryid) } ngOnDestroy() { this.slotRacesNavSubscription && this.slotRacesNavSubscription.unsubscribe(), this.smartBannerStatusObs && this.smartBannerStatusObs.unsubscribe(), this.smartBannerExistsObs && this.smartBannerExistsObs.unsubscribe(), this.recentObs && this.recentObs.unsubscribe(), this.headerServiceObservable && this.headerServiceObservable.unsubscribe() } ngAfterViewInit() { (this.isDefaultCategory || document.body.offsetWidth >= 768) && this.setNavBarSticky(), this.updateNavItems(), setTimeout(() => { this.adjustNavOnLandscapeMode(), this.thumbnailScroll(null), document.querySelector("header") && new xe(document.getElementsByTagName("header")[0], () => { let a = document.querySelector(this.stickyInputQueryElement); a && a.setAttribute("style", "top:" + (document.getElementsByTagName("header")[0].clientHeight - 1) + "px;") }) }, 1500) } assignNavCategories() { this.prepareTopNavigation(), this.navItems && (this.myNavCategories = this.navItems.filter(t => t.isNavigationCategory), this.myNavCategories.forEach(t => { t.index = this.navIndex + 1, this.navIndex = t.index }), this.navIndex = 0), setTimeout(() => { (window.innerWidth >= 768 || document.body.offsetWidth >= 768) && this.checkNavBarCategoryLimit(), setTimeout(() => { this.setActiveCategory() }, 50) }, this.navBarLimitTimeout) } setRecentsCategoryIndex() { this.recentsCategoryIndex = this.navItems ? this.navItems.indexOf(this.navItems.filter(t => t.categoryid.toLowerCase() === c.W7.RECENT_GAMES_CATEGORY_ID)[0]) : -1 } setFavouritesCategoryIndex() { this.favouritesCategoryIndex = this.navItems ? this.navItems.indexOf(this.navItems.filter(t => t.categoryid.toLowerCase() === c.W7.FAVOURITE_GAMES_CATEGORY_ID)[0]) : -1 } updateNavItems() { this.setRecentsCategoryIndex(), this.setFavouritesCategoryIndex(); let t = this.configProviderService.provideSubNavigationConfig(), a = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.showFavInSubNav), l = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.showRecentInSubNav); this.favouritesCategoryIndex > -1 && this.navItems[this.favouritesCategoryIndex] && (this.navItems[this.favouritesCategoryIndex].isNavigationCategory = !1), this.user.isAuthenticated || (this.navItems && this.navItems[this.recentsCategoryIndex] && (this.navItems[this.recentsCategoryIndex].isNavigationCategory = !1), this.navItems && this.navItems[this.favouritesCategoryIndex] && (this.navItems[this.favouritesCategoryIndex].isNavigationCategory = !1)), this.recentGamesService.getrecentGames() && 0 === this.recentGamesService.getrecentGames().length && this.recentsCategoryIndex > -1 && (this.navItems[this.recentsCategoryIndex].isNavigationCategory = !1), this.favouriteService.favouriteGames && 0 === this.favouriteService.favouriteGames.length && this.favouritesCategoryIndex > -1 && (this.navItems[this.favouritesCategoryIndex].isNavigationCategory = !1), this.recentGamesService.getrecentGames() && this.recentGamesService.getrecentGames().length > 0 && this.recentsCategoryIndex > -1 && this.user.isAuthenticated && (this.navItems[this.recentsCategoryIndex].isNavigationCategory = !0), this.favouriteService.favouriteGames && this.favouriteService.favouriteGames.length > 0 && this.favouritesCategoryIndex > -1 && this.useFavouriteGames && (this.navItems[this.favouritesCategoryIndex].isNavigationCategory = !0), !l && this.navItems && this.navItems[this.recentsCategoryIndex] && (this.navItems[this.recentsCategoryIndex].isNavigationCategory = !1), !a && this.navItems && this.navItems[this.favouritesCategoryIndex] && (this.navItems[this.favouritesCategoryIndex].isNavigationCategory = !1), this.slotRacesCategoryIndex = this.navItems.indexOf(this.navItems.filter(p => p.categoryid === this.slotracesKey)[0]); let g = this.slotRacesService.getCurrentRaces(); this.isSlotRacesEnabled && this.slotRacesCategoryIndex > -1 && this.slotRacesConfig.disableWhenNoPromotions && (this.navItems[this.slotRacesCategoryIndex].isNavigationCategory = !!(g.liveNow && g.liveNow.length || g.upcomingToday && g.upcomingToday.length || g.upcomingTomorrow && g.upcomingTomorrow.length)), this.assignNavCategories(), this.assignThumbnailPropertyandsignposting(), this.thumbnailScroll(null), setTimeout(() => { this.setActiveMobile(this.categoryRoute) }, 50) } assignThumbnailPropertyandsignposting() { (this.isSignPosting || this.isThumnbailEnabled && this.isThumbnailEnabledforLobby) && this.navItems.forEach(t => { if (this.isSignPosting && t.isNavigationCategory && this.defaultCategoryType && this.defaultCategoryType.categoryid != t.categoryid && (t.signPostingCount = this.signPostingService.getSignPostingCount(this.getSignPostingGames(t.categoryid), this.recentGamesService.getrecentGames())), this.isThumnbailEnabled && this.isThumbnailEnabledforLobby) { let a = this.casinoLobbyService.getThumbnailbasedonroute(t); a && (t.displayThumbnail = !0, t.isVipThumbnail = a.isVipThumbnail, this.thumbnailgame = a.gameId, this.thumbnailArrowColor(a)), this.thumbnailHover() } }) } thumbnailHover() { !this.isTouch || document.body.offsetWidth >= 768 && this.isTouch ? this.thumbnailgame != this.cacheManager.getThumbnailsfromLocalStorage(this.lobbyType) ? (this.displayThumbnailDesktop = !0, this.displayThumbnailMobile = !1) : this.displayThumbnailDesktop = !1 : (this.displayThumbnailDesktop = !1, this.displayThumbnailMobile = !0) } thumbnailScroll(t) { if (document.querySelectorAll(".thumbnailActive").length > 0 && this.isMobileWidth) { let a, l, g, p, b, E; l = document.querySelectorAll(".thumbnailActive")[0], a = document.getElementById("fixedtabdevmobile") ? document.getElementById("fixedtabdevmobile").offsetWidth : 0, g = l.getBoundingClientRect(), p = g.left, this.arrowPosition = g.left + l.clientWidth / 2 - 10, b = g.right, E = b - a >= 0 && p <= document.body.offsetWidth, this.thumbnailVisible = E } } closeThumbnailBox(t) { this.displayThumbnailMobile = this.displayThumbnailDesktop = t } getSignPostingGames(t) { let a = [], l = [], g = this.casinoLobbyService.getCategoryInfo(this.lobbyType, t); if (g && g.categoryInfo && g.categoryInfo.gamelist && g.categoryInfo.gamelist.length > 0 && (a = g.categoryInfo.gamelist), g && g.categoryInfo && g.categoryInfo.lmtSubCategories && g.categoryInfo.lmtSubCategories.length > 0) for (let p = 0; p < g.categoryInfo.lmtSubCategories.length; p++) { let b = this.casinoLobbyService.getCategoryInfo(this.lobbyType, g.categoryInfo.lmtSubCategories[p]); b && b.categoryInfo && b.categoryInfo.gamelist && b.categoryInfo.gamelist.length > 0 && (l = l.concat(b.categoryInfo.gamelist)) } return l && l.length > 0 && (a = a.concat(l)), a } userInLimboState() { return "0" !== (this.user.workflowType || "0") } getAvailableGames(t, a) { if (a > -1 && t && t.length > 0) { let l; for (let g = 0; g < t.length; g++)if (this.casinoLobbyService.getGameInfo(t[g])) { l = !0; break } this.navItems[a].isNavigationCategory = l } } showSearch() { this.navTopMenuItems.forEach(t => { "showSearchInTopNavigation" == t.Flagname && this.trackingEntireNavigation(t.index, t.categoryType) }), this.searchSection.setSearchVisibility(!0) } goToDefaultPage(t) { this.navTopMenuItems.forEach(a => { a.Flagname == t && this.trackingEntireNavigation(a.index, a.categoryType) }), !this.nativeApplication.isNativeWrapper || "SPORTSBOOK" !== this.nativeApplication.product && "BETTING" !== this.nativeApplication.product ? this.navigation.goTo(this.mcPageDefaultHomePageUrl) : this.nativeApi.raiseNativeAppEvent(c.W7.SPORTS_HOME_ICON_EVENT) } goToUrl(t) { this.navTopMenuItems.forEach(a => { "extendTopMenuState" == a.Flagname && this.trackingEntireNavigation(a.index, a.categoryType) }), this.navigation.goTo(t) } goToPromotionPage() { this.navTopMenuItems.forEach(t => { "isPromotionPagesEnabled" == t.Flagname && this.trackingEntireNavigation(t.index, t.categoryType) }), "" === this.promotionLinkUrl && (this.promotionLinkUrl = this.m2Page.homePage), this.navigation.goTo(this.promotionLinkUrl), event.stopPropagation() } moreHover(t) { this.isTouch || (this.hideMore = t, event.stopPropagation()) } moreMouseLeave() { this.hideMore = !0 } overlayMouseEnter() { this.hideMore = !1 } moreClick(t) { this.hideMore = !this.hideMore, t.stopPropagation() } checkNavBarCategoryLimit() { let t = 0; this.moreCategories = []; let a, b, l = [], g = window.innerWidth && document.body.offsetWidth, p = 0, E = 0, L = this.fixedtabdev && this.fixedtabdev.nativeElement ? this.fixedtabdev.nativeElement.clientWidth + this.fixedtabdev.nativeElement.offsetLeft : 0; if (!L && this.deskNav && this.deskNav.nativeElement.children[0].children && (E = 2 * this.deskNav.nativeElement.getBoundingClientRect().left), L && (E = 2 * this.fixedtabdev.nativeElement.getBoundingClientRect().left), g >= 1319 && (g = 1319, E = 0), this.cssearchcomponent && this.cssearchcomponent.nativeElement.children[0].children[0] ? (this.cssearchcomponent.nativeElement.children[0].children[0].firstElementChild && this.cssearchcomponent.nativeElement.children[0].children[0].firstElementChild.firstElementChild && (b = this.cssearchcomponent.nativeElement.children[0].children[0].firstElementChild.firstElementChild, p = b.offsetLeft + b.offsetWidth), a = g - (L + this.cssearchcomponent.nativeElement.children[0].children[0].clientWidth + p + E)) : a = g - (L + E), this.deskNav && (l = this.deskNav.nativeElement.children[0].children), l && l.length > 0) { this.myNavCategories = []; let O = []; for (let q = 0; q < l.length; q++)l[q].classList.contains("nav-li") && O.push(l[q]); let U = this.navItems.filter(q => q.isNavigationCategory); for (let q = 0; q < O.length; q++) { if (t += O[q].clientWidth, !(t < a)) { this.myNavCategories.pop(), this.tempArray = []; for (let X = q - 1; X < U.length; X++)if (!this.user.isAuthenticated && U[X]) { if (U[X].isNavigationCategory && U[X].categoryid.toLowerCase() !== c.W7.RECENT_GAMES_CATEGORY_ID && U[X].categoryid.toLowerCase !== c.W7.FAVOURITE_GAMES_CATEGORY_ID) if (this.extendTopMenuState && this.extendedTopMenuToRight) { let ee = this.myNavCategories.filter(fe => fe.categoryid.toLowerCase() === U[X].categoryid.toLowerCase()); ee && 0 == ee.length && (this.moreCategories.push(U[X]), this.tempArray.push(U[X])) } else this.moreCategories.push(U[X]), this.tempArray.push(U[X]) } else U[X] && (this.moreCategories.push(U[X]), this.tempArray.push(U[X])); break } for (let X = 0; X < U.length; X++)U[X].categoryid.toLowerCase() === O[q].id.toLowerCase() && this.myNavCategories.push(U[X]) } if (a && 1319 == g && t >= a - 100 && 0 == this.moreCategories.length) { let q = this.myNavCategories[this.myNavCategories.length - 1]; this.myNavCategories.pop(), this.moreCategories.push(q), this.tempArray.push(q) } if (this.tempArray.length > 0) for (let q = 0; q < this.tempArray.length; q++)-1 === this.moreCategories.indexOf(this.tempArray[q]) && -1 === this.myNavCategories.indexOf(this.tempArray[q]) && this.moreCategories.push(this.tempArray[q]); this.moreCategories = this.moreCategories.filter(q => q.isNavigationCategory), this.moreCategories.length > 0 && (this.moreCategories = this.sortMoreCategories(U, this.moreCategories)); let K = this.navItems.filter(q => q.isNavigationCategory), z = !1; if (K && K.length > 0 && (z = O.length < K.length), z && O.length < U.length) for (let q = O.length - 1; q < U.length; q++)U[q] && -1 === this.moreCategories.indexOf(U[q]) && this.moreCategories.push(U[q]); this.moreCategories = this.moreCategories.filter(q => q.isNavigationCategory) } this.setActiveCategory() } sortMoreCategories(t, a) { let l = []; return t.forEach(g => { let p = a.filter(b => b.categoryid === g.categoryid); p && p.length > 0 && l.push(p[0]) }), l } setActiveMobile(t) { if (this.categoryType = t, this.enableFixedMobileNavigation) { let a, l; if (this.mobileNavigation && this.mobileNavigation.nativeElement && this.mobileNavigation.nativeElement.children.length > 0) for (a = 0; a < this.mobileNavigation.nativeElement.children[0].children.length; a++)l = this.mobileNavigation.nativeElement.children[0].children[a], l.classList.remove("active"), l.id.toLowerCase() === t.toLowerCase() && l.classList.add("active") } } setActiveCategory() { let l, t = !1, a = !1, g = null, p = this.deskNav && this.deskNav.nativeElement && this.deskNav.nativeElement.children.length > 0; if (p) for (l = 0; l < this.deskNav.nativeElement.children[0].children.length; l++)g = this.deskNav.nativeElement.children[0].children[l], g.classList.contains("from-extended-menu-right") || g.classList.remove("active"), this.categoryRoute && g.id.toLowerCase() === this.categoryRoute.toLowerCase() && (g.classList.add("active"), a = !0); let b = p && this.deskNav.nativeElement.children[0].children.moregameslist && this.deskNav.nativeElement.children[1] && this.deskNav.nativeElement.children[1].children && this.deskNav.nativeElement.children[1].children.length >= 1; if (b) for (l = 0; l < this.deskNav.nativeElement.children[1].children.length; l++)g = this.deskNav.nativeElement.children[1].children[l], g.classList.remove("border-nav-active"), !a && g.id.toLowerCase() === this.categoryRoute.toLowerCase() && (g.classList.add("border-nav-active"), a = !0, t = !0); if (!a && p) { let E = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.categoryRoute); for (; E && E.parentCategoryType;) { if (this.deskNav.nativeElement.children[1].children[E.parentCategoryType]) { this.deskNav.nativeElement.children[1].children[E.parentCategoryType].classList.add("active"), a = !0; break } if (b && this.deskNav.nativeElement.children[1].children[E.parentCategoryType]) { this.deskNav.nativeElement.children[1].children[E.parentCategoryType].classList.add("border-nav-active"), a = !0, t = !0; break } E = this.casinoLobbyService.getCategoryInfo(this.lobbyType, E.parentCategoryType) } } this.isMoreActive = t } hideMoreCategoryDropdown(t) { this.hideMore = t } smartBannerListExistsChanged(t) { this.smartBannersExists = t } smartBannerStatusChanged(t) { this.smartBannerOpened = t } categoryTracking(t, a, l, g = !1) { if (l == this.casinoManager.getActiveCategory()) return; this.isMoreActive = !1; let O, E = window.location.href.split("/"), L = E[E.length - 1]; ("casino" == L || this.isTouch) && (L = this.casinoManager.getDefaultCategoryType()), this.tracking.updateDataLayer({ "page.name": l, eventName: "pageView", c15: "?source=" + L }), g && (this.hideMore = !0, this.isMoreActive = !0), l === this.discoverFeedLmtkey && (this.displayDiscoverSticker ? this.isBadgeTypeIcon ? O = "Star Badge" : this.isBadgeTypeText && (O = "New Badge") : O = "No Badge", this.tracking.triggerEvent("Event.NavigationMenus", { "page.navigationMenus": "SubNav_Discover_" + O })), t && t.stopPropagation(), this.trackingEntireNavigation(a, l) } trackingEntireNavigation(t, a) { a && t && this.tracking.triggerEvent("Event.Tracking", { "component.CategoryEvent": "navigation", "component.LabelEvent": "quick nav", "component.ActionEvent": "click", "component.PositionEvent": t, "component.LocationEvent": "not applicable", "component.EventDetails": a, "component.URLClicked": "not applicable" }) } onResize() { this.adjustNavOnLandscapeMode(), (window.innerWidth >= 768 || document.body.offsetWidth >= 768) && (this.updateNavItems(), this.isDefaultCategory && this.setNavBarSticky()) } setHeaderHeight() { setInterval(() => { if (document.getElementsByClassName("content-message-container") && document.getElementsByClassName("content-message-container")[0]) { let a = document.getElementsByClassName("content-message-container")[0].getBoundingClientRect().height; document.getElementById("casino-nav") && (document.body.offsetWidth >= 768 || document.body.offsetWidth >= 768) && (document.getElementsByClassName("has-header-messages") && document.getElementsByClassName("has-header-messages")[0] && document.getElementById("casino-nav") ? document.getElementById("casino-nav").setAttribute("style", "margin-top:" + a + "px !important;") : document.getElementById("casino-nav").setAttribute("style", "margin-top:unset !important;")) } }, 50) } clickout(t, a = !0) { this.navigationBar.nativeElement.contains(t.target) || this.navigationBar.nativeElement.contains(t.target) || (this.hideMore = a, this.showLastLevelCategoryDropdown = !a) } setNavBarSticky() { if (this.navigationBar.nativeElement) { let t = 0; document.getElementsByTagName("header").length > 0 && (t = document.getElementsByTagName("header")[0].clientHeight), document.getElementsByTagName("cs-smart-banner-list") && document.getElementsByTagName("cs-smart-banner-list").length > 0 && (t += document.getElementsByTagName("cs-smart-banner-list")[0].clientHeight), this.navigationBar.nativeElement.style.top = t + "px", document.getElementsByTagName(this.stickyInputQueryElement) && (document.getElementsByTagName(this.stickyInputQueryElement)[0].style.top = t + "px") } } adjustNav() { let t; t = this.isMobileWidth ? 75 : 78; let a = document.getElementsByClassName("header")[0]; if (a) { let l = this.casinoManager.getheaderheight(); (!l || 0 == l) && (l = a.getBoundingClientRect().height); let g = l + t; document.getElementsByTagName("html")[0].classList.contains("smartBannerEnable") && document.querySelector(this.stickyInputQueryElement).setAttribute("style", "top:" + g + "px;") } } setVanillaActiveHeader() { let t = !1; this.categoryHeaderHighLight && this.categoryHeaderHighLight.length > 0 && this.categoryHeaderHighLight.forEach(a => { this.categoryRoute && this.categoryRoute.toLowerCase() == a.categoryName.toLowerCase() && (this.headerServiceObservable = this.headerService.whenReady.subscribe(() => { this.headerService.highlightProduct(a.product.toLowerCase()) }), this.bottomNavService.whenReady.subscribe(() => { this.bottomNavService.setActiveItem(a.product.toLowerCase()) }), t = !0) }), t || (this.headerService.whenReady.subscribe(() => { this.headerService.highlightProduct(this.lobbyProduct.toLowerCase()) }), this.bottomNavService.whenReady.subscribe(() => { this.bottomNavService.setActiveItem(this.lobbyProduct.toLowerCase()) })) } getActiveCategoryStatus(t) { if (t && this.currentCategoryInfo) return t.categoryid === this.currentCategoryInfo.categoryid } evalSubNavDisplay(t) { this.dslService.evaluateExpression(t).subscribe(a => { this.enableSubNav = a }) } adjustNavOnLandscapeMode() { window.matchMedia("(orientation:landscape)").matches && this.isTouch && window.innerHeight < 480 && !this.enableFixedMobileNavigation ? document.getElementsByTagName("html")[0].classList.add("add-sticky-navigation") : document.querySelector("header") && ((!this.casinoManager.getheaderheight() || 0 == this.casinoManager.getheaderheight()) && (this.hdrEle = document.querySelector("header")), (!this.isMobileWidth && this.hdrEle && this.hdrEle.offsetHeight || (!this.casinoManager.getheaderheight() || 0 == this.casinoManager.getheaderheight()) && this.hdrEle && this.hdrEle.offsetHeight) && this.casinoManager.setheaderheight(this.hdrEle.getBoundingClientRect().height), document.getElementsByTagName("html")[0].classList.remove("add-sticky-navigation"), document.querySelector(this.stickyInputQueryElement) && document.querySelector(this.stickyInputQueryElement).setAttribute("style", "top:" + this.casinoManager.getheaderheight() + "px;"), this.adjustNav()) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(r.f5Y), e.Y36(c.iX), e.Y36(r.rBu), e.Y36(c.M3), e.Y36(c.io), e.Y36(c.vD), e.Y36(c.Zc), e.Y36(c.Bd), e.Y36(c.sg), e.Y36(r.T3C), e.Y36(r.U8N), e.Y36(r.KDu), e.Y36(c.fd), e.Y36(r.e2C), e.Y36(e.SBq), e.Y36(r.r6L), e.Y36(r.DVv), e.Y36(r.X9E), e.Y36(c.q), e.Y36(r.T3C), e.Y36(c.Q8), e.Y36(c.Tq), e.Y36(r.XXf), e.Y36(c.Nb), e.Y36(c.nA), e.Y36(c.$l), e.Y36(c.Az)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-navigation-bar"]], viewQuery: function (t, a) { if (1 & t && (e.Gf(Zl, 5), e.Gf(Hl, 5), e.Gf(Ql, 5), e.Gf(zl, 5), e.Gf(jl, 5)), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.deskNav = l.first), e.iGM(l = e.CRH()) && (a.mobileNavigation = l.first), e.iGM(l = e.CRH()) && (a.fixedtabdev = l.first), e.iGM(l = e.CRH()) && (a.cssearchcomponent = l.first), e.iGM(l = e.CRH()) && (a.csSearchDesktop = l.first) } }, hostBindings: function (t, a) { 1 & t && e.NdJ("click", function (g) { return a.clickout(g) }, !1, e.evT)("scroll", function (g) { return a.thumbnailScroll(g) }, !1, e.Jf7) }, inputs: { lobbyType: "lobbyType", categoryRoute: "categoryRoute", lobbyProduct: "lobbyProduct", productOverride: "productOverride", stickyInputQueryElement: "stickyInputQueryElement" }, features: [e.TTD], decls: 5, vars: 5, consts: [["style", "position:relative", 4, "ngIf"], ["id", "casino-nav", "class", "casino-nav", 3, "ngClass", "resize", 4, "ngIf"], [3, "inputData", "componentName", 4, "ngIf"], [4, "ngIf"], [2, "position", "relative"], [3, "inputData", "componentName"], ["id", "casino-nav", 1, "casino-nav", 3, "ngClass", "resize"], [1, "category-container", "casino-mobile-navigation"], [1, "resizable-container"], ["id", "fixedtabdevmobile", 1, "fixed-tab-div", "navigation-main", 2, "float", "left"], [1, "fixed-tabs"], ["class", "fixed-tabs-li nav-li", 3, "click", 4, "ngIf"], ["class", "item home fixed-tabs-li nav-li", 3, "click", 4, "ngIf"], ["mobilenavItems", ""], [3, "ngClass", "scroll", 4, "ngIf"], [1, "category-container", "casino-desktop-navigation"], ["id", "fixedtabdev", "class", "fixed-tab-div navigation-main", "style", "float:left;", 4, "ngIf"], ["id", "deskNav", 1, "navigation-main", 2, "float", "left", 3, "ngClass"], ["deskNav", ""], [1, "deskNav-ul"], ["class", "nav-li", 3, "hidden", "id", "ngClass", "ngStyle", "click", "mouseenter", 4, "ngFor", "ngForOf"], ["id", "moregameslist", "class", "moregameslist", "class", "nav-li", 3, "ngClass", "mouseenter", "click", "mouseleave", 4, "ngIf"], ["id", "more-select", 1, "more-select", 3, "hidden", "mouseleave", "mouseenter"], [3, "value", "id", "ngStyle", "click", 4, "ngFor", "ngForOf"], ["id", "cssearchcomponent", "class", "cssearchcomponent", 4, "ngIf"], [1, "fixed-tabs-li", "nav-li", 3, "click"], [1, "icon", "theme-search-i"], [1, "name"], [3, "href"], [1, "icon", "theme-badge"], [1, "item", "home", "fixed-tabs-li", "nav-li", 3, "click"], [3, "ngClass", "scroll"], ["class", "nav-li", 3, "id", "hidden", "ngClass", "ngStyle", "click", 4, "ngFor", "ngForOf"], ["class", "nav-li", 3, "ngClass", "ngStyle", "click", 4, "ngFor", "ngForOf"], [1, "nav-li", 3, "ngClass", "ngStyle", "click"], [1, "casino-extendedtopmenu-cntr"], [1, "icon", 3, "ngClass"], [1, "nav-li", 3, "id", "hidden", "ngClass", "ngStyle", "click"], [3, "href", "click", 4, "ngIf"], [3, "href", 4, "ngIf"], [3, "href", "click"], [1, "icon", 3, "ngClass", "ngStyle"], ["class", "badge badge-circle badge-offset badge-t-r badge-danger casino-navigation-badge", 4, "ngIf"], ["class", "badge badge-square badge-offset badge-t-r badge-danger casino-navigation-badge discover-badge", 3, "ngStyle", 4, "ngIf"], [3, "class", "ngStyle", 4, "ngIf"], [1, "name", 3, "ngClass"], [1, "badge", "badge-circle", "badge-offset", "badge-t-r", "badge-danger", "casino-navigation-badge"], [1, "badge", "badge-square", "badge-offset", "badge-t-r", "badge-danger", "casino-navigation-badge", "discover-badge", 3, "ngStyle"], [3, "ngStyle"], [3, "id"], [1, "name", 3, "innerHtml"], ["id", "fixedtabdev", 1, "fixed-tab-div", "navigation-main", 2, "float", "left"], ["fixedtabdev", ""], [1, "deskNav-ul", "fixed-tabs"], ["class", "nav-li", 3, "click", 4, "ngIf"], ["class", " nav-li item home", 3, "click", 4, "ngIf"], [1, "nav-li", 3, "click"], ["class", "icon theme-badge", 4, "ngIf"], [1, "nav-li", "item", "home", 3, "click"], ["class", " nav-li item", 3, "ngClass", "ngStyle", "click", 4, "ngFor", "ngForOf"], [1, "nav-li", "item", 3, "ngClass", "ngStyle", "click"], [1, "nav-li", 3, "hidden", "id", "ngClass", "ngStyle", "click", "mouseenter"], ["class", "thumbnail-newgame", 4, "ngIf"], ["class", "icon", 3, "ngClass", "ngStyle", 4, "ngIf"], [1, "thumbnail-newgame"], [1, "casino-thumbnail-arrow-down", 3, "ngStyle"], [3, "category", "place", "lobbyType", "isTouch", "closeThumbnail"], ["id", "moregameslist", 1, "nav-li", 3, "ngClass", "mouseenter", "click", "mouseleave"], ["class", "icon more-desktop-icon", 3, "ngClass", 4, "ngIf"], [3, "key"], [1, "icon", "more-desktop-icon", 3, "ngClass"], [4, "ngFor", "ngForOf"], ["class", "casino-thumbnail-newgame-more", 4, "ngIf"], [1, "casino-thumbnail-newgame-more"], [3, "category", "lobbyType", "isTouch", "place", "closeThumbnail"], [3, "value", "id", "ngStyle", "click"], ["id", "cssearchcomponent", 1, "cssearchcomponent"], ["cssearchcomponent", ""], [3, "isTouch", "placeholder", "lobbyType", "categoryRoute"], ["csSearchDesktop", ""], ["class", "casino-mobile-thumbnail-wrapper", 4, "ngFor", "ngForOf"], [1, "casino-mobile-thumbnail-wrapper"], [1, "casino-thumbnail-mobile"], ["class", "casino-thumbnail-arrow-down-mobile", 3, "left", 4, "ngIf"], [1, "casino-thumbnail-arrow-down-mobile"]], template: function (t, a) { 1 & t && (e.YNc(0, ql, 2, 4, "div", 0), e.YNc(1, Xl, 2, 4, "div", 0), e.YNc(2, j_, 25, 18, "nav", 1), e.YNc(3, q_, 1, 4, "cc-casino-core-lazy-placeholder", 2), e.YNc(4, eg, 2, 1, "div", 3)), 2 & t && (e.Q6J("ngIf", a.isNewsFeedEnabled && "above-subnav" == a.newsFeedPosition && a.isDefaultCategory && a.isNewsFeedEnabledOnHome), e.xp6(1), e.Q6J("ngIf", a.isInstaStoriesEnabled), e.xp6(1), e.Q6J("ngIf", a.enableSubNav), e.xp6(1), e.Q6J("ngIf", a.isNewsFeedEnabled && "below-subnav" == a.newsFeedPosition && a.isDefaultCategory && a.isNewsFeedEnabledOnHome), e.xp6(1), e.Q6J("ngIf", a.navItems)) }, directives: [lt, r.MIT, Hn, c.yV, c.iF, o.O5, o.mk, o.sg, o.PC], pipes: [o.Ov, J.Ut], encapsulation: 2 }), n })(); class xa { constructor() { this.sitecoreData = {}, this.isExtendedTopMenuItem = !0 } } let Ra = (() => { class n { constructor(t, a, l) { this.casinoLobbyService = t, this.configProviderService = a, this.dslService = l } ngOnInit() { this.isExtendTopMenuCalledfromOnChanges || this.evaluateExtendTopMenu(), this.lobbyLoadSubscription = this.casinoLobbyService.lobbyLoadedObservable.subscribe(t => { t && (this.isLobbyLoaded = !0, this.lobbyType && (!this.categoryRoute || "" === this.categoryRoute) && this.setCategoryRoute()) }) } ngOnChanges() { this.evaluateExtendTopMenu(), this.isExtendTopMenuCalledfromOnChanges = !0, this.isLobbyLoaded && this.lobbyType && (!this.categoryRoute || "" === this.categoryRoute) && this.setCategoryRoute() } setCategoryRoute() { let t = this.casinoLobbyService.getLobbyInfo(this.lobbyType); t && t.categoriesMap && t.categoriesMap.size > 0 && (this.categoryRoute = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.lobbyType).categoryInfo.categoryid) } evaluateExtendTopMenu() { let t = this.configProviderService.provideMcPageConfig(), a = this.configProviderService.provideFeaturesConfig(), l = 0; a.extendedTopMenuStatus && a.extendedTopMenuToRight && t.extendTopMenu && t.extendTopMenu.length > 0 ? t.extendTopMenu.forEach(g => { g.title && (this.extendMenuDslSubscription = this.dslService.evaluateExpression(g.condition).subscribe(p => { g.dslResult = p, l++, l == t.extendTopMenu.length && (this.extendMenuDslEvalCompleted = !0, l = 0) })) }) : this.extendMenuDslEvalCompleted = !0 } ngOnDestroy() { this.lobbyLoadSubscription && this.lobbyLoadSubscription.unsubscribe(), this.extendMenuDslSubscription && this.extendMenuDslSubscription.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.nA), e.Y36(c.iX), e.Y36(r.XXf)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-nav-on-lobby-type"]], inputs: { lobbyType: "lobbyType", categoryRoute: "categoryRoute", lobbyProduct: "lobbyProduct", productOverride: "productOverride", stickyInputQueryElement: "stickyInputQueryElement" }, features: [e.TTD], decls: 1, vars: 1, consts: [[3, "lobbyType", "categoryRoute", "lobbyProduct", "productOverride", "stickyInputQueryElement", 4, "ngIf"], [3, "lobbyType", "categoryRoute", "lobbyProduct", "productOverride", "stickyInputQueryElement"]], template: function (t, a) { 1 & t && e.YNc(0, tg, 2, 5, "cc-navigation-bar", 0), 2 & t && e.Q6J("ngIf", a.isLobbyLoaded && a.extendMenuDslEvalCompleted) }, directives: [cd, o.O5], encapsulation: 2 }), n })(), ld = (() => { class n { constructor(t, a, l) { this.configProviderService = t, this.invokerProductService = a, this.casinoManager = l } ngOnInit() { this.clientConfigLoadSubscription = this.configProviderService.casinoClientConfigObservable.subscribe(t => { t && (this.isClientConfigLoaded = t, this.setLobbyType()) }), this.setLobbyType() } ngOnChanges() { this.setLobbyType() } setLobbyType() { this.isClientConfigLoaded && ((!this.casinoProduct || "" === this.casinoProduct) && (this.casinoProduct = "games"), this.lobbyType = this.casinoManager.getLobbyTypeForProduct(this.casinoProduct), (!this.lobbyType || "" === this.lobbyType) && console.error("Please configure a valid lobby Type under lobbyTypeMap")) } ngOnDestroy() { this.clientConfigLoadSubscription && this.clientConfigLoadSubscription.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.iX), e.Y36(c.uZ), e.Y36(c.M3)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-nav-on-product"]], inputs: { casinoProduct: "casinoProduct", categoryRoute: "categoryRoute", stickyInputQueryElement: "stickyInputQueryElement" }, features: [e.TTD], decls: 1, vars: 4, consts: [[3, "lobbyType", "categoryRoute", "lobbyProduct", "stickyInputQueryElement"]], template: function (t, a) { 1 & t && e._UZ(0, "cc-nav-on-lobby-type", 0), 2 & t && e.Q6J("lobbyType", a.lobbyType)("categoryRoute", a.categoryRoute)("lobbyProduct", a.casinoProduct)("stickyInputQueryElement", a.stickyInputQueryElement) }, directives: [Ra], encapsulation: 2 }), n })(), Qn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, R.Bz, c.IR, Bt, _t, Yi, J.I8]] }), n })(), zn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[r.b9i, o.ez, c.IR, Qn]] }), n })(), wa = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[r.b9i, o.ez, c.IR, zn]] }), n })(), _d = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z, q, X, ee) { this.casinoManager = t, this.user = a, this.navigation = l, this.tracking = g, this.favouriteService = p, this.recentGamesService = b, this.unfinishedGamesService = E, this.mcPage = L, this.subNavigationMenu = O, this.router = U, this.cookie = K, this.configProviderService = z, this.casinoLobbyService = q, this.teaserService = X, this.optimizedTeaserManager = ee, this.showLastLevelCategoryDropdown = !1, this.windowInnerWidth = document.body.offsetWidth, this.title = "", this.prevLobbyCategories = [], this.hdrHeight = 0, this.displayHeader = !0, this.normalTeasersArray = [], this.optimizedTeasersArray = [], this.subnavigationTeaserLength = 0 } ngOnInit() { if (this.isTouch = this.casinoManager.isTouch(), this.isMobileWidth = window.innerWidth < 768 || document.body.offsetWidth < 768, this.assignFeatures(), this.categoryRelativeUrlTemplate = "/" + this.mcPage.lang + "/" + this.casinoManager.getLobbyUrlPrefix(this.lobbyType) + "/c/", this.getFromCookie("dark-mode")) this.subNavBackGroundColor = "transparent"; else { let t = this.configProviderService.provideGlobalConfig(); this.subNavBackGroundColor = this.navigationBackgroundColor ? t.lobbyConfigurations.navigationBackgroundColor : t.lobbyConfigurations.lobbyBackgroundColor } this.bindSubNavigation(), this.isDefaultCategory || (this.teaserObs = this.teaserService.teaserDataObservable.subscribe(t => { t && this.getSubNavTeasersLength() })) } ngOnChanges() { this.assignFeatures(), this.bindSubNavigation() } assignFeatures() { let t = this.configProviderService.provideFeaturesConfig(); this.alignIconRight = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.alignIconRight), this.isSignPosting = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableSignpostingSticker), this.isUkHeading = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.isUkHeading), this.enableHeaderforCategory = t.enableHeaderforCategory, this.enableFixedMobileNavigation = t.enableFixedMobileNavigation, this.navigationBackgroundColor = t.navigationBackgroundColor; let a = this.configProviderService.provideLmtConfig(); this.defaultProductHomeUrl = a.defaultProductHomeUrl, this.enableDefaultHomeUrl = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, a.enableDefaultHomeUrl); let l = this.configProviderService.provideDiscoverFeedConfig(); this.enableDiscoverFeed = l.enableDiscoverFeed, this.discoverFeedLmtkey = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, l.discoverFeedLmtkey); let g = this.configProviderService.provideOptimizedTeaserConfig(); this.isEnableOptimizedTeasers = g.teaserOptimization; let p = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.categoryRoute); this.subCategoryTitleFontSize = this.casinoLobbyService.getsubCategoryTitleFontSize(p), this.subCategoryTextColor = this.casinoLobbyService.getsubCategoryTextColor(p), this.lobbyTileFontFamily = this.casinoLobbyService.getLTileFontFamily(p) } bindSubNavigation() { let t = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.categoryRoute); t && t.categoryInfo && (this.selectedCategory = t.categoryInfo, this.setIsDefaultCategory(), this.displayHeader = this.categoryHasSubCat(this.selectedCategory), this.isDefaultCategory || this.getSubNavTeasersLength(), this.parentCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.selectedCategory.parentCategoryId), this.title = this.selectedCategory.categoryname, this.displayTitle = this.title, this.isFullLobbyLoaded = !0, this.prepareSubNavigation()) } ngAfterViewInit() { !this.isDefaultCategory && this.isMobileWidth && this.setSubNavigationMenuSticky(), setTimeout(() => { this.adjustSubNavOnLandscapeMode() }, 1e3) } adjustSubNavOnLandscapeMode() { window.matchMedia("(orientation:landscape)").matches && window.innerHeight < 480 ? (document.getElementsByTagName("html")[0].classList.add("add-sticky-navigation"), document.querySelector(this.stickyInputQueryElement) && document.querySelector(this.stickyInputQueryElement).setAttribute("class", "sb-top-unset-cls"), document.querySelector(this.stickyInputQueryElement + ".sb-fixed-style") && document.querySelector(this.stickyInputQueryElement).classList.remove("sb-fixed-style"), document.querySelector(".casino-lobby-games") && document.querySelector(".casino-lobby-games").setAttribute("style", "margin-top:0")) : document.querySelector("header") && (this.hdrEle = document.querySelector("header"), (0 == this.casinoManager.getheaderheight() || null == this.casinoManager.getheaderheight()) && this.hdrEle && this.hdrEle.offsetHeight && this.casinoManager.setheaderheight(this.hdrEle.offsetHeight - 2), document.getElementsByTagName("html")[0].classList.remove("add-sticky-navigation"), document.querySelector(this.stickyInputQueryElement) && (document.querySelector(this.stickyInputQueryElement).classList.remove("sb-top-unset-cls"), document.querySelector(this.stickyInputQueryElement).setAttribute("style", "top:" + this.casinoManager.getheaderheight() + "px;")), this.adjustSubNav()) } onResize(t) { this.isMobileWidth = window.innerWidth < 768 || document.body.offsetWidth < 768, !this.isDefaultCategory && this.isMobileWidth && this.windowInnerWidth !== (window.innerWidth || document.body.offsetWidth) && this.setSubNavigationMenuSticky(), this.windowInnerWidth = window.innerWidth || document.body.offsetWidth, this.adjustSubNavOnLandscapeMode() } getFromCookie(t) { return this.cookie.get(t) > "0" } checkForLastNavigationLevel() { return !(this.GetCategoryNavigationLevel() < this.configProviderService.provideCasinoConfig().maxNavigationLevel) } GetCategoryNavigationLevel() { let t = 0; if (this.isDefaultCategory) return 0; if (this.selectedCategory && this.defaultCategory && (this.selectedCategory.parentCategoryid === this.defaultCategory.categoryid || this.selectedCategory.isNavigationCategory)) return 1; { let a = this.selectedCategory; for (; a && a.parentCategoryid;)t++, a = this.casinoLobbyService.getCategoryInfo(this.lobbyType, a.parentCategoryid).categoryInfo; return a && this.defaultCategory && a.categoryid !== this.defaultCategory.categoryid && a.isNavigationCategory && t++, t } } hideSubNavigationMenu(t) { this.showLastLevelCategoryDropdown = !t } subNavigationMenuInteraction(t) { this.showLastLevelCategoryDropdown = !this.showLastLevelCategoryDropdown, t.stopPropagation() } prepareSubNavigation() { let t = this.configProviderService.provideCasinoConfig(); if (this.selectedCategory && t.maxNavigationLevel > 1) { let a = []; !this.selectedCategory.isNavigationCategory && (a = this.casinoLobbyService.getLinkedToCategory(this.lobbyType, this.selectedCategory.lmtCategoryId)); let g = []; if (a.length > 0) for (let p = 0; p < a.length; p++)a[p] && a[p].parentCategoryId && g.push(this.casinoLobbyService.getCategoryInfo(this.lobbyType, a[p].parentCategoryId).categoryInfo); else this.selectedCategory.parentCategoryId && g.push(this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.selectedCategory.parentCategoryId).categoryInfo); this.prevLobbyCategories = []; for (let p = 0; p < g.length; p++) { let b = this.casinoLobbyService.isDefaultCategory(this.lobbyType, g[p].route); if (g[p] && !b) { let E = []; if (E = g[p].lmtSubCategories, E && E.length > 0) for (let L = 0; L < E.length; L++) { let O; if (O = this.casinoLobbyService.getCategoryInfo(this.lobbyType, E[L]).categoryInfo, O.linkedCategory) { let K = this.casinoLobbyService.getCategoryInfoOnLMTId(this.lobbyType, O.linkedCategory); O.dropdownhref = K.categoryid } else O.dropdownhref = O.categoryid; let U = this.prevLobbyCategories.filter(K => O.dropdownhref === K.dropdownhref); U && U.length > 0 || this.prevLobbyCategories.push(O) } } } this.enableDiscoverFeed && this.setIsDiscoverCategory() } } loadSubCategoryDropdown() { this.prevLobbyCategories = this.isDefaultCategory ? [] : this.getPrevLobbyCategories(this.selectedCategory.parentCategoryid === this.defaultCategory.categoryid || this.selectedCategory.isNavigationCategory ? this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.defaultCategory.categoryid).categoryInfo : this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.selectedCategory.parentCategoryid).categoryInfo) } categoryHasSubCat(t) { return !!this.enableHeaderforCategory || !!((!this.isMobileWidth || this.isMobileWidth && this.enableFixedMobileNavigation) && t && t.lmtSubCategories && t.lmtSubCategories.length > 0 || this.isMobileWidth && !this.enableFixedMobileNavigation) } getPrevLobbyCategories(t) { let a = null, l = [], g = this.recentGamesService.getrecentGames(), p = this.unfinishedGamesService.getUnfinishedGames(), b = this.favouriteService.getFavouriteGames(); return t && t.lmtSubCategories && t.lmtSubCategories.length > 0 && t.lmtSubCategories.forEach(E => { a = this.casinoLobbyService.getCategoryInfo(this.lobbyType, E).categoryInfo, this.user.isAuthenticated ? a && (a.categoryid === c.W7.RECENT_GAMES_CATEGORY_ID && (p && p.length > 0 || g && g.length > 0) || a.categoryid === c.W7.FAVOURITE_GAMES_CATEGORY_ID && b && b.length > 0 || a.gamesModel && a.gamesModel.length > 0 && -1 == l.indexOf(a)) && l.push(a) : a && a.categoryid !== c.W7.RECENT_GAMES_CATEGORY_ID && a.categoryid !== c.W7.FAVOURITE_GAMES_CATEGORY_ID && "lmc_gyml" !== a.categoryid && l.push(a) }), l } setSubNavigationMenuSticky() { if (this.subNavigationMenu.nativeElement) { let t = 0; document.getElementsByTagName("header").length > 0 && (t = document.getElementsByTagName("header")[0].clientHeight), document.getElementsByTagName("cs-smart-banner-list") && document.getElementsByTagName("cs-smart-banner-list").length > 0 && (t += document.getElementsByTagName("cs-smart-banner-list")[0].clientHeight), this.subNavigationMenu.nativeElement.style.top = t + "px" } } categoryTracking(t) { let l = window.location.href.split("/"), g = l[l.length - 1]; ("casino" == g || this.isTouch) && (g = this.casinoManager.getDefaultCategoryType()), this.tracking.updateDataLayer({ "page.name": t, eventName: "pageView", c15: "?source=" + g }) } goBack() { if (document.getElementsByTagName("html")[0].classList.remove("casino-sub-nav-thumbnail"), this.selectedCategory && this.selectedCategory.parentCategoryId && this.defaultCategory && this.defaultCategory.categoryid && this.selectedCategory.parentCategoryId.toLowerCase() !== this.defaultCategory.categoryid.toLowerCase()) this.navigation.goTo("/" + this.mcPage.lang + "/" + this.casinoManager.getLobbyUrlPrefix(this.lobbyType) + "/c/" + this.selectedCategory.parentCategoryId); else { let t = this.casinoManager.getProductForGivenLobbyType(this.lobbyType); if (t && (t = t.toLowerCase()), this.enableDefaultHomeUrl && t == this.defaultProductHomeUrl.toLowerCase()) this.router.navigate(["/"]), this.configProviderService.provideLmtConfig().appendCultureToDefaultUrl && this.navigation.goTo("/" + this.mcPage.lang); else { let a = this.casinoManager.getLobbyUrlPrefix(this.lobbyType); this.navigation.goTo("/" + this.mcPage.lang + (a ? "/" + a : "")) } } } ngOnDestroy() { this.lobbyObs && this.lobbyObs.unsubscribe(), this.categoryLookUpObs && this.categoryLookUpObs.unsubscribe(), this.teaserObs && this.teaserObs.unsubscribe() } adjustSubNav() { let t = document.getElementsByClassName("header")[0]; if (t) { let a = t.offsetHeight; 1 == document.getElementsByTagName("html")[0].classList.contains("smartBannerEnable") && (this.isDefaultCategory ? (document.querySelector(".casino-lobby-games") && document.querySelector(".casino-lobby-games").setAttribute("style", "margin-top:0"), document.querySelector(this.stickyInputQueryElement).classList.remove("sb-fixed-style")) : document.body.offsetWidth <= 767 && (document.querySelector(this.stickyInputQueryElement).setAttribute("class", "sb-fixed-style"), document.querySelector(this.stickyInputQueryElement).setAttribute("style", "top:" + (a + 78) + "px;"))) } } setIsDefaultCategory() { this.isDefaultCategory = null != this.selectedCategory.isdefault && this.selectedCategory.isdefault, this.defaultCategory = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.lobbyType).categoryInfo, this.isDefaultCategory || document.getElementsByTagName("html")[0].classList.add("casino-sub-nav-thumbnail") } setIsDiscoverCategory() { this.isDiscoverCategory = !(!this.selectedCategory || !this.discoverFeedLmtkey || this.selectedCategory.categoryname.toLowerCase() !== this.discoverFeedLmtkey.toLowerCase()) } getSubNavTeasersLength() { this.configProviderService.provideOptimizedTeaserConfig().teaserOptimization ? this.setOptimizedTeasersSubCategoryLength(this.selectedCategory) : this.setNormalTeasersSubCategoryLength(this.selectedCategory) } setNormalTeasersSubCategoryLength(t) { this.normalTeasersArray = []; let a = this.teaserService.getTeaserData(); t && t.sitecoreData.showTeasers && t.sitecoreData.teasers && t.sitecoreData.teasers.length > 0 && a && a.length > 0 && a.forEach(l => { t.sitecoreData.teasers.indexOf(t.sitecoreData.teasers.filter(p => p.itemName === l.teaserId)[0]) > -1 && !l.isEmbeddedTeaser && !this.isDefaultCategory && this.normalTeasersArray.push(l) }), this.normalTeasersArray.length && this.normalTeasersArray.length > 0 && (this.subnavigationTeaserLength = this.normalTeasersArray.length, this.displayCategoryHeader()) } setOptimizedTeasersSubCategoryLength(t) { let a = this.optimizedTeaserManager.setOptimizedTeasersBasedOnCatery(t); a && a.optimizedSubNavigationTeasers.length > 0 && (this.optimizedTeasersArray = a.optimizedSubNavigationTeasers, this.optimizedTeasersArray && this.optimizedTeasersArray.length > 0 && (this.subnavigationTeaserLength = this.optimizedTeasersArray.length, this.displayCategoryHeader())) } displayCategoryHeader() { if (!this.isMobileWidth && this.selectedCategory && (this.isSubNavTeasersPresent() || 0 === this.selectedCategory.gamelist.length)) return this.displayHeader = !1 } isSubNavTeasersPresent() { return this.subnavigationTeaserLength > 0 } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.M3), e.Y36(r.KDu), e.Y36(r.f5Y), e.Y36(r.e2C), e.Y36(c.io), e.Y36(c.vD), e.Y36(c.f), e.Y36(r.T3C), e.Y36(e.SBq), e.Y36(R.F0), e.Y36(r.N_8), e.Y36(c.iX), e.Y36(c.nA), e.Y36(c.BQ), e.Y36(c.hE)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-sub-navigation-menu"]], hostBindings: function (t, a) { 1 & t && e.NdJ("click", function () { return a.hideSubNavigationMenu(!0) }, !1, e.evT) }, inputs: { lobbyType: "lobbyType", categoryRoute: "categoryRoute", stickyInputQueryElement: "stickyInputQueryElement" }, features: [e.TTD], decls: 1, vars: 1, consts: [["id", "category-filter", "class", "casino-game-tile-wrapper casino-lobby-width", 3, "background-color", "resize", 4, "ngIf"], ["id", "category-filter", 1, "casino-game-tile-wrapper", "casino-lobby-width", 3, "resize"], [4, "ngIf"], [1, "casino-sub-header-text", "game-tile-heading", "casino-lobby-header", 3, "ngClass"], ["id", "header-text", 3, "ngClass", "click", 4, "ngIf"], ["id", "category-drop", 4, "ngIf"], [1, "theme-left", "casino-mobile-navigation", 3, "click"], ["id", "header-text", 3, "ngClass", "click"], [3, "ngStyle", 4, "ngIf"], [3, "title", "displayHeading", "subCategory", "recentAndGyml", "alignIconRight", "lobbyType", 4, "ngIf"], ["class", "icon theme-down", 4, "ngIf"], [3, "ngStyle"], [3, "category", "isDisplayBadge", 4, "ngIf"], [3, "category", "isDisplayBadge"], [3, "title", "displayHeading", "subCategory", "recentAndGyml", "alignIconRight", "lobbyType"], [1, "icon", "theme-down"], ["id", "category-drop"], ["class", "category-drop-li", 3, "value", "ngClass", "click", 4, "ngFor", "ngForOf"], [1, "category-drop-li", 3, "value", "ngClass", "click"], [2, "display", "block", 3, "routerLink"], [3, "ngClass"], [1, "border-line"]], template: function (t, a) { 1 & t && e.YNc(0, mg, 2, 3, "div", 0), 2 & t && e.Q6J("ngIf", !a.isDefaultCategory) }, directives: [mo, Sn, o.O5, o.mk, o.PC, o.sg, R.yS], encapsulation: 2 }), n })(), Ua = (() => { class n { constructor(t) { this.casinoLobbyService = t } ngOnInit() { this.lobbyLoadSubscription = this.casinoLobbyService.lobbyLoadedObservable.subscribe(t => { t && (this.isLobbyLoaded = !0, this.lobbyType && (!this.categoryRoute || "" === this.categoryRoute) && this.setCategoryRoute()) }) } ngOnChanges() { this.isLobbyLoaded && this.lobbyType && (!this.categoryRoute || "" === this.categoryRoute) && this.setCategoryRoute() } setCategoryRoute() { let t = this.casinoLobbyService.getLobbyInfo(this.lobbyType); t.categoriesMap && t.categoriesMap.size > 0 && (this.categoryRoute = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.lobbyType).categoryInfo.categoryid) } ngOnDestroy() { this.lobbyLoadSubscription && this.lobbyLoadSubscription.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.nA)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-sub-nav-on-lobby-type"]], inputs: { lobbyType: "lobbyType", categoryRoute: "categoryRoute", lobbyProduct: "lobbyProduct", stickyInputQueryElement: "stickyInputQueryElement" }, features: [e.TTD], decls: 1, vars: 3, consts: [[3, "lobbyType", "categoryRoute", "stickyInputQueryElement"]], template: function (t, a) { 1 & t && e._UZ(0, "cc-sub-navigation-menu", 0), 2 & t && e.Q6J("lobbyType", a.lobbyType)("categoryRoute", a.categoryRoute)("stickyInputQueryElement", a.stickyInputQueryElement) }, directives: [_d], encapsulation: 2 }), n })(), gd = (() => { class n { constructor(t, a) { this.configProviderService = t, this.invokerProductService = a } ngOnInit() { this.clientConfigLoadSubscription = this.configProviderService.casinoClientConfigObservable.subscribe(t => { t && (this.isClientConfigLoaded = t, this.setLobbyType()) }), this.setLobbyType() } ngOnChanges() { this.setLobbyType() } setLobbyType() { if (this.isClientConfigLoaded) { let t = this.configProviderService.provideLmtConfig(); (!this.casinoProduct || "" === this.casinoProduct) && (this.casinoProduct = "games"); let a = this.invokerProductService.getInvokerProduct(); if (t.lobbyTypeMap && t.lobbyTypeMap.length > 0) { for (let l = 0; l < t.lobbyTypeMap.length; l++) { let g = t.lobbyTypeMap[l]; if (g.product.toLowerCase() === this.casinoProduct.toLowerCase() && g.invokerProduct.toLowerCase() === a.toLowerCase()) { this.lobbyType = g.lobbyType; break } } (!this.lobbyType || "" === this.lobbyType) && console.error("Please configure a valid lobby Type under lobbyTypeMap") } } } ngOnDestroy() { this.clientConfigLoadSubscription && this.clientConfigLoadSubscription.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.iX), e.Y36(c.uZ)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-sub-nav-on-product"]], inputs: { casinoProduct: "casinoProduct", categoryRoute: "categoryRoute", stickyInputQueryElement: "stickyInputQueryElement" }, features: [e.TTD], decls: 1, vars: 4, consts: [[3, "lobbyType", "categoryRoute", "lobbyProduct", "stickyInputQueryElement"]], template: function (t, a) { 1 & t && e._UZ(0, "cc-sub-nav-on-lobby-type", 0), 2 & t && e.Q6J("lobbyType", a.lobbyType)("categoryRoute", a.categoryRoute)("lobbyProduct", a.casinoProduct)("stickyInputQueryElement", a.stickyInputQueryElement) }, directives: [Ua], encapsulation: 2 }), n })(), jn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, R.Bz, r.b9i, Ni, c.IR, Bt]] }), n })(), qn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[r.b9i, o.ez, c.IR, jn]] }), n })(), Fa = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[r.b9i, o.ez, c.IR, qn]] }), n })(), dd = (() => { class n { constructor(t, a, l) { this.casinoLobbyService = t, this.configProviderService = a, this.casinoManager = l } ngOnInit() { this.category = this.casinoLobbyService.getDefaultOrFirstCategoryInfo(this.lobbyType), this.isTouch = this.casinoManager.isTouch(), this.isMobileWidth = window.innerWidth < 768 || document.body.offsetWidth < 768, this.desktopbreakpointforMobile = this.isTouch && (window.innerWidth >= 768 || document.body.offsetWidth >= 768), this.displayThumbnail(this.category.categoryInfo) } displayThumbnail(t) { let a = this.configProviderService.provideThumbnailConfig(); t && t.sitecoreData && t.sitecoreData.gameThumbnail && t.sitecoreData.gameThumbnail.length > 0 && this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, a.displayStaticThumbnail) ? (this.displayStaticThumbnail = !0, this.isTouch && this.getHeaderHeight()) : this.displayStaticThumbnail = !1 } getHeaderHeight() { let t; document.querySelector("header") && (t = document.querySelector("header"), t && t.offsetHeight && (this.thumnailHeaderHeight = t.getBoundingClientRect().height)) } closeThumbnailBox(t) { this.displayStaticThumbnail = t } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.nA), e.Y36(c.iX), e.Y36(c.M3)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cs-thumbnail-section"]], inputs: { lobbyType: "lobbyType" }, decls: 1, vars: 1, consts: [[3, "ngClass", 4, "ngIf"], [3, "ngClass"], [3, "ngStyle"], [3, "lobbyType", "place", "category", "isTouch", "closeThumbnail"]], template: function (t, a) { 1 & t && e.YNc(0, fg, 3, 11, "div", 0), 2 & t && e.Q6J("ngIf", a.displayStaticThumbnail) }, directives: [Hn, o.O5, o.mk, o.PC], encapsulation: 2 }), n })(), Ba = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, Yi]] }), n })(), ud = (() => { class n { constructor(t, a, l, g, p, b, E, L, O, U, K, z) { this.windowRef = t, this.searchSection = a, this.gameDataManager = l, this.gameLaunchService = g, this.fastLoadingGamesService = p, this.casinoMenuActionsBootstrapService = b, this.casinoManager = E, this.tracking = L, this.configProviderService = O, this.casinoLobbyService = U, this.user = K, this.deviceService = z, this.isCancelVisible = !0, this.loadNewSet = !0, this.model = { query: "", results: [] }, this.isMsgVisible = !1, this.GYMLGames = [] } ngOnInit() { this.Global = this.configProviderService.provideGlobalConfig(), this.features = this.configProviderService.provideFeaturesConfig(), this.casinoConfiguration = this.configProviderService.provideCasinoConfig(), this.gymlText = this.Global.messages.SearchGamesYouMightLike ? this.Global.messages.SearchGamesYouMightLike : this.Global.messages.GamesYouMightLike, this.searchSection.searchVisibilityStatus.subscribe(t => { this.setSearchLayerVisibility(t) }), this.SearchCloseIcon = !1, this.showGYML = !!this.user.isAuthenticated, this.isTouch = this.casinoManager.isTouch(), this.features.enableEnhancedSearch && (this.setGYML(), this.gymlCategory || (this.gymlCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"), this.fastLoadingObs = this.fastLoadingGamesService.fastLoadingGamesFeedObservable.subscribe(t => { this.fastLoadingGamesService.setFastLoadingGames(this.GYMLGames, t) }))), this.SearchProductForMobile = this.Global.messages.SearchProductForMobile } ngOnDestroy() { this.fastLoadingObs && this.fastLoadingObs.unsubscribe() } trackInput() { this.tracking.triggerEvent("GameSearch", { eventAction: "Search", "page.search": this.model.query }) } setGYML() { if (this.gymlCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, "LMC_GYML"), this.gymlCategory && this.gymlCategory.categoryInfo && this.gymlCategory.categoryInfo.gamelist && this.gymlCategory.categoryInfo.gamelist.length > 0) { this.gymlCategory.categoryInfo.gamesModel = this.gymlCategory.categoryInfo.gamelist.slice(0, this.casinoConfiguration.gymlLimitForSearch); let t = []; this.gymlCategory.categoryInfo.gamesModel.forEach(l => { t.push(l.game) }); let a = this.gameDataManager.setDefaultGameIcons(t); this.getGyMLGames(a) } } ngAfterViewInit() { this.vc.first.nativeElement.focus(); let t = setInterval(() => { document.getElementById("serachTxt") && (document.getElementById("serachTxt").focus(), clearInterval(t)) }, 1e3); this.features.enableOverlayMobileSearchTopPosition && this.deviceService.isTouch && this.searchOverlayTopPosition() } onEvent(t) { this.event = t } onResize() { this.innerWidth = window.innerWidth } setSearchLayerVisibility(t) { this.showGYML = !!this.user.isAuthenticated && t, this.show = t, this.innerWidth = window.innerWidth, this.show && this.innerWidth < 1365 ? this.windowRef.nativeWindow.document.body.classList.add("casino-hidescroll") : this.windowRef.nativeWindow.document.body.classList.remove("casino-hidescroll") } setSearchCancelVisibility() { } hideSearch() { this.setSearchLayerVisibility(!1), this.model.query = [], this.model.results = [], this.isMsgVisible = !1, this.searchSection.setSearchVisibility(!1), this.casinoMenuActionsBootstrapService.setSearchOverlayVisibility(!1) } launchGame(t, a) { this.setSearchLayerVisibility(!1), this.searchSection.setSearchVisibility(!1), t.lobbyType = this.lobbyType, t.iconType = 1; let l = new c.Hq; l.game = t, l.isTouch = this.isTouch, l.gamePosition = a, l.categoryType = "Search", l.from = "s", l.clickTimeStamp = this.gameLaunchService.currentTimeStamp(), this.gameLaunchService.launchGame(l) } hideDisplayGYML() { return !(!this.GYMLGames || this.GYMLGames.length <= 0) && this.showGYML } closeSearchIcon() { this.model.query = "", 0 == this.model.query.length && (this.SearchCloseIcon = !1) } queryChanged() { let t = this.configProviderService.provideFeaturesConfig(); this.loadNewSet = !0, 0 === this.model.query.length ? (this.showGYML = !!this.user.isAuthenticated, this.SearchCloseIcon = !1) : (this.showGYML = !1, this.SearchCloseIcon = !0), setTimeout(() => { this.model.query.length < 1 ? this.model.results = [] : (this.model.results = this.casinoLobbyService.searchGames(this.model.query), t.enableGameIconTheming && this.model.results.map(a => { a.icon.src = this.casinoLobbyService.appendTheme(a.icon.src, a.gameId) }), this.isMsgVisible = !(this.model.results.length > 0)) }, 500), this.isMsgVisible = !1 } getGyMLGames(t) { this.GYMLGames = []; for (let a = 0; a < t.length; a++) { let g = this.gameDataManager.setGameLobbyModel(t[a], this.isTouch); this.GYMLGames.push(g) } } searchOverlayTopPosition() { if (document.querySelector(".content-messages-header-top .content-message-container")) { let t = document.querySelector(".content-messages-header-top .content-message-container"), a = document.querySelector(".casino-lobby-container-main .casino-search"), l = document.querySelector(".casino-lobby-container-main .casino-search .overlay"); a.style.top = t.clientHeight + "px", l.style.top = t.clientHeight + "px" } } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(r.X9E), e.Y36(c.Zc), e.Y36(c.cM), e.Y36(c.$l), e.Y36(c.$Q), e.Y36(Io), e.Y36(c.M3), e.Y36(r.e2C), e.Y36(c.iX), e.Y36(c.nA), e.Y36(r.KDu), e.Y36(r.U8N)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-search"]], viewQuery: function (t, a) { if (1 & t && e.Gf(la, 5), 2 & t) { let l; e.iGM(l = e.CRH()) && (a.vc = l) } }, inputs: { lobbyType: "lobbyType" }, decls: 16, vars: 13, consts: [[1, "casino-search", 3, "resize"], [1, "casino-search-content"], [1, "search-query"], ["id", "serachTxt", "name", "searchText", "type", "text", "autofocus", "", "autocomplete", "off", 3, "ngModel", "placeholder", "change", "ngModelChange", "keyup", "focusout", "keydown"], ["searchInput", ""], ["class", "casino-search-cancel", 3, "click", 4, "ngIf"], ["class", "close-button theme-close-i", 3, "click", 4, "ngIf"], ["class", "casino-games-you-like casino-gyml-tablet", "id", "gyml-id", 3, "ngClass", 4, "ngIf"], [1, "casino-search-results"], [1, "search-results-list", 3, "hidden"], [3, "click", 4, "ngFor", "ngForOf"], [3, "hidden"], [3, "key"], [1, "overlay"], [1, "casino-search-cancel", 3, "click"], [1, "theme-ex"], [1, "close-button", "theme-close-i", 3, "click"], ["id", "gyml-id", 1, "casino-games-you-like", "casino-gyml-tablet", 3, "ngClass"], ["id", "gyml-heading-id", 1, "gym-heading"], ["class", "lobby-games-gyml", 4, "ngIf"], [1, "lobby-games-gyml"], ["class", "game", 4, "ngFor", "ngForOf"], [1, "game"], [3, "game", "gamePosition", "category", "gameLaunchedFrom"], [3, "click"], [3, "src"], [1, "search-result-title", 3, "innerHTML"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div", 0), e.NdJ("resize", function () { return a.onResize() }, !1, e.Jf7), e.TgZ(1, "div", 1)(2, "div", 2)(3, "input", 3, 4), e.NdJ("change", function () { return a.queryChanged() })("ngModelChange", function (g) { return a.model.query = g })("keyup", function () { return a.queryChanged() })("focusout", function () { return a.trackInput() })("keydown", function (g) { return a.onEvent(g) }), e.qZA(), e.YNc(5, vg, 2, 0, "a", 5), e.YNc(6, yg, 1, 0, "span", 6), e.qZA()(), e.YNc(7, Eg, 4, 5, "div", 7), e.TgZ(8, "div", 8)(9, "ul", 9), e.YNc(10, Tg, 4, 5, "li", 10), e.ALo(11, "async"), e.ALo(12, "dsl"), e.qZA(), e.TgZ(13, "p", 11), e._UZ(14, "cc-global-translate", 12), e.qZA()(), e._UZ(15, "div", 13), e.qZA()), 2 & t && (e.xp6(3), e.s9C("placeholder", a.SearchProductForMobile), e.Q6J("ngModel", a.model.query), e.xp6(2), e.Q6J("ngIf", a.isCancelVisible), e.xp6(1), e.Q6J("ngIf", a.SearchCloseIcon), e.xp6(1), e.Q6J("ngIf", a.hideDisplayGYML()), e.xp6(2), e.Q6J("hidden", !(a.model.results.length > 0)), e.xp6(1), e.Q6J("ngForOf", e.lcZ(11, 9, e.lcZ(12, 11, a.model.results))), e.xp6(3), e.Q6J("hidden", !a.isMsgVisible), e.xp6(1), e.Q6J("key", "SearchNoResults")) }, directives: [Fi, c.yV, re.Fj, re.JJ, re.On, o.O5, o.mk, o.sg], pipes: [o.Ov, J.Ut, c.qs], encapsulation: 2 }), n })(), hd = (() => { class n { constructor(t) { this.searchSectionService = t } ngOnInit() { this.subscribeToSearchOverlayObservable() } subscribeToSearchOverlayObservable() { this.searchSectionService.searchVisibilityStatus.subscribe(t => { this.isSearchOverlayVisible = t }) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.Zc)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-mobile-search"]], inputs: { lobbyType: "lobbyType" }, decls: 1, vars: 1, consts: [[3, "lobbyType", 4, "ngIf"], [3, "lobbyType"]], template: function (t, a) { 1 & t && e.YNc(0, Pg, 1, 1, "cc-search", 0), 2 & t && e.Q6J("ngIf", a.isSearchOverlayVisible) }, directives: [ud, o.O5], encapsulation: 2 }), n })(), Vn = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, re.u5, ii, r.b9i, c.IR, J.I8]] }), n })(), Wa = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, c.IR, Vn]] }), n })(), Xn = (() => { class n { constructor(t, a, l, g, p) { this.casinoLobbyService = t, this.casinoMenuActionsBootstrapService = a, this.forceGameLaunchHandlerService = l, this.globalJackpotModService = g, this.liveCasinoService = p } execute() { this.casinoLobbyService.onAppInit(), this.casinoMenuActionsBootstrapService.onAppInit(), this.forceGameLaunchHandlerService.onAppInit(), this.globalJackpotModService.onAppInit(), this.liveCasinoService.onAppInit() } } return n.\u0275fac = function (t) { return new (t || n)(e.LFG(c.nA), e.LFG(Io), e.LFG(c.n5), e.LFG(c.xE), e.LFG(c.B0)) }, n.\u0275prov = e.Yz7({ token: n, factory: n.\u0275fac, providedIn: "root" }), n })(), Na = (() => { class n { static forRoot() { return { ngModule: n, providers: [Xn] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[]] }), n })(), md = (() => { class n { constructor(t, a) { this.route = t, this.configProviderService = a } ngOnInit() { this.TopTeaser = "Top", this.isLandscape = !!this.route.snapshot.paramMap.get("isLand") && Boolean(this.route.snapshot.paramMap.get("isLand")); let t = this.configProviderService.provideHeaderTeasersConfig(); this.headerTeasers = t } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(R.gz), e.Y36(c.iX)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-resizable-teasers"]], decls: 1, vars: 6, consts: [[3, "inputData", "componentName"]], template: function (t, a) { 1 & t && e._UZ(0, "cc-casino-core-lazy-placeholder", 0), 2 & t && e.Q6J("inputData", e.kEZ(2, Ig, a.TopTeaser, a.headerTeasers, a.isLandscape))("componentName", "") }, directives: [lt], encapsulation: 2 }), n })(), Ka = (() => { class n { static forRoot() { return { ngModule: n } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, c.IR, _t]] }), n })(), pd = (() => { class n { constructor() { } ngOnInit() { } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-casinocore-error-handler"]], decls: 1, vars: 1, consts: [[3, "scope"]], template: function (t, a) { 1 & t && e._UZ(0, "vn-message-panel", 0), 2 & t && e.Q6J("scope", "casinocorelobby") }, directives: [ce.Y], encapsulation: 2 }), n })(), Ja = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, ce.w]] }), n })(), fd = (() => { class n { constructor(t, a, l) { this.cozyBingoDataService = t, this.dialog = a, this.configProviderService = l } ngOnInit() { this.getDirectQuickInfo() } ngOnChanges() { } getDirectQuickInfo() { let l, t = this.configProviderService.provideCozyBingoConfig(), a = this.configProviderService.provideGlobalConfig(); if (t.cozyBingoFavouritesInRpwidget && window.location.pathname.indexOf("game-info") > -1) { let g = decodeURI(window.location.pathname.split("/").splice(-1)[0]).replace("-", " "); this.cozybingoSubscription = this.cozyBingoDataService.cozyBingoRoomsDataObservable.subscribe(p => { if (p && (p.forEach((E, L) => { E.name == g && (l = E) }), l)) { let E = this.cozyBingoDataService.getRoomdatabyId(l.id); document.getElementsByTagName("html")[0].classList.add("casino-quickinfo-open"), this.dialog.open(G, { width: "790px", data: { room: { roomId: E.id }, fromCozybingo: !0, roomTitle: E.name, roomDescription: E.sitecoreInfo.description, gameProviderText: "GAME PROVIDER", providerName: "Win Studios", provider: "https://casinogames.galaspins.com/htmllobby/images/newlmticons/square/ivylootenkhamun.jpg", vendorLogo: "https://casinogames.galaspins.com/htmllobby/images/newlmticons/vendorlogos/21.jpg", cta: a.messages.UKPlayNow, jackpotData: E.jackpot, position: 0, section: "Page Container", gameContainerLocation: "Page Container|" + a.messages.BingoHeader + "QuickInfo" } }).afterClosed().subscribe(() => { this.quickInfoScrollY && window.scrollTo(0, this.quickInfoScrollY), this.hideInfo() }) } }) } } hideInfo() { document.getElementsByTagName("html")[0].classList.remove("casino-quickinfo-open") } ngOnDestroy() { this.cozybingoSubscription && this.cozybingoSubscription.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.Kh), e.Y36(d.uw), e.Y36(c.iX)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-cozybingo-quickinfo-direct"]], features: [e.TTD], decls: 0, vars: 0, template: function (t, a) { }, encapsulation: 2 }), n })(), Ya = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ providers: [{ provide: d.WI, useValue: {} }, { provide: d.so, useValue: {} }], imports: [[o.ez, r.b9i, d.Is]] }), n })(), vd = (() => { class n { constructor(t, a, l, g) { this.casinoLobbyService = t, this.casinoManager = a, this.configProviderService = l, this.deviceService = g } ngOnInit() { this.isTouch = this.casinoManager.isTouch(), this.desktopbreakpointforMobile = this.isTouch && (window.innerWidth >= 768 || document.body.offsetWidth >= 768); let t = this.configProviderService.provideSubNavigationConfig(); this.enableSubNav = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableSubNavOnLobbyType), this.isMobileWidth = window.innerWidth < 768 || document.body.offsetWidth < 768, this.isMobileDevice = this.deviceService.isMobilePhone, this.latestCategory = this.casinoLobbyService.getCategoryInfo(this.lobbyType, this.categoryRoute), this.displayThumbnail() } closeThumbnailBox(t) { this.displayStaticThumbnail = t } displayThumbnail() { let t = this.configProviderService.provideSubNavigationConfig(); this.enableSubNav = this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, t.enableSubNavOnLobbyType); let a = this.configProviderService.provideThumbnailConfig(); this.latestCategory && this.latestCategory.categoryInfo && (this.currentCategory = this.latestCategory.categoryInfo, this.currentCategory && this.currentCategory.sitecoreData && this.currentCategory.sitecoreData.gameThumbnail && this.currentCategory.sitecoreData.gameThumbnail.length > 0 && this.casinoManager.IsFeatureEnabledforLobbytype(this.lobbyType, a.displayStaticThumbnail) ? (this.displayStaticThumbnail = !0, (this.isMobileWidth || this.isMobileDevice) && this.getHeaderHeight()) : this.displayStaticThumbnail = !1) } getHeaderHeight() { let t; document.querySelector("header") && (t = document.querySelector("header"), t && t.offsetHeight && (this.thumnailHeaderHeight = t.getBoundingClientRect().height)) } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.nA), e.Y36(c.M3), e.Y36(c.iX), e.Y36(r.U8N)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-thumbnail-home-desktop"]], inputs: { lobbyType: "lobbyType", categoryRoute: "categoryRoute" }, decls: 3, vars: 5, consts: [["class", "casino-with-out-subnavigation", 4, "ngIf"], [1, "casino-mobile-thumbnail-wrapper", "with", 3, "ngStyle"], ["class", "casino-thumbnail-mobile thumbnailAnimate", 4, "ngIf"], [1, "casino-with-out-subnavigation"], [1, "thumbnail-newgame"], [3, "category", "lobbyType", "place", "isTouch", "closeThumbnail"], [1, "casino-thumbnail-mobile", "thumbnailAnimate"], [3, "category", "isTouch", "lobbyType", "place", "closeThumbnail"]], template: function (t, a) { 1 & t && (e.YNc(0, Dg, 3, 4, "div", 0), e.TgZ(1, "div", 1), e.YNc(2, Sg, 2, 4, "div", 2), e.qZA()), 2 & t && (e.Q6J("ngIf", (!a.isTouch || a.desktopbreakpointforMobile) && !a.enableSubNav && a.displayStaticThumbnail), e.xp6(1), e.Q6J("ngStyle", e.VKq(3, Li, a.thumnailHeaderHeight + "px")), e.xp6(1), e.Q6J("ngIf", a.isTouch && a.isMobileWidth && !a.enableSubNav && a.displayStaticThumbnail)) }, directives: [Hn, o.O5, o.PC], encapsulation: 2 }), n })(), Za = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, Yi]] }), n })(), yd = (() => { class n { constructor(t, a, l, g, p, b, E, L, O) { this.casinoCoreGamelaunchService = t, this.window = a, this.sanitizer = l, this.casinoLobbyService = g, this.configProviderService = p, this.messageQueue = b, this.loginDialog = E, this.user = L, this.deviceService = O } ngOnInit() { this.lobbyLoadedSubscription = this.casinoLobbyService.lobbyLoadedObservable.subscribe(t => { if (t) if (this.user.isAuthenticated) this.configProviderService.provideFeaturesConfig(), this.heightIframe = this.thunderBiteIframeHeight, this.setIframeURL(); else { let a = { returnUrl: window.location.href, loginMessageKey: "GameLaunch" }; this.loginDialog.open(a) } }) } setIframeURL() { let t, a; if (t = this.casinoLobbyService.getGameInfo(this.gameId), t && t.metaLobbyType) { a = { gameId: this.gameId, lobbyType: t.metaLobbyType }; let l = new c.Hq; l.game = a, l.isTouch = !1, l.gamePosition = 0, l.categoryType = "", l.from = "LiveGamesIframe", l.replaceRouteInHistory = !1, l.isDemoLaunch = !1, l.skipUnfinGame = !1, l.gameLaunchedFrom = "LiveGamesIframe", l.gridPosition = 1, l.gameSection = "LiveGamesIframe", l.lobbyType = t.metaLobbyType, l.gameContainer = "PageContainer", l.returnUrl = window.location.href, l.fetchLiveGameIFrame = !0, l.clickTimeStamp = this.casinoCoreGamelaunchService.currentTimeStamp(), this.casinoCoreGamelaunchService.launchGame(l, g => { !g.isError && g.gameLaunchUrl ? (this.iframeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(g.gameLaunchUrl), this.isIframeReady = !0, this.widthIframe = this.window.nativeWindow.innerWidth) : this.gameNotFoundAction(g.errorMessage) }) } else this.gameNotFoundAction() } onResize() { this.widthIframe = this.window.nativeWindow.innerWidth } gameNotFoundAction(t) { this.messageQueue.clear(); let a = this.configProviderService.provideGlobalConfig(), g = { html: t || a.messages.GameNotAvailable.replace("{0}", this.gameId), type: "Information", lifetime: "Single", scope: "gameiframelauncher" }; this.messageQueue.add(g) } ngOnDestroy() { this.lobbyLoadedSubscription && this.lobbyLoadedSubscription.unsubscribe() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c.$l), e.Y36(r.X9E), e.Y36(ae.H7), e.Y36(c.nA), e.Y36(c.iX), e.Y36(r.wrx), e.Y36(r.eYs), e.Y36(r.KDu), e.Y36(r.U8N)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-game-iframe-launcher"]], inputs: { gameId: "gameId", thunderBiteIframeHeight: "thunderBiteIframeHeight" }, decls: 2, vars: 2, consts: [[3, "scope"], [3, "ngStyle", "resize", 4, "ngIf"], [3, "ngStyle", "resize"], [1, "wrapper"], [1, "livegames_iframe"], ["iframeId", ""], ["id", "live-games", "allowfullscreen", "true", "frameborder", "0", "scrolling", "yes", 3, "src"]], template: function (t, a) { 1 & t && (e._UZ(0, "vn-message-panel", 0), e.YNc(1, Og, 6, 7, "div", 1)), 2 & t && (e.Q6J("scope", "gameiframelauncher"), e.xp6(1), e.Q6J("ngIf", a.iframeUrl)) }, directives: [ce.Y, o.O5, o.PC], encapsulation: 2 }), n })(), $n = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, c.IR, ce.w]] }), n })(), bd = (() => { class n { constructor(t, a, l) { this.api = t, this.urlUtility = a, this.balanceService = l, this.loadIframe = !1 } ngOnInit() { let t = this.urlUtility.getApiurl("content/GetThunderBiteGameId"); this.api.get(t, { path: this.gameIdPath }, { withCredentials: !0 }).subscribe(a => { a && (this.thunderbiteGameId = a, this.loadIframe = !0) }) } ngOnDestroy() { this.balanceService.refresh() } } return n.\u0275fac = function (t) { return new (t || n)(e.Y36(c._E), e.Y36(c.Sl), e.Y36(r.mOY)) }, n.\u0275cmp = e.Xpm({ type: n, selectors: [["cc-thunderbite-iframe-launcher"]], inputs: { gameIdPath: "gameIdPath", thunderBiteIframeHeight: "thunderBiteIframeHeight" }, decls: 2, vars: 1, consts: [[3, "gameId", "thunderBiteIframeHeight", 4, "ngIf"], [3, "gameId", "thunderBiteIframeHeight"]], template: function (t, a) { 1 & t && (e.TgZ(0, "div"), e.YNc(1, Ag, 1, 2, "cc-game-iframe-launcher", 0), e.qZA()), 2 & t && (e.xp6(1), e.Q6J("ngIf", a.loadIframe)) }, directives: [yd, o.O5], encapsulation: 2 }), n })(), Ha = (() => { class n { static forRoot() { return { ngModule: n, providers: [] } } } return n.\u0275fac = function (t) { return new (t || n) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ imports: [[o.ez, r.b9i, c.IR, $n]] }), n })(), Cd = (() => { class n { constructor(t, a) { this.productService = t, this.injector = a, this.productService.register("casino", this.injector) } static forRoot() { return { ngModule: n, providers: [Gg] } } static forChild() { return { ngModule: n } } } return n.lobbyService = c.nA, n.otherProductService = c.Sw, n.casinoMenuActionsBootstrapService = Io, n.favouriteService = c.io, n.geolocationInstallerDialogService = c.pZ, n.geoLocationValidationService = c.wl, n.onAppInitHandler = Xn, n.casinoCoreGamelaunchService = c.$l, n.teaserService = c.BQ, n.dynamicComponentsMap = { RpFavWidgetWrapperComponent: Aa, ThunderbiteIframeLauncherComponent: bd, CasinoGridOnLobbyTypeComponent: wn, NavOnLobbyTypeComponent: Ra, GeolocationInstallerComponent: c.bK, SportsOverlayComponent: Un }, n.\u0275fac = function (t) { return new (t || n)(e.LFG(r.M52), e.LFG(e.zs3)) }, n.\u0275mod = e.oAB({ type: n }), n.\u0275inj = e.cJS({ providers: [{ provide: d.WI, useValue: {} }, { provide: d.so, useValue: {} }], imports: [[d.Is, Wi, vo, Q.vz, yo, Gn, Ni, Kn, To, xn, Rn, Ga, Yn, bo, wa, zn, Co, Mo, Bn, Ta, Po, Da, Fn, Ma, kn, Ea, Eo, Tt, Bt, Jn, Zn, An, Qn, x, Ki, ka, Fa, qn, jn, Ba, Yi, Wa, Vn, Na, Ka, Ja, ae.t6, Ya, Za, $n, Ha, Ia, c.IR, c.bB], Wi, vo, yo, Gn, Ni, Bt, Jn, Zn, Ma, To, kn, Ea, Eo, Tt, Mo, Kn, Bn, xn, Rn, Ga, Yn, bo, wa, zn, Co, Ta, Po, Da, Fn, An, Qn, x, Ki, ka, Fa, qn, jn, Ba, Yi, Wa, Vn, Na, Ka, Ja, Nn, Ya, Za, $n, Ha, c.IR, c.bB] }), n })() } }, s => { s.O(0, ["vendor"], () => s(s.s = 89014)), s.O() }]);
//# sourceMappingURL=main.960979d619070c21.js.map